(()=>{var e,t,i,r,s={5871:(e,t,i)=>{var r,s,n=Object.create,o=Object.defineProperty,a=Object.getOwnPropertyDescriptor,l=Object.getOwnPropertyNames,h=Object.getPrototypeOf,c=Object.prototype.hasOwnProperty,u=(e,t)=>{for(var i in t)o(e,i,{get:t[i],enumerable:!0})},d=(e,t,i,r)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let s of l(t))c.call(e,s)||s===i||o(e,s,{get:()=>t[s],enumerable:!(r=a(t,s))||r.enumerable});return e},p={};u(p,{AzureDevOps:()=>T,AzureDevopsUtils:()=>eL,Bitbucket:()=>L,BitbucketServer:()=>N,BitbucketServerUtils:()=>ej,BitbucketUtils:()=>eG,GitHub:()=>ep,GitHubUtils:()=>ez,GitLab:()=>eT,GitLabUtils:()=>eX,Jira:()=>eB,JiraUtils:()=>e2,Trello:()=>eM,TrelloUtils:()=>e6,Utils:()=>e9,default:()=>e8}),e.exports=d(o({},"__esModule",{value:!0}),p);var g=(s=null!=(r=i(6292))?n(h(r)):{},d(r&&r.__esModule?s:o(s,"default",{value:r,enumerable:!0}),r)),m=globalThis.fetch||g.default,f=e=>"fetch"===e.name,w=async e=>{let t=e.headers.get("content-type")||"",i=null;if(t.startsWith("application/json"))i=await e.json();else if(t.startsWith("text/"))i=await e.text();else throw Error(`Unsupported content-type: ${t}`);let r={body:i,headers:Object.fromEntries(e.headers.entries()),status:e.status,statusText:e.statusText};if(!e.ok){let t=Error(e.statusText);throw Object.assign(t,{response:r}),t}return r},v=e=>f(e)?async({url:t,...i})=>w(await e(t,i)):e,y=class{constructor(e){this.config={...e,request:v((null==e?void 0:e.request)||m)}}updateConfig(e){this.config={...this.config,...e,request:e.request?v(e.request):this.config.request}}},b=class extends y{},C=(e,t)=>{let i={};return e&&(i.Authorization=`${t?"Basic":"Bearer"} ${e}`),i},A=(e,t={})=>C(t.token||e.token,t.isPAT||e.isPAT),P=e=>e.url.replace("/_apis/git/repositories/","/_git/").replace(`/${e.repository.project.id}/`,`/${encodeURIComponent(e.repository.project.name)}/`).replace(`/${e.repository.id}/`,`/${encodeURIComponent(e.repository.name)}/`).replace("/pullRequests/","/pullrequest/"),D="https://app.vssps.visualstudio.com/_apis",k="https://dev.azure.com",S={active:"OPEN",completed:"MERGED",abandoned:"CLOSED"},R={10:"APPROVED",5:"APPROVED",0:"REVIEW_REQUESTED",[-5]:"CHANGES_REQUESTED",[-10]:"CHANGES_REQUESTED"},$=e=>({id:e.id,name:e.displayName,username:e.uniqueName||e.displayName,email:null,avatarUrl:e.imageUrl}),_=e=>e.startsWith("refs/heads/")?e.replace("refs/heads/",""):e,I=e=>({id:e.pullRequestId.toString(),title:e.title,number:e.codeReviewId,state:S[e.status],isDraft:e.isDraft,commentCount:null,upvoteCount:null,author:$(e.createdBy),createdDate:new Date(e.creationDate),updatedDate:new Date(e.closedDate||e.creationDate),closedDate:e.closedDate?new Date(e.closedDate):null,repository:{name:e.repository.name,owner:{login:void 0}},headCommit:{buildStatus:null},baseRef:{name:_(e.targetRefName)},headRef:{name:_(e.sourceRefName)},url:P(e),assignees:e.reviewers.map($),reviews:e.reviewers.filter(e=>0!==e.vote).map(e=>({reviewer:$(e),state:R[e.vote]||"REVIEW_REQUESTED"})),additions:null,deletions:null,fileCount:null,commitCount:null,headRepository:null,mergeableState:"UNKNOWN"}),F=(e,t)=>({id:t.id,name:t.name,namespace:e,project:t.project.name,webUrl:t.webUrl,httpsUrl:t.remoteUrl,sshUrl:t.sshUrl,defaultBranch:t.defaultBranch?{name:_(t.defaultBranch)}:null,permission:null}),x=e=>{let t=e.fields,i=t["System.AssignedTo"];return{id:e.id.toString(),number:e.id.toString(),title:t["System.Title"],commentCount:t["System.CommentCount"],author:{avatarUrl:t["System.CreatedBy"]._links.avatar.href,email:null,id:t["System.CreatedBy"].id,name:t["System.CreatedBy"].uniqueName,username:t["System.CreatedBy"].displayName},createdDate:new Date(t["System.CreatedDate"]),updatedDate:new Date(t["System.ChangedDate"]),url:e._links.html.href,assignees:i?[{avatarUrl:i._links.avatar.href,email:null,id:i.id,name:i.uniqueName,username:i.displayName}]:[],description:null,state:null,type:t["System.WorkItemType"],repository:null,upvoteCount:0}},T=class extends y{async getCurrentUser(e={}){if(e.isPAT||this.config.isPAT)throw Error("Azure DevOps does not support PATs for this function.");let t=await this.config.request({url:`${D}/profile/profiles/me`,headers:A(this.config,e)});return{data:{id:t.body.id,name:t.body.displayName,username:t.body.displayName,email:t.body.emailAddress,avatarUrl:null}}}async getCurrentUserForInstance(e,t={}){let i=(await this.config.request({url:`${k}/${encodeURIComponent(e.namespace)}/_apis/ConnectionData`,headers:A(this.config,t)})).body.authorizedUser;if("Anonymous"===i.providerDisplayName)throw Error("Current user not found.");return{data:{id:i.id,name:i.providerDisplayName,username:i.providerDisplayName,email:i.properties.Account.$value,avatarUrl:null}}}async getUserForCommit(e,t={}){if(!e.repo.project)throw Error('Azure DevOps requires a "project" (name or ID) for this function.');let i=(await this.config.request({url:`${k}/${encodeURIComponent(e.repo.namespace)}/${encodeURIComponent(e.repo.project)}/_apis/git/repositories/${encodeURIComponent(e.repo.name)}/commits/${e.oid}`,headers:A(this.config,t)})).body.author;return{data:{name:i.name,email:i.email,avatarUrl:i.imageUrl}}}async getOrgsForUser(e,t={}){return{data:(await this.config.request({url:`${D}/accounts?memberId=${e.userId}&api-version=6.0`,headers:A(this.config,t)})).body.value.map(e=>({id:e.accountId,name:e.accountName}))}}async getAzureProjects(e,t={}){let i=new URL(`${k}/${encodeURIComponent(e.namespace)}/_apis/projects`);i.searchParams.set("$top","100"),e.cursor&&i.searchParams.set("$skip",e.cursor);let r=await this.config.request({url:i.toString(),headers:A(this.config,t)}),s=r.headers["x-ms-continuationtoken"];return{pageInfo:{hasNextPage:!!s,endCursor:s||null},data:r.body.value.map(t=>({id:t.id,name:t.name,namespace:e.namespace}))}}async getRepo(e,t={}){if(!e.project)throw Error('Azure DevOps requires a "project" (name or ID) for this function.');let i=await this.config.request({url:`${k}/${encodeURIComponent(e.namespace)}/${encodeURIComponent(e.project)}/_apis/git/repositories/${encodeURIComponent(e.name)}`,headers:A(this.config,t)});return{data:F(e.namespace,i.body)}}async getRepos(e,t={}){let i=[],r=[];return await Promise.all(e.map(async e=>{try{let r=await this.getRepo(e,t);i.push(r.data)}catch(t){r.push({input:e,error:t})}})),{data:i,errors:r}}async getReposForAzureProject(e,t={}){if(!e.project)throw Error('Azure DevOps requires a "project" (name or ID) for this function.');return{data:(await this.config.request({url:`${k}/${encodeURIComponent(e.namespace)}/${encodeURIComponent(e.project)}/_apis/git/repositories`,headers:A(this.config,t)})).body.value.map(t=>F(e.namespace,t))}}async getRefs(e,t,i={}){if(!t.repo.project)throw Error('Azure DevOps requires a "project" (name or ID) for this function.');let r=new URL(`${k}/${encodeURIComponent(t.repo.namespace)}/${encodeURIComponent(t.repo.project)}/_apis/git/repositories/${encodeURIComponent(t.repo.name)}/refs`);r.searchParams.set("filter",e),r.searchParams.set("$top","100"),t.cursor&&r.searchParams.set("continuationToken",t.cursor);let s=await this.config.request({url:r.toString(),headers:A(this.config,i)}),n=s.headers["x-ms-continuationtoken"];return{pageInfo:{hasNextPage:!!n,endCursor:n||null},data:s.body.value.map(e=>({name:_(e.name),commit:{oid:e.objectId,authoredDate:null,committedDate:null}}))}}async getBranches(e,t={}){return this.getRefs("heads",e,t)}async getTags(e,t={}){return this.getRefs("tags",e,t)}async getPullRequestsForRepoBase(e,t={},i=100){let{page:r,repo:s,assigneeLogins:n,authorLogin:o}=e||{};if(!s.project)throw Error('Azure DevOps requires a "project" (name or ID) for this function.');let a="searchCriteria.status=1";return n&&n.length&&(a+=`&searchCriteria.reviewerId=${n[0]}`),o&&(a+=`&searchCriteria.creatorId=${o}`),await this.config.request({url:`${t.baseUrl||k}/${encodeURIComponent(s.namespace)}/${encodeURIComponent(s.project||"")}/_apis/git/repositories/${encodeURIComponent(s.name)}/pullRequests?${a}&%24top=${i}&%24skip=${((r||1)-1)*i}`,headers:A(this.config,t)})}async getPullRequestsForRepo(e,t={}){let i=e.page||1,r=await this.getPullRequestsForRepoBase(e,t,100);return{pageInfo:{hasNextPage:100===r.body.value.length,nextPage:i+1},data:r.body.value.map(I)}}async getPullRequestsForRepos(e,t={}){if(!e.repos.every(e=>e.project))throw Error('Azure DevOps requires a "project" (name or ID) for this function.');let{repos:i}=e||{},r=[];return await Promise.all(i.map(async i=>{try{(await this.getPullRequestsForRepoBase({repo:i,...e},t)).body.value.forEach(e=>{r.push(I(e))})}catch(e){if(404!==e.statusCode&&401!==e.statusCode)throw e}})),{data:r}}async closePullRequest(e,t={}){if(!e.repo.project)throw Error('Azure DevOps requires a "project" (name or ID) for this function.');let{repo:{namespace:i,name:r,project:s},pullRequestId:n}=e;if(!(await this.config.request({method:"PATCH",url:`${t.baseUrl||k}/${encodeURIComponent(i)}/${encodeURIComponent(s||"")}/_apis/git/repositories/${r}/pullrequests/${n}?api-version=6.0`,body:JSON.stringify({status:"abandoned"}),headers:{...A(this.config,t),"Content-Type":"application/json"}})).body.status)throw Error("Could not close pull request")}async mergePullRequest(e,t={}){if(!e.repo.project)throw Error('Azure DevOps requires a "project" (name or ID) for this function.');let{repo:{namespace:i,name:r,project:s},pullRequestId:n,expectedSourceSha:o}=e;if(!(await this.config.request({method:"PATCH",url:`${t.baseUrl||k}/${encodeURIComponent(i)}/${encodeURIComponent(s||"")}/_apis/git/repositories/${r}/pullrequests/${n}?api-version=6.0`,body:JSON.stringify({lastMergeSourceCommit:{commitId:o},status:"completed"}),headers:{...A(this.config,t),"Content-Type":"application/json"}})).body.status)throw Error("Could not merge pull request")}async getIssuesForAzureProject(e,t={}){let{page:i,assigneeLogins:r,authorLogin:s,mentionLogin:n}=e||{},o=i||1,a=["[Microsoft.VSTS.Common.ClosedDate] = ''","[System.TeamProject] = @project","[Microsoft.VSTS.Common.ResolvedDate] = ''"];s&&a.push(`[System.CreatedBy] = '${s.replace("'","''")}'`),r&&r[0]&&a.push(`[System.AssignedTo] = '${r[0].replace("'","''")}'`),n&&a.push("[System.Id] IN (@recentMentions)");let l=`Select [Microsoft.VSTS.Common.ClosedDate], [Microsoft.VSTS.Common.ResolvedDate] From WorkItems Where ${a.join(" AND ")} order by [System.CreatedDate] desc`,h=await this.config.request({url:`${t.baseUrl||k}/${encodeURIComponent(e.namespace)}/${encodeURIComponent(e.project)}/_apis/wit/wiql?api-version=6.0`,body:JSON.stringify({query:l}),method:"POST",headers:{...A(this.config,t),"Content-Type":"application/json"}}),c=h.body.workItems.slice((o-1)*200,200*o).map(e=>e.id);if(0==c.length)return{pageInfo:{hasNextPage:!1,nextPage:null},data:[]};let u=await this.config.request({url:`${t.baseUrl||k}/${encodeURIComponent(e.namespace)}/${encodeURIComponent(e.project)}/_apis/wit/workitemsbatch?api-version=6.0`,body:JSON.stringify({ids:c,$expand:"Links"}),method:"POST",headers:{...A(this.config,t),"Content-Type":"application/json"}});return{pageInfo:{hasNextPage:h.body.workItems.length>200*o,nextPage:o+1},data:u.body.value.map(x)}}async setIssueStatus(e,t={}){var i;if(!e.project)throw Error('Azure DevOps requires a "project" (name or ID) for this function.');let{namespace:r,project:s,issueId:n,status:o}=e;if(!(null!=(i=(await this.config.request({method:"PATCH",url:`${t.baseUrl||k}/${encodeURIComponent(r)}/${encodeURIComponent(s||"")}/_apis/wit/workitems/${n}?api-version=6.0`,body:JSON.stringify([{op:"add",path:"/fields/System.State",value:o}]),headers:{...A(this.config,t),"Content-Type":"application/json-patch+json"}})).body.fields)&&i["System.State"]))throw Error("Could not set issue status")}},O=(e,t={})=>C(t.token||e.token,t.isPAT||e.isPAT),E="https://api.bitbucket.org/2.0",B={OPEN:"OPEN",MERGED:"MERGED",DECLINED:"CLOSED"},U=e=>({id:e.uuid,name:e.display_name||e.nickname,username:e.nickname||e.display_name,email:null,avatarUrl:e.links.avatar.href}),W=e=>{var t,i;return{id:e.uuid,namespace:e.workspace.slug,name:e.slug,webUrl:e.links.html.href,httpsUrl:(null==(t=e.links.clone.find(e=>"https"===e.name))?void 0:t.href)??null,sshUrl:(null==(i=e.links.clone.find(e=>"ssh"===e.name))?void 0:i.href)??null,defaultBranch:{name:e.mainbranch.name},permission:null}},M=e=>{let t=e.id;return{id:t.toString(),title:e.title,number:t,state:B[e.state],isDraft:!1,commentCount:e.comment_count,upvoteCount:null,author:U(e.author),createdDate:new Date(e.created_on),updatedDate:new Date(e.updated_on),closedDate:null,repository:{name:e.source.repository.name,owner:{login:void 0}},headCommit:{buildStatus:null},baseRef:{name:e.destination.branch.name},headRef:{name:e.source.branch.name},url:e.links.html.href,assignees:null,reviews:null,additions:null,deletions:null,fileCount:null,commitCount:null,headRepository:null,mergeableState:"UNKNOWN"}},L=class extends y{async refreshToken(e){return{data:(await this.config.request({url:"https://bitbucket.org/site/oauth2/access_token",method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded",Authorization:`Basic ${e.base64ClientIDColonClientSecret}`},body:`grant_type=refresh_token&refresh_token=${e.refreshToken}`})).body}}async getCurrentUser(e={}){return{data:U((await this.config.request({url:`${E}/user`,headers:O(this.config,e)})).body)}}async getUserForCommit(e,t={}){var i;let r=(await this.config.request({url:`${E}/repositories/${e.repo.namespace}/${e.repo.name}/commit/${e.oid}`,headers:O(this.config,t)})).body.author,s=r.raw.match(/([^<]+)<(.+)>/);return{data:{name:s?s[1].trim():null,email:s?s[2]:null,avatarUrl:(null==(i=r.user)?void 0:i.links.avatar.href)||null}}}async getRepo(e,t={}){return{data:W((await this.config.request({url:`${E}/repositories/${e.namespace}/${e.name}`,headers:O(this.config,t)})).body)}}async getRepos(e,t={}){let i=[],r=[];return await Promise.all(e.map(async e=>{try{let r=await this.getRepo(e,t);i.push(r.data)}catch(t){r.push({input:e,error:t})}})),{data:i,errors:r}}async getReposForCurrentUser(e={},t={}){let i=new URL(`${E}/repositories`);i.searchParams.set("role","member"),i.searchParams.set("pagelen","100"),e.cursor&&i.searchParams.set("after",e.cursor);let r=await this.config.request({url:i.toString(),headers:O(this.config,t)}),s=!!r.body.next,n=null;return r.body.next&&(n=new URL(r.body.next).searchParams.get("after")),{pageInfo:{hasNextPage:s,endCursor:n},data:r.body.values.map(W)}}async getBranches(e,t={}){var i;let r=new URL(`${E}/repositories/${e.repo.namespace}/${e.repo.name}/refs/branches`);r.searchParams.set("page",(null==(i=e.page)?void 0:i.toString())||"1"),r.searchParams.set("pagelen","100");let s=await this.config.request({url:r.toString(),headers:O(this.config,t)}),n=!!s.body.next;return{pageInfo:{hasNextPage:n,nextPage:n?s.body.page+1:null},data:s.body.values.map(e=>{let t=new Date(e.target.date);return{name:e.name,commit:{oid:e.target.hash,authoredDate:t,committedDate:t}}})}}async getTags(e,t={}){let i=new URL(`${E}/repositories/${e.repo.namespace}/${e.repo.name}/refs/tags`);i.searchParams.set("pagelen","100"),e.cursor&&i.searchParams.set("page",e.cursor);let r=await this.config.request({url:i.toString(),headers:O(this.config,t)}),s=!!r.body.next,n=null;return r.body.next&&(n=new URL(r.body.next).searchParams.get("page")),{pageInfo:{hasNextPage:s,endCursor:n},data:r.body.values.map(e=>{let t=new Date(e.target.date);return{name:e.name,commit:{oid:e.target.hash,authoredDate:t,committedDate:t}}})}}async getPullRequestsForRepoBase(e,t={}){var i;let r=new URL(`${E}/repositories/${encodeURI(e.repo.namespace)}/${encodeURI(e.repo.name)}/pullrequests?state=OPEN`);return r.searchParams.set("page",(null==(i=e.page)?void 0:i.toString())||"1"),r.searchParams.set("pagelen","50"),await this.config.request({url:r.toString(),headers:O(this.config,t)})}async getPullRequestsForRepo(e,t={}){let i=[],r=await this.getPullRequestsForRepoBase(e,t);r.body.values.forEach(t=>{if(e.authorLogin&&t.author.uuid!==e.authorLogin)return null;i.push(M(t))});let s=!!r.body.next;return{pageInfo:{hasNextPage:s,nextPage:s?r.body.page+1:null},data:i}}async getPullRequestsForRepos(e,t={}){let i=[];return await Promise.all(e.repos.map(async r=>{try{(await this.getPullRequestsForRepoBase({repo:r,...e},t)).body.values.forEach(t=>{if(e.authorLogin&&t.author.uuid!==e.authorLogin)return null;i.push(M(t))})}catch(e){if(404!==e.statusCode&&401!==e.statusCode)throw e}})),{data:i}}async closePullRequest(e,t={}){let{repo:{namespace:i,name:r},pullRequestId:s}=e;if(!(await this.config.request({method:"POST",url:`${E}/repositories/${i}/${r}/pullrequests/${s}/decline`,headers:O(this.config,t)})).body.title)throw Error("Could not close pull request")}async mergePullRequest(e,t={}){let{repo:{namespace:i,name:r},pullRequestId:s}=e;if(!(await this.config.request({method:"POST",url:`${E}/repositories/${i}/${r}/pullrequests/${s}/merge`,headers:O(this.config,t)})).body.title)throw Error("Could not merge pull request")}},N=class extends b{getBaseUrl(e){let t=e.baseUrl||this.config.baseUrl;if(!t)throw Error('Bitbucket Server requires "baseUrl"');return t}getRequestHeaders(e){return C(e.token||this.config.token)}async getRepo(e,t={}){var i,r,s;let n=await this.config.request({url:`${this.getBaseUrl(t)}/projects/${e.namespace}/repos/${e.name}`,headers:this.getRequestHeaders(t)});return{data:{id:n.body.id.toString(),namespace:n.body.project.key,name:n.body.slug,webUrl:(null==(i=n.body.links.self[0])?void 0:i.href)??null,httpsUrl:(null==(r=n.body.links.clone.find(e=>"https"===e.name))?void 0:r.href)??null,sshUrl:(null==(s=n.body.links.clone.find(e=>"ssh"===e.name))?void 0:s.href)??null,defaultBranch:null,permission:null}}}async getRepos(e,t={}){return{data:(await Promise.all(e.map(e=>this.getRepo(e,t)))).map(e=>e.data)}}},H="https://api.github.com",G=`${H}/graphql`,q=/\/api\/v\d+$/,Y=e=>{if(e.endsWith("/api/graphql"))throw Error("The graphql endpoint is being used as the baseUrl. This package uses both GraphQL and REST APIs, and the REST version cannot be assumed. Use the REST endpoint as the baseUrl instead.")},j=(e,t)=>{let i=t.baseUrl||e.baseUrl;return i?(Y(i=i.replace(/\/$/,"")),q.test(i)&&(i=i.replace(q,"")),`${i}/api/graphql`):G},V=(e,t,i)=>{let r=C(i.token||e.token);return r["X-Github-Next-Global-ID"]="1",r["Content-Type"]="application/json",e.request({url:j(e,i),method:"POST",headers:r,body:JSON.stringify(t)})},Q={user:!0,"user:email":!0,"read:user":!0},z=e=>e.some(e=>Q[e]),K=(e=!1,t=!1)=>`
__typename
id
databaseId
name
login
${t?"email":""}
avatarUrl${e?"(size: $avatarSize)":""}
`,J=(e=!1)=>`
__typename
id
databaseId
login
avatarUrl${e?"(size: $avatarSize)":""}
`,Z=(e,t=!1)=>`
id
databaseId
number
title
state
author {
  ... on User {
    ${K(!1,t)}
  }
  ... on Bot {
    ${J(!1)}
  }
}
commits(last: 1) {
  totalCount
  nodes {
    commit {
      ... on Commit {
        oid
        status {
          contexts {
            context
            state
            description
            targetUrl
          }
        }
      }
    }
  }
}
baseRef {
  name
  target {
    oid
  }
}
headRef {
  name
  target {
    oid
  }
}
repository {
  name
  owner {
    login
  }
}
headRepository {
  name
  owner {
    login
  }
  url
  sshUrl
}
${e?"isDraft":""}
url
createdAt
comments {
  totalCount
}
reactions(content: THUMBS_UP) {
  totalCount
}
updatedAt
closedAt
assignees(first: 100) {
  nodes {
    ${K(!1,t)}
  }
}
reviewRequests(first: 100) {
  nodes {
    asCodeOwner
    requestedReviewer {
      ... on User {
        ${K(!1,t)}
      }
    }
  }
}
latestReviews(first: 100) {
  nodes {
    author {
      ... on User {
        ${K(!1,t)}
      }
    }
    state
  }
}
additions
deletions
changedFiles
mergeable
`,X={"-linked":"-linked",archived:"archived",assignee:"assignee",author:"author",base:"base",closed:"closed",commenter:"commenter",comments:"comments",created:"created",draft:"draft",head:"head",label:"label",language:"language",linked:"linked",in:"in",interactions:"interactions",involves:"involves",is:"is",mentions:"mentions",merged:"merged",milestone:"milestone",no:"no",org:"org",project:"project",reactions:"reactions",repo:"repo",review:"review","reviewed-by":"reviewed-by","review-requested":"review-requested",state:"state",status:"status",team:"team","team-review-requested":"team-review-requested",type:"type",updated:"updated",user:"user","user-review-requested":"user-review-requested"},ee=RegExp('(([^\\s]+:)?\\"(?:[^\\"\\\\]|\\\\.)*\\"?)|([^\\"\\s]+)',"g"),et=e=>{let t=[];return(e.match(ee)??[]).forEach(e=>{e.includes(":")&&"is:closed"!=e&&X[e.split(":")[0]]&&t.push(e)}),t},ei=(e,t,i,r)=>({query:`
query SearchPullRequests($query: String! $after: String) {
  search(type:ISSUE query:$query first:100 after:$after) {
    pageInfo {
      hasNextPage
      endCursor
    }
    nodes {
      ... on PullRequest {
        ${Z(i,r)}
      }
    }
  }
}`,variables:{query:`is:pr is:open ${e}`,after:t}}),er=(e=[])=>e.some(e=>(null==e?void 0:e.message)==="Field 'isDraft' doesn't exist on type 'PullRequest'"),es=`
id
databaseId
owner {
  login
}
name
url
sshUrl
defaultBranchRef {
  name
}
viewerPermission
`,en={__typename:"User",id:"U_kgDNJ5k",databaseId:10137,name:"Deleted user",login:"ghost",email:"",avatarUrl:"https://avatars.githubusercontent.com/u/10137?v=4"},eo={APPROVED:"APPROVED",CHANGES_REQUESTED:"CHANGES_REQUESTED",COMMENTED:"COMMENTED",REVIEW_REQUESTED:"REVIEW_REQUESTED"},ea={MERGEABLE:"MERGEABLE",CONFLICTING:"CONFLICTS",UNKNOWN:"UNKNOWN"},el=e=>({id:e.databaseId.toString(),graphQLId:e.id,namespace:e.owner.login,name:e.name,webUrl:e.url,httpsUrl:e.url.endsWith(".git")?e.url:`${e.url}.git`,sshUrl:e.sshUrl,defaultBranch:e.defaultBranchRef,permission:e.viewerPermission}),eh={OPEN:"OPEN",CLOSED:"CLOSED",MERGED:"MERGED"},ec=e=>({id:e.databaseId.toString(),graphQLId:e.id,name:e.name??e.login,username:e.login,email:e.email??null,avatarUrl:e.avatarUrl}),eu=e=>{var t,i,r,s,n,o,a,l;let h=null;e.author?(e.author.__typename,h=e.author):h=en;let c=null==(i=null==(t=e.commits.nodes)?void 0:t[0])?void 0:i.commit,u=(null==(r=e.headRef)?void 0:r.target)||c,d=(null==u?void 0:u.oid)===(null==c?void 0:c.oid)?null==(n=null==(s=null==c?void 0:c.status)?void 0:s.contexts)?void 0:n[0]:null,p=((null==(o=e.reviewRequests)?void 0:o.nodes)||[]).filter(e=>!e.asCodeOwner),g=null==(a=e.headRepository)?void 0:a.url;return g&&!g.endsWith(".git")&&(g=`${g}.git`),{id:e.databaseId.toString(),graphQLId:e.id,title:e.title,number:e.number,state:eh[e.state],commentCount:e.comments.totalCount,upvoteCount:e.reactions.totalCount,author:h?ec(h):null,createdDate:new Date(e.createdAt),isDraft:e.isDraft,repository:{name:e.repository.name,owner:{login:e.repository.owner.login}},headRepository:e.headRepository?{name:e.headRepository.name,owner:{login:e.headRepository.owner.login},remoteInfo:{cloneUrlHTTPS:g,cloneUrlSSH:e.headRepository.sshUrl}}:null,headCommit:{buildStatus:d||null},headRef:e.headRef?{name:e.headRef.name}:null,baseRef:e.baseRef?{name:e.baseRef.name}:null,url:e.url,updatedDate:new Date(e.updatedAt),closedDate:e.closedAt?new Date(e.closedAt):null,assignees:e.assignees.nodes?e.assignees.nodes.map(ec):null,reviews:p.map(e=>({reviewer:ec(e.requestedReviewer),state:"REVIEW_REQUESTED"})).concat(((null==(l=e.latestReviews)?void 0:l.nodes)||[]).map(e=>({reviewer:ec(e.author||en),state:eo[e.state]}))),additions:e.additions,deletions:e.deletions,fileCount:e.changedFiles,commitCount:e.commits.totalCount,mergeableState:ea[e.mergeable]}},ed=e=>{let t=null;return e.author?(e.author.__typename,t=e.author):t=en,{id:e.databaseId.toString(),graphQLId:e.id,number:e.number,title:e.title,author:ec(t),commentCount:e.comments.totalCount,createdDate:new Date(e.createdAt),description:null,state:null,type:null,repository:{name:e.repository.name,owner:{login:e.repository.owner.login}},url:e.url,updatedDate:new Date(e.updatedAt),assignees:e.assignees.nodes?e.assignees.nodes.map(ec):[],upvoteCount:e.reactions.totalCount}},ep=class extends b{constructor(){super(...arguments),this._scopesCache={}}async getScopes(e){let t=e.token||this.config.token;if(!t)return[];let i=this._scopesCache[t];if(!i){let r=(await V(this.config,{query:"query { rateLimit(dryRun: true) { __typename } }"},e)).headers["x-oauth-scopes"];i=r?r.split(", "):[],this._scopesCache[t]=i}return i}getEnterpriseAvatarUrlIfNeeded(e,t,i){let r=i.baseUrl||this.config.baseUrl;return!r||r.startsWith(H)?e:t?`https://avatars.githubusercontent.com/u/e?email=${encodeURIComponent(t)}`:""}async getCurrentUser(e={}){var t;let i=await this.getScopes(e),r=null==(t=(await V(this.config,{query:`
query getCurrentUser {
  viewer {
    ${K(!1,z(i))}
  }
}
`},e)).body.data)?void 0:t.viewer;if(!r)throw Error("Current user not found.");return{data:ec(r)}}async getUserForCommit(e,t={}){var i,r;let s=null==(i=(await V(this.config,{query:`
query getUserForCommit(
  $owner: String!
  $name: String!
  $oid: GitObjectID!
  $avatarSize: Int
) {
  repository(owner: $owner, name: $name) {
    object(oid: $oid) {
      ... on Commit {
        author {
          name
          email
          avatarUrl(size: $avatarSize)
        }
      }
    }
  }
}
`,variables:{owner:e.repo.namespace,name:e.repo.name,oid:e.oid,avatarSize:e.avatarSize}},t)).body.data)?void 0:i.repository;if(!s)throw Error("Repository not found.");let n=null==(r=s.object)?void 0:r.author;if(!n)throw Error("Commit not found.");return{data:{name:n.name,email:n.email,avatarUrl:this.getEnterpriseAvatarUrlIfNeeded(n.avatarUrl,n.email,t)}}}async getAccountForEmail(e,t={}){var i,r,s;let n=await this.getScopes(t),o=null==(s=null==(r=null==(i=(await V(this.config,{query:`
query getAccountForEmail($query: String! $avatarSize: Int) {
  search(query: $query, type: USER, first: 1) {
    nodes {
      ... on User {
        ${K(!0,z(n))}
      }
    }
  }
}
`,variables:{query:`in:email ${e.email}`,avatarSize:e.avatarSize}},t)).body.data)?void 0:i.search)?void 0:r.nodes)?void 0:s[0];if(!o)throw Error("User not found.");return{data:ec({...o,avatarUrl:this.getEnterpriseAvatarUrlIfNeeded(o.avatarUrl,o.email,t)})}}async getAccountForUsername(e,t={}){var i;let r=await this.getScopes(t),s=null==(i=(await V(this.config,{query:`
query getUserForUsername($login: String! $avatarSize: Int) {
  user(login: $login) {
    ${K(!0,z(r))}
  }
}
`,variables:{login:e.username,avatarSize:e.avatarSize}},t)).body.data)?void 0:i.user;if(!s)throw Error("User not found.");return{data:ec({...s,avatarUrl:this.getEnterpriseAvatarUrlIfNeeded(s.avatarUrl,s.email,t)})}}async getOrgsForCurrentUser(e={},t={}){var i,r;let s=await V(this.config,{query:`
query getOrgsForCurrentUser($cursor: String, $first: Int!) {
  viewer {
    organizations(first: $first after: $cursor) {
      pageInfo {
        endCursor
        hasNextPage
      }
      nodes {
        id
        databaseId
        name
        login
        email
        avatarUrl
      }
    }
  }
}
`,variables:{cursor:e.cursor,first:100}},t);if(!(null!=(i=s.body.data)&&i.viewer.organizations))throw Error((null==(r=s.body.errors)?void 0:r[0].message)||s.statusText||"Unknown error");let n=s.body.data.viewer.organizations.nodes||[];return{pageInfo:s.body.data.viewer.organizations.pageInfo,data:n.map(e=>({id:e.databaseId.toString(),graphQLId:e.id,username:e.login,name:e.name||null,email:e.email||null,avatarUrl:e.avatarUrl}))}}async getRepo(e,t={}){var i;let r=await V(this.config,{query:`
query getRepo($owner: String!, $name: String!) {
  repository(owner: $owner, name: $name) {
    ${es}
  }
}
`,variables:{owner:e.namespace,name:e.name}},t);if(!(null!=(i=r.body.data)&&i.repository))throw Error(`Repository ${e.namespace}/${e.name} not found`);return{data:el(r.body.data.repository)}}async getRepos(e,t={}){let i=e.map(({namespace:e,name:t},i)=>`
      getRepo_${i}: repository(owner: "${e}", name: "${t}") {
        ${es}
      }
    `).join(`
`),r=await V(this.config,{query:`
query batchGetRepos {
  ${i}
}
`},t);if(!r.body.data)throw Error(r.statusText||"Unknown error");let s=[],n=[];return e.forEach((e,t)=>{let i=r.body.data[`getRepo_${t}`];i?s.push(el(i)):n.push({input:e})}),{data:s,errors:n}}async getReposForUsernames(e,t={}){var i;if(!e.usernames.length)return{pageInfo:{endCursor:null,hasNextPage:!1},data:[]};let r=await V(this.config,{query:`
query getReposForUsernames($query: String!, $cursor: String, $first: Int!) {
  search(query: $query, type: REPOSITORY, first: $first, after: $cursor) {
    pageInfo {
      endCursor
      hasNextPage
    }
    nodes {
      ... on Repository {
        ${es}
      }
    }
  }
}
`,variables:{query:`fork:true ${e.usernames.map(e=>`user:${e}`).join(" ")}`,cursor:e.cursor,first:100}},t);if(!r.body.data)throw Error((null==(i=r.body.errors)?void 0:i[0].message)||r.statusText||"Unknown error");let s=r.body.data.search.nodes||[];return{pageInfo:r.body.data.search.pageInfo,data:s.map(el)}}async getReposForOwners(e,t={}){return this.getReposForUsernames({usernames:e.owners.filter(e=>e.username).map(e=>e.username),cursor:e.cursor},t)}async getRefs(e,t,i={}){var r;let s=null==(r=(await V(this.config,{query:`
query getRefs($owner: String!, $name: String!, $refPrefix: String!, $cursor: String, $first: Int!) {
  repository(owner: $owner, name: $name) {
    refs(refPrefix: $refPrefix first: $first after: $cursor) {
      pageInfo {
        endCursor
        hasNextPage
      }
      nodes {
        name
        target {
          ... on Commit {
            oid
            authoredDate
            committedDate
          }
        }
      }
    }
  }
}
`,variables:{owner:t.repo.namespace,name:t.repo.name,refPrefix:e,cursor:t.cursor,first:100}},i)).body.data)?void 0:r.repository;if(!s)throw Error("Repository not found.");let n=s.refs;return n?{pageInfo:n.pageInfo,data:(n.nodes||[]).map(e=>{var t;let i=null!=(t=e.target)&&t.oid?e.target:null;return{name:e.name,commit:i?{oid:i.oid,authoredDate:new Date(i.authoredDate),committedDate:new Date(i.committedDate)}:null}})}:{pageInfo:{endCursor:null,hasNextPage:!1},data:[]}}async getBranches(e,t={}){return this.getRefs("refs/heads/",e,t)}async getTags(e,t={}){return this.getRefs("refs/tags/",e,t)}async getBlame(e,t={}){var i;let r=null==(i=(await V(this.config,{query:`
query getBlame($owner: String!, $name: String!, $ref: String!, $path: String!) {
  repository(owner: $owner, name: $name) {
    object(expression: $ref) {
      ... on Commit {
        blame(path: $path) {
          ranges {
            startingLine
            endingLine
            commit {
              oid
              parents(first:100) {
                nodes {
                  oid
                }
              }
              authoredDate
              committedDate
              message
              author {
                name
                email
                avatarUrl
              }
              committer {
                name
                email
                avatarUrl
              }
              additions
              deletions
              changedFilesIfAvailable
            }
          }
        }
      }
    }
  }
}
`,variables:{owner:e.repo.namespace,name:e.repo.name,ref:e.ref,path:e.path}},t)).body.data)?void 0:i.repository;if(!r)throw Error("Repository not found.");let s=r.object;if(!s||!("blame"in s))throw Error("Ref not found.");if(0===s.blame.ranges.length)throw Error("File not found.");return{data:{ranges:s.blame.ranges.map(e=>{var t;return{startingLine:e.startingLine,endingLine:e.endingLine,commit:{oid:e.commit.oid,parentOids:(null==(t=e.commit.parents.nodes)?void 0:t.map(e=>e.oid))||[],authoredDate:new Date(e.commit.authoredDate),author:e.commit.author?{name:e.commit.author.name,email:e.commit.author.email,avatarUrl:e.commit.author.avatarUrl}:null,committedDate:new Date(e.commit.committedDate),committer:e.commit.committer?{name:e.commit.committer.name,email:e.commit.committer.email,avatarUrl:e.commit.committer.avatarUrl}:null,message:e.commit.message,fileCount:e.commit.changedFilesIfAvailable,additions:e.commit.additions,deletions:e.commit.deletions}}})}}}async searchPullRequests(e,t={}){var i,r;let s=z(await this.getScopes(t)),n=t=>ei(t&&"boolean"==typeof e.isDraft?`${e.query} draft:${e.isDraft}`:e.query,e.cursor,t,s),o=await V(this.config,n(!0),t);o.body.errors&&er(o.body.errors)&&(this.config.baseUrl||t.baseUrl)&&(o=await V(this.config,n(!1),t));let{data:a}=o.body;if(!a)throw Error((null==(i=o.body.errors)?void 0:i[0].message)||o.statusText||"Unknown error");return{pageInfo:{hasNextPage:a.search.pageInfo.hasNextPage,endCursor:a.search.pageInfo.endCursor},data:(null==(r=a.search.nodes)?void 0:r.map(eu))||[]}}async getPullRequestsAssociatedWithUser(e,t={}){var i;let[r,s,n]=(null==(i=e.cursor)?void 0:i.split(";"))||[void 0,void 0,void 0];if(e.cursor&&"null"===r&&"null"===s&&"null"===n)return{pageInfo:{hasNextPage:!1,endCursor:"null;null;null"},data:[]};let[o,a,l]=await Promise.all([this.searchPullRequests({query:`author:${e.username}`,cursor:r},t),this.searchPullRequests({query:`assignee:${e.username}`,cursor:s},t),this.searchPullRequests({query:`review-requested:${e.username}`,cursor:n},t)]),h={},c=[],u=e=>{h[e.id]||(h[e.id]=!0,c.push(e))};return o.data.forEach(u),a.data.forEach(u),l.data.forEach(u),{pageInfo:{hasNextPage:o.pageInfo.hasNextPage||a.pageInfo.hasNextPage||l.pageInfo.hasNextPage,endCursor:`${(null==o?void 0:o.pageInfo.hasNextPage)&&(null==o?void 0:o.pageInfo.endCursor)||"null"};${(null==a?void 0:a.pageInfo.hasNextPage)&&(null==a?void 0:a.pageInfo.endCursor)||"null"};${(null==l?void 0:l.pageInfo.hasNextPage)&&(null==l?void 0:l.pageInfo.endCursor)||"null"}`},data:c}}async getPullRequestsForRepos(e,t={}){let{assigneeLogins:i,updatedBefore:r,authorLogin:s,repos:n,reviewRequestedLogin:o,startQuery:a,mentionLogin:l}=e,h=et(a||"");return n.forEach(e=>{h.push(`repo:${e.namespace}/${e.name}`)}),i&&i.forEach(e=>{h.push(`assignee:${e}`)}),r&&h.push(`updated:<${r}`),s&&h.push(`author:${s}`),o&&h.push(`review-requested:${o}`),l&&h.push(`mentions:${l}`),await this.searchPullRequests({query:`sort:updated ${h.join(" ")}`,isDraft:e.isDraft,cursor:e.cursor},t)}async closePullRequest(e,t={}){var i,r,s;let{pullRequestGraphQLId:n}=e,o=`mutation ClosePullRequest($pullRequestGraphQLId: ID!) {
  closePullRequest(input: { pullRequestId: $pullRequestGraphQLId }) {
    pullRequest {
      id
    }
  }
}`;if(!(null!=(s=null==(r=null==(i=(await V(this.config,{query:`${o}`,variables:{pullRequestGraphQLId:n}},t)).body.data)?void 0:i.closePullRequest)?void 0:r.pullRequest)&&s.id))throw Error("Could not close pull request")}async mergePullRequest(e,t={}){var i,r,s;let{pullRequestGraphQLId:n,expectedSourceSha:o}=e,a=`mutation MergePullRequest($pullRequestGraphQLId: ID!, $expectedSourceSha: GitObjectID!) {
  mergePullRequest(input: { pullRequestId: $pullRequestGraphQLId, expectedHeadOid: $expectedSourceSha }) {
    pullRequest {
      id
    }
  }
}`;if(!(null!=(s=null==(r=null==(i=(await V(this.config,{query:`${a}`,variables:{pullRequestGraphQLId:n,expectedSourceSha:o}},t)).body.data)?void 0:i.mergePullRequest)?void 0:r.pullRequest)&&s.id))throw Error("Could not merge pull request")}async getIssuesForRepos(e,t={}){var i,r,s,n,o,a;let l=z(await this.getScopes(t)),h=et(e.startQuery||""),{cursor:c,assigneeLogins:u,updatedBefore:d,authorLogin:p,mentionLogin:g}=e;e.repos.forEach(e=>{h.push(`repo:${e.namespace}/${e.name}`)}),u&&u.forEach(e=>{h.push(`assignee:${e}`)}),d&&h.push(`updated:<${d}`),p&&h.push(`author:${p}`),g&&h.push(`mentions:${g}`);let m=`
query (
  $after: String
  $search: String!
) {
  search(
    type: ISSUE
    first: 100
    after: $after
    query: $search
  ) {
    nodes {
      ... on Issue {
        id
        databaseId
        title
        author {
          ... on User {
            ${K(!1,l)}
          }
          ... on Bot {
            ${J(!1)}
          }
        }
        createdAt
        number
        updatedAt
        url
        reactions(content: THUMBS_UP) {
          totalCount
        }
        repository {
          name
          owner {
            login
          }
        }
        comments {
          totalCount
        }
        assignees(first: 100) {
          nodes {
            ${K(!1,l)}
          }
        }
      }
    }
    pageInfo {
      endCursor
      hasNextPage
    }
  }
}
`,f=await V(this.config,{query:`${m}`,variables:{after:c??null,search:`sort:updated type:issue state:open ${h.join(" ")}`}},t);if(!f.body.data)throw Error(f.statusText||"Unknown error");let w=(null==(s=null==(r=null==(i=f.body)?void 0:i.data)?void 0:r.search)?void 0:s.nodes)||[];return{pageInfo:null==(a=null==(o=null==(n=f.body)?void 0:n.data)?void 0:o.search)?void 0:a.pageInfo,data:w.map(ed)}}async closeIssueWithReason(e,t,i){var r,s,n;let o=`mutation CloseIssueWithReason($issueGraphQLId: ID!, $closeReason: IssueClosedStateReason!) {
  closeIssue(input: { issueId: $issueGraphQLId, stateReason: $closeReason }) {
    issue {
      id
    }
  }
}`;if(!(null!=(n=null==(s=null==(r=(await V(this.config,{query:o,variables:{issueGraphQLId:e,closeReason:t}},i)).body.data)?void 0:r.closeIssue)?void 0:s.issue)&&n.id))throw Error("Could not close issue with reason")}async closeIssueWithoutReason(e,t){var i,r,s;let n=`mutation SetIssueState($issueGraphQLId: ID!) {
  updateIssue(input: { id: $issueGraphQLId, state: CLOSED }) {
    issue {
      id
    }
  }
}`;if(!(null!=(s=null==(r=null==(i=(await V(this.config,{query:n,variables:{issueGraphQLId:e}},t)).body.data)?void 0:i.updateIssue)?void 0:r.issue)&&s.id))throw Error("Could not close issue")}async reopenIssue(e,t){var i,r,s;let n=`mutation ReOpenIssue($issueGraphQLId: ID!) {
  reopenIssue(input: { issueId: $issueGraphQLId }) {
    issue {
      id
    }
  }
}`;if(!(null!=(s=null==(r=null==(i=(await V(this.config,{query:n,variables:{issueGraphQLId:e}},t)).body.data)?void 0:i.reopenIssue)?void 0:r.issue)&&s.id))throw Error("Could not reopen issue")}async setIssueStatus(e,t={}){let{issueGraphQLId:i,status:r,closeReason:s}=e;if(s&&"OPEN"==r)throw Error("Did not expect closeReason to be set when trying to reopen issue");"OPEN"==r?await this.reopenIssue(i,t):"CLOSED"!=r||s?s&&await this.closeIssueWithReason(i,s,t):await this.closeIssueWithoutReason(i,t)}},eg=/\/api\/v\d+$/,em=e=>{if(e.endsWith("/api/graphql"))throw Error("The graphql endpoint is being used as the baseUrl. This package uses both GraphQL and REST APIs, and the REST version cannot be assumed. Use the REST endpoint as the baseUrl instead.")},ef=(e,t)=>{let i=t.baseUrl||e.baseUrl;return i?(em(i=i.replace(/\/$/,"")),i):"https://gitlab.com/api/v4"},ew=(e,t)=>{let i=t.baseUrl||e.baseUrl;return i?(em(i=i.replace(/\/$/,"")),eg.test(i)&&(i=i.replace(eg,"")),`${i}/api/graphql`):"https://gitlab.com/api/graphql"},ev=(e,t,i)=>{let r=C(i.token||e.token);return e.request({url:ew(e,i),method:"POST",headers:{...r,"Content-Type":"application/json"},body:JSON.stringify(t)})},ey={CAN_BE_MERGED:"MERGEABLE",CANNOT_BE_MERGED:"CONFLICTS",CANNOT_BE_MERGED_RECHECK:"UNKNOWN",UNCHECKED:"UNKNOWN",CHECKING:"UNKNOWN"},eb="gid://gitlab/User/",eC="gid://gitlab/Project/",eA=`
id
path
fullPath
webUrl
httpUrlToRepo
sshUrlToRepo
repository {
  rootRef
}
`,eP=`
id
name
username
publicEmail
avatarUrl
`,eD=`
author {
  ${eP}
}
assignees {
  nodes {
    ${eP}
  }
}
createdAt
description
dueDate
id
iid
state
title
type
updatedAt
upvotes
userNotesCount
webUrl
`,ek=`
id
state
author {
  ${eP}
}
diffStatsSummary {
  additions
  deletions
  fileCount
}
commitCount
draft
userNotesCount
upvotes
title
webUrl
createdAt
updatedAt
mergedAt
iid
targetBranch
sourceBranch
assignees {
  nodes {
    ${eP}
  }
}
reviewers {
  nodes {
    ${eP}
    mergeRequestInteraction {
      approved
      reviewState
    }
  }
}
mergeStatusEnum`,eS=e=>`${e.namespace}/${e.name}`,eR=e=>`${e.namespace}/${e.name}`,e$=e=>{var t;return{id:e.id.replace(eC,""),graphQLId:e.id,namespace:e.fullPath.split("/").slice(0,-1).join("/"),name:e.path,webUrl:e.webUrl,httpsUrl:e.httpUrlToRepo,sshUrl:e.sshUrlToRepo,defaultBranch:null!=(t=e.repository)&&t.rootRef?{name:e.repository.rootRef}:null,permission:null}},e_={opened:"OPEN",merged:"MERGED",closed:"CLOSED"},eI=e=>({id:e.id.replace(eb,""),graphQLId:e.id,name:e.name,username:e.username,email:e.publicEmail,avatarUrl:e.avatarUrl}),eF=(e,t)=>{var i,r,s,n,o;return{id:e.id.replace("gid://gitlab/MergeRequest/",""),graphQLId:e.id,title:e.title,number:parseInt(e.iid,10),state:e_[e.state],commentCount:e.userNotesCount||0,upvoteCount:e.upvotes,author:e.author?eI(e.author):null,createdDate:new Date(e.createdAt),isDraft:e.draft,repository:{name:t.name,owner:{login:t.owner}},headRepository:null,headCommit:{buildStatus:null},baseRef:{name:e.targetBranch},headRef:{name:e.sourceBranch},url:e.webUrl,updatedDate:new Date(e.updatedAt),closedDate:e.mergedAt?new Date(e.mergedAt):null,assignees:null!=(i=e.assignees)&&i.nodes?e.assignees.nodes.map(eI):null,reviews:null!=(r=e.reviewers)&&r.nodes?e.reviewers.nodes.map(e=>{var t,i;return{reviewer:eI(e),state:null!=(t=e.mergeRequestInteraction)&&t.approved?"APPROVED":(null==(i=e.mergeRequestInteraction)||i.reviewState,"CHANGES_REQUESTED")}}):null,additions:(null==(s=e.diffStatsSummary)?void 0:s.additions)||0,deletions:(null==(n=e.diffStatsSummary)?void 0:n.deletions)||0,fileCount:(null==(o=e.diffStatsSummary)?void 0:o.fileCount)||0,commitCount:e.commitCount||0,mergeableState:ey[e.mergeStatusEnum]}},ex=(e,t)=>({author:{avatarUrl:e.author.avatarUrl,email:null,graphQLId:e.author.id,id:e.author.id.replace(eb,""),name:e.author.name,username:e.author.username},assignees:e.assignees.nodes.map(e=>({avatarUrl:e.avatarUrl,email:null,graphQLId:e.id,id:e.id.replace(eb,""),name:e.name,username:e.username})),commentCount:e.userNotesCount,createdDate:new Date(e.createdAt),description:e.description,graphQLId:e.id,id:e.id.replace("gid://gitlab/Issue/",""),number:e.iid,repository:{name:t.name,owner:{login:t.owner}},updatedDate:new Date(e.updatedAt),upvoteCount:e.upvotes,state:e.state,type:e.type,title:e.title,url:e.webUrl}),eT=class extends b{async getCurrentUser(e={}){var t;let i=null==(t=(await ev(this.config,{query:`
query getCurrentUser {
  currentUser {
    ${eP}
  }
}
`},e)).body.data)?void 0:t.currentUser;if(!i)throw Error("Current user not found.");return{data:eI(i)}}async getUserForCommit(e,t={}){var i,r,s,n;let o=eS(e.repo),a=null==(n=null==(s=null==(r=null==(i=(await ev(this.config,{query:`
query getUserForCommit($fullPath: ID!, $oid: String!) {
  project(fullPath: $fullPath) {
    repository {
      tree(ref: $oid) {
        lastCommit {
          authorName
          authorEmail
          authorGravatar
        }
      }
    }
  }
}
`,variables:{fullPath:o,oid:e.oid}},t)).body.data)?void 0:i.project)?void 0:r.repository)?void 0:s.tree)?void 0:n.lastCommit;if(!a)throw Error("Commit not found.");return{data:{name:a.authorName,email:a.authorEmail,avatarUrl:a.authorGravatar}}}async getAccountForEmail(e,t={}){var i,r,s;let n=null==(s=null==(r=null==(i=(await ev(this.config,{query:`
query getAccountForEmail($email: String!) {
  users(search: $email) {
    nodes {
      ${eP}
    }
  }
}
`,variables:{email:e.email}},t)).body.data)?void 0:i.users)?void 0:r.nodes)?void 0:s[0];if(!n)throw Error("User not found.");return{data:eI(n)}}async getAccountForUsername(e,t={}){var i;let r=null==(i=(await ev(this.config,{query:`
query getAccountForUsername($username: String!) {
  user(username: $username) {
    ${eP}
  }
}
`,variables:{username:e.username}},t)).body.data)?void 0:i.user;if(!r)throw Error("User not found.");return{data:eI(r)}}async getRepo(e,t={}){var i;let r=eS(e),s=await ev(this.config,{query:`
query getRepo($fullPath: ID!) {
  project(fullPath: $fullPath) {
    ${eA}
  }
}
`,variables:{fullPath:r}},t);if(!(null!=(i=s.body.data)&&i.project))throw Error(`Repository ${r} not found`);return{data:e$(s.body.data.project)}}async getRepos(e,t={}){let i=e.map(eS).map((e,t)=>`
      getRepo_${t}: project(fullPath: "${e}") {
        ${eA}
      }
    `).join(`
`),r=await ev(this.config,{query:`
query batchGetRepos {
  ${i}
}
`},t);if(!r.body.data)throw Error(r.statusText||"Unknown error");let s=[],n=[];return e.forEach((e,t)=>{let i=r.body.data[`getRepo_${t}`];i?s.push(e$(i)):n.push({input:e})}),{data:s,errors:n}}async getReposForCurrentUser(e={},t={}){var i,r,s,n,o,a;let l=await ev(this.config,{query:`
query getReposForCurrentUser($after: String) {
  projects(membership: true first: 100 after: $after) {
    pageInfo {
      endCursor
      hasNextPage
    }
    nodes {
      ${eA}
    }
  }
}
`,variables:{after:e.cursor}},t);if(!(null!=(i=l.body.data)&&i.projects))throw Error((null==(r=l.body.errors)?void 0:r[0].message)||l.statusText||"Unknown error");let h=(null==(n=null==(s=l.body.data)?void 0:s.projects)?void 0:n.nodes)||[];return{pageInfo:null==(a=null==(o=l.body.data)?void 0:o.projects)?void 0:a.pageInfo,data:h.map(e$)}}async getRefs(e,t,i={}){var r;let s=eS(t.repo),n=new URL(`${ef(this.config,i)}/projects/${encodeURIComponent(s)}/repository/${e}`);n.searchParams.set("page",(null==(r=t.page)?void 0:r.toString())||"1"),n.searchParams.set("per_page","100");let o=await this.config.request({url:n.toString(),headers:C(i.token||this.config.token)}),a=o.headers["x-next-page"];return{pageInfo:{hasNextPage:!!a,nextPage:a?parseInt(a,10):null},data:o.body.map(e=>({name:e.name,commit:{oid:e.commit.id,authoredDate:new Date(e.commit.authored_date),committedDate:new Date(e.commit.committed_date)}}))}}async getBranches(e,t={}){return this.getRefs("branches",e,t)}async getTags(e,t={}){return this.getRefs("tags",e,t)}async getBlame(e,t={}){let i=eS(e.repo),r=new URL(`${ef(this.config,t)}/projects/${encodeURIComponent(i)}/repository/files/${encodeURIComponent(e.path)}/blame`);r.searchParams.set("ref",e.ref);let s=await this.config.request({url:r.toString(),headers:C(t.token||this.config.token)}),n=0;return{data:{ranges:s.body.map(e=>({startingLine:n+1,endingLine:n+=e.lines.length,commit:{oid:e.commit.id,parentOids:e.commit.parent_ids,authoredDate:new Date(e.commit.authored_date),author:{name:e.commit.author_name,email:e.commit.author_email,avatarUrl:null},committedDate:new Date(e.commit.committed_date),committer:{name:e.commit.committer_name,email:e.commit.committer_email,avatarUrl:null},message:e.commit.message,fileCount:null,additions:null,deletions:null}}))}}}getVariablesForPullRequests(e){let{updatedBefore:t,isDraft:i,authorLogin:r,assigneeLogins:s,reviewRequestedLogin:n}=e||{},o={},a=[],l=[],h=(e,t,i)=>{a.push(`$${e}: ${i}`),l.push(`${e}: $${e}`),o[e]=t};return t&&h("updatedBefore",t,"Time"),r&&h("authorUsername",r,"String"),s&&h("assigneeUsername",s[0],"String"),null!=i&&h("draft",i,"Boolean"),n&&h("reviewerUsername",n,"String"),{variables:o,variableTypes:a,mergeRequestArguments:l}}async getPullRequestsForRepo(e,t={}){var i,r,s;let{cursor:n,repo:o}=e||{},a=eS(o),{variables:l,variableTypes:h,mergeRequestArguments:c}=this.getVariablesForPullRequests(e),u={fullPath:a,...l},d=await ev(this.config,{query:`
query getPullRequestsForRepo(
  $fullPath: ID!
  $after: String
  ${h.length?h.join(" "):""}
) {
  project(
    fullPath: $fullPath
  ) {
    name
    fullPath
    mergeRequests(
      first: 100
      state: opened
      sort: UPDATED_DESC
      after: $after
      ${c.length?c.join(" "):""}
    ) {
      pageInfo {
        endCursor
        hasNextPage
      }
      nodes {
        ${ek}
      }
    }
  }
}
`,variables:{...u,after:n}},t),p=[],g=null==(i=d.body.data)?void 0:i.project,m={name:(null==g?void 0:g.name)||"",owner:((null==g?void 0:g.fullPath)||"").split("/").slice(0,-1).join("/")};return((null==(r=null==g?void 0:g.mergeRequests)?void 0:r.nodes)||[]).forEach(e=>{p.push(eF(e,m))}),{pageInfo:null==(s=null==g?void 0:g.mergeRequests)?void 0:s.pageInfo,data:p}}async getPullRequestsForRepos(e,t={}){var i,r,s,n,o;let{cursor:a}=e||{},l=e.repoIds.map(e=>e.toString().startsWith(eC)?e:`${eC}${e}`),{variables:h,variableTypes:c,mergeRequestArguments:u}=this.getVariablesForPullRequests(e),d={projectIds:l,...h},p=await ev(this.config,{query:`
query getPullRequests(
  $projectIds: [ID!]
  $after: String
  ${c.length?c.join(" "):""}
) {
  projects(
    ids: $projectIds
    after: $after
  ) {
    pageInfo {
      endCursor
      hasNextPage
    }
    nodes {
      name
      fullPath
      mergeRequests(
        first: 100
        state: opened
        sort: UPDATED_DESC
        ${u.length?u.join(" "):""}
      ) {
        nodes {
          ${ek}
        }
      }
    }
  }
}
`,variables:{...d,after:a}},t),g=[];return((null==(r=null==(i=p.body.data)?void 0:i.projects)?void 0:r.nodes)||[]).forEach(e=>{var t;let i={name:e.name,owner:e.fullPath.split("/").slice(0,-1).join("/")};((null==(t=e.mergeRequests)?void 0:t.nodes)||[]).forEach(e=>{g.push(eF(e,i))})}),{pageInfo:null==(o=null==(n=null==(s=p.body)?void 0:s.data)?void 0:n.projects)?void 0:o.pageInfo,data:g}}async closePullRequest(e,t={}){var i,r,s;let{repo:{namespace:n,name:o},pullRequestId:a}=e,l=`mutation ClosePullRequest($fullPath: ID!, $pullRequestId: String!) {
	mergeRequestUpdate(input: { projectPath: $fullPath, iid: $pullRequestId, state: CLOSED }) {
    errors,
		mergeRequest {
      id
    }
	}
}`,h=null==(i=(await ev(this.config,{query:l,variables:{fullPath:`${n}/${o}`,pullRequestId:a}},t)).body.data)?void 0:i.mergeRequestUpdate;if(!(null!=(r=null==h?void 0:h.mergeRequest)&&r.id)||(null==(s=null==h?void 0:h.errors)?void 0:s.length)!==0)throw Error("Could not close pull request")}async mergePullRequest(e,t={}){var i,r,s;let{repo:{namespace:n,name:o},pullRequestId:a,expectedSourceSha:l}=e,h=`mutation MergePullRequest($fullPath: ID!, $pullRequestId: String!, $expectedSourceSha: String!) {
	mergeRequestAccept(input: { projectPath: $fullPath, iid: $pullRequestId, sha: $expectedSourceSha }) {
    errors,
		mergeRequest {
      id
    }
	}
}`,c=null==(i=(await ev(this.config,{query:h,variables:{fullPath:`${n}/${o}`,pullRequestId:a,expectedSourceSha:l}},t)).body.data)?void 0:i.mergeRequestAccept;if(!(null!=(r=null==c?void 0:c.mergeRequest)&&r.id)||(null==(s=null==c?void 0:c.errors)?void 0:s.length)!==0)throw Error("Could not merge pull request")}async getIssue(e,t={}){var i,r,s,n,o,a,l;let h=eR(e),c=await ev(this.config,{query:`
query GetSingleIssue($projectId: ID!, $issueId: String!) {
  project(fullPath: $projectId) {
    name
    fullPath
    issue(iid: $issueId) {
      ${eD}
    }
  }
}
`,variables:{issueId:e.id,projectId:h}},t);if(!(null!=(i=c.body.data)&&i.project))throw Error(`Repository ${h} not found`);if(!(null!=(s=null==(r=c.body.data)?void 0:r.project)&&s.issue))throw Error(`Issue ${e.id} not found`);return{data:ex(null==(o=null==(n=c.body.data)?void 0:n.project)?void 0:o.issue,{name:null==(a=c.body.data)?void 0:a.project.name,owner:null==(l=c.body.data)?void 0:l.project.fullPath.split("/").slice(0,-1).join("/")})}}getVariablesForIssues(e){let{updatedBefore:t,authorLogin:i,assigneeLogins:r}=e||{},s={},n=[],o=[],a=(e,t,i)=>{n.push(`$${e}: ${i}`),o.push(`${e}: $${e}`),s[e]=t};return t&&a("updatedBefore",t,"Time"),i&&a("authorUsername",i,"String"),r&&a("assigneeUsername",r[0],"String"),{variables:s,variableTypes:n,issueArguments:o}}async getIssuesForRepo(e,t={}){var i,r,s;let{cursor:n,repo:o}=e||{},a=eS(o),{variables:l,variableTypes:h,issueArguments:c}=this.getVariablesForIssues(e),u={fullPath:a,...l},d=`
      query GetIssuesFromProject(
        $fullPath: ID!
        $after: String
        ${h.length?h.join(" "):""}
      ) {
        project(
          fullPath: $fullPath
        ) {
          name
          fullPath
          issues(
            first: 100
            state: opened
            sort: UPDATED_DESC
            after: $after
            ${c.length?c.join(" "):""}
          ) {
            nodes {
              ${eD}
            }
            pageInfo {
              endCursor
              hasNextPage
            }
          }
        }
      }`,p=await ev(this.config,{query:d,variables:{...u,after:n}},t),g=[],m=null==(i=p.body.data)?void 0:i.project,f={name:(null==m?void 0:m.name)||"",owner:((null==m?void 0:m.fullPath)||"").split("/").slice(0,-1).join("/")};return((null==(r=null==m?void 0:m.issues)?void 0:r.nodes)||[]).forEach(e=>{g.push(ex(e,f))}),{pageInfo:null==(s=null==m?void 0:m.issues)?void 0:s.pageInfo,data:g.sort((e,t)=>(e.updatedDate||e.createdDate).getTime()-(t.updatedDate||t.createdDate).getTime())}}async getIssuesForRepos(e,t={}){var i,r,s,n,o;let{cursor:a}=e||{},l=e.repoIds.map(e=>e.toString().startsWith(eC)?e:`${eC}${e}`),{variables:h,variableTypes:c,mergeRequestArguments:u}=this.getVariablesForPullRequests(e),d={projectIds:l,...h},p=`
      query GetIssuesFromProject(
        $projectIds: [ID!]
        $after: String
        ${c.length?c.join(" "):""}
        ) {
        projects(
          ids: $projectIds
          after: $after
        ) {
          pageInfo {
            endCursor
            hasNextPage
          }
          nodes {
            name
            fullPath
            issues(
              first: 100
              state: opened
              sort: UPDATED_DESC
              ${u.length?u.join(" "):""}
            ) {
              nodes {
                ${eD}
              }
            }
          }
        }
      }`,g=await ev(this.config,{query:p,variables:{...d,after:a}},t),m=[];return((null==(r=null==(i=g.body.data)?void 0:i.projects)?void 0:r.nodes)||[]).forEach(e=>{var t;let i={name:e.name,owner:e.fullPath.split("/").slice(0,-1).join("/")};((null==(t=e.issues)?void 0:t.nodes)||[]).forEach(e=>m.push(ex(e,i)))}),{pageInfo:null==(o=null==(n=null==(s=g.body)?void 0:s.data)?void 0:n.projects)?void 0:o.pageInfo,data:m.sort((e,t)=>(e.updatedDate||e.createdDate).getTime()-(t.updatedDate||t.createdDate).getTime())}}async setIssueStatus(e,t={}){var i,r,s;let{repo:{namespace:n,name:o},issueId:a,status:l}=e,h=`mutation SetIssueState($fullPath: ID!, $issueId: String!, $status: IssueStateEvent!) {
	updateIssue(input: { projectPath: $fullPath, iid: $issueId, stateEvent: $status }) {
    issue {
      id
    }
	}
}`;if(!(null!=(s=null==(r=null==(i=(await ev(this.config,{query:h,variables:{fullPath:`${n}/${o}`,issueId:a,status:l}},t)).body.data)?void 0:i.updateIssue)?void 0:r.issue)&&s.id))throw Error("Could not set issue status")}},eO="https://api.atlassian.com/ex/jira",eE=e=>{var t;let i=e.fields.assignee;return{id:e.id,commentCount:e.fields.comment.comments.length,number:e.key,title:e.fields.summary,url:e.self,createdDate:new Date(e.fields.created),author:{id:e.fields.creator.accountId,name:e.fields.creator.displayName,email:e.fields.creator.emailAddress,avatarUrl:e.fields.creator.avatarUrls["32x32"],username:e.fields.creator.displayName},updatedDate:new Date(e.fields.updated),assignees:i?[{id:i.accountId,name:i.displayName,email:i.emailAddress,avatarUrl:i.avatarUrls["32x32"],username:i.displayName}]:[],description:null,repository:null,state:null,type:e.fields.issuetype.name,upvoteCount:(null==(t=e.fields.votes)?void 0:t.votes)||0}},eB=class extends y{async getJiraResourcesForCurrentUser(e={}){return{data:(await this.config.request({url:`${e.baseUrl||"https://api.atlassian.com/"}/oauth/token/accessible-resources`,headers:C(e.token||this.config.token)})).body.map(e=>({avatarUrl:e.avatarUrl,id:e.id,name:e.name}))}}async getJiraProjectsForResource(e,t={}){let i=new URL(`${t.baseUrl||eO}/${e.resourceId}/rest/api/2/project/search`);i.searchParams.set("maxResults","100"),e.cursor&&i.searchParams.set("startAt",e.cursor);let r=await this.config.request({url:i.toString(),headers:C(t.token||this.config.token)});return{pageInfo:{hasNextPage:0!==r.body.values.length,endCursor:(r.body.startAt+r.body.values.length).toString()},data:r.body.values.map(t=>({name:t.name,resourceId:e.resourceId}))}}async getJiraProjectsForResources(e,t={}){let i=[];return await Promise.all(e.resourceIds.map(async e=>{let r=await this.getJiraProjectsForResource({resourceId:e},t);i.push(...r.data)})),{data:i}}async getIssuesForProject(e,t={}){let{assigneeLogins:i,authorLogin:r,mentionLogin:s,project:n}=e||{},o=[`project = "${n}"`];return r&&o.push(`creator in (${r})`),i&&o.push(`assignee in (${i.join(", ")})`),s&&o.push(`comment ~ ${s}`),{data:(await this.config.request({url:`${t.baseUrl||eO}/${e.resourceId}/rest/api/2/search?jql=${o.join(" AND ")}&startAt=0&maxResults=100&fields=assignee,comment,summary,created,creator,updated,votes,issuetype`,headers:C(t.token||this.config.token)})).body.issues.map(eE)}}async setIssueStatus(e,t={}){let{resourceId:i,issueId:r,status:s}=e;try{await this.config.request({method:"POST",url:`${t.baseUrl||eO}/${i}/rest/api/2/issue/${r}/transitions`,body:JSON.stringify({transition:{id:s}}),headers:{...C(t.token||this.config.token),"Content-Type":"application/json"}})}catch(e){if("Unexpected end of JSON input"==e.message)return;throw Error("Could not set issue status")}}},eU="https://api.trello.com",eW=e=>{let t=new Date(1e3*parseInt(e.id.substring(0,8),16));return{id:e.id,commentCount:e.badges.comments,number:e.idShort.toString(),title:e.name,url:e.url,createdDate:new Date(t.toISOString()),author:null,updatedDate:new Date(e.dateLastActivity),assignees:e.idMembers.map(e=>({id:e,username:null,name:null,email:null,avatarUrl:null})),description:null,state:null,type:null,repository:null,upvoteCount:e.badges.votes}},eM=class extends y{async getBoardsForCurrentUser(e,t={}){return{data:(await this.config.request({url:`${t.baseUrl||eU}/1/members/me/boards?fields=name&key=${e.appKey}&token=${t.token||this.config.token}&filter=open`,headers:C(t.token||this.config.token)})).body.map(e=>({id:e.id,name:e.name}))}}async getIssuesForBoard(e,t={}){let i=["-is:archived","sort:edited"],{appKey:r,boardId:s,filterText:n,assigneeLogins:o}=e||{};o&&i.push("@me");let a=`${n?`${n}`:""}${i.join(" ")} board:${s}`;return{data:(await this.config.request({url:`${t.baseUrl||eU}/1/search?key=${r}&query=${a}&cards_limit=1000&token=${t.token||this.config.token}`,headers:C(t.token||this.config.token)})).body.cards.map(eW)}}async setIssueStatus(e,t={}){let{appKey:i,cardId:r,status:s}=e;if(!(await this.config.request({method:"PUT",url:`${t.baseUrl||eU}/1/cards/${r}?key=${i}&token=${t.token||this.config.token}&idList=${s}`,headers:C(t.token||this.config.token)})).body.id)throw Error("Could not set issue status")}},eL={};u(eL,{getIssueUniqueId:()=>eN,getPullRequestUniqueId:()=>eH});var eN=(e,t,i,r="")=>{let s=[];return s.push(r),s.push(e),s.push(t),s.push(i),JSON.stringify(s)},eH=(e,t,i,r,s="")=>{let n=[];return n.push(s),n.push(e),n.push(t),n.push(i),n.push(r),JSON.stringify(n)},eG={};u(eG,{getIssueUniqueId:()=>eq,getPullRequestUniqueId:()=>eY});var eq=(e,t)=>JSON.stringify(["",e,t]),eY=(e,t)=>JSON.stringify(["",e,t]),ej={};u(ej,{getIssueUniqueId:()=>eV,getPullRequestUniqueId:()=>eQ});var eV=(e,t,i)=>JSON.stringify([i,e,t]),eQ=(e,t,i)=>JSON.stringify([i,e,t]),ez={};u(ez,{getIssueUniqueId:()=>eK,getPullRequestRank:()=>eZ,getPullRequestUniqueId:()=>eJ});var eK=(e,t="")=>{let i=[];return i.push(t),i.push(e),JSON.stringify(i)},eJ=(e,t="")=>{let i=[];return i.push(t),i.push(e),JSON.stringify(i)},eZ=(e,t,i)=>{var r,s,n;let o=0,a,l;return null==(r=e.reviews)||r.forEach(e=>{e.reviewer.id===t&&(a=e.state),"CHANGES_REQUESTED"===e.state?l="CHANGES_REQUESTED":"APPROVED"===e.state&&"CHANGES_REQUESTED"!==l&&(l="APPROVED")}),l||(l="REVIEW_REQUESTED"),(null==(s=e.author)?void 0:s.id)===t?o+=1e3:null!=(n=e.assignees)&&n.find(e=>e.id===t)?o+=900:"REVIEW_REQUESTED"===a?o+=800:i&&(o+=700),"APPROVED"===l?"MERGEABLE"===e.mergeableState?o+=100:"CONFLICTS"===e.mergeableState?o+=90:o+=80:"CHANGES_REQUESTED"==l&&(o+=70),o},eX={};u(eX,{getIssueUniqueId:()=>e0,getPullRequestUniqueId:()=>e1});var e0=(e,t="")=>{let i=[];return i.push(t),i.push(e),JSON.stringify(i)},e1=(e,t="")=>{let i=[];return i.push(t),i.push(e),JSON.stringify(i)},e2={};u(e2,{getIssueUniqueId:()=>e4,getJiraServerIssueUniqueId:()=>e5});var e4=(e,t,i)=>{let r=[];return r.push(""),r.push(e),r.push(t),r.push(i),JSON.stringify(r)},e5=(e,t,i)=>{let r=[];return r.push(i),r.push(""),r.push(e),r.push(t),JSON.stringify(r)},e6={};u(e6,{getIssueUniqueId:()=>e3});var e3=(e,t,i,r="")=>{let s=[];return s.push(r),s.push(e),s.push(t),s.push(i),JSON.stringify(s)},e8=e=>{let t={request:null==e?void 0:e.request};return{azureDevOps:new T({...t,...null==e?void 0:e.azureDevOps}),bitbucket:new L({...t,...null==e?void 0:e.bitbucket}),bitbucketServer:new N({...t,...null==e?void 0:e.bitbucketServer}),github:new ep({...t,...null==e?void 0:e.github}),gitlab:new eT({...t,...null==e?void 0:e.gitlab}),jira:new eB({...t,...null==e?void 0:e.jira}),trello:new eM({...t,...null==e?void 0:e.trello})}},e9={azureDevOps:eL,bitbucket:eG,bitbucketServer:ej,github:ez,gitlab:eX,jira:e2,trello:e6}},8054:function(e,t,i){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};let s=i(2361),n=r(i(1957)),o=r(i(6304)),a=n.default("agent-base");function l(){let{stack:e}=Error();return"string"==typeof e&&e.split("\n").some(e=>-1!==e.indexOf("(https.js:")||-1!==e.indexOf("node:https:"))}function h(e,t){return new h.Agent(e,t)}!function(e){class t extends s.EventEmitter{constructor(e,t){super();let i=t;"function"==typeof e?this.callback=e:e&&(i=e),this.timeout=null,i&&"number"==typeof i.timeout&&(this.timeout=i.timeout),this.maxFreeSockets=1,this.maxSockets=1,this.maxTotalSockets=1/0,this.sockets={},this.freeSockets={},this.requests={},this.options={}}get defaultPort(){return"number"==typeof this.explicitDefaultPort?this.explicitDefaultPort:l()?443:80}set defaultPort(e){this.explicitDefaultPort=e}get protocol(){return"string"==typeof this.explicitProtocol?this.explicitProtocol:l()?"https:":"http:"}set protocol(e){this.explicitProtocol=e}callback(e,t,i){throw Error('"agent-base" has no default implementation, you must subclass and override `callback()`')}addRequest(e,t){let i=Object.assign({},t);"boolean"!=typeof i.secureEndpoint&&(i.secureEndpoint=l()),null==i.host&&(i.host="localhost"),null==i.port&&(i.port=i.secureEndpoint?443:80),null==i.protocol&&(i.protocol=i.secureEndpoint?"https:":"http:"),i.host&&i.path&&delete i.path,delete i.agent,delete i.hostname,delete i._defaultAgent,delete i.defaultPort,delete i.createConnection,e._last=!0,e.shouldKeepAlive=!1;let r=!1,s=null,n=i.timeout||this.timeout,h=t=>{e._hadError||(e.emit("error",t),e._hadError=!0)},c=e=>{r||(null!==s&&(clearTimeout(s),s=null),h(e))};if("function"!=typeof this.callback){h(Error("`callback` is not defined"));return}this.promisifiedCallback||(this.callback.length>=3?(a("Converting legacy callback function to promise"),this.promisifiedCallback=o.default(this.callback)):this.promisifiedCallback=this.callback),"number"==typeof n&&n>0&&(s=setTimeout(()=>{s=null,r=!0;let e=Error(`A "socket" was not created for HTTP request before ${n}ms`);e.code="ETIMEOUT",h(e)},n)),"port"in i&&"number"!=typeof i.port&&(i.port=Number(i.port));try{a("Resolving socket for %o request: %o",i.protocol,`${e.method} ${e.path}`),Promise.resolve(this.promisifiedCallback(e,i)).then(t=>{if(!r){if(null!=s&&(clearTimeout(s),s=null),t&&"function"==typeof t.addRequest){a("Callback returned another Agent instance %o",t.constructor.name),t.addRequest(e,i);return}if(t){t.once("free",()=>{this.freeSocket(t,i)}),e.onSocket(t);return}h(Error(`no Duplex stream was returned to agent-base for \`${e.method} ${e.path}\``))}},c)}catch(e){Promise.reject(e).catch(c)}}freeSocket(e,t){a("Freeing socket %o %o",e.constructor.name,t),e.destroy()}destroy(){a("Destroying agent %o",this.constructor.name)}}e.Agent=t,e.prototype=e.Agent.prototype}(h||(h={})),e.exports=h},6304:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return function(t,i){return new Promise((r,s)=>{e.call(this,t,i,(e,t)=>{e?s(e):r(t)})})}}},5640:(e,t,i)=>{i.d(t,{QO:()=>a,qb:()=>h});var r,s,n,o,a=((r=a||{})[r.Force=0]="Force",r[r.ForceWithLease=1]="ForceWithLease",r[r.ForceWithLeaseIfIncludes=2]="ForceWithLeaseIfIncludes",r),l=((s=l||{})[s.Head=0]="Head",s[s.RemoteHead=1]="RemoteHead",s[s.Tag=2]="Tag",s),h=((n=h||{})[n.INDEX_MODIFIED=0]="INDEX_MODIFIED",n[n.INDEX_ADDED=1]="INDEX_ADDED",n[n.INDEX_DELETED=2]="INDEX_DELETED",n[n.INDEX_RENAMED=3]="INDEX_RENAMED",n[n.INDEX_COPIED=4]="INDEX_COPIED",n[n.MODIFIED=5]="MODIFIED",n[n.DELETED=6]="DELETED",n[n.UNTRACKED=7]="UNTRACKED",n[n.IGNORED=8]="IGNORED",n[n.INTENT_TO_ADD=9]="INTENT_TO_ADD",n[n.INTENT_TO_RENAME=10]="INTENT_TO_RENAME",n[n.TYPE_CHANGED=11]="TYPE_CHANGED",n[n.ADDED_BY_US=12]="ADDED_BY_US",n[n.ADDED_BY_THEM=13]="ADDED_BY_THEM",n[n.DELETED_BY_US=14]="DELETED_BY_US",n[n.DELETED_BY_THEM=15]="DELETED_BY_THEM",n[n.BOTH_ADDED=16]="BOTH_ADDED",n[n.BOTH_DELETED=17]="BOTH_DELETED",n[n.BOTH_MODIFIED=18]="BOTH_MODIFIED",n),c=((o=c||{}).BadConfigFile="BadConfigFile",o.AuthenticationFailed="AuthenticationFailed",o.NoUserNameConfigured="NoUserNameConfigured",o.NoUserEmailConfigured="NoUserEmailConfigured",o.NoRemoteRepositorySpecified="NoRemoteRepositorySpecified",o.NotAGitRepository="NotAGitRepository",o.NotAtRepositoryRoot="NotAtRepositoryRoot",o.Conflict="Conflict",o.StashConflict="StashConflict",o.UnmergedChanges="UnmergedChanges",o.PushRejected="PushRejected",o.ForcePushWithLeaseRejected="ForcePushWithLeaseRejected",o.ForcePushWithLeaseIfIncludesRejected="ForcePushWithLeaseIfIncludesRejected",o.RemoteConnectionError="RemoteConnectionError",o.DirtyWorkTree="DirtyWorkTree",o.CantOpenResource="CantOpenResource",o.GitNotFound="GitNotFound",o.CantCreatePipe="CantCreatePipe",o.PermissionDenied="PermissionDenied",o.CantAccessRemote="CantAccessRemote",o.RepositoryNotFound="RepositoryNotFound",o.RepositoryIsLocked="RepositoryIsLocked",o.BranchNotFullyMerged="BranchNotFullyMerged",o.NoRemoteReference="NoRemoteReference",o.InvalidBranchName="InvalidBranchName",o.BranchAlreadyExists="BranchAlreadyExists",o.NoLocalChanges="NoLocalChanges",o.NoStashFound="NoStashFound",o.LocalChangesOverwritten="LocalChangesOverwritten",o.NoUpstreamBranch="NoUpstreamBranch",o.IsInSubmodule="IsInSubmodule",o.WrongCase="WrongCase",o.CantLockRef="CantLockRef",o.CantRebaseMultipleBranches="CantRebaseMultipleBranches",o.PatchDoesNotApply="PatchDoesNotApply",o.NoPathFound="NoPathFound",o.UnknownPath="UnknownPath",o.EmptyCommitMessage="EmptyCommitMessage",o.BranchFastForwardRejected="BranchFastForwardRejected",o.BranchNotYetBorn="BranchNotYetBorn",o.TagConflict="TagConflict",o)},4398:(e,t,i)=>{i.d(t,{h:()=>s});var r=i(5255);function s(e){if(e.scheme===r.sN.Git)try{return JSON.parse(e.query)}catch{}}},2022:(e,t,i)=>{i.d(t,{H:()=>a,m:()=>o});var r=i(9496),s=i(2061),n=i(4336);function o(e){return`${e?.document.uri.toString()}|${e?.viewColumn}`}class a{constructor(e,t,i){this.annotationType=e,this.editor=t,this.trackedDocument=i,this.correlationKey=o(this.editor),this.document=this.editor.document,this.disposable=r.Disposable.from(r.window.onDidChangeTextEditorSelection(this.onTextEditorSelectionChanged,this))}annotationContext;correlationKey;document;status;decorations;disposable;dispose(){this.clear(),this.disposable.dispose()}onTextEditorSelectionChanged(e){this.document===e.textEditor.document&&this.selection({line:e.selections[0].active.line})}get editorUri(){return this.editor?.document?.uri}clear(){if(this.annotationContext=void 0,this.status=void 0,null!=this.editor&&this.decorations?.length){for(let e of this.decorations)try{this.editor.setDecorations(e.decorationType,[])}catch{}this.decorations=void 0}}mustReopen(e){return!1}refresh(e){if(null==this.editor||!this.decorations?.length)return;let t=[];for(let i of this.decorations){let r=e.get(i.decorationType);null!==r&&(null!=r&&(i.decorationType=r),t.push(i))}this.setDecorations(this.decorations)}async restore(e){if(!1!==this.editor._disposed){if(this.status="computing",e===r.window.activeTextEditor&&await (0,s.v)("gitlens:annotationStatus",this.status),this.editor=e,this.correlationKey=o(e),this.document=e.document,this.decorations?.length)for(let e of this.decorations)this.editor.setDecorations(e.decorationType,e.rangesOrOptions);this.status="computed",e===r.window.activeTextEditor&&await (0,s.v)("gitlens:annotationStatus",this.status)}}async provideAnnotation(e){this.status="computing";try{if(await this.onProvideAnnotation(e))return this.status="computed",!0}catch(e){n.Yd.error(e)}return this.status=void 0,!1}setDecorations(e){if(this.decorations?.length&&this.clear(),this.decorations=e,this.decorations?.length)for(let e of this.decorations)this.editor.setDecorations(e.decorationType,e.rangesOrOptions)}}},248:(e,t,i)=>{let r;i.d(t,{Lx:()=>A,iF:()=>C,U5:()=>P,Vz:()=>D,HM:()=>b,sV:()=>k});var s=i(9496),n=i(5255),o=i(9338);function a(e,t){let i=Math.pow(10,t);return Math.round(e*i)/i}class l{_rgbaBrand=void 0;r;g;b;a;constructor(e,t,i,r=1){this.r=0|Math.min(255,Math.max(0,e)),this.g=0|Math.min(255,Math.max(0,t)),this.b=0|Math.min(255,Math.max(0,i)),this.a=a(Math.max(Math.min(1,r),0),3)}static equals(e,t){return e.r===t.r&&e.g===t.g&&e.b===t.b&&e.a===t.a}}class h{_hslaBrand=void 0;h;s;l;a;constructor(e,t,i,r){this.h=0|Math.max(Math.min(360,e),0),this.s=a(Math.max(Math.min(1,t),0),3),this.l=a(Math.max(Math.min(1,i),0),3),this.a=a(Math.max(Math.min(1,r),0),3)}static equals(e,t){return e.h===t.h&&e.s===t.s&&e.l===t.l&&e.a===t.a}static fromRGBA(e){let t=e.r/255,i=e.g/255,r=e.b/255,s=e.a,n=Math.max(t,i,r),o=Math.min(t,i,r),a=0,l=0,c=(o+n)/2,u=n-o;if(u>0){switch(l=Math.min(c<=.5?u/(2*c):u/(2-2*c),1),n){case t:a=(i-r)/u+(i<r?6:0);break;case i:a=(r-t)/u+2;break;case r:a=(t-i)/u+4}a*=60,a=Math.round(a)}return new h(a,l,c,s)}static _hue2rgb(e,t,i){return(i<0&&(i+=1),i>1&&(i-=1),i<1/6)?e+(t-e)*6*i:i<.5?t:i<2/3?e+(t-e)*(2/3-i)*6:e}static toRGBA(e){let t,i,r;let s=e.h/360,{s:n,l:o,a}=e;if(0===n)t=i=r=o;else{let e=o<.5?o*(1+n):o+n-o*n,a=2*o-e;t=h._hue2rgb(a,e,s+1/3),i=h._hue2rgb(a,e,s),r=h._hue2rgb(a,e,s-1/3)}return new l(Math.round(255*t),Math.round(255*i),Math.round(255*r),a)}}class c{_hsvaBrand=void 0;h;s;v;a;constructor(e,t,i,r){this.h=0|Math.max(Math.min(360,e),0),this.s=a(Math.max(Math.min(1,t),0),3),this.v=a(Math.max(Math.min(1,i),0),3),this.a=a(Math.max(Math.min(1,r),0),3)}static equals(e,t){return e.h===t.h&&e.s===t.s&&e.v===t.v&&e.a===t.a}static fromRGBA(e){let t=e.r/255,i=e.g/255,r=e.b/255,s=Math.max(t,i,r),n=s-Math.min(t,i,r);return new c(Math.round(60*(0===n?0:s===t?((i-r)/n%6+6)%6:s===i?(r-t)/n+2:(t-i)/n+4)),0===s?0:n/s,s,e.a)}static toRGBA(e){let{h:t,s:i,v:r,a:s}=e,n=r*i,o=n*(1-Math.abs(t/60%2-1)),a=r-n,[h,c,u]=[0,0,0];return t<60?(h=n,c=o):t<120?(h=o,c=n):t<180?(c=n,u=o):t<240?(c=o,u=n):t<300?(h=o,u=n):t<=360&&(h=n,u=o),new l(h=Math.round((h+a)*255),c=Math.round((c+a)*255),u=Math.round((u+a)*255),s)}}class u{static from(e){return e instanceof u?e:g(e)||u.red}static fromCssVariable(e,t){return g(t.getPropertyValue(e).trim())||u.red}static fromHex(e){return m(e)||u.red}static equals(e,t){return!e&&!t||!!e&&!!t&&e.equals(t)}rgba;_hsla;get hsla(){return this._hsla?this._hsla:h.fromRGBA(this.rgba)}_hsva;get hsva(){return this._hsva?this._hsva:c.fromRGBA(this.rgba)}constructor(e){if(e){if(e instanceof l)this.rgba=e;else if(e instanceof h)this._hsla=e,this.rgba=h.toRGBA(e);else if(e instanceof c)this._hsva=e,this.rgba=c.toRGBA(e);else throw Error("Invalid color ctor argument")}else throw Error("Color needs a value")}equals(e){return null!=e&&!!e&&l.equals(this.rgba,e.rgba)&&h.equals(this.hsla,e.hsla)&&c.equals(this.hsva,e.hsva)}getRelativeLuminance(){let e=u._relativeLuminanceForComponent(this.rgba.r);return a(.2126*e+.7152*u._relativeLuminanceForComponent(this.rgba.g)+.0722*u._relativeLuminanceForComponent(this.rgba.b),4)}static _relativeLuminanceForComponent(e){let t=e/255;return t<=.03928?t/12.92:Math.pow((t+.055)/1.055,2.4)}luminance(e){return function(e,t){if(0===t)return new u(new l(0,0,0,e.rgba.a));if(1===t)return new u(new l(255,255,255,e.rgba.a));let i=e.getRelativeLuminance(),r=20,s=(e,i)=>{let n=e.mix(i,.5),o=n.getRelativeLuminance();return!(1e-7>Math.abs(t-o))&&r--?o>t?s(e,n):s(n,i):n},n=(i>t?s(u.black,e):s(e,u.white)).rgba;return new u(new l(n.r,n.g,n.b,e.rgba.a))}(this,e)}getContrastRatio(e){let t=this.getRelativeLuminance(),i=e.getRelativeLuminance();return t>i?(t+.05)/(i+.05):(i+.05)/(t+.05)}isDarker(){return(299*this.rgba.r+587*this.rgba.g+114*this.rgba.b)/1e3<128}isLighter(){return(299*this.rgba.r+587*this.rgba.g+114*this.rgba.b)/1e3>=128}isLighterThan(e){return this.getRelativeLuminance()>e.getRelativeLuminance()}isDarkerThan(e){return this.getRelativeLuminance()<e.getRelativeLuminance()}lighten(e){return new u(new h(this.hsla.h,this.hsla.s,this.hsla.l+this.hsla.l*e,this.hsla.a))}darken(e){return new u(new h(this.hsla.h,this.hsla.s,this.hsla.l-this.hsla.l*e,this.hsla.a))}transparent(e){let{r:t,g:i,b:r,a:s}=this.rgba;return new u(new l(t,i,r,s*e))}isTransparent(){return 0===this.rgba.a}isOpaque(){return 1===this.rgba.a}opposite(){return new u(new l(255-this.rgba.r,255-this.rgba.g,255-this.rgba.b,this.rgba.a))}blend(e){let t=e.rgba,i=this.rgba.a,r=t.a,s=i+r*(1-i);return s<1e-6?u.transparent:new u(new l(this.rgba.r*i/s+t.r*r*(1-i)/s,this.rgba.g*i/s+t.g*r*(1-i)/s,this.rgba.b*i/s+t.b*r*(1-i)/s,s))}mix(e,t){return function(e,t,i){let r=e.rgba,s=t.rgba;return new u(new l(r.r+i*(s.r-r.r),r.g+i*(s.g-r.g),r.b+i*(s.b-r.b),r.a+i*(s.a-r.a)))}(this,e,t)}makeOpaque(e){if(this.isOpaque()||1!==e.rgba.a)return this;let{r:t,g:i,b:r,a:s}=this.rgba;return new u(new l(e.rgba.r-s*(e.rgba.r-t),e.rgba.g-s*(e.rgba.g-i),e.rgba.b-s*(e.rgba.b-r),1))}flatten(...e){let t=e.reduceRight((e,t)=>u._flatten(t,e));return u._flatten(this,t)}static _flatten(e,t){let i=1-e.rgba.a;return new u(new l(i*t.rgba.r+e.rgba.a*e.rgba.r,i*t.rgba.g+e.rgba.a*e.rgba.g,i*t.rgba.b+e.rgba.a*e.rgba.b))}_toString;toString(){var e;return this._toString||(this._toString=(e=this,e.isOpaque()?`#${d(e.rgba.r)}${d(e.rgba.g)}${d(e.rgba.b)}`:`rgba(${e.rgba.r}, ${e.rgba.g}, ${e.rgba.b}, ${Number(e.rgba.a.toFixed(2))})`)),this._toString}static getLighterColor(e,t,i){if(e.isLighterThan(t))return e;i=i||.5;let r=e.getRelativeLuminance(),s=t.getRelativeLuminance();return i=i*(s-r)/s,e.lighten(i)}static getDarkerColor(e,t,i){if(e.isDarkerThan(t))return e;i=i||.5;let r=e.getRelativeLuminance(),s=t.getRelativeLuminance();return i=i*(r-s)/r,e.darken(i)}static white=new u(new l(255,255,255,1));static black=new u(new l(0,0,0,1));static red=new u(new l(255,0,0,1));static blue=new u(new l(0,0,255,1));static green=new u(new l(0,255,0,1));static cyan=new u(new l(0,255,255,1));static lightgrey=new u(new l(211,211,211,1));static transparent=new u(new l(0,0,0,0))}function d(e){let t=e.toString(16);return 2!==t.length?`0${t}`:t}let p=/^((?:rgb|hsl)a?)\((-?\d+%?)[,\s]+(-?\d+%?)[,\s]+(-?\d+%?)[,\s]*(-?[\d.]+%?)?\)$/i;function g(e){let t;if(0===(e=e.trim()).length)return null;if(e.charCodeAt(0)===n.mN.Hash)return m(e);let i=p.exec(e);if(null==i)return null;let r=i[1];switch(r){case"rgb":case"hsl":t=[parseInt(i[2],10),parseInt(i[3],10),parseInt(i[4],10),1];break;case"rgba":case"hsla":t=[parseInt(i[2],10),parseInt(i[3],10),parseInt(i[4],10),parseFloat(i[5])];break;default:return null}switch(r){case"rgb":case"rgba":return new u(new l(t[0],t[1],t[2],t[3]));case"hsl":case"hsla":return new u(new h(t[0],t[1],t[2],t[3]))}return u.red}function m(e){let t=(e=e.trim()).length;if(0===t||e.charCodeAt(0)!==n.mN.Hash)return null;switch(t){case 7:return new u(new l(16*f(e.charCodeAt(1))+f(e.charCodeAt(2)),16*f(e.charCodeAt(3))+f(e.charCodeAt(4)),16*f(e.charCodeAt(5))+f(e.charCodeAt(6)),1));case 9:{let t=16*f(e.charCodeAt(1))+f(e.charCodeAt(2));return new u(new l(t,16*f(e.charCodeAt(3))+f(e.charCodeAt(4)),16*f(e.charCodeAt(5))+f(e.charCodeAt(6)),(16*f(e.charCodeAt(7))+f(e.charCodeAt(8)))/255))}case 4:{let t=f(e.charCodeAt(1)),i=f(e.charCodeAt(2)),r=f(e.charCodeAt(3));return new u(new l(16*t+t,16*i+i,16*r+r))}case 5:{let t=f(e.charCodeAt(1)),i=f(e.charCodeAt(2)),r=f(e.charCodeAt(3)),s=f(e.charCodeAt(4));return new u(new l(16*t+t,16*i+i,16*r+r,(16*s+s)/255))}default:return null}}function f(e){switch(e){case n.mN.Digit0:break;case n.mN.Digit1:return 1;case n.mN.Digit2:return 2;case n.mN.Digit3:return 3;case n.mN.Digit4:return 4;case n.mN.Digit5:return 5;case n.mN.Digit6:return 6;case n.mN.Digit7:return 7;case n.mN.Digit8:return 8;case n.mN.Digit9:return 9;case n.mN.a:case n.mN.A:return 10;case n.mN.b:case n.mN.B:return 11;case n.mN.c:case n.mN.C:return 12;case n.mN.d:case n.mN.D:return 13;case n.mN.e:case n.mN.E:return 14;case n.mN.f:case n.mN.F:return 15}return 0}var w=i(5148),v=i(4627);let y=["#f66a0a","#ef6939","#e96950","#e26862","#db6871","#d3677e","#cc678a","#c46696","#bb66a0","#b365a9","#a965b3","#a064bb","#9664c4","#8a63cc","#7e63d3","#7162db","#6262e2","#5061e9","#3961ef","#0a60f6"];function b(){if(null==r){let e;let{coldColor:t,hotColor:i}=w.D.get("heatmap");r={hot:(e="#0a60f6"===t&&"#f66a0a"===i?y:function(e,t,i){let r=[],s=u.from(e),n=u.from(t);r.push(s.toString());for(let e=1;e<19;e++){let t=s.mix(n,e/19);r.push(t.toString())}return r.push(n.toString()),r}(i,t,0)).slice(0,10),cold:e.slice(10,20)};let s=w.D.onDidChange(e=>{w.D.changed(e,["heatmap.ageThreshold","heatmap.hotColor","heatmap.coldColor"])&&(s.dispose(),r=void 0)})}return r}function C(e,t,i){let[r,s,n,o]=S(t,i);e.renderOptions.before.borderColor=`rgba(${r},${s},${n},${o})`}function A(e,t,i,r){let[n,o,a,l]=S(e,t),{fadeLines:h,locations:c}=w.D.get("heatmap"),u=c.includes("gutter"),d=c.includes("line"),p=c.includes("overview"),g=`${n},${o},${a},${l}`,m=r.get(g);return null==m?(m={decorationType:s.window.createTextEditorDecorationType({backgroundColor:d?`rgba(${n},${o},${a},${.15*l})`:void 0,opacity:h?`${t.computeOpacity(e).toFixed(2)} !important`:void 0,isWholeLine:!!d||!!h||void 0,gutterIconPath:u?s.Uri.parse(`data:image/svg+xml,${encodeURIComponent(`<svg xmlns='http://www.w3.org/2000/svg' width='18' height='18' viewBox='0 0 18 18'><rect fill='rgb(${n},${o},${a})' fill-opacity='${l}' x='8' y='0' width='3' height='18'/></svg>`)}`):void 0,gutterIconSize:u?"contain":void 0,overviewRulerLane:p?s.OverviewRulerLane.Center:void 0,overviewRulerColor:p?`rgba(${n},${o},${a},${.7*l})`:void 0}),rangesOrOptions:[i]},r.set(g,m)):m.rangesOrOptions.push(i),m.decorationType}function P(e,t,i,r){let s={renderOptions:{before:{...r}}};e.isUncommitted&&(s.renderOptions.before.color=r.uncommittedColor);let a=o.i.fromTemplate(t,e,i);return s.renderOptions.before.contentText=(0,v.vk)(a.replace(/ /g,n.NE.Space),1,1),s}function D(e,t,i,r,n){let o,a,l,h=0;for(let e of Object.values(n.tokenOptions))if(void 0!==e){if(null==e.truncateTo){h=-1;break}h+=e.truncateTo}if(h>=0&&(h+=(0,v.dz)((0,v.sX)(r,void 0)))>0&&(h+=3),t.enabled&&(o="solid",a="left"===t.location?"0 0 0 2px":"0 2px 0 0"),h>=0){let e=w.D.getAny("editor.letterSpacing");l=null!=e&&0!==e?`calc(${h}ch + ${Math.round(h*e)+(i?13:-6)}px)`:`calc(${h}ch ${i?"+ 13px":"- 6px"})`}return{backgroundColor:new s.ThemeColor("gitlens.gutterBackgroundColor"),borderStyle:o,borderWidth:a,color:new s.ThemeColor("gitlens.gutterForegroundColor"),fontWeight:"normal",fontStyle:"normal",height:"100%",margin:"0 26px -1px 0",textDecoration:`${e?"overline solid rgba(0, 0, 0, .2)":"none"};box-sizing: border-box${i?";padding: 0 0 0 18px":""}`,width:l,uncommittedColor:new s.ThemeColor("gitlens.gutterUncommittedForegroundColor")}}function k(e,t,i,r=!0){let a=o.i.fromTemplate(t,e,{...i,messageTruncateAtNewLine:!0});return{renderOptions:{after:{backgroundColor:new s.ThemeColor("gitlens.trailingLineBackgroundColor"),color:new s.ThemeColor("gitlens.trailingLineForegroundColor"),contentText:(0,v.vk)(a.replace(/ /g,n.NE.Space),1,1),fontWeight:"normal",fontStyle:"normal",textDecoration:`none;${r?"":" position: absolute;"}`}}}}function S(e,t){let i=t.computeRelativeAge(e),r=function(e){let t=g(e);return null==t?null:[t.rgba.r,t.rgba.g,t.rgba.b,t.rgba.a]}((e.getTime()<t.coldThresholdTimestamp?t.colors.cold:t.colors.hot)[i]);return[...r??[0,0,0],null==r?0:0===i?1:i<=5?.8:.6]}},3139:(e,t,i)=>{i.d(t,{G:()=>v,P:()=>b});var r=i(9496),s=i(5255),n=i(8452),o=i(5148),a=i(7512),l=i(4241),h=i(8786),c=i(3105),u=i(4336),d=i(4627),p=Object.defineProperty,g=Object.getOwnPropertyDescriptor,m=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?g(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&p(t,i,n),n};let f=Object.freeze(new Map),w=/<num>/g;function v(e){return{provider:e.provider?{id:e.provider.id,name:e.provider.name,domain:e.provider.domain,icon:e.provider.icon}:void 0,id:e.id,prefix:e.prefix,title:e.title,url:e.url,type:e.type,description:e.description}}function y(e){return!("prefix"in e)&&!("url"in e)}class b{constructor(e){this.container=e,this._disposable=r.Disposable.from(o.D.onDidChange(this.onConfigurationChanged,this)),this.onConfigurationChanged()}_disposable;_references=[];dispose(){this._disposable?.dispose()}onConfigurationChanged(e){if(o.D.changed(e,"autolinks")){let e=o.D.get("autolinks");this._references=e?.filter(e=>e.prefix&&e.url)?.map(e=>({prefix:e.prefix,url:e.url,title:e.title,alphanumeric:e.alphanumeric,ignoreCase:e.ignoreCase,type:e.type,description:e.description}))??[]}}getAutolinks(e,t,i){let r,s;let n=[];if(t?.provider?.autolinks?.length&&n.push([t.provider,t.provider.autolinks]),this._references.length&&(t?.provider==null||!i?.excludeCustom)&&n.push([void 0,this._references]),0===n.length)return f;let o=new Map;for(let[t,i]of n)for(let n of i){if(!("prefix"in n&&null!=n.prefix&&"url"in n&&null!=n.url)){y(n)&&n.parse(e,o);continue}for(C(n,"plaintext");null!=(r=n.messageRegex.exec(e));)[,,,s]=r,o.set(s,{provider:t,id:s,prefix:n.prefix,url:n.url?.replace(w,s),title:n.title?.replace(w,s),type:n.type,description:n.description?.replace(w,s)})}return o}async getEnrichedAutolinks(e,t){if("string"==typeof e&&(e=this.getAutolinks(e,t)),0===e.size)return;let i=t?.getIntegration();return null==i||(i.maybeConnected??await i.isConnected())||(i=void 0),new Map((0,c.UI)(e,([e,r])=>[e,[t?.provider!=null&&null!=i&&r.provider?.id===i.id&&r.provider?.domain===i.domain?i.getIssueOrPullRequest(r.descriptor??t.provider.repoDesc,e):void 0,r]]))}linkify(e,t,i,r,n,o){let a="plaintext"===t&&null==o;a&&(o=new Map);let l=new Map;for(let i of this._references)this.ensureAutolinkCached(i)&&null!=i.tokenize&&(e=i.tokenize(e,t,l,r,n,o));if(null!=i&&0!==i.length){for(let s of i=[...i].sort((e,t)=>{let i=e.maybeIntegrationConnected,r=t.maybeIntegrationConnected;return i!==r?i?-1:r?1:0:0}))if(null!=s.provider)for(let i of s.provider.autolinks)this.ensureAutolinkCached(i)&&null!=i.tokenize&&(e=i.tokenize(e,t,l,r,n,o))}return 0!==l.size&&(e=e.replace(/(\x00\d+\x00)/g,(e,t)=>l.get(t)??t)),a&&o?.size&&(e+=`
${s.NE.Dash.repeat(2)}
${(0,c.v_)((0,c.UI)(o,([e,t])=>`${(0,d.sC)(e)} ${t}`),"\n")}`),e}ensureAutolinkCached(e){if(y(e))return!0;if(!e.prefix||!e.url)return!1;if(void 0!==e.tokenize||null===e.tokenize)return!0;try{e.tokenize=(t,i,r,o,l,c)=>{let u;switch(i){case"markdown":return C(e,i),t.replace(e.messageMarkdownRegex,(t,i,p,g)=>{let m=(0,h.M)(e.url.replace(w,g)),f="";if(e.title){f=` "${e.title.replace(w,g)}`;let t=o?.get(g)?.[0];if(t?.value!=null){if(t.paused){if(null!=c&&!l?.has(g)){let t=e.description?.replace(w,g);null==t&&(t=`Custom Autolink ${e.prefix}${g}`),u=c.size+1,c.set(u,`[${(0,n.sy)()} ${t} $(loading~spin)](${m}${f}")`)}f+=`
${s.NE.Dash.repeat(2)}
Loading...`}else{let e=t.value,i=(0,d.ry)(e.title.trim()),r=i.replace(/"/g,'\\"');null==c||l?.has(g)||(u=c.size+1,c.set(u,`[${(0,n.sy)(e)} **${i}**](${m}${f}")\\
${s.NE.Space.repeat(5)}${p} ${e.state} ${(0,a.Zh)(e.closedDate??e.date)}`)),f+=`
${s.NE.Dash.repeat(2)}
${r}
${(0,d.kC)(e.state)}, ${(0,a.Zh)(e.closedDate??e.date)}`}}else if(null!=c&&!l?.has(g)){let t=e.description?.replace(w,g);null==t&&(t=`Custom Autolink ${e.prefix}${g}`),u=c.size+1,c.set(u,`[${(0,n.sy)()} ${t}](${m}${f}")`)}f+='"'}let v=`\0${r.size}\0`;return r.set(v,`[${p}](${m}${f})`),`${i}${v}`});case"html":return C(e,i),t.replace(e.messageHtmlRegex,(t,i,p,g)=>{let m=(0,h.M)(e.url.replace(w,g)),f="";if(e.title){f=`"${(0,d.se)(e.title.replace(w,g))}`;let t=o?.get(g)?.[0];if(t?.value!=null){if(t.paused){if(null!=c&&!l?.has(g)){let t=e.description?.replace(w,g);null==t&&(t=`Custom Autolink ${e.prefix}${g}`),u=c.size+1,c.set(u,`<a href="${m}" title=${f}>${(0,n.Ty)()} ${t}</a>`)}f+=`
${s.NE.Dash.repeat(2)}
Loading...`}else{let e=t.value,i=(0,d.se)(e.title.trim()),r=i.replace(/"/g,"&quot;");null==c||l?.has(g)||(u=c.size+1,c.set(u,`<a href="${m}" title=${f}>${(0,n.Ty)(e)} <b>${i}</b></a><br /><span>${s.NE.Space.repeat(5)}${p} ${e.state} ${(0,a.Zh)(e.closedDate??e.date)}</span>`)),f+=`
${s.NE.Dash.repeat(2)}
${r}
${(0,d.kC)(e.state)}, ${(0,a.Zh)(e.closedDate??e.date)}`}}else if(null!=c&&!l?.has(g)){let t=e.description?.replace(w,g);null==t&&(t=`Custom Autolink ${e.prefix}${g}`),u=c.size+1,c.set(u,`<a href="${m}" title=${f}>${(0,n.Ty)()} ${t}</a>`)}f+='"'}let v=`\0${r.size}\0`;return r.set(v,`<a href="${m}" title=${f}>${p}</a>`),`${i}${v}`});default:return C(e,i),t.replace(e.messageRegex,(e,t,i,n)=>{let h=o?.get(n)?.[0];if(h?.value==null)return i;null==c||l?.has(n)||(u=c.size+1,c.set(u,`${i}: ${h.paused?"Loading...":`${h.value.title}  ${s.NE.Dot}  ${(0,d.kC)(h.value.state)}, ${(0,a.Zh)(h.value.closedDate??h.value.date)}`}`));let p=`\0${r.size}\0`;return r.set(p,`${i}${(0,d.sC)(u)}`),`${t}${p}`})}}}catch(t){u.Yd.error(t,`Failed to create autolink generator: prefix=${e.prefix}, url=${e.url}, title=${e.title}`),e.tokenize=null}return!0}}function C(e,t){return"markdown"===t&&null==e.messageMarkdownRegex?e.messageMarkdownRegex=RegExp(`(^|\\s|\\(|\\[|\\{)(${(0,d.yI)((0,d.se)((0,d.ry)(e.prefix)))}(${e.alphanumeric?"\\w":"\\d"}+))\\b`,e.ignoreCase?"gi":"g"):"html"===t&&null==e.messageHtmlRegex?e.messageHtmlRegex=RegExp(`(^|\\s|\\(|\\[|\\{)(${(0,d.yI)((0,d.se)(e.prefix))}(${e.alphanumeric?"\\w":"\\d"}+))\\b`,e.ignoreCase?"gi":"g"):null==e.messageRegex&&(e.messageRegex=RegExp(`(^|\\s|\\(|\\[|\\{)(${(0,d.yI)(e.prefix)}(${e.alphanumeric?"\\w":"\\d"}+))\\b`,e.ignoreCase?"gi":"g")),!0}m([(0,l.fF)({args:{0:"<message>",1:!1}})],b.prototype,"getAutolinks",1),m([(0,l.fF)({args:{0:e=>"string"==typeof e?"<message>":`autolinks=${e.size}`,1:e=>e?.remoteKey}})],b.prototype,"getEnrichedAutolinks",1),m([(0,l.fF)({args:{0:"<text>",2:e=>e?.length,3:e=>e?.size,4:e=>e?.size}})],b.prototype,"linkify",1)},623:(e,t,i)=>{i.d(t,{I:()=>p,f:()=>g});var r=i(9496),s=i(5148),n=i(2061),o=i(2185),a=i(9796),l=i(3105),h=i(4336),c=i(3700),u=i(2509),d=i(2022);let p={gutterBlameAnnotation:r.window.createTextEditorDecorationType({rangeBehavior:r.DecorationRangeBehavior.ClosedOpen,textDecoration:"none"}),gutterBlameHighlight:void 0,changesLineChangedAnnotation:void 0,changesLineAddedAnnotation:void 0,changesLineDeletedAnnotation:void 0};class g{constructor(e){this.container=e,this._disposable=r.Disposable.from((0,o.IH)(e.onReady)(this.onReady,this),s.D.onDidChange(this.onConfigurationChanged,this),r.window.onDidChangeActiveColorTheme(this.onThemeChanged,this)),this._toggleModes=new Map}_onDidToggleAnnotations=new r.EventEmitter;get onDidToggleAnnotations(){return this._onDidToggleAnnotations.event}_annotationsDisposable;_annotationProviders=new Map;_disposable;_editor;_keyboardScope=void 0;_toggleModes;_windowAnnotationType=void 0;dispose(){this.clearAll(),p.gutterBlameAnnotation?.dispose(),p.gutterBlameHighlight?.dispose(),p.changesLineChangedAnnotation?.dispose(),p.changesLineAddedAnnotation?.dispose(),p.changesLineDeletedAnnotation?.dispose(),this._annotationsDisposable?.dispose(),this._disposable?.dispose()}onReady(){this.onConfigurationChanged()}onConfigurationChanged(e){let t;let i=null==e;if(s.D.changed(e,["blame.highlight","changes.locations"])&&this.updateDecorations(!1),s.D.changed(e,"blame.toggleMode")&&(t=s.D.get("blame.toggleMode"),this._toggleModes.set("blame",t),i||"file"!==t||this.clearAll()),s.D.changed(e,"changes.toggleMode")&&(t=s.D.get("changes.toggleMode"),this._toggleModes.set("changes",t),i||"file"!==t||this.clearAll()),s.D.changed(e,"heatmap.toggleMode")&&(t=s.D.get("heatmap.toggleMode"),this._toggleModes.set("heatmap",t),i||"file"!==t||this.clearAll()),!i&&s.D.changed(e,["blame","changes","heatmap","hovers","defaultDateFormat","defaultDateSource","defaultDateStyle","defaultGravatarsStyle"]))for(let e of this._annotationProviders.values())null!=e&&this.show(e.editor,e.annotationType??"blame")}onThemeChanged(e){this.updateDecorations(!0)}async onActiveTextEditorChanged(e){if(null!=e&&!(0,u.PH)(e))return;if(this._editor=e,this.isInWindowToggle()){await this.show(e,this._windowAnnotationType);return}let t=this.getProvider(e);null==t?((0,n.v)("gitlens:annotationStatus",void 0),this.detachKeyboardHook()):((0,n.v)("gitlens:annotationStatus",t.status),this.attachKeyboardHook())}onBlameStateChanged(e){if(e.blameable)return;let t=r.window.activeTextEditor;null!=t&&this.clear(t,"BlameabilityChanged")}onDirtyStateChanged(e){for(let[t,i]of this._annotationProviders)e.document.is(i.document)&&this.clearCore(t,"DocumentChanged")}onTextDocumentClosed(e){if(this.container.git.isTrackable(e.uri))for(let[t,i]of this._annotationProviders)i.document===e&&this.clearCore(t,"DocumentClosed")}onTextEditorViewColumnChanged(e){let t=this.getProvider(e.textEditor);if(null==t){let t=(0,l.sE)(this._annotationProviders.values(),t=>t.editor.document===e.textEditor.document);if(null==t)return;this.clearCore(t.correlationKey,"ColumnChanged");return}t.restore(e.textEditor)}onVisibleTextEditorsChanged(e){for(let t of e)this.getProvider(t)?.restore(t)}isInWindowToggle(){return"window"===this.getToggleMode(this._windowAnnotationType)}getToggleMode(e){return null==e?"file":this._toggleModes.get(e)??"file"}clear(e,t="User"){return this.isInWindowToggle()?this.clearAll():this.clearCore((0,d.m)(e),t)}async clearAll(){for(let[e]of(this._windowAnnotationType=void 0,this._annotationProviders))await this.clearCore(e,"Disposing")}async getAnnotationType(e){let t=this.getProvider(e);if(null==t)return;let i=await this.container.tracker.get(e.document);if(null!=i&&i.isBlameable)return t.annotationType}getProvider(e){if(e?.document!=null)return this._annotationProviders.get((0,d.m)(e))}async show(e,t,i){if("window"===this.getToggleMode(t)){let i=null==this._windowAnnotationType,s=!i&&this._windowAnnotationType!==t;if(this._windowAnnotationType=t,s&&(await this.clearAll(),i=!0),i)for(let i of r.window.visibleTextEditors)i!==e&&this.show(i,t)}if(null==e||(this._editor=e,!(await this.container.tracker.getOrAdd(e.document)).isBlameable))return!1;let s=this.getProvider(e);return s?.annotationType===t?(await s.provideAnnotation(i),await s.selection(i?.selection),!0):null!=await r.window.withProgress({location:r.ProgressLocation.Window},async r=>{await (0,n.v)("gitlens:annotationStatus","computing");let o=this.showAnnotationsCore(s,e,t,i,r),a=await o;return e===this._editor&&await (0,n.v)("gitlens:annotationStatus",a?.status),o})}async toggle(e,t,i,r){if(null!=e&&"file"===this._toggleModes.get(t)){let i=await this.container.tracker.getOrAdd(e.document);if("changes"===t&&!i.isTracked||!i.isBlameable)return!1}let s=this.getProvider(e);if(null==s)return this.show(e,t,i);let n=s.annotationType!==t||s.mustReopen(i);return!0===r&&!n||(this.isInWindowToggle()?await this.clearAll():await this.clearCore(s.correlationKey,"User"),!!n&&this.show(e,t,i))}async attachKeyboardHook(){null==this._keyboardScope&&(this._keyboardScope=await this.container.keyboard.beginScope({escape:{onDidPressKey:async()=>{let e=this._editor;null!=e&&await this.clear(e,"User")}}}))}async clearCore(e,t){let i=this._annotationProviders.get(e);null!=i&&(h.Yd.log(`${t}:`,`Clear annotations for ${e}`),this._annotationProviders.delete(e),i.dispose(),(0===this._annotationProviders.size||e===(0,d.m)(this._editor))&&(await (0,n.v)("gitlens:annotationStatus",void 0),await this.detachKeyboardHook()),0===this._annotationProviders.size&&(h.Yd.log("Remove all listener registrations for annotations"),this._annotationsDisposable?.dispose(),this._annotationsDisposable=void 0),this._onDidToggleAnnotations.fire())}async detachKeyboardHook(){null!=this._keyboardScope&&(await this._keyboardScope.dispose(),this._keyboardScope=void 0)}async showAnnotationsCore(e,t,s,n,o){let l;if(null!=o){let e="annotations";switch(s){case"blame":e="blame annotations";break;case"changes":e="changes annotations";break;case"heatmap":e="heatmap annotations"}o.report({message:`Computing ${e} for ${(0,c.EZ)(t.document.fileName)}`})}await this.attachKeyboardHook();let u=await this.container.tracker.getOrAdd(t.document);switch(s){case"blame":{let{GutterBlameAnnotationProvider:e}=await i.e(519).then(i.bind(i,4455));l=new e(t,u,this.container);break}case"changes":{let{GutterChangesAnnotationProvider:e}=await i.e(817).then(i.bind(i,34));l=new e(t,u,this.container);break}case"heatmap":{let{GutterHeatmapBlameAnnotationProvider:e}=await i.e(278).then(i.bind(i,79));l=new e(t,u,this.container)}}if(null!=l&&await l.validate()){if(null!=e&&await this.clearCore(e.correlationKey,"User"),null==this._annotationsDisposable&&0===this._annotationProviders.size&&(h.Yd.log("Add listener registrations for annotations"),this._annotationsDisposable=r.Disposable.from(r.window.onDidChangeActiveTextEditor((0,a.Ds)(this.onActiveTextEditorChanged,50),this),r.window.onDidChangeTextEditorViewColumn(this.onTextEditorViewColumnChanged,this),r.window.onDidChangeVisibleTextEditors((0,a.Ds)(this.onVisibleTextEditorsChanged,50),this),r.workspace.onDidCloseTextDocument(this.onTextDocumentClosed,this),this.container.tracker.onDidChangeBlameState(this.onBlameStateChanged,this),this.container.tracker.onDidChangeDirtyState(this.onDirtyStateChanged,this))),this._annotationProviders.set(l.correlationKey,l),await l.provideAnnotation(n))return this._onDidToggleAnnotations.fire(),l;await this.clearCore(l.correlationKey,"Disposing")}}updateDecorations(e){let t=e?Object.entries(p):void 0;if(this.updateHighlightDecoration(),this.updateChangedDecorations(),!e)return;let i=new Map;for(let[e,r]of t)null!=r&&r!==(p[e]??null)&&i.set(r,p[e]??null);if(0!==i.size)for(let e of r.window.visibleTextEditors)this.getProvider(e)?.refresh(i)}updateChangedDecorations(){let e,t,i;p.changesLineAddedAnnotation?.dispose(),p.changesLineChangedAnnotation?.dispose(),p.changesLineDeletedAnnotation?.dispose();let n=s.D.get("changes.locations");switch(r.window.activeColorTheme.kind){case r.ColorThemeKind.Light:e=[72,152,93],t=[32,144,211],i=[229,20,0];break;case r.ColorThemeKind.HighContrast:default:e=[72,126,2],t=[27,129,168],i=[241,76,76]}p.changesLineAddedAnnotation=r.window.createTextEditorDecorationType({backgroundColor:n.includes("line")?`rgba(${e.join(",")},0.4)`:void 0,isWholeLine:!!n.includes("line")||void 0,gutterIconPath:n.includes("gutter")?r.Uri.parse(`data:image/svg+xml,${encodeURIComponent(`<svg xmlns='http://www.w3.org/2000/svg' width='18' height='18' viewBox='0 0 18 18'><rect fill='rgb(${e.join(",")})' x='15' y='0' width='3' height='18'/></svg>`)}`):void 0,gutterIconSize:"contain",overviewRulerLane:r.OverviewRulerLane.Left,overviewRulerColor:n.includes("overview")?new r.ThemeColor("editorOverviewRuler.addedForeground"):void 0}),p.changesLineChangedAnnotation=r.window.createTextEditorDecorationType({backgroundColor:n.includes("line")?`rgba(${t.join(",")},0.4)`:void 0,isWholeLine:!!n.includes("line")||void 0,gutterIconPath:n.includes("gutter")?r.Uri.parse(`data:image/svg+xml,${encodeURIComponent(`<svg xmlns='http://www.w3.org/2000/svg' width='18' height='18' viewBox='0 0 18 18'><rect fill='rgb(${t.join(",")})' x='15' y='0' width='3' height='18'/></svg>`)}`):void 0,gutterIconSize:"contain",overviewRulerLane:r.OverviewRulerLane.Left,overviewRulerColor:n.includes("overview")?new r.ThemeColor("editorOverviewRuler.modifiedForeground"):void 0}),p.changesLineDeletedAnnotation=r.window.createTextEditorDecorationType({gutterIconPath:n.includes("gutter")?r.Uri.parse(`data:image/svg+xml,${encodeURIComponent(`<svg xmlns='http://www.w3.org/2000/svg' width='18' height='18' viewBox='0 0 18 18'><polygon fill='rgb(${i.join(",")})' points='13,10 13,18 17,14'/></svg>`)}`):void 0,gutterIconSize:"contain",overviewRulerLane:r.OverviewRulerLane.Left,overviewRulerColor:n.includes("overview")?new r.ThemeColor("editorOverviewRuler.deletedForeground"):void 0})}updateHighlightDecoration(){p.gutterBlameHighlight?.dispose(),p.gutterBlameHighlight=void 0;let e=s.D.get("blame.highlight");if(e.enabled){let{locations:t}=e,i=t.includes("gutter")?r.Uri.parse(`data:image/svg+xml,${encodeURIComponent("<svg xmlns='http://www.w3.org/2000/svg' width='18' height='18' viewBox='0 0 18 18'><rect fill='#00bcf2' fill-opacity='0.6' x='7' y='0' width='3' height='18'/></svg>")}`):void 0;p.gutterBlameHighlight=r.window.createTextEditorDecorationType({gutterIconPath:i,gutterIconSize:"contain",isWholeLine:!0,overviewRulerLane:r.OverviewRulerLane.Right,backgroundColor:t.includes("line")?new r.ThemeColor("gitlens.lineHighlightBackgroundColor"):void 0,overviewRulerColor:t.includes("overview")?new r.ThemeColor("gitlens.lineHighlightOverviewRulerColor"):void 0})}}}},8294:(e,t,i)=>{i.d(t,{AR:()=>v,vj:()=>p});var r,s=i(9496),n=i(5255),o=i(9529),a=i(5148),l=i(2061),h=i(4627),c=i(2509);let u=["createPullRequest","openPullRequest","hover.commands"];var d=((r=d||{})[r.BuiltIn=0]="BuiltIn",r[r.BuiltInPartner=1]="BuiltInPartner",r[r.Partner=2]="Partner",r[r.BuiltInPartnerInstaller=3]="BuiltInPartnerInstaller",r);let p="Built In";class g{constructor(e,t){this.runner=e,this._label="string"==typeof e.label?e.label:e.label(t)}_label;get label(){return this._label}get detail(){return this.runner.name}}class m{runner;get label(){return"No actions were found"}get detail(){}}let f=0;class w{constructor(e,t,i){this.type=e,this.runner=t,this.unregister=i,this.id=(1073741824===f?f=1:f++,f)}id;dispose(){this.unregister()}get name(){return this.runner.name}get label(){return this.runner.label}get order(){switch(this.type){case 0:return 0;case 1:return 1;case 2:return this.partnerId?1:2;case 3:return 3;default:return 100}}get partnerId(){return this.runner.partnerId}run(e){return this.runner.run(e)}}class v{constructor(e){this.container=e;let t=[a.D.onDidChange(e=>{a.D.changed(e,"partners")&&this._updateAllContextKeys()})];for(let e of u)t.push((0,o.xR)(`${n.Gh.ActionPrefix}${e}`,(e,t)=>this.run(e,t)));this._disposable=s.Disposable.from(...t)}_onDidChange=new s.EventEmitter;get onDidChange(){return this._onDidChange.event}_actionRunners=new Map;_disposable;dispose(){for(let e of(this._disposable.dispose(),this._actionRunners.values()))for(let t of e)t.dispose();this._actionRunners.clear()}count(e){return this.get(e)?.length??0}get(e){return function(e,t){if(null!=t&&0!==t.length)return null==e?t:t.filter(t=>null==t.partnerId||null!=t.partnerId&&e[t.partnerId]?.enabled!==!1)}(a.D.get("partners"),this._actionRunners.get(e))}has(e){return this.count(e)>0}register(e,t,i=2){let r=this._actionRunners.get(e);null==r&&(r=[],this._actionRunners.set(e,r));let s=e=>{this._updateContextKeys(e),this._onDidChange.fire(e)},n=this._actionRunners,o=new w(i,t,function(){if(1===r.length)n.delete(e),s(e);else{let e=r.indexOf(this);-1!==e&&r.splice(e,1)}});return r.push(o),s(e),{dispose:()=>o.dispose()}}registerBuiltIn(e,t){return this.register(e,{...t,partnerId:void 0,name:p},0)}registerBuiltInPartner(e,t,i){return this.register(t,{...i,partnerId:e},1)}registerBuiltInPartnerInstaller(e,t,i){return this.register(t,{...i,partnerId:e,name:`${i.name} (Not Installed)`},3)}async run(e,t){let i,r=this.get(e.type);if(null!=r&&0!==r.length&&(null!=t&&(r=r.filter(e=>e.id===t)),0!==r.length)){if(r.length>1||r.every(e=>0!==e.type)){let t=r.sort((e,t)=>e.order-t.order||(0,h.dm)(e.name,t.name)).map(t=>new g(t,e));0===t.length&&t.push(new m);let n=s.window.createQuickPick();n.ignoreFocusOut=(0,c.hE)();let o=[];try{let r=await new Promise(i=>{let r,s;switch(o.push(n.onDidHide(()=>i(void 0)),n.onDidAccept(()=>{0!==n.activeItems.length&&i(n.activeItems[0])})),e.type){case"createPullRequest":r="Create Pull Request",s="Choose how to create a pull request";break;case"openPullRequest":r="Open Pull Request",s="Choose how to open the pull request";break;case"hover.commands":r="Need Help or Want to Collaborate?",s="Choose what you would like to do"}n.title=r,n.placeholder=s,n.matchOnDetail=!0,n.items=t,n.show()});if(null==r)return;i=r.runner}finally{n.dispose(),o.forEach(e=>void e.dispose())}}else[i]=r;await i?.run(e)}}async _updateContextKeys(e){await (0,l.v)(`gitlens:action:${e}`,this.count(e))}async _updateAllContextKeys(){for(let e of u)await this._updateContextKeys(e)}}},8388:(e,t,i)=>{let r,s;i.d(t,{E3:()=>I,GV:()=>S,TU:()=>_,Wr:()=>F,cL:()=>f,oP:()=>b,x4:()=>C});var n=i(9496),o=i(3951),a=i(5140),l=i(2075),h=i(5148),c=i(2061),u=i(9796),d=i(3105),p=i(4627);let g=new Map,m=new n.EventEmitter;m.event((0,u.Ds)(()=>{let e=null!=r?[...(0,d.DZ)(r,([e,t])=>null!=t.uri?[e,{uri:t.uri.toString(),timestamp:t.timestamp}]:void 0)]:void 0;a.W.instance.storage.store("avatars",e)},1e3));let f=m.event,w="00000000000000000000000000000000",v=new Map,y=[6048e5,6e4,3e5,6e5,36e5,864e5,6048e5];function b(e,t,i){return A(e,t,i)}function C(e,t){return A(e,void 0,{...t,cached:!0})}function A(e,t,i){D(r);let s=(i?.size??16)*2;if(!e){let e=P(`${w}:${s}`,void 0,s,w,i?.defaultStyle);return e.uri??e.fallback}let n=(0,o.FB)(e.trim().toLowerCase()),a=`${n}:${s}`,l=P(a,e,s,n,i?.defaultStyle);if(null!=l.uri)return l.uri;if(!i?.cached&&null!=t&&(0,c.fw)("gitlens:hasConnectedRemotes")){let i=g.get(a);return null==i&&Date.now()>=l.timestamp+y[Math.min(l.retries,y.length-1)]&&(i=R(l,a,e,t,{size:s}).then(e=>e??l.uri??l.fallback),g.set(a,i.finally(()=>g.delete(a)))),i??l.fallback}return i?.cached?l.uri:l.uri??l.fallback}function P(e,t,i,s,o){let a=r.get(e);return null==a?(a={uri:null!=t&&0!==t.length?function(e,t=16){let i=(0,l.a)(e);if(null!=i&&(0,p.qq)(i.authority,"github.com"))return n.Uri.parse(`https://avatars.githubusercontent.com/${i.userId?`u/${i.userId}`:i.login}?size=${t}`)}(t,i):void 0,fallback:k(s,i,o),timestamp:0,retries:0},r.set(e,a)):null==a.fallback&&(a.fallback=k(s,i,o)),a}function D(e){if(null==e){let e=a.W.instance.storage.get("avatars")?.map(([e,t])=>[e,{uri:n.Uri.parse(t.uri),timestamp:t.timestamp,retries:0}]);r=new Map(e)}}function k(e,t,i){return n.Uri.parse(`https://www.gravatar.com/avatar/${e}?s=${t}&d=${i??(null==s&&(s=h.D.get("defaultGravatarsStyle",void 0,"robohash")),s)}`)}function S(e,t,i){return k((0,o.FB)(e.trim().toLowerCase()),t,i)}async function R(e,t,i,s,{size:l=16}={}){D(r);try{let t;if("string"!=typeof s){let e=await a.W.instance.git.getBestRemoteWithIntegration(s.repoPath);if(e?.hasIntegration()){let i=e.getIntegration();t=await i?.getAccountForCommit(e.provider.repoDesc,s.ref,{avatarSize:l})}}if(t?.avatarUrl==null){e.uri=void 0,e.timestamp=1073741824,e.retries=0;return}return e.uri=n.Uri.parse(t.avatarUrl),e.timestamp=Date.now(),e.retries=0,null!=t.email&&(0,p.qq)(i,t.email)&&r.set(`${(0,o.FB)(t.email.trim().toLowerCase())}:${l}`,{...e}),m.fire({email:i}),e.uri}catch{e.uri=void 0,e.timestamp=Date.now(),e.retries++;return}}let $=new Map([["online","#28ca42"],["away","#cecece"],["busy","#ca5628"],["dnd","#ca5628"],["offline","#cecece"]]);function _(e){let t=v.get(e);if(null==t){let i=(0,p.US)(`<?xml version="1.0" encoding="utf-8"?>
<svg xmlns="http://www.w3.org/2000/svg" width="4" height="16" viewBox="0 0 4 16">
	<circle cx="2" cy="14" r="2" fill="${$.get(e)}"/>
</svg>`);t=encodeURI(`data:image/svg+xml;base64,${i}`),v.set(e,t)}return t}function I(e){switch(e){case"all":a.W.instance.storage.delete("avatars"),r?.clear(),g.clear();break;case"failed":for(let e of r?.values()??[])null==e.uri&&(e.timestamp=0,e.retries=0);break;case"fallback":for(let e of r?.values()??[])e.fallback=void 0}}function F(e){s=e,I("fallback")}},7139:(e,t,i)=>{let r;i.d(t,{Bu:()=>I,C$:()=>S,DW:()=>k,E9:()=>C,F4:()=>D,Lk:()=>W,Mg:()=>b,O$:()=>P,P:()=>E,Qo:()=>v,SX:()=>f,WO:()=>F,_5:()=>_,_l:()=>M,d$:()=>A,en:()=>y,jT:()=>w,l7:()=>$,l8:()=>U,mY:()=>O,pT:()=>R,pu:()=>B});var s=i(9496),n=i(5367),o=i(6450),a=i(1719),l=i(3050),h=i(3646),c=i(9502),u=i(1907),d=i(9529),p=i(9796),g=i(7707),m=i(2610);function f(e,t){return t?.document?.uri??e}function w(e){return"timeline-item:git"===e.type}function v(e){return"viewItem"===e.type&&(0,n.BF)(e.node.branch)}function y(e){return"viewItem"===e.type&&(0,o.f_)(e.node.commit)}function b(e){return"viewItem"===e.type&&a.V.is(e.node.contributor)}function C(e){if("viewItem"!==e.type)return!1;let t=e.node;return null!=t.file&&(null!=t.file.repoPath||null!=t.repoPath)}function A(e){if("viewItem"!==e.type)return!1;let t=e.node;return null!=t.file&&(0,o.f_)(t.commit)&&(null!=t.file.repoPath||null!=t.repoPath)}function P(e){if("viewItem"!==e.type)return!1;let t=e.node;return null!=t.file&&null!=t.ref1&&null!=t.ref2&&(null!=t.file.repoPath||null!=t.repoPath)}function D(e){return"viewItem"===e.type&&"string"==typeof e.node.compareRef?.ref&&"string"==typeof e.node.compareWithRef?.ref}function k(e){return"viewItem"===e.type&&e.node instanceof m.b&&e.node instanceof m.R}function S(e){return"viewItem"===e.type&&l.ss.is(e.node.remote)}function R(e){return"viewItem"===e.type&&e.node.repo instanceof h._j}function $(e){return"viewItem"===e.type&&"string"==typeof e.node.repoPath}function _(e){return"viewItem"===e.type&&(0,c.YR)(e.node.tag)}function I(e){if("viewItem"!==e.type)return!1;let t=e.node.workspace;return t instanceof u.CH||t instanceof u.qP}function F(e){return null!=e&&null!=e.id&&null!=e.rootUri&&null!=e.inputBox&&null!=e.statusBarCommands}function x(e){return null!=e&&null!=e.id&&null!=e.label&&null!=e.resourceStates&&Array.isArray(e.resourceStates)}function T(e){return null!=e&&null!=e.resourceUri}class O{static getMarkdownCommandArgsCore(e,t){return`command:${e}?${encodeURIComponent(JSON.stringify(t)).replace(/([()])/g,"\\$1")}`}contextParsingOptions={expectsEditor:!1};_disposable;constructor(e){if("string"==typeof e){this._disposable=(0,d.xR)(e,(...t)=>this._execute(e,...t),this);return}let t=e.map(e=>(0,d.xR)(e,(...t)=>this._execute(e,...t),this));this._disposable=s.Disposable.from(...t)}dispose(){this._disposable.dispose()}preExecute(e,...t){return this.execute(...t)}_execute(e,...t){let[i,r]=E(e,{...this.contextParsingOptions},...t);return Array.isArray(i)?(0,p.df)(this.preExecute,i.map(e=>[e,...r]),this):this.preExecute(i,...r)}}function E(e,t,...i){var r;let n;let o=i[0];if(t?.expectsEditor){if((null==o||null!=o.id&&o.document?.uri!=null)&&(n=o,o=(i=i.slice(1))[0]),i.length>0&&(null==o||o instanceof s.Uri)){let[t,...r]=i;if(null!=t){null==n&&(t.toString()===s.window.activeTextEditor?.document.uri.toString()||e.endsWith("InDiffLeft"))&&(n=s.window.activeTextEditor);let i=r[0];return null!=i&&Array.isArray(i)&&0!==i.length&&i[0]instanceof s.Uri?[{command:e,type:"uris",editor:n,uri:t,uris:i},r.slice(1)]:[{command:e,type:"uri",editor:n,uri:t},r]}i=i.slice(1)}else if(null==n){if(null!=o&&"object"==typeof o&&"lineNumber"in o&&"uri"in o){let[,...t]=i;return[{command:e,type:"editorLine",editor:void 0,line:o.lineNumber-1,uri:o.uri},t]}n=s.window.activeTextEditor}}if(o instanceof g.Re){let[t,...r]=i;if(Array.isArray(o=r[0])&&o[0]instanceof g.Re){let i;[i,...r]=r;let s=[];for(let r of i)r?.constructor===t.constructor&&s.push({command:e,type:"viewItem",node:r,uri:r.uri});return[s,r]}return[{command:e,type:"viewItem",node:t,uri:t.uri},r]}if(T(o)){let t=[],r=0;for(let e of i){if(!T(e))break;r++,t.push(e)}return[{command:e,type:"scm-states",scmResourceStates:t,uri:t[0].resourceUri},i.slice(r)]}if(x(o)){let t=[],r=0;for(let e of i){if(!x(e))break;r++,t.push(e)}return[{command:e,type:"scm-groups",scmResourceGroups:t},i.slice(r)]}if(null!=(r=o)&&null!=r&&null!=r.timestamp&&null!=r.label&&null!=r.ref&&null!=r.previousRef&&null!=r.message){let[t,r,...s]=i;return[{command:e,type:"timeline-item:git",item:t,uri:r},s]}if(F(o)){let[t,...r]=i;return[{command:e,type:"scm",scm:t},r]}return[{command:e,type:"unknown",editor:n,uri:n?.document.uri},i]}class B extends O{contextParsingOptions={expectsEditor:!0};preExecute(e,...t){return this.execute(e.editor,e.uri,...t)}_execute(e,...t){return super._execute(e,void 0,...t)}}function U(){return r}class W extends B{_execute(e,...t){return r={command:e,args:t},super._execute(e,...t)}}class M{_disposable;constructor(e){Array.isArray(e)||(e=[e]);let t=[];for(let i of e)t.push(s.commands.registerTextEditorCommand(i,(e,t,...r)=>this.executeCore(i,e,t,...r),this));this._disposable=s.Disposable.from(...t)}dispose(){this._disposable.dispose()}executeCore(e,t,i,...r){return this.execute(t,i,...r)}}},1848:(e,t,i)=>{i.d(t,{V:()=>m});var r=i(9496),s=i(5255),n=i(6450),o=i(439),a=i(4321),l=i(7925),h=i(9529),c=i(4336),u=i(3700),d=i(7139),p=Object.defineProperty,g=Object.getOwnPropertyDescriptor;let m=class extends d.mY{constructor(e){super(s.Gh.DiffWith),this.container=e}static getMarkdownCommandArgs(e,t){let i;if((0,n.f_)(e)){if(null==e.file||null==e.unresolvedPreviousSha)throw Error("Commit has no file");i=e.isUncommitted?{repoPath:e.repoPath,lhs:{sha:"HEAD",uri:e.file.uri},rhs:{sha:"",uri:e.file.uri},line:t}:{repoPath:e.repoPath,lhs:{sha:e.unresolvedPreviousSha,uri:e.file.originalUri??e.file.uri},rhs:{sha:e.sha,uri:e.file.uri},line:t}}else i=e;return super.getMarkdownCommandArgsCore(s.Gh.DiffWith,i)}async execute(e){if(e?.lhs!=null&&e?.rhs!=null&&null!=(e={...e,lhs:{...e.lhs},rhs:{...e.rhs},showOptions:null==e.showOptions?void 0:{...e.showOptions}}).repoPath)try{let t=e.lhs.sha,i=e.rhs.sha;if([e.lhs.sha,e.rhs.sha]=await Promise.all([await this.container.git.resolveReference(e.repoPath,e.lhs.sha,e.lhs.uri,{timeout:(0,a.yo)(e.lhs.sha)?100:void 0}),await this.container.git.resolveReference(e.repoPath,e.rhs.sha,e.rhs.uri,{timeout:(0,a.yo)(e.rhs.sha)?100:void 0})]),e.lhs.sha!==o.Ii&&(t=e.lhs.sha),e.rhs.sha&&e.rhs.sha!==o.Ii){let t=await this.container.git.getFileStatusForCommit(e.repoPath,e.rhs.uri,e.rhs.sha);t?.status==="D"?e.rhs.sha=o.Ii:i=e.rhs.sha,t?.status==="A"&&e.lhs.sha.endsWith("^")&&(e.lhs.sha=o.Ii)}let[n,l]=await Promise.all([this.container.git.getBestRevisionUri(e.repoPath,e.lhs.uri.fsPath,e.lhs.sha),this.container.git.getBestRevisionUri(e.repoPath,e.rhs.uri.fsPath,e.rhs.sha)]),c=(0,a.zL)(i,{strings:{uncommitted:"Working Tree"}});null==l?c=(0,a.l3)(e.rhs.sha)?"deleted":0===c.length&&e.rhs.sha===o.Ii?"not in Working Tree":`deleted${0===c.length?"":` in ${c}`}`:null==n&&(c=`added${0===c.length?"":` in ${c}`}`);let d=e.lhs.sha!==o.Ii?(0,a.zL)(t):"";null==n&&0===e.rhs.sha.length&&(null!=l?(d=0===d.length?"":`not in ${d}`,c=""):d=`deleted${0===d.length?"":` in ${d}`}`),null==e.lhs.title&&(null!=n||0!==d.length)&&(e.lhs.title=`${(0,u.EZ)(e.lhs.uri.fsPath)}${d?` (${d})`:""}`),null==e.rhs.title&&(e.rhs.title=`${(0,u.EZ)(e.rhs.uri.fsPath)}${c?` (${c})`:""}`);let p=null!=e.lhs.title&&null!=e.rhs.title?`${e.lhs.title} ${s.NE.ArrowLeftRightLong} ${e.rhs.title}`:e.lhs.title??e.rhs.title;null==e.showOptions&&(e.showOptions={}),null==e.showOptions.viewColumn&&(e.showOptions.viewColumn=r.ViewColumn.Active),null!=e.line&&0!==e.line&&(e.showOptions.selection=new r.Range(e.line,0,e.line,0)),await (0,h.dO)("vscode.diff",n??this.container.git.getRevisionUri(o.Ii,e.lhs.uri.fsPath,e.repoPath),l??this.container.git.getRevisionUri(o.Ii,e.rhs.uri.fsPath,e.repoPath),p,e.showOptions)}catch(e){c.Yd.error(e,"DiffWithCommand","getVersionedFile"),(0,l.W8)("Unable to open compare")}}};m=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?g(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&p(t,i,n),n})([(0,h.WD)()],m)},2967:(e,t,i)=>{i.d(t,{K:()=>eP,I:()=>eA});var r=i(5148),s=i(2061),n=i(9496),o=i(4321),a=i(3646);function l(e,t,i,r){return{...i,item:t,picked:void 0===t?0===e.length:Array.isArray(t)?0===t.length?0===e.length:t.every(t=>e.includes(t)):e.includes(t),context:r}}var h=i(4627),c=i(4239),u=i(847);let d=new Map([["create","Create"],["delete","Delete"],["rename","Rename"]]);function p(e,t){return null==t?e:`${d.get(t)} ${e}`}class g extends c.tR{subcommand;constructor(e,t){super(e,"branch","branch","Branch",{description:"create, rename, or delete branches"});let i=0;if(t?.state?.subcommand!=null)switch(i++,t?.state.subcommand){case"create":case"rename":null!=t.state.reference&&i++,null!=t.state.name&&i++;break;case"delete":null!=t.state.references&&(!Array.isArray(t.state.references)||0!==t.state.references.length)&&i++}t?.state?.repo!=null&&i++,this.initialState={counter:i,confirm:t?.confirm,...t?.state}}get canConfirm(){return null!=this.subcommand}get canSkipConfirm(){return"delete"!==this.subcommand&&"rename"!==this.subcommand&&super.canSkipConfirm}get skipConfirmKey(){return`${this.key}${null==this.subcommand?"":`-${this.subcommand}`}:${this.pickedVia}`}async *steps(e){let t={associatedView:this.container.branchesView,repos:this.container.git.openRepositories,showTags:!1,title:this.title},i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.subcommand){this.subcommand=void 0;let t=yield*this.pickSubcommandStep(e);if(t===c.Vd)break;e.subcommand=t}if(this.subcommand=e.subcommand,t.title=p("delete"===e.subcommand?"Branches":this.title,e.subcommand),e.counter<2||null==e.repo||"string"==typeof e.repo){if(i=!1,1===t.repos.length)i=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{let i=yield*(0,u.lA)(e,t);if(i===c.Vd)continue;e.repo=i}}switch(e.subcommand){case"create":!function(e){if(!(e.repo instanceof a._j)||"create"!==e.subcommand)throw Error("Missing repository")}(e),yield*this.createCommandSteps(e,t),e.name=void 0;break;case"delete":!function(e){if(!(e.repo instanceof a._j)||"delete"!==e.subcommand)throw Error("Missing repository")}(e),yield*this.deleteCommandSteps(e,t);break;case"rename":!function(e){if(!(e.repo instanceof a._j)||"rename"!==e.subcommand)throw Error("Missing repository")}(e),yield*this.renameCommandSteps(e,t),e.name=void 0;break;default:(0,c.uZ)(e)}i&&e.counter--}return e.counter<0?c.Vd:void 0}*pickSubcommandStep(e){let t=(0,c.xf)({title:this.title,placeholder:`Choose a ${this.label} command`,items:[{label:"create",description:"creates a new branch",picked:"create"===e.subcommand,item:"create"},{label:"delete",description:"deletes the specified branches",picked:"delete"===e.subcommand,item:"delete"},{label:"rename",description:"renames the specified branch",picked:"rename"===e.subcommand,item:"rename"}],buttons:[n.QuickInputButtons.Back]}),i=yield t;return(0,c.i9)(t,e,i)?i[0].item:c.Vd}async *createCommandSteps(e,t){for(null==e.flags&&(e.flags=[]);this.canStepsContinue(e);){if(e.counter<3||null==e.reference){let i=yield*(0,u.Yv)(e,t,{placeholder:e=>`Choose a branch${e.showTags?" or tag":""} to create the new branch from`,picked:e.reference?.ref??(await e.repo.getBranch())?.ref,titleContext:" from",value:(0,o.FT)(e.reference)?e.reference.ref:void 0});if(i===c.Vd)break;e.reference=i}if(e.counter<4||null==e.name){let i=yield*(0,u.f6)(e,t,{placeholder:"Please provide a name for the new branch",titleContext:` from ${(0,o.Wh)(e.reference,{capitalize:!0,icon:!1,label:"branch"!==e.reference.refType})}`,value:e.name??(0,o.Av)(e.reference)});if(i===c.Vd)continue;e.name=i}if(this.confirm(e.confirm)){let i=yield*this.createCommandConfirmStep(e,t);if(i===c.Vd)continue;e.flags=i}(0,c.uZ)(e),e.flags.includes("--switch")?await e.repo.switch(e.reference.ref,{createBranch:e.name}):e.repo.branch(...e.flags,e.name,e.reference.ref)}}*createCommandConfirmStep(e,t){let i=(0,c.Tv)((0,u.C8)(`Confirm ${t.title}`,e,t),[l(e.flags,[],{label:t.title,detail:`Will create a new branch named ${e.name} from ${(0,o.Wh)(e.reference)}`}),l(e.flags,["--switch"],{label:`${t.title} and Switch`,description:"--switch",detail:`Will create and switch to a new branch named ${e.name} from ${(0,o.Wh)(e.reference)}`})],t),r=yield i;return(0,c.i9)(i,e,r)?r[0].item:c.Vd}async *deleteCommandSteps(e,t){for(null==e.flags&&(e.flags=[]);this.canStepsContinue(e);){if(null==e.references||Array.isArray(e.references)||(e.references=[e.references]),e.counter<3||null==e.references||Array.isArray(e.references)&&0===e.references.length){t.title=p("Branches",e.subcommand);let i=yield*(0,u.FO)(e,t,{filter:e=>!e.current,picked:e.references?.map(e=>e.ref),placeholder:"Choose branches to delete",sort:{current:!1,missingUpstream:!0}});if(i===c.Vd)break;e.references=i}t.title=p((0,h._6)("Branch",e.references.length,{only:!0,plural:"Branches"}),e.subcommand),function(e){if(!Array.isArray(e.references))throw Error("Missing branches")}(e);let i=yield*this.deleteCommandConfirmStep(e,t);i!==c.Vd&&(e.flags=i,(0,c.uZ)(e),e.repo.branchDelete(e.references,{force:e.flags.includes("--force"),remote:e.flags.includes("--remotes")}))}}*deleteCommandConfirmStep(e,t){let i=[l(e.flags,[],{label:t.title,detail:`Will delete ${(0,o.Wh)(e.references)}`})];!e.references.every(e=>e.remote)&&(i.push(l(e.flags,["--force"],{label:`Force ${t.title}`,description:"--force",detail:`Will forcibly delete ${(0,o.Wh)(e.references)}`})),e.references.some(e=>null!=e.upstream)&&i.push(l(e.flags,["--remotes"],{label:`${t.title} & Remote${e.references.filter(e=>!e.remote).length>1?"s":""}`,description:"--remotes",detail:`Will delete ${(0,o.Wh)(e.references)} and any remote tracking branches`}),l(e.flags,["--force","--remotes"],{label:`Force ${t.title} & Remote${e.references.filter(e=>!e.remote).length>1?"s":""}`,description:"--force --remotes",detail:`Will forcibly delete ${(0,o.Wh)(e.references)} and any remote tracking branches`})));let r=(0,c.Tv)((0,u.C8)(`Confirm ${t.title}`,e,t),i,t),s=yield r;return(0,c.i9)(r,e,s)?s[0].item:c.Vd}async *renameCommandSteps(e,t){for(null==e.flags&&(e.flags=[]);this.canStepsContinue(e);){if(e.counter<3||null==e.reference){let i=yield*(0,u.sd)(e,t,{filter:e=>!e.remote,picked:e.reference?.ref,placeholder:"Choose a branch to rename"});if(i===c.Vd)break;e.reference=i}if(e.counter<4||null==e.name){let i=yield*(0,u.f6)(e,t,{placeholder:`Please provide a new name for ${(0,o.Wh)(e.reference,{icon:!1})}`,titleContext:` ${(0,o.Wh)(e.reference,!1)}`,value:e.name??e.reference.name});if(i===c.Vd)continue;e.name=i}let i=yield*this.renameCommandConfirmStep(e,t);i!==c.Vd&&(e.flags=i,(0,c.uZ)(e),e.repo.branch(...e.flags,e.reference.ref,e.name))}}*renameCommandConfirmStep(e,t){let i=(0,c.Tv)((0,u.C8)(`Confirm ${t.title}`,e,t),[l(e.flags,["-m"],{label:t.title,detail:`Will rename ${(0,o.Wh)(e.reference)} to ${e.name}`})],t),r=yield i;return(0,c.i9)(i,e,r)?r[0].item:c.Vd}}class m extends c.tR{constructor(e,t){super(e,"cherry-pick","cherry-pick","Cherry Pick",{description:"integrates changes from specified commits into the current branch"});let i=0;t?.state?.repo!=null&&i++,t?.state?.references!=null&&(!Array.isArray(t.state.references)||0!==t.state.references.length)&&i++,this.initialState={counter:i,confirm:!0,...t?.state}}get canSkipConfirm(){return!1}execute(e){e.repo.cherryPick(...e.flags,...e.references.map(e=>e.ref).reverse())}isFuzzyMatch(e){return super.isFuzzyMatch(e)||"cherry"===e}async *steps(e){let t={repos:this.container.git.openRepositories,associatedView:this.container.commitsView,cache:new Map,destination:void 0,selectedBranchOrTag:void 0,showTags:!0,title:this.title};null==e.flags&&(e.flags=[]),null==e.references||Array.isArray(e.references)||(e.references=[e.references]);let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repo||"string"==typeof e.repo){if(i=!1,1===t.repos.length)i=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{let i=yield*(0,u.lA)(e,t);if(i===c.Vd)break;e.repo=i}}if(null==t.destination){let i=await e.repo.getBranch();if(null==i)break;t.destination=i}if(t.title=`${this.title} into ${(0,o.Wh)(t.destination,{icon:!1})}`,e.counter<2||null==e.references||0===e.references.length){let r=yield*(0,u.Yv)(e,t,{filter:{branches:e=>e.id!==t.destination.id},placeholder:e=>`Choose a branch${e.showTags?" or tag":""} to cherry-pick from`,picked:t.selectedBranchOrTag?.ref,value:null==t.selectedBranchOrTag?e.references?.[0]?.ref:void 0});if(r===c.Vd){i&&e.counter--;continue}(0,o.FT)(r)?(e.references=[r],t.selectedBranchOrTag=void 0):t.selectedBranchOrTag=r}if(e.counter<3&&null!=t.selectedBranchOrTag){let i=(0,o.oI)(t.destination.ref,t.selectedBranchOrTag.ref),r=t.cache.get(i);null==r&&(r=this.container.git.getLog(e.repo.path,{ref:i,merges:"first-parent"}),t.cache.set(i,r));let s=yield*(0,u.Rj)(e,t,{log:await r,onDidLoadMore:e=>t.cache.set(i,Promise.resolve(e)),picked:e.references?.map(e=>e.ref),placeholder:(e,t)=>null==t?`No pickable commits found on ${(0,o.Wh)(e.selectedBranchOrTag,{icon:!1})}`:`Choose commits to cherry-pick into ${(0,o.Wh)(e.destination,{icon:!1})}`});if(s===c.Vd)continue;e.references=s}if(this.confirm(e.confirm)){let i=yield*this.confirmStep(e,t);if(i===c.Vd)continue;e.flags=i}(0,c.uZ)(e),this.execute(e)}return e.counter<0?c.Vd:void 0}*confirmStep(e,t){let i=(0,c.Tv)((0,u.C8)(`Confirm ${t.title}`,e,t),[l(e.flags,[],{label:this.title,detail:`Will apply ${(0,o.Wh)(e.references)} to ${(0,o.Wh)(t.destination)}`}),l(e.flags,["--edit"],{label:`${this.title} & Edit`,description:"--edit",detail:`Will edit and apply ${(0,o.Wh)(e.references)} to ${(0,o.Wh)(t.destination)}`}),l(e.flags,["--no-commit"],{label:`${this.title} without Committing`,description:"--no-commit",detail:`Will apply ${(0,o.Wh)(e.references)} to ${(0,o.Wh)(t.destination)} without Committing`})],t),r=yield i;return(0,c.i9)(i,e,r)?r[0].item:c.Vd}}var f=i(9529),w=i(3700);class v extends c.tR{constructor(e,t){super(e,"co-authors","co-authors","Add Co-Authors",{description:"adds co-authors to a commit message"});let i=0;t?.state?.repo!=null&&i++,t?.state?.contributors!=null&&(!Array.isArray(t.state.contributors)||0!==t.state.contributors.length)&&i++,this.initialState={counter:i,confirm:!1,...t?.state}}get canConfirm(){return!1}async execute(e){let t=await this.container.git.getOrOpenScmRepository(e.repo.path);if(null==t)return;let i=t.inputBox.value,r=i.indexOf("Co-authored-by: ");for(let t of(-1!==r&&(i=i.substring(0,r-1).trimRight()),null==e.contributors||Array.isArray(e.contributors)||(e.contributors=[e.contributors]),e.contributors)){let e;e=i.includes("Co-authored-by: ")?"\n":0!==i.length&&i.endsWith("\n")?"\n\n":"\n\n\n",i+=`${e}Co-authored-by: ${t.getCoauthor()}`}t.inputBox.value=i,await (0,f.dO)("workbench.view.scm")}async *steps(e){let t={repos:this.container.git.openRepositories,activeRepo:void 0,associatedView:this.container.contributorsView,title:this.title},i=await this.container.git.getOpenScmRepositories();i.length&&(t.repos=t.repos.filter(e=>i.find(t=>(0,w.AH)(t.rootUri.fsPath)===e.path)),t.activeRepo=await this.container.git.getOrOpenRepositoryForEditor(),null==t.activeRepo||i.some(e=>e.rootUri.fsPath===t.activeRepo.path)||(t.activeRepo=void 0));let r=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repo||"string"==typeof e.repo){if(r=!1,1===t.repos.length)r=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{let i=yield*(0,u.lA)(e,t);if(i===c.Vd)break;e.repo=i}}if(e.counter<2||null==e.contributors){let i=yield*(0,u.bR)(e,t,"Choose contributors to add as co-authors");if(i===c.Vd){r&&e.counter--;continue}e.contributors=i}(0,c.uZ)(e),this.execute(e)}return e.counter<0?c.Vd:void 0}}var y=i(5255),b=i(2800),C=i(7512);class A extends c.tR{constructor(e,t){super(e,"fetch","fetch","Fetch",{description:"fetches changes from one or more remotes"});let i=0;t?.state?.repos!=null&&(!Array.isArray(t.state.repos)||0!==t.state.repos.length)&&i++,this.initialState={counter:i,confirm:t?.confirm,...t?.state}}execute(e){return(0,o.UR)(e.reference)?e.repos[0].fetch({branch:e.reference}):this.container.git.fetchAll(e.repos,{all:e.flags.includes("--all"),prune:e.flags.includes("--prune")})}async *steps(e){let t={repos:this.container.git.openRepositories,associatedView:this.container.commitsView,title:this.title};null==e.flags&&(e.flags=[]),null==e.repos||Array.isArray(e.repos)||(e.repos=[e.repos]);let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repos||0===e.repos.length||(0,b.GI)(e.repos)){if(i=!1,1===t.repos.length)i=!0,null==e.repos&&e.counter++,e.repos=[t.repos[0]];else{let i=yield*(0,u.j8)(e,t,{skipIfPossible:e.counter>=1});if(i===c.Vd)break;e.repos=i}}if(this.confirm(e.confirm)){let r=yield*this.confirmStep(e,t);if(r===c.Vd){i&&e.counter--;continue}e.flags=r}(0,c.uZ)(e),this.execute(e)}return e.counter<0?c.Vd:void 0}async *confirmStep(e,t){let i,r="";if(1===e.repos.length){let t=await e.repos[0].getLastFetched();0!==t&&(r=`${(0,h.vk)(y.NE.Dot,2,2)}Last fetched ${(0,C.Zh)(new Date(t))}`)}if(1===e.repos.length&&(0,o.UR)(e.reference))i=this.createConfirmStep((0,u.C8)(`Confirm ${t.title}`,e,t,r),[l(e.flags,[],{label:this.title,detail:`Will fetch ${(0,o.Wh)(e.reference)}`})]);else{let s=1===e.repos.length?`$(repo) ${e.repos[0].formattedName}`:`${e.repos.length} repositories`;i=(0,c.Tv)((0,u.C8)(`Confirm ${this.title}`,e,t,r),[l(e.flags,[],{label:this.title,detail:`Will fetch ${s}`}),l(e.flags,["--prune"],{label:`${this.title} & Prune`,description:"--prune",detail:`Will fetch and prune ${s}`}),l(e.flags,["--all"],{label:`${this.title} All`,description:"--all",detail:`Will fetch all remotes of ${s}`}),l(e.flags,["--all","--prune"],{label:`${this.title} All & Prune`,description:"--all --prune",detail:`Will fetch and prune all remotes of ${s}`})],t)}let s=yield i;return(0,c.i9)(i,e,s)?s[0].item:c.Vd}}var P=i(6897),D=i(6450),k=i(1774);class S extends c.tR{constructor(e,t){super(e,"log","history","Commits",{description:"aka log, shows commit history"});let i=0;t?.state?.repo!=null&&i++,t?.state?.reference!=null&&(i++,"HEAD"!==t.state.reference&&(0,o.FT)(t.state.reference)&&!(0,o.Nn)(t.state.reference)&&i++),this.initialState={counter:i,confirm:!1,...t?.state}}get canConfirm(){return!1}isFuzzyMatch(e){return super.isFuzzyMatch(e)||"log"===e}async *steps(e){let t={repos:this.container.git.openRepositories,associatedView:this.container.commitsView,cache:new Map,selectedBranchOrTag:void 0,title:this.title},i=!1;for(;this.canStepsContinue(e);){let r;if(t.title=this.title,e.counter<1||null==e.repo||"string"==typeof e.repo){if(i=!1,1===t.repos.length)i=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{let i=yield*(0,u.lA)(e,t);if(i===c.Vd)break;e.repo=i}}if(!function(e){if(!(e.repo instanceof a._j))throw Error("Missing repository")}(e),"HEAD"===e.reference){let t=await e.repo.getBranch();e.reference=t}if(e.counter<2||null==e.reference){let r=yield*(0,u.Yv)(e,t,{placeholder:"Choose a branch or tag to show its commit history",picked:t.selectedBranchOrTag?.ref,value:null==t.selectedBranchOrTag?e.reference?.ref:void 0,ranges:!0});if(r===c.Vd){i&&e.counter--;continue}e.reference=r,t.selectedBranchOrTag=void 0}if((!(0,o.FT)(e.reference)||(0,o.Nn)(e.reference))&&(t.selectedBranchOrTag=e.reference),t.title=`${this.title}${(0,h.vk)(y.NE.Dot,2,2)}${(0,o.Wh)(t.selectedBranchOrTag,{icon:!1})}`,e.fileName&&(t.title+=`${(0,h.vk)(y.NE.Dot,2,2)}${(0,k.d)(e.fileName,{fileOnly:!0,truncateTo:y.d$-t.title.length-3})}`),e.counter<3&&null!=t.selectedBranchOrTag){let i=t.selectedBranchOrTag.ref,r=t.cache.get(i);null==r&&(r=null!=e.fileName?this.container.git.getLogForFile(e.repo.path,e.fileName,{ref:i}):this.container.git.getLog(e.repo.path,{ref:i}),t.cache.set(i,r));let s=yield*(0,u.s4)(e,t,{ignoreFocusOut:!0,log:await r,onDidLoadMore:e=>t.cache.set(i,Promise.resolve(e)),placeholder:(e,t)=>null==t?`No commits found in ${(0,o.Wh)(e.selectedBranchOrTag,{icon:!1})}`:"Choose a commit",picked:e.reference?.ref});if(s===c.Vd)continue;e.reference=s}e.reference instanceof D.aM&&null==e.reference.file||(e.reference=await this.container.git.getCommit(e.repo.path,e.reference.ref)),e.openPickInView?((0,P.Fw)(e.reference,{pin:!1,preserveFocus:!1}),r=c.Vd):r=yield*eA(this.container,{command:"show",state:{repo:e.repo,reference:e.reference,fileName:e.fileName}},this.pickedVia),e.counter--,r===c.Vd&&(0,c.uZ)(e)}return e.counter<0?c.Vd:void 0}}var R=i(3599),$=i(3016);class _ extends c.tR{constructor(e,t){super(e,"merge","merge","Merge",{description:"integrates changes from a specified branch into the current branch"});let i=0;t?.state?.repo!=null&&i++,t?.state?.reference!=null&&i++,this.initialState={counter:i,confirm:!0,...t?.state}}get canSkipConfirm(){return!1}execute(e){e.repo.merge(...e.flags,e.reference.ref)}async *steps(e){let t={repos:this.container.git.openRepositories,associatedView:this.container.commitsView,cache:new Map,destination:void 0,pickCommit:!1,pickCommitForItem:!1,selectedBranchOrTag:void 0,showTags:!0,title:this.title};null==e.flags&&(e.flags=[]);let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repo||"string"==typeof e.repo){if(i=!1,1===t.repos.length)i=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{let i=yield*(0,u.lA)(e,t);if(i===c.Vd)break;e.repo=i}}if(null==t.destination){let i=await e.repo.getBranch();if(null==i)break;t.destination=i}if(t.title=`${this.title} into ${(0,o.Wh)(t.destination,{icon:!1})}`,t.pickCommitForItem=!1,e.counter<2||null==e.reference){let r=new $.v_(t.pickCommit,t,()=>{t.pickCommit=!t.pickCommit,r.on=t.pickCommit}),s=yield*(0,u.Yv)(e,t,{placeholder:e=>`Choose a branch${e.showTags?" or tag":""} to merge`,picked:t.selectedBranchOrTag?.ref,value:null==t.selectedBranchOrTag?e.reference?.ref:void 0,additionalButtons:[r]});if(s===c.Vd){i&&e.counter--;continue}e.reference=s,t.selectedBranchOrTag=void 0}if((0,o.FT)(e.reference)||(t.selectedBranchOrTag=e.reference),e.counter<3&&null!=t.selectedBranchOrTag&&(t.pickCommit||t.pickCommitForItem||e.reference.ref===t.destination.ref)){let i=t.selectedBranchOrTag.ref,r=t.cache.get(i);null==r&&(r=this.container.git.getLog(e.repo.path,{ref:i,merges:"first-parent"}),t.cache.set(i,r));let s=yield*(0,u.s4)(e,t,{ignoreFocusOut:!0,log:await r,onDidLoadMore:e=>t.cache.set(i,Promise.resolve(e)),placeholder:(e,t)=>null==t?`No commits found on ${(0,o.Wh)(e.selectedBranchOrTag,{icon:!1})}`:`Choose a commit to merge into ${(0,o.Wh)(e.destination,{icon:!1})}`,picked:e.reference?.ref});if(s===c.Vd)continue;e.reference=s}let r=yield*this.confirmStep(e,t);r!==c.Vd&&(e.flags=r,(0,c.uZ)(e),this.execute(e))}return e.counter<0?c.Vd:void 0}async *confirmStep(e,t){let i=await this.container.git.getAheadBehindCommitCount(e.repo.path,[(0,o.oI)(t.destination.name,e.reference.name)]),r=null!=i?i.ahead+i.behind:0;if(0===r){let i=this.createConfirmStep((0,u.C8)(t.title,e,t),[],(0,R.fw)(R.Xe.Cancel,!0,{label:"OK",detail:`${(0,o.Wh)(t.destination,{capitalize:!0})} is already up to date with ${(0,o.Wh)(e.reference)}`}),{placeholder:`Nothing to merge; ${(0,o.Wh)(t.destination,{label:!1,icon:!1})} is already up to date`}),r=yield i;return(0,c.i9)(i,e,r),c.Vd}let s=this.createConfirmStep((0,u.C8)(`Confirm ${t.title}`,e,t),[l(e.flags,[],{label:this.title,detail:`Will merge ${(0,h._6)("commit",r)} from ${(0,o.Wh)(e.reference)} into ${(0,o.Wh)(t.destination)}`}),l(e.flags,["--ff-only"],{label:`Fast-forward ${this.title}`,description:"--ff-only",detail:`Will fast-forward merge ${(0,h._6)("commit",r)} from ${(0,o.Wh)(e.reference)} into ${(0,o.Wh)(t.destination)}`}),l(e.flags,["--squash"],{label:`Squash ${this.title}`,description:"--squash",detail:`Will squash ${(0,h._6)("commit",r)} from ${(0,o.Wh)(e.reference)} into one when merging into ${(0,o.Wh)(t.destination)}`}),l(e.flags,["--no-ff"],{label:`${this.title} without Fast-Forwarding`,description:"--no-ff",detail:`Will create a merge commit when merging ${(0,h._6)("commit",r)} from ${(0,o.Wh)(e.reference)} into ${(0,o.Wh)(t.destination)}`}),l(e.flags,["--no-ff","--no-commit"],{label:`${this.title} without Fast-Forwarding or Committing`,description:"--no-ff --no-commit",detail:`Will merge ${(0,h._6)("commit",r)} from ${(0,o.Wh)(e.reference)} into ${(0,o.Wh)(t.destination)} without Committing`})]),n=yield s;return(0,c.i9)(s,e,n)?n[0].item:c.Vd}}var I=i(5367);class F extends c.tR{constructor(e,t){super(e,"pull","pull","Pull",{description:"fetches and integrates changes from a remote into the current branch"});let i=0;t?.state?.repos!=null&&(!Array.isArray(t.state.repos)||0!==t.state.repos.length)&&i++,this.initialState={counter:i,confirm:t?.confirm,...t?.state}}async execute(e){if((0,o.UR)(e.reference)&&(!(0,I.BF)(e.reference)||!e.reference.current)){let t=await e.repos[0].getBranch();if(t?.name!==e.reference.name)return e.repos[0].fetch({branch:e.reference,pull:!0})}return this.container.git.pullAll(e.repos,{rebase:e.flags.includes("--rebase")})}async *steps(e){let t={repos:this.container.git.openRepositories,associatedView:this.container.commitsView,title:this.title};null==e.flags&&(e.flags=[]),null==e.repos||Array.isArray(e.repos)||(e.repos=[e.repos]);let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repos||0===e.repos.length||(0,b.GI)(e.repos)){if(i=!1,1===t.repos.length)i=!0,null==e.repos&&e.counter++,e.repos=[t.repos[0]];else{let i=yield*(0,u.j8)(e,t,{skipIfPossible:e.counter>=1});if(i===c.Vd)break;e.repos=i}}if(this.confirm(e.confirm)){let r=yield*this.confirmStep(e,t);if(r===c.Vd){i&&e.counter--;continue}e.flags=r}(0,c.uZ)(e),this.execute(e)}return e.counter<0?c.Vd:void 0}async *confirmStep(e,t){let i;if(e.repos.length>1)i=this.createConfirmStep((0,u.C8)(`Confirm ${t.title}`,e,t),[l(e.flags,[],{label:this.title,detail:`Will pull ${e.repos.length} repositories`}),l(e.flags,["--rebase"],{label:`${this.title} with Rebase`,description:"--rebase",detail:`Will pull ${e.repos.length} repositories by rebasing`})]);else if((0,o.UR)(e.reference)){if(e.reference.remote)i=this.createConfirmStep((0,u.C8)(`Confirm ${t.title}`,e,t),[],(0,R.fw)(R.Xe.Cancel,!0,{label:`Cancel ${this.title}`,detail:"Cannot pull a remote branch"}));else{let[r]=e.repos,s=await r.getBranch(e.reference.name);i=s?.upstream==null?this.createConfirmStep((0,u.C8)(`Confirm ${t.title}`,e,t),[],(0,R.fw)(R.Xe.Cancel,!0,{label:`Cancel ${this.title}`,detail:"Cannot pull a branch until it has been published"})):this.createConfirmStep((0,u.C8)(`Confirm ${t.title}`,e,t),[l(e.flags,[],{label:this.title,detail:`Will pull${s.state.behind?` ${(0,h._6)("commit",s.state.behind)} into ${(0,o.Wh)(s)}`:` into ${(0,o.Wh)(s)}`}`})])}}else{let[r]=e.repos,[s,n]=await Promise.all([r.getStatus(),r.getLastFetched()]),o="";0!==n&&(o=`${(0,h.vk)(y.NE.Dot,2,2)}Last fetched ${(0,C.Zh)(new Date(n))}`);let a=s?.state.behind!=null?` ${(0,h._6)("commit",s.state.behind)} into $(repo) ${r.formattedName}`:` into $(repo) ${r.formattedName}`;i=this.createConfirmStep((0,u.C8)(`Confirm ${t.title}`,e,t,o),[l(e.flags,[],{label:this.title,detail:`Will pull${a}`}),l(e.flags,["--rebase"],{label:`${this.title} with Rebase`,description:"--rebase",detail:`Will pull and rebase${a}`})],void 0,{additionalButtons:[$.My],onDidClickButton:async(e,i)=>{if(i!==$.My||e.busy)return!1;e.title=`Confirm ${t.title}${(0,h.vk)(y.NE.Dot,2,2)}Fetching${y.NE.Ellipsis}`,e.busy=!0;try{return await r.fetch({progress:!0}),!0}finally{e.busy=!1}}})}let r=yield i;return(0,c.i9)(i,e,r)?r[0].item:c.Vd}}var x=i(8887);class T extends c.tR{constructor(e,t){super(e,"push","push","Push",{description:"pushes changes from the current branch to a remote"});let i=0;t?.state?.repos!=null&&(!Array.isArray(t.state.repos)||0!==t.state.repos.length)&&i++,this.initialState={counter:i,confirm:t?.confirm,...t?.state}}execute(e){let t=e.flags.indexOf("--set-upstream");return -1!==t?this.container.git.pushAll(e.repos,{force:!1,publish:{remote:e.flags[t+1]},reference:e.reference}):this.container.git.pushAll(e.repos,{force:e.flags.includes("--force"),reference:e.reference})}async *steps(e){let t={repos:this.container.git.openRepositories,associatedView:this.container.commitsView,title:this.title};null==e.flags&&(e.flags=[]),null==e.repos||Array.isArray(e.repos)||(e.repos=[e.repos]);let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repos||0===e.repos.length||(0,b.GI)(e.repos)){if(i=!1,1===t.repos.length)i=!0,null==e.repos&&e.counter++,e.repos=[t.repos[0]];else if(null!=e.reference){let i=yield*(0,u.lA)({...e,repos:void 0,repo:e.reference.repoPath},t);if(i===c.Vd)break;e.repos=[i]}else{let i=yield*(0,u.j8)(e,t,{skipIfPossible:e.counter>=1});if(i===c.Vd)break;e.repos=i}}if(this.confirm(e.confirm)){let r=yield*this.confirmStep(e,t);if(r===c.Vd){i&&e.counter--;continue}e.flags=r}(0,c.uZ)(e),this.execute(e)}return e.counter<0?c.Vd:void 0}async *confirmStep(e,t){let i;let s=r.D.getAny("git.useForcePushWithLease")??!0,n=s&&(r.D.getAny("git.useForcePushIfIncludes")??!0)&&await this.container.git.supports(e.repos[0].uri,x.A.ForceIfIncludes);if(e.repos.length>1)i=this.createConfirmStep((0,u.C8)(`Confirm ${t.title}`,e,t),[l(e.flags,[],{label:this.title,detail:`Will push ${e.repos.length} repositories`}),l(e.flags,["--force"],{label:`Force ${this.title}${n?" (with lease and if includes)":s?" (with lease)":""}`,description:`--force${s?`-with-lease${n?" --force-if-includes":""}`:""}`,detail:`Will force push${n?" (with lease and if includes)":s?" (with lease)":""} ${e.repos.length} repositories`})]);else{let[r]=e.repos,a=[];if((0,o.UR)(e.reference)){if(e.reference.remote)i=this.createConfirmStep((0,u.C8)(t.title,e,t),[],(0,R.fw)(R.Xe.Cancel,!0,{label:"OK",detail:"Cannot push a remote branch"}),{placeholder:"Cannot push a remote branch"});else{let c=await r.getBranch(e.reference.name);if(null!=c&&c?.upstream==null){for(let t of(await r.getRemotes()))a.push(l(e.flags,["--set-upstream",t.name,c.name],{label:`Publish ${c.name} to ${t.name}`,detail:`Will publish ${(0,o.Wh)(c)} to ${t.name}`}));i=a.length?this.createConfirmStep((0,u.C8)("Confirm Publish",e,t),a,void 0,{placeholder:"Confirm Publish"}):this.createConfirmStep((0,u.C8)("Publish",e,t),[],(0,R.fw)(R.Xe.Cancel,!0,{label:"OK",detail:"No remotes found"}),{placeholder:"Cannot publish; No remotes found"})}else i=null!=c&&c?.state.behind>0?this.createConfirmStep((0,u.C8)(`Confirm ${t.title}`,e,t),[l(e.flags,["--force"],{label:`Force ${this.title}${n?" (with lease and if includes)":s?" (with lease)":""}`,description:`--force${s?`-with-lease${n?" --force-if-includes":""}`:""}`,detail:`Will force push${n?" (with lease and if includes)":s?" (with lease)":""} ${c?.state.ahead?` ${(0,h._6)("commit",c.state.ahead)}`:""}${c.getRemoteName()?` to ${c.getRemoteName()}`:""}${null!=c&&c.state.behind>0?`, overwriting ${(0,h._6)("commit",c.state.behind)}${c?.getRemoteName()?` on ${c.getRemoteName()}`:""}`:""}`})],(0,R.fw)(R.Xe.Cancel,!0,{label:`Cancel ${this.title}`,detail:`Cannot push; ${(0,o.Wh)(c)} is behind ${c.getRemoteName()} by ${(0,h._6)("commit",c.state.behind)}`})):null!=c&&c?.state.ahead>0?this.createConfirmStep((0,u.C8)(`Confirm ${t.title}`,e,t),[l(e.flags,[c.getRemoteName()],{label:this.title,detail:`Will push ${(0,h._6)("commit",c.state.ahead)} from ${(0,o.Wh)(c)} to ${c.getRemoteName()}`})]):this.createConfirmStep((0,u.C8)(t.title,e,t),[],(0,R.fw)(R.Xe.Cancel,!0,{label:"OK",detail:"No commits found to push"}),{placeholder:"Nothing to push; No commits found to push"})}}else{let c=await r.getStatus(),d={refType:"branch",name:c?.branch??"HEAD",ref:c?.branch??"HEAD",remote:!1,repoPath:r.path};if(c?.state.ahead===0){if(!(0,o.UR)(e.reference)&&null==c.upstream){let t;for(let i of(null!=e.reference?t=` up to and including ${(0,o.Wh)(e.reference,{label:!1})}`:(e.reference=d,t=""),await r.getRemotes()))a.push(l(e.flags,["--set-upstream",i.name,c.branch],{label:`Publish ${d.name} to ${i.name}`,detail:`Will publish ${(0,o.Wh)(d)}${t} to ${i.name}`}))}i=a.length?this.createConfirmStep((0,u.C8)("Confirm Publish",e,t),a,void 0,{placeholder:"Confirm Publish"}):null==c.upstream?this.createConfirmStep((0,u.C8)("Publish",e,t),[],(0,R.fw)(R.Xe.Cancel,!0,{label:"OK",detail:"No remotes found"}),{placeholder:"Cannot publish; No remotes found"}):this.createConfirmStep((0,u.C8)(t.title,e,t),[],(0,R.fw)(R.Xe.Cancel,!0,{label:"OK",detail:`No commits ahead of ${(0,I.Lo)(c.upstream)}`}),{placeholder:`Nothing to push; No commits ahead of ${(0,I.Lo)(c.upstream)}`})}else{let a,p="",g=await r.getLastFetched();0!==g&&(p=`${(0,h.vk)(y.NE.Dot,2,2)}Last fetched ${(0,C.Zh)(new Date(g))}`),a=null!=e.reference?`${c?.state.ahead?` commits up to and including ${(0,o.Wh)(e.reference,{label:!1})}`:""}${c?.upstream?` to ${(0,I.Lo)(c.upstream)}`:""}`:`${c?.state.ahead?` ${(0,h._6)("commit",c.state.ahead)}`:""}${c?.upstream?` to ${(0,I.Lo)(c.upstream)}`:""}`,(i=this.createConfirmStep((0,u.C8)(`Confirm ${t.title}`,e,t,p),[...c?.state.behind?[]:[l(e.flags,[],{label:this.title,detail:`Will push${a}`})],l(e.flags,["--force"],{label:`Force ${this.title}${n?" (with lease and if includes)":s?" (with lease)":""}`,description:`--force${s?`-with-lease${n?" --force-if-includes":""}`:""}`,detail:`Will force push${n?" (with lease and if includes)":s?" (with lease)":""} ${a}${null!=c&&c.state.behind>0?`, overwriting ${(0,h._6)("commit",c.state.behind)}${c?.upstream?` on ${(0,I.Lo)(c.upstream)}`:""}`:""}`})],c?.state.behind?(0,R.fw)(R.Xe.Cancel,!0,{label:`Cancel ${this.title}`,detail:`Cannot push; ${(0,o.Wh)(d)} is behind${c?.upstream?` ${(0,I.Lo)(c.upstream)}`:""} by ${(0,h._6)("commit",c.state.behind)}`}):void 0)).additionalButtons=[$.My],i.onDidClickButton=async(e,i)=>{if(i!==$.My||e.busy)return!1;e.title=`Confirm ${t.title}${(0,h.vk)(y.NE.Dot,2,2)}Fetching${y.NE.Ellipsis}`,e.busy=!0;try{return await r.fetch({progress:!0}),!0}finally{e.busy=!1}}}}}let a=yield i;return(0,c.i9)(i,e,a)?a[0].item:c.Vd}}var O=i(2509);class E extends c.tR{constructor(e,t){super(e,"rebase","rebase","Rebase",{description:"integrates changes from a specified branch into the current branch, by changing the base of the branch and reapplying the commits on top"});let i=0;t?.state?.repo!=null&&i++,t?.state?.reference!=null&&i++,this.initialState={counter:i,confirm:!0,...t?.state}}get canSkipConfirm(){return!1}async execute(e){let t;if(e.flags.includes("--interactive")){await this.container.rebaseEditor.enableForNextUse();let e=(0,O._L)();t=["-c",`"sequence.editor=${e}"`]}e.repo.rebase(t,...e.flags,e.reference.ref)}async *steps(e){let t={repos:this.container.git.openRepositories,associatedView:this.container.commitsView,cache:new Map,destination:void 0,pickCommit:!1,pickCommitForItem:!1,selectedBranchOrTag:void 0,showTags:!0,title:this.title};null==e.flags&&(e.flags=[]);let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repo||"string"==typeof e.repo){if(i=!1,1===t.repos.length)i=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{let i=yield*(0,u.lA)(e,t);if(i===c.Vd)break;e.repo=i}}if(null==t.destination){let i=await e.repo.getBranch();if(null==i)break;t.destination=i}if(t.title=`${this.title} ${(0,o.Wh)(t.destination,{icon:!1})}`,t.pickCommitForItem=!1,e.counter<2||null==e.reference){let r=new $.v_(t.pickCommit,t,()=>{t.pickCommit=!t.pickCommit,r.on=t.pickCommit}),s=yield*(0,u.Yv)(e,t,{placeholder:e=>`Choose a branch${e.showTags?" or tag":""} to rebase`,picked:t.selectedBranchOrTag?.ref,value:null==t.selectedBranchOrTag?e.reference?.ref:void 0,additionalButtons:[r]});if(s===c.Vd){i&&e.counter--;continue}e.reference=s,t.selectedBranchOrTag=void 0}if((0,o.FT)(e.reference)||(t.selectedBranchOrTag=e.reference),e.counter<3&&null!=t.selectedBranchOrTag&&(t.pickCommit||t.pickCommitForItem||e.reference.ref===t.destination.ref)){let i=t.selectedBranchOrTag.ref,r=t.cache.get(i);null==r&&(r=this.container.git.getLog(e.repo.path,{ref:i,merges:"first-parent"}),t.cache.set(i,r));let s=yield*(0,u.s4)(e,t,{ignoreFocusOut:!0,log:await r,onDidLoadMore:e=>t.cache.set(i,Promise.resolve(e)),placeholder:(e,t)=>null==t?`No commits found on ${(0,o.Wh)(e.selectedBranchOrTag,{icon:!1})}`:`Choose a commit to rebase ${(0,o.Wh)(e.destination,{icon:!1})} onto`,picked:e.reference?.ref});if(s===c.Vd)continue;e.reference=s}let r=yield*this.confirmStep(e,t);r!==c.Vd&&(e.flags=r,(0,c.uZ)(e),this.execute(e))}return e.counter<0?c.Vd:void 0}async *confirmStep(e,t){let i=await this.container.git.getAheadBehindCommitCount(e.repo.path,["revision"===e.reference.refType?(0,o.oI)(e.reference.ref,t.destination.ref):(0,o.oI)(t.destination.name,e.reference.name)]),r=null!=i?i.ahead+i.behind:0;if(0===r){let i=this.createConfirmStep((0,u.C8)(t.title,e,t),[],(0,R.fw)(R.Xe.Cancel,!0,{label:"OK",detail:`${(0,o.Wh)(t.destination,{capitalize:!0})} is already up to date with ${(0,o.Wh)(e.reference)}`}),{placeholder:`Nothing to rebase; ${(0,o.Wh)(t.destination,{label:!1,icon:!1})} is already up to date`}),r=yield i;return(0,c.i9)(i,e,r),c.Vd}let s=this.createConfirmStep((0,u.C8)(`Confirm ${t.title}`,e,t),[l(e.flags,[],{label:this.title,detail:`Will update ${(0,o.Wh)(t.destination)} by applying ${(0,h._6)("commit",r)} on top of ${(0,o.Wh)(e.reference)}`}),l(e.flags,["--interactive"],{label:`Interactive ${this.title}`,description:"--interactive",detail:`Will interactively update ${(0,o.Wh)(t.destination)} by applying ${(0,h._6)("commit",r)} on top of ${(0,o.Wh)(e.reference)}`})]),n=yield s;return(0,c.i9)(s,e,n)?n[0].item:c.Vd}}var B=i(4155),U=i(7925),W=i(4336);let M=new Map([["add","Add"],["prune","Prune"],["remove","Remove"]]);function L(e,t){return null==t?e:`${M.get(t)} ${e}`}class N extends c.tR{subcommand;constructor(e,t){super(e,"remote","remote","Remote",{description:"add, prune, or remove remotes"});let i=0;if(t?.state?.subcommand!=null)switch(i++,t?.state.subcommand){case"add":null!=t.state.name&&i++,null!=t.state.url&&i++;break;case"prune":case"remove":null!=t.state.remote&&i++}t?.state?.repo!=null&&i++,this.initialState={counter:i,confirm:t?.confirm,...t?.state}}get canConfirm(){return null!=this.subcommand}get canSkipConfirm(){return"remove"!==this.subcommand&&"prune"!==this.subcommand&&super.canSkipConfirm}get skipConfirmKey(){return`${this.key}${null==this.subcommand?"":`-${this.subcommand}`}:${this.pickedVia}`}async *steps(e){let t={repos:this.container.git.openRepositories,associatedView:this.container.remotesView,title:this.title},i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.subcommand){this.subcommand=void 0;let t=yield*this.pickSubcommandStep(e);if(t===c.Vd)break;e.subcommand=t}if(this.subcommand=e.subcommand,t.title=L(this.title,e.subcommand),e.counter<2||null==e.repo||"string"==typeof e.repo){if(i=!1,1===t.repos.length)i=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{let i=yield*(0,u.lA)(e,t);if(i===c.Vd)continue;e.repo=i}}switch(e.subcommand){case"add":!function(e){if(!(e.repo instanceof a._j)||"add"!==e.subcommand)throw Error("Missing repository")}(e),yield*this.addCommandSteps(e,t),e.name=void 0,e.url=void 0;break;case"prune":!function(e){if(!(e.repo instanceof a._j)||"prune"!==e.subcommand)throw Error("Missing repository")}(e),yield*this.pruneCommandSteps(e,t);break;case"remove":!function(e){if(!(e.repo instanceof a._j)||"remove"!==e.subcommand)throw Error("Missing repository")}(e),yield*this.removeCommandSteps(e,t);break;default:(0,c.uZ)(e)}i&&e.counter--}return e.counter<0?c.Vd:void 0}*pickSubcommandStep(e){let t=(0,c.xf)({title:this.title,placeholder:`Choose a ${this.label} command`,items:[{label:"add",description:"adds a new remote",picked:"add"===e.subcommand,item:"add"},{label:"prune",description:"prunes remote branches on the specified remote",picked:"prune"===e.subcommand,item:"prune"},{label:"remove",description:"removes the specified remote",picked:"remove"===e.subcommand,item:"remove"}],buttons:[n.QuickInputButtons.Back]}),i=yield t;return(0,c.i9)(t,e,i)?i[0].item:c.Vd}async *addCommandSteps(e,t){null==e.flags&&(e.flags=["-f"]);let i=0!==(await e.repo.getRemotes({filter:t=>t.name===e.name})).length;for(;this.canStepsContinue(e);){if(e.counter<3||null==e.name||i){let r=yield*(0,u.NQ)(e,t,{placeholder:"Please provide a name for the remote",value:e.name});if(r===c.Vd)continue;if(i=0!==(await e.repo.getRemotes({filter:e=>e.name===r})).length){e.counter--;continue}e.name=r}if(e.counter<4||null==e.url){let i=yield*(0,u.Kf)(e,t,{placeholder:"Please provide a URL for the remote",value:e.url});if(i===c.Vd)continue;e.url=i}if(this.confirm(e.confirm)){let i=yield*this.addCommandConfirmStep(e,t);if(i===c.Vd)continue;e.flags=i}(0,c.uZ)(e),await e.repo.addRemote(e.name,e.url,e.flags.includes("-f")?{fetch:!0}:void 0),!1!==e.reveal&&(0,B.ay)(void 0,{focus:!0,select:!0})}}*addCommandConfirmStep(e,t){let i=(0,c.Tv)((0,u.C8)(`Confirm ${t.title}`,e,t),[l(e.flags,[],{label:t.title,detail:`Will add remote '${e.name}' for ${e.url}`}),l(e.flags,["-f"],{label:`${t.title} and Fetch`,description:"-f",detail:`Will add and fetch remote '${e.name}' for ${e.url}`})],t),r=yield i;return(0,c.i9)(i,e,r)?r[0].item:c.Vd}async *removeCommandSteps(e,t){for(;this.canStepsContinue(e);){if(null!=e.remote&&"string"==typeof e.remote){let[t]=await e.repo.getRemotes({filter:t=>t.name===e.remote});null!=t?e.remote=t:e.remote=void 0}if(e.counter<3||null==e.remote){t.title=L("Remotes",e.subcommand);let i=yield*(0,u.Lt)(e,t,{picked:e.remote?.name,placeholder:"Choose remote to remove"});if(i===c.Vd)break;e.remote=i}if(!function(e){if("string"==typeof e.remote)throw Error("Missing remote")}(e),(yield*this.removeCommandConfirmStep(e,t))!==c.Vd){(0,c.uZ)(e);try{await e.repo.removeRemote(e.remote.name)}catch(e){W.Yd.error(e),(0,U.W8)("Unable to remove remote")}}}}*removeCommandConfirmStep(e,t){let i=(0,c.Tv)((0,u.C8)(`Confirm ${t.title}`,e,t),[{label:t.title,detail:`Will remove remote '${e.remote.name}'`}],t),r=yield i;return(0,c.i9)(i,e,r)?void 0:c.Vd}async *pruneCommandSteps(e,t){for(;this.canStepsContinue(e);){if(null!=e.remote&&"string"==typeof e.remote){let[t]=await e.repo.getRemotes({filter:t=>t.name===e.remote});null!=t?e.remote=t:e.remote=void 0}if(e.counter<3||null==e.remote){let i=yield*(0,u.Lt)(e,t,{picked:e.remote?.name,placeholder:"Choose a remote to prune"});if(i===c.Vd)break;e.remote=i}!function(e){if("string"==typeof e.remote)throw Error("Missing remote")}(e),(yield*this.pruneCommandConfirmStep(e,t))!==c.Vd&&((0,c.uZ)(e),e.repo.pruneRemote(e.remote.name))}}*pruneCommandConfirmStep(e,t){let i=(0,c.Tv)((0,u.C8)(`Confirm ${t.title}`,e,t),[{label:t.title,detail:`Will prune remote '${e.remote.name}'`}],t),r=yield i;return(0,c.i9)(i,e,r)?void 0:c.Vd}}class H extends c.tR{constructor(e,t){super(e,"reset","reset","Reset",{description:"resets the current branch to a specified commit"});let i=0;t?.state?.repo!=null&&i++,t?.state?.reference!=null&&i++,this.initialState={counter:i,confirm:t?.confirm??!0,...t?.state},this._canSkipConfirm=!this.initialState.confirm}_canSkipConfirm=!1;get canSkipConfirm(){return this._canSkipConfirm}execute(e){e.repo.reset(...e.flags,e.reference.ref)}async *steps(e){let t={repos:this.container.git.openRepositories,associatedView:this.container.commitsView,cache:new Map,destination:void 0,title:this.title};null==e.flags&&(e.flags=[]);let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repo||"string"==typeof e.repo){if(i=!1,1===t.repos.length)i=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{let i=yield*(0,u.lA)(e,t);if(i===c.Vd)break;e.repo=i}}if(null==t.destination){let i=await e.repo.getBranch();if(null==i)break;t.destination=i}if(t.title=`${this.title} ${(0,o.Wh)(t.destination,{icon:!1})}`,e.counter<2||null==e.reference){let r=t.destination.ref,s=t.cache.get(r);null==s&&(s=this.container.git.getLog(e.repo.path,{ref:r,merges:"first-parent"}),t.cache.set(r,s));let n=yield*(0,u.s4)(e,t,{log:await s,onDidLoadMore:e=>t.cache.set(r,Promise.resolve(e)),placeholder:(e,t)=>null==t?`${e.destination.name} has no commits`:`Choose a commit to reset ${e.destination.name} to`,picked:e.reference?.ref});if(n===c.Vd){i&&e.counter--;continue}e.reference=n}if(this.confirm(e.confirm)){let i=yield*this.confirmStep(e,t);if(i===c.Vd)continue;e.flags=i}(0,c.uZ)(e),this.execute(e)}return e.counter<0?c.Vd:void 0}*confirmStep(e,t){let i=this.createConfirmStep((0,u.C8)(`Confirm ${t.title}`,e,t),[l(e.flags,[],{label:this.title,detail:`Will reset (leaves changes in the working tree) ${(0,o.Wh)(t.destination)} to ${(0,o.Wh)(e.reference)}`}),l(e.flags,["--soft"],{label:`Soft ${this.title}`,description:"--soft",detail:`Will soft reset (leaves changes in the index and working tree) ${(0,o.Wh)(t.destination)} to ${(0,o.Wh)(e.reference)}`}),l(e.flags,["--hard"],{label:`Hard ${this.title}`,description:"--hard",detail:`Will hard reset (discards all changes) ${(0,o.Wh)(t.destination)} to ${(0,o.Wh)(e.reference)}`})]),r=yield i;return(0,c.i9)(i,e,r)?r[0].item:c.Vd}}class G extends c.tR{constructor(e,t){super(e,"revert","revert","Revert",{description:"undoes the changes of specified commits, by creating new commits with inverted changes"});let i=0;t?.state?.repo!=null&&i++,t?.state?.references!=null&&(!Array.isArray(t.state.references)||0!==t.state.references.length)&&i++,this.initialState={counter:i,confirm:!0,...t?.state}}get canSkipConfirm(){return!1}execute(e){e.repo.revert(...e.flags,...e.references.map(e=>e.ref).reverse())}async *steps(e){let t={repos:this.container.git.openRepositories,associatedView:this.container.commitsView,cache:new Map,destination:void 0,title:this.title};null==e.flags&&(e.flags=[]),null==e.references||Array.isArray(e.references)||(e.references=[e.references]);let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repo||"string"==typeof e.repo){if(i=!1,1===t.repos.length)i=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{let i=yield*(0,u.lA)(e,t);if(i===c.Vd)break;e.repo=i}}if(null==t.destination){let i=await e.repo.getBranch();if(null==i)break;t.destination=i}if(e.counter<2||null==e.references||0===e.references.length){let r=t.destination.ref,s=t.cache.get(r);null==s&&(s=this.container.git.getLog(e.repo.path,{ref:r,merges:"first-parent"}),t.cache.set(r,s));let n=yield*(0,u.Rj)(e,t,{log:await s,onDidLoadMore:e=>t.cache.set(r,Promise.resolve(e)),placeholder:(e,t)=>null==t?`${e.destination.name} has no commits`:"Choose commits to revert",picked:e.references?.map(e=>e.ref)});if(n===c.Vd){i&&e.counter--;continue}e.references=n}let r=yield*this.confirmStep(e,t);r!==c.Vd&&(e.flags=r,(0,c.uZ)(e),this.execute(e))}return e.counter<0?c.Vd:void 0}*confirmStep(e,t){let i=this.createConfirmStep((0,u.C8)(`Confirm ${t.title}`,e,t),[l(e.flags,["--no-edit"],{label:this.title,description:"--no-edit",detail:`Will revert ${(0,o.Wh)(e.references)}`}),l(e.flags,["--edit"],{label:`${this.title} & Edit`,description:"--edit",detail:`Will revert and edit ${(0,o.Wh)(e.references)}`})]),r=yield i;return(0,c.i9)(i,e,r)?r[0].item:c.Vd}}var q=i(6934),Y=i(4731),j=i(9729),V=i(3105),Q=i(4655),z=(e,t)=>(t=Symbol[e])?t:Symbol.for("Symbol."+e),K=(e,t,i)=>{if(null!=t){var r;if("object"!=typeof t&&"function"!=typeof t)throw TypeError("Object expected");if(i&&(r=t[z("asyncDispose")]),void 0===r&&(r=t[z("dispose")]),"function"!=typeof r)throw TypeError("Object not disposable");e.push([i,r,t])}else i&&e.push([i]);return t},J=(e,t,i)=>{var r="function"==typeof SuppressedError?SuppressedError:function(e,t,i,r){return(r=Error(i)).name="SuppressedError",r.error=e,r.suppressed=t,r},s=e=>t=i?new r(e,t,"An error was suppressed during disposal"):(i=!0,e),n=r=>{for(;r=e.pop();)try{var o=r[1]&&r[1].call(r[2]);if(r[0])return Promise.resolve(o).then(n,e=>(s(e),n()))}catch(e){s(e)}if(i)throw t};return n()};let Z={iconPath:new n.ThemeIcon("person-add"),tooltip:"Pick Authors"},X={iconPath:new n.ThemeIcon("new-file"),tooltip:"Pick Files"},ee={iconPath:new n.ThemeIcon("new-folder"),tooltip:"Pick Folder"},et=new Map([["","Search by Message"],["=:","Search by Message"],["message:","Search by Message"],["@:","Search by Author"],["author:","Search by Author"],["#:","Search by Commit SHA"],["commit:","Search by Commit SHA"],["?:","Search by File"],["file:","Search by File"],["~:","Search by Changes"],["change:","Search by Changes"]]);class ei extends c.tR{constructor(e,t){super(e,"search","search","Commit Search",{description:"aka grep, searches for commits"});let i=0;t?.state?.repo!=null&&i++,t?.state?.query!=null&&!t.prefillOnly&&i++,this.initialState={counter:i,confirm:!1,...t?.state}}get canConfirm(){return!1}isMatch(e){return super.isMatch(e)||"grep"===e}isFuzzyMatch(e){return super.isFuzzyMatch(e)||"grep"===e}async *steps(e){let t={container:this.container,repos:this.container.git.openRepositories,associatedView:this.container.searchAndCompareView,commit:void 0,hasVirtualFolders:(0,s.fw)("gitlens:hasVirtualFolders",!1),resultsKey:void 0,resultsPromise:void 0,title:this.title},i=r.D.get("gitCommands.search");null==e.matchAll&&(e.matchAll=i.matchAll),null==e.matchCase&&(e.matchCase=i.matchCase),null==e.matchRegex&&(e.matchRegex=i.matchRegex),null==e.showResultsInSideBar&&(e.showResultsInSideBar=i.showResultsInSideBar??void 0);let n=!1;for(;this.canStepsContinue(e);){let i;if(t.title=this.title,e.counter<1||null==e.repo||"string"==typeof e.repo){if(n=!1,1===t.repos.length)n=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{let i=yield*(0,u.lA)(e,t);if(i===c.Vd)break;e.repo=i}}if(e.counter<2||null==e.query){let i=yield*this.pickSearchOperatorStep(e,t);if(i===c.Vd){n&&e.counter--,e.query=void 0;continue}e.query=i}let r={query:e.query,matchAll:e.matchAll,matchCase:e.matchCase,matchRegex:e.matchRegex},s=(0,q.FL)(r);if((null==t.resultsPromise||t.resultsKey!==s)&&(t.resultsPromise=e.repo.richSearchCommits(r),t.resultsKey=s),e.showResultsInSideBar){this.container.searchAndCompareView.search(e.repo.path,r,{label:{label:`for ${e.query}`}},t.resultsPromise,e.showResultsInSideBar instanceof Q.V?e.showResultsInSideBar:void 0);break}if(e.counter<3||null==t.commit){let i=e.repo.path,s=yield*(0,u.s4)(e,t,{ignoreFocusOut:!0,log:await t.resultsPromise,onDidLoadMore:e=>t.resultsPromise=Promise.resolve(e),placeholder:(t,i)=>null==i?`No results for ${e.query}`:`${(0,h._6)("result",i.count,{format:e=>i.hasMore?`${e}+`:void 0})} for ${e.query}`,picked:t.commit?.ref,showInSideBarCommand:new j.qv("$(link-external)  Show Results in Side Bar",()=>void this.container.searchAndCompareView.search(i,r,{label:{label:`for ${e.query}`},reveal:{select:!0,focus:!1,expand:!0}},t.resultsPromise)),showInSideBarButton:{button:$.vU,onDidClick:()=>void this.container.searchAndCompareView.search(i,r,{label:{label:`for ${e.query}`},reveal:{select:!0,focus:!1,expand:!0}},t.resultsPromise)}});if(s===c.Vd){e.counter--;continue}t.commit=s}e.openPickInView?((0,P.Fw)(t.commit,{pin:!1,preserveFocus:!1}),i=c.Vd):i=yield*eA(this.container,{command:"show",state:{repo:e.repo,reference:t.commit}},this.pickedVia),e.counter--,i===c.Vd&&(0,c.uZ)(e)}return e.counter<0?c.Vd:void 0}*pickSearchOperatorStep(e,t){let i=[{label:et.get(""),description:`pattern or message: pattern or =: pattern ${y.NE.Dash} use quotes to search for phrases`,alwaysShow:!0,item:"message:"},{label:et.get("author:"),description:"author: pattern or @: pattern",buttons:[Z],alwaysShow:!0,item:"author:"},{label:et.get("commit:"),description:"commit: sha or #: sha",alwaysShow:!0,item:"commit:"},t.hasVirtualFolders?void 0:{label:et.get("file:"),description:"file: glob or ?: glob",buttons:[X,ee],alwaysShow:!0,item:"file:"},t.hasVirtualFolders?void 0:{label:et.get("change:"),description:"change: pattern or ~: pattern",alwaysShow:!0,item:"change:"}].filter(e=>null!=e),r=new $.I4(e.matchCase),s=new $.eY(e.matchAll),n=new $.Mn(e.matchRegex),o=(0,c.xf)({title:(0,u.C8)(t.title,e,t),placeholder:'e.g. "Updates dependencies" author:eamodio',ignoreFocusOut:!0,matchOnDescription:!0,matchOnDetail:!0,additionalButtons:[r,s,n],items:i,value:e.query,selectValueWhenShown:!1,onDidAccept:async i=>{let r=i.selectedItems[0];return!q.WY.has(r.item)||(await er(r,{},i,o,e,t),!1)},onDidClickButton:(t,i)=>{i===r?(e.matchCase=!e.matchCase,r.on=e.matchCase):i===s?(e.matchAll=!e.matchAll,s.on=e.matchAll):i===n&&(e.matchRegex=!e.matchRegex,n.on=e.matchRegex)},onDidClickItemButton:async function(i,r,s){return r===Z?await er(s,{author:!0},i,o,e,t):r===X?await er(s,{file:{type:"file"}},i,o,e,t):r===ee&&await er(s,{file:{type:"folder"}},i,o,e,t),!1},onDidChangeValue:r=>{let s=r.value.trim();e.counter=s?3:2;let n=(0,q.pD)({query:s,matchCase:e.matchCase,matchAll:e.matchAll,matchRegex:e.matchRegex});return r.title=(0,u.C8)(0===n.size||n.size>1?t.title:`Commit ${et.get(n.keys().next().value)}`,e,t),0===r.value.length?r.items=i:(r.ignoreFocusOut=!0,o.ignoreFocusOut=!0,r.items=[{label:"Search for",description:r.value,item:r.value,picked:!0},...i],r.activeItems=[r.items[0]]),!0}}),a=yield o;return(0,c.i9)(o,e,a)?(e.counter--,a[0].item.trim()):(e.counter--,c.Vd)}}async function er(e,t,i,r,s,o){let a=(0,q.pD)({query:i.value,matchCase:s.matchCase,matchAll:s.matchAll}),l=!1;if(t?.author&&"author:"===e.item){var h=[];try{let e=K(h,(0,c.PH)(r,i)),t=a.get("author:"),n=await (0,Y.J)(o.container,s.repo,"Search by Author","Choose contributors to include commits from",{appendReposToTitle:!0,clearButton:!0,ignoreFocusOut:!0,multiselect:!0,picked:e=>null!=t&&(null!=e.email&&t.has(e.email)||null!=e.name&&t.has(e.name)||null!=e.username&&t.has(e.username))});if(e[Symbol.dispose](),null!=n){let e=n.map(e=>e.email??e.name??e.username).filter(e=>null!=e);e.length?a.set("author:",new Set(e)):a.delete("author:")}else l=!0}catch(e){var u=e,d=!0}finally{J(h,u,d)}}else if(t?.file&&"file:"===e.item){var p=[];try{let e=K(p,(0,c.PH)(r,i)),h=a.get("file:"),u=await n.window.showOpenDialog({canSelectFiles:"file"===t.file.type,canSelectFolders:"folder"===t.file.type,canSelectMany:"file"===t.file.type,title:"Search by File",openLabel:"Add to Search",defaultUri:s.repo.folder?.uri});if(e[Symbol.dispose](),u?.length)for(let e of(null==h&&(h=new Set,a.set("file:",h)),u))h.add(o.container.git.getRelativePath(e,s.repo.uri));else l=!0;(null==h||0===h.size)&&a.delete("file:")}catch(e){var g=e,m=!0}finally{J(p,g,m)}}else{let t=a.get(e.item);l=!t?.has("")}i.value=`${(0,V.v_)((0,V.UI)(a.entries(),([e,t])=>`${e}${(0,V.v_)(t,` ${e}`)}`)," ")}${l?` ${e.item}`:""}`,r.onDidChangeValue(i)}var es=i(3931),en=i(1742);class eo extends c.tR{constructor(e,t){super(e,"show","show","Show",{description:"shows information about a git reference"});let i=0;t?.state?.repo!=null&&i++,t?.state?.reference!=null&&i++,t?.state?.fileName!=null&&(i+=2),this.initialState={counter:i,confirm:!1,...t?.state}}get canConfirm(){return!1}getStepState(e){let t=super.getStepState(e);return{...t,startingStep:e?Math.min(t.startingStep??0,1):0}}async *steps(e){let t={repos:this.container.git.openRepositories,associatedView:this.container.commitsView,title:this.title},i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repo||"string"==typeof e.repo){if(i=!1,1===t.repos.length)i=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{let i=yield*(0,u.lA)(e,t);if(i===c.Vd)break;e.repo=i}}if(!function(e){if(!(e.repo instanceof a._j))throw Error("Missing repository")}(e),(e.counter<2||null==e.reference||!(0,D.f_)(e.reference)||null!=e.reference.file)&&(null==e.reference||(0,D.f_)(e.reference)||(e.reference=await this.container.git.getCommit(e.reference.repoPath,e.reference.ref)),e.counter<2||null==e.reference)){let r=yield*(0,u.s4)(e,t,{log:{repoPath:e.repo.path,commits:new Map,sha:void 0,range:void 0,count:0,limit:void 0,hasMore:!1},placeholder:"Enter a reference or commit SHA",picked:e.reference?.ref});if(r===c.Vd){i&&e.counter--;continue}e.reference=r}if(!function(e){if(!(0,D.f_)(e.reference))throw Error("Missing reference")}(e),e.counter<3){null==e.reference.files&&await e.reference.ensureFullDetails();let i=yield*(0,u.KT)(e,t);if(i===c.Vd)continue;if(i instanceof en.Wv){let t=yield*i.executeSteps(this.pickedVia);e.counter--,t===c.Vd&&(0,c.uZ)(e);continue}if(i instanceof j.$w&&!(i instanceof es.PF)){(0,c.uZ)(e),i.execute();break}}if(e.counter<4||null==e.fileName){let i=yield*(0,u.fD)(e,t,{picked:e.fileName});if(i===c.Vd)continue;if(i instanceof es.PF){e.counter-=2;continue}e.fileName=i.file.path}!function(e){if(!e.fileName)throw Error("Missing filename")}(e);let r=yield*(0,u.nI)(e,t);if(r!==c.Vd){if(r instanceof es.PF){e.counter-=2;continue}if(r instanceof en.Wv){yield*r.executeSteps(this.pickedVia),e.counter--;continue}if(r instanceof j.$w){(0,c.uZ)(e),r.execute();break}}}return e.counter<0?c.Vd:void 0}}var ea=i(252),el=i(6592);let eh=new Map([["apply","Apply"],["drop","Drop"],["list","List"],["pop","Pop"],["push","Push"],["rename","Rename"]]);function ec(e,t){return null==t?e:`${eh.get(t)} ${e}`}class eu extends c.tR{subcommand;constructor(e,t){super(e,"stash","stash","Stash",{description:"shelves (stashes) local changes to be reapplied later"});let i=0;if(t?.state?.subcommand!=null)switch(i++,t.state.subcommand){case"apply":case"drop":case"pop":null!=t.state.reference&&i++;break;case"push":null!=t.state.message&&i++;break;case"rename":null!=t.state.reference&&i++,null!=t.state.message&&i++}t?.state?.repo!=null&&i++,this.initialState={counter:i,confirm:t?.confirm,...t?.state}}get canConfirm(){return null!=this.subcommand&&"list"!==this.subcommand}get canSkipConfirm(){return"drop"!==this.subcommand&&super.canSkipConfirm}get skipConfirmKey(){return`${this.key}${null==this.subcommand?"":`-${this.subcommand}`}:${this.pickedVia}`}async *steps(e){let t={repos:this.container.git.openRepositories,associatedView:this.container.stashesView,readonly:(0,s.fw)("gitlens:readonly",!1)||(0,s.fw)("gitlens:untrusted",!1)||(0,s.fw)("gitlens:hasVirtualFolders",!1),title:this.title},i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,t.readonly&&(e.subcommand="list"),e.counter<1||null==e.subcommand){this.subcommand=void 0;let t=yield*this.pickSubcommandStep(e);if(t===c.Vd)break;e.subcommand=t}if(this.subcommand=e.subcommand,t.title=ec(this.title,e.subcommand),e.counter<2||null==e.repo||"string"==typeof e.repo){if(i=!1,1===t.repos.length)i=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{let i=yield*(0,u.lA)(e,t);if(i===c.Vd)continue;e.repo=i}}switch(e.subcommand){case"apply":case"pop":yield*this.applyOrPopCommandSteps(e,t);break;case"drop":yield*this.dropCommandSteps(e,t);break;case"list":yield*this.listCommandSteps(e,t);break;case"push":yield*this.pushCommandSteps(e,t);break;case"rename":yield*this.renameCommandSteps(e,t),e.message=void 0;break;default:(0,c.uZ)(e)}i&&e.counter--}return e.counter<0?c.Vd:void 0}*pickSubcommandStep(e){let t=(0,c.xf)({title:this.title,placeholder:`Choose a ${this.label} command`,items:[{label:"apply",description:"integrates changes from the specified stash into the current branch",picked:"apply"===e.subcommand,item:"apply"},{label:"drop",description:"deletes the specified stash",picked:"drop"===e.subcommand,item:"drop"},{label:"list",description:"lists the saved stashes",picked:"list"===e.subcommand,item:"list"},{label:"pop",description:"integrates changes from the specified stash into the current branch and deletes the stash",picked:"pop"===e.subcommand,item:"pop"},{label:"push",description:"saves your local changes to a new stash and discards them from the working tree and index",picked:"push"===e.subcommand,item:"push"},{label:"rename",description:"renames the specified stash",picked:"rename"===e.subcommand,item:"rename"}],buttons:[n.QuickInputButtons.Back]}),i=yield t;return(0,c.i9)(t,e,i)?i[0].item:c.Vd}async *applyOrPopCommandSteps(e,t){for(;this.canStepsContinue(e);){if(e.counter<3||null==e.reference){let i=yield*(0,u.Qp)(e,t,{stash:await this.container.git.getStash(e.repo.path),placeholder:(t,i)=>null==i?`No stashes found in ${e.repo.formattedName}`:"Choose a stash to apply to your working tree",picked:e.reference?.ref});if(i===c.Vd)break;e.reference=i}if(this.confirm(e.confirm)){let i=yield*this.applyOrPopCommandConfirmStep(e,t);if(i===c.Vd)continue;e.subcommand=i}(0,c.uZ)(e);try{if(await e.repo.stashApply("pop"===e.subcommand?`stash@{${e.reference.number}}`:e.reference.ref,{deleteAfter:"pop"===e.subcommand}),e.reference.message){let t=await this.container.git.getScmRepository(e.repo.path);null==t||t.inputBox.value||(t.inputBox.value=e.reference.message)}}catch(e){W.Yd.error(e,t.title),el.ef.is(e,el.bk.WorkingChanges)?n.window.showWarningMessage("Unable to apply stash. Your working tree changes would be overwritten. Please commit or stash your changes before trying again"):(0,U.W8)(e.message)}}}*applyOrPopCommandConfirmStep(e,t){let i=this.createConfirmStep((0,u.C8)(`Confirm ${t.title}`,e,t),[{label:t.title,detail:"pop"===e.subcommand?`Will delete ${(0,o.Wh)(e.reference)} and apply the changes to the working tree`:`Will apply the changes from ${(0,o.Wh)(e.reference)} to the working tree`,item:e.subcommand},{label:ec(this.title,"pop"===e.subcommand?"apply":"pop"),detail:"pop"===e.subcommand?`Will apply the changes from ${(0,o.Wh)(e.reference)} to the working tree`:`Will delete ${(0,o.Wh)(e.reference)} and apply the changes to the working tree`,item:"pop"===e.subcommand?"apply":"pop"}],void 0,{placeholder:`Confirm ${t.title}`,additionalButtons:[$._9,$.Nv],onDidClickButton:(t,i)=>{i===$._9?(0,ea.Fw)(e.reference,{pin:!1,preserveFocus:!0}):i===$.Nv&&(0,ea.ay)(e.reference,{select:!0,expand:!0})}}),r=yield i;return(0,c.i9)(i,e,r)?r[0].item:c.Vd}async *dropCommandSteps(e,t){for(;this.canStepsContinue(e);){if(e.counter<3||null==e.reference){let i=yield*(0,u.Qp)(e,t,{stash:await this.container.git.getStash(e.repo.path),placeholder:(t,i)=>null==i?`No stashes found in ${e.repo.formattedName}`:"Choose a stash to delete",picked:e.reference?.ref});if(i===c.Vd)break;e.reference=i}if((yield*this.dropCommandConfirmStep(e,t))!==c.Vd){(0,c.uZ)(e);try{await e.repo.stashDelete(`stash@{${e.reference.number}}`,e.reference.ref)}catch(e){W.Yd.error(e,t.title),(0,U.W8)("Unable to delete stash");return}}}}*dropCommandConfirmStep(e,t){let i=this.createConfirmStep((0,u.C8)(`Confirm ${t.title}`,e,t),[{label:t.title,detail:`Will delete ${(0,o.Wh)(e.reference)}`}],void 0,{placeholder:`Confirm ${t.title}`,additionalButtons:[$._9,$.Nv],onDidClickButton:(t,i)=>{i===$._9?(0,ea.Fw)(e.reference,{pin:!1,preserveFocus:!0}):i===$.Nv&&(0,ea.ay)(e.reference,{select:!0,expand:!0})}}),r=yield i;return(0,c.i9)(i,e,r)?void 0:c.Vd}async *listCommandSteps(e,t){for(t.title="Stashes";this.canStepsContinue(e);){if(e.counter<3||null==e.reference){let i=yield*(0,u.Qp)(e,t,{stash:await this.container.git.getStash(e.repo.path),placeholder:(t,i)=>null==i?`No stashes found in ${e.repo.formattedName}`:"Choose a stash",picked:e.reference?.ref});if(i===c.Vd)break;e.reference=i}let i=yield*eA(this.container,{command:"show",state:{repo:e.repo,reference:e.reference}},this.pickedVia);e.counter--,i===c.Vd&&(0,c.uZ)(e)}}async *pushCommandSteps(e,t){for(null==e.flags&&(e.flags=[]);this.canStepsContinue(e);){if(e.counter<3||null==e.message){if(null==e.message){let t=await this.container.git.getScmRepository(e.repo.path);e.message=t?.inputBox.value}let i=yield*this.pushCommandInputMessageStep(e,t);if(i===c.Vd)break;e.message=i}if(this.confirm(e.confirm)){let i=yield*this.pushCommandConfirmStep(e,t);if(i===c.Vd)continue;e.flags=i}try{await e.repo.stashSave(e.message,e.uris,{includeUntracked:e.flags.includes("--include-untracked"),keepIndex:e.flags.includes("--keep-index"),onlyStaged:e.flags.includes("--staged")}),(0,c.uZ)(e)}catch(r){if(W.Yd.error(r,t.title),r instanceof el.s8&&r.reason===el.g1.ConflictingStagedAndUnstagedLines&&e.flags.includes("--staged")){let t={title:"Yes"},i={title:"No",isCloseAffordance:!0};if(await n.window.showErrorMessage(r.message,{modal:!0},t,i)===t){e.uris=e.onlyStagedUris,e.flags.splice(e.flags.indexOf("--staged"),1);continue}return}let i=r?.message??r?.toString()??"";if(i.includes("newer version of Git")){n.window.showErrorMessage(`Unable to stash changes. ${i}`);return}(0,U.W8)("Unable to stash changes");return}}}async *pushCommandInputMessageStep(e,t){let i=(0,c.Ke)({title:(0,u.C8)(t.title,e,t,null!=e.uris?`${(0,h.vk)(y.NE.Dot,2,2)}${1===e.uris.length?(0,k.d)(e.uris[0],{fileOnly:!0}):`${e.uris.length} files`}`:void 0),placeholder:"Please provide a stash message",value:e.message,prompt:"Enter stash message"}),r=yield i;return(0,c.$V)(i,e,r)&&await (0,c.Wm)(i,e,r)?r:c.Vd}*pushCommandConfirmStep(e,t){let i=this.createConfirmStep((0,u.C8)(`Confirm ${t.title}`,e,t),null==e.uris||0===e.uris.length?[l(e.flags,[],{label:t.title,detail:"Will stash uncommitted changes"}),l(e.flags,["--include-untracked"],{label:`${t.title} & Include Untracked`,description:"--include-untracked",detail:"Will stash uncommitted changes, including untracked files"}),l(e.flags,["--keep-index"],{label:`${t.title} & Keep Staged`,description:"--keep-index",detail:"Will stash uncommitted changes, but will keep staged files intact"})]:[l(e.flags,[],{label:t.title,detail:`Will stash changes from ${1===e.uris.length?(0,k.d)(e.uris[0],{fileOnly:!0}):`${e.uris.length} files`}`}),l(e.flags,["--keep-index"],{label:`${t.title} & Keep Staged`,detail:`Will stash changes from ${1===e.uris.length?(0,k.d)(e.uris[0],{fileOnly:!0}):`${e.uris.length} files`}, but will keep staged files intact`})],void 0,{placeholder:`Confirm ${t.title}`}),r=yield i;return(0,c.i9)(i,e,r)?r[0].item:c.Vd}async *renameCommandSteps(e,t){for(;this.canStepsContinue(e);){if(e.counter<3||null==e.reference){let i=yield*(0,u.Qp)(e,t,{stash:await this.container.git.getStash(e.repo.path),placeholder:(t,i)=>null==i?`No stashes found in ${e.repo.formattedName}`:"Choose a stash to rename",picked:e.reference?.ref});if(i===c.Vd)break;e.reference=i}if(e.counter<4||null==e.message){let i=yield*this.renameCommandInputMessageStep(e,t);if(i===c.Vd)continue;e.message=i}if(!this.confirm(e.confirm)||(yield*this.renameCommandConfirmStep(e,t))!==c.Vd){(0,c.uZ)(e);try{await e.repo.stashRename(e.reference.name,e.reference.ref,e.message,e.reference.stashOnRef)}catch(e){W.Yd.error(e,t.title),(0,U.W8)(e.message)}}}}async *renameCommandInputMessageStep(e,t){let i=(0,c.Ke)({title:(0,u.C8)(t.title,e,t),placeholder:`Please provide a new message for ${(0,o.Wh)(e.reference,{icon:!1})}`,value:e.message??e.reference?.message,prompt:"Enter new stash message"}),r=yield i;return(0,c.$V)(i,e,r)&&await (0,c.Wm)(i,e,r)?r:c.Vd}*renameCommandConfirmStep(e,t){let i=this.createConfirmStep((0,u.C8)(`Confirm ${t.title}`,e,t),[{label:t.title,detail:`Will rename ${(0,o.Wh)(e.reference)}`,item:e.subcommand}],void 0,{placeholder:`Confirm ${t.title}`,additionalButtons:[$._9,$.Nv],onDidClickButton:(t,i)=>{i===$._9?(0,ea.Fw)(e.reference,{pin:!1,preserveFocus:!0}):i===$.Nv&&(0,ea.ay)(e.reference,{select:!0,expand:!0})}}),r=yield i;return(0,c.i9)(i,e,r)?r[0].item:c.Vd}}class ed extends c.tR{constructor(e,t){super(e,"status","status","Status",{description:"shows status information about a repository"});let i=0;t?.state?.repo!=null&&i++,this.initialState={counter:i,confirm:!1,...t?.state}}get canConfirm(){return!1}async *steps(e){let t={repos:this.container.git.openRepositories,associatedView:this.container.commitsView,status:void 0,title:this.title},i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repo||"string"==typeof e.repo){if(i=!1,1===t.repos.length)i=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{let i=yield*(0,u.lA)(e,t);if(i===c.Vd)break;e.repo=i}}if(t.status=await e.repo.getStatus(),null==t.status)return;t.title=`${this.title}${(0,h.vk)(y.NE.Dot,2,2)}${(0,o.Wh)((0,o.xB)(t.status.branch,e.repo.path,{refType:"branch",name:t.status.branch,remote:!1,upstream:null!=t.status.upstream?{name:t.status.upstream,missing:!1}:void 0}),{icon:!1})}`;let r=yield*(0,u.up)(e,t);if(r===c.Vd){i&&e.counter--;continue}if(r instanceof en.Wv){let t=yield*r.executeSteps(this.pickedVia);e.counter--,t===c.Vd&&(0,c.uZ)(e);continue}if(r instanceof j.$w){(0,c.uZ)(e),r.execute();break}}}}class ep extends c.tR{constructor(e,t){super(e,"switch","switch","Switch Branch",{description:"aka checkout, switches the current branch to a specified branch"});let i=0;t?.state?.repos!=null&&(!Array.isArray(t.state.repos)||0!==t.state.repos.length)&&i++,t?.state?.reference!=null&&i++,this.initialState={counter:i,confirm:t?.confirm,...t?.state}}async execute(e){await n.window.withProgress({location:n.ProgressLocation.Notification,title:`Switching ${1===e.repos.length?e.repos[0].formattedName:`${e.repos.length} repositories`} to ${e.reference.name}`},()=>Promise.all(e.repos.map(t=>t.switch(e.reference.ref,{createBranch:e.createBranch,progress:!1})))),null!=e.fastForwardTo&&e.repos[0].merge("--ff-only",e.fastForwardTo.ref)}isMatch(e){return super.isMatch(e)||"checkout"===e}isFuzzyMatch(e){return super.isFuzzyMatch(e)||"checkout"===e}async *steps(e){let t={repos:this.container.git.openRepositories,associatedView:this.container.commitsView,showTags:!1,switchToLocalFrom:void 0,title:this.title};null==e.repos||Array.isArray(e.repos)||(e.repos=[e.repos]);let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repos||0===e.repos.length||(0,b.GI)(e.repos)){if(i=!1,1===t.repos.length)i=!0,null==e.repos&&e.counter++,e.repos=[t.repos[0]];else{let i=yield*(0,u.j8)(e,t,{skipIfPossible:e.counter>=1});if(i===c.Vd)break;e.repos=i}}if(e.counter<2||null==e.reference){let r=yield*(0,u.xC)(e,t,{placeholder:e=>`Choose a branch${e.showTags?" or tag":""} to switch to`});if(r===c.Vd){i&&e.counter--;continue}e.reference=r}if((0,o.UR)(e.reference)&&e.reference.remote){t.title=`Create Branch and ${this.title}`;let{values:i}=await this.container.git.getBranches(e.reference.repoPath,{filter:t=>t.upstream?.name===e.reference.name,sort:{orderBy:"date:desc"}});if(0===i.length){let i=yield*(0,u.f6)(e,t,{placeholder:"Please provide a name for the new branch",titleContext:` based on ${(0,o.Wh)(e.reference,{icon:!1})}`,value:e.createBranch??(0,o.Av)(e.reference)});if(i===c.Vd)continue;e.createBranch=i}else t.title=`${this.title} to Local Branch`,t.switchToLocalFrom=e.reference,e.reference=i[0],e.createBranch=void 0}else e.createBranch=void 0;if(this.confirm(e.confirm||null!=t.switchToLocalFrom)){let i=yield*this.confirmStep(e,t);if(i===c.Vd)continue;"switch+fast-forward"===i&&(e.fastForwardTo=t.switchToLocalFrom)}(0,c.uZ)(e),this.execute(e)}return e.counter<0?c.Vd:void 0}*confirmStep(e,t){let i;i=null!=t.switchToLocalFrom&&1===e.repos.length?[{label:`${t.title} and Fast-Forward`,description:"",detail:`Will switch to and fast-forward local ${(0,o.Wh)(e.reference)} in $(repo) ${e.repos[0].formattedName}`,item:"switch+fast-forward"}]:[];let r=this.createConfirmStep((0,u.C8)(`Confirm ${t.title}`,e,t),[{label:t.title,description:e.createBranch?"-b":"",detail:`Will ${e.createBranch?`create and switch to a new branch named ${e.createBranch} from ${(0,o.Wh)(e.reference)}`:`switch to ${null!=t.switchToLocalFrom?"local ":""}${(0,o.Wh)(e.reference)}`} in ${1===e.repos.length?`$(repo) ${e.repos[0].formattedName}`:`${e.repos.length} repositories`}`,item:"switch"},...i],void 0,{placeholder:`Confirm ${t.title}`}),s=yield r;return(0,c.i9)(r,e,s)?s[0].item:c.Vd}}let eg=new Map([["create","Create"],["delete","Delete"]]);function em(e,t){return null==t?e:`${eg.get(t)} ${e}`}class ef extends c.tR{subcommand;constructor(e,t){super(e,"tag","tag","Tag",{description:"create, or delete tags"});let i=0;if(t?.state?.subcommand!=null)switch(i++,t.state.subcommand){case"create":null!=t.state.reference&&i++,null!=t.state.name&&i++,null!=t.state.message&&i++;break;case"delete":null!=t.state.references&&(!Array.isArray(t.state.references)||0!==t.state.references.length)&&i++}t?.state?.repo!=null&&i++,this.initialState={counter:i,confirm:t?.confirm,...t?.state}}get canConfirm(){return null!=this.subcommand}get canSkipConfirm(){return"delete"!==this.subcommand&&super.canSkipConfirm}get skipConfirmKey(){return`${this.key}${null==this.subcommand?"":`-${this.subcommand}`}:${this.pickedVia}`}async *steps(e){let t={repos:this.container.git.openRepositories,associatedView:this.container.tagsView,showTags:!1,title:this.title},i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.subcommand){this.subcommand=void 0;let t=yield*this.pickSubcommandStep(e);if(t===c.Vd)break;e.subcommand=t}if(this.subcommand=e.subcommand,e.counter<2||null==e.repo||"string"==typeof e.repo){if(i=!1,1===t.repos.length)i=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{let i=yield*(0,u.lA)(e,t);if(i===c.Vd)continue;e.repo=i}}switch(t.title=em("delete"===e.subcommand?"Tags":this.title,e.subcommand),e.subcommand){case"create":yield*this.createCommandSteps(e,t),e.name=void 0;break;case"delete":yield*this.deleteCommandSteps(e,t);break;default:(0,c.uZ)(e)}i&&e.counter--}return e.counter<0?c.Vd:void 0}*pickSubcommandStep(e){let t=(0,c.xf)({title:this.title,placeholder:`Choose a ${this.label} command`,items:[{label:"create",description:"creates a new tag",picked:"create"===e.subcommand,item:"create"},{label:"delete",description:"deletes the specified tags",picked:"delete"===e.subcommand,item:"delete"}],buttons:[n.QuickInputButtons.Back]}),i=yield t;return(0,c.i9)(t,e,i)?i[0].item:c.Vd}async *createCommandSteps(e,t){for(null==e.flags&&(e.flags=[]);this.canStepsContinue(e);){if(e.counter<3||null==e.reference){let i=yield*(0,u.Yv)(e,t,{placeholder:e=>`Choose a branch${e.showTags?" or tag":""} to create the new tag from`,picked:e.reference?.ref??(await e.repo.getBranch())?.ref,titleContext:" from",value:(0,o.FT)(e.reference)?e.reference.ref:void 0});if(i===c.Vd)break;e.reference=i}if(e.counter<4||null==e.name){let i=yield*(0,u.fG)(e,t,{placeholder:"Please provide a name for the new tag",titleContext:` at ${(0,o.Wh)(e.reference,{capitalize:!0,icon:!1})}`,value:e.name??(0,o.Av)(e.reference)});if(i===c.Vd)continue;e.name=i}if(e.counter<5||null==e.message){let i=yield*this.createCommandInputMessageStep(e,t);if(i===c.Vd)continue;e.message=i}if(0===e.message.length||e.flags.includes("-m")||e.flags.push("-m"),this.confirm(e.confirm)){let i=yield*this.createCommandConfirmStep(e,t);if(i===c.Vd)continue;e.flags=i}(0,c.uZ)(e),e.repo.tag(...e.flags,...0!==e.message.length?[`"${e.message}"`]:[],e.name,e.reference.ref)}}async *createCommandInputMessageStep(e,t){let i=(0,c.Ke)({title:(0,u.C8)(`${t.title} at ${(0,o.Wh)(e.reference,{capitalize:!0,icon:!1})}`,e,t),placeholder:"Please provide an optional message to annotate the tag",value:e.message,prompt:"Enter optional message"}),r=yield i;return(0,c.$V)(i,e,r)&&await (0,c.Wm)(i,e,r)?r:c.Vd}*createCommandConfirmStep(e,t){let i=(0,c.Tv)((0,u.C8)(`Confirm ${t.title}`,e,t),[l(e.flags,0!==e.message.length?["-m"]:[],{label:t.title,description:0!==e.message.length?"-m":"",detail:`Will create a new tag named ${e.name} at ${(0,o.Wh)(e.reference)}`}),l(e.flags,0!==e.message.length?["--force","-m"]:["--force"],{label:`Force ${t.title}`,description:`--force${0!==e.message.length?" -m":""}`,detail:`Will forcibly create a new tag named ${e.name} at ${(0,o.Wh)(e.reference)}`})],t),r=yield i;return(0,c.i9)(i,e,r)?r[0].item:c.Vd}async *deleteCommandSteps(e,t){for(;this.canStepsContinue(e);){if(null==e.references||Array.isArray(e.references)||(e.references=[e.references]),e.counter<3||null==e.references||0===e.references.length){t.title=em("Tags",e.subcommand);let i=yield*(0,u.yY)(e,t,{picked:e.references?.map(e=>e.ref),placeholder:"Choose tags to delete"});if(i===c.Vd)break;e.references=i}t.title=em((0,h._6)("Tag",e.references.length,{only:!0}),e.subcommand),(yield*this.deleteCommandConfirmStep(e,t))!==c.Vd&&((0,c.uZ)(e),e.repo.tagDelete(e.references))}}*deleteCommandConfirmStep(e,t){let i=(0,c.Tv)((0,u.C8)(`Confirm ${t.title}`,e,t),[{label:t.title,detail:`Will delete ${(0,o.Wh)(e.references)}`}],t),r=yield i;return(0,c.i9)(i,e,r)?void 0:c.Vd}}var ew=i(5025),ev=i(2674);let ey=new Map([["create","Create"],["delete","Delete"],["open","Open"]]);function eb(e,t){return null==t?e:`${ey.get(t)} ${e}`}class eC extends c.tR{subcommand;canSkipConfirmOverride;constructor(e,t){super(e,"worktree","worktree","Worktree",{description:"open, create, or delete worktrees"});let i=0;if(t?.state?.subcommand!=null)switch(i++,t.state.subcommand){case"create":null!=t.state.uri&&i++,null!=t.state.reference&&i++;break;case"delete":null!=t.state.uris&&(!Array.isArray(t.state.uris)||0!==t.state.uris.length)&&i++;break;case"open":null!=t.state.uri&&i++}t?.state?.repo!=null&&i++,this.initialState={counter:i,confirm:t?.confirm,...t?.state}}get canConfirm(){return null!=this.subcommand}get canSkipConfirm(){return this.canSkipConfirmOverride??!1}get skipConfirmKey(){return`${this.key}${null==this.subcommand?"":`-${this.subcommand}`}:${this.pickedVia}`}async *steps(e){let t={repos:this.container.git.openRepositories,associatedView:this.container.worktreesView,showTags:!1,title:this.title},i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.subcommand){this.subcommand=void 0;let t=yield*this.pickSubcommandStep(e);if(t===c.Vd)break;e.subcommand=t}if(this.subcommand=e.subcommand,e.counter<2||null==e.repo||"string"==typeof e.repo){if(i=!1,1===t.repos.length)i=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{let i=yield*(0,u.lA)(e,t);if(i===c.Vd)continue;e.repo=i}}if(e.repo=await e.repo.getMainRepository()??e.repo,!function(e){if(null==e.repo||"string"==typeof e.repo)throw Error("Missing repository")}(e),(yield*(0,u.Oz)(e,t,x.x.Worktrees))===c.Vd)break;switch(t.title=eb("delete"===e.subcommand?"Worktrees":this.title,e.subcommand),e.subcommand){case"create":yield*this.createCommandSteps(e,t),e.uri=void 0;break;case"delete":null==e.uris||Array.isArray(e.uris)||(e.uris=[e.uris]),yield*this.deleteCommandSteps(e,t);break;case"open":yield*this.openCommandSteps(e,t);break;default:(0,c.uZ)(e)}i&&e.counter--}return e.counter<0?c.Vd:void 0}*pickSubcommandStep(e){let t=(0,c.xf)({title:this.title,placeholder:`Choose a ${this.label} command`,items:[{label:"open",description:"opens the specified worktree",picked:"open"===e.subcommand,item:"open"},{label:"create",description:"creates a new worktree",picked:"create"===e.subcommand,item:"create"},{label:"delete",description:"deletes the specified worktrees",picked:"delete"===e.subcommand,item:"delete"}],buttons:[n.QuickInputButtons.Back]}),i=yield t;return(0,c.i9)(t,e,i)?i[0].item:c.Vd}async *createCommandSteps(e,t){for(null==t.defaultUri&&(t.defaultUri=await e.repo.getWorktreesDefaultUri()),null==e.flags&&(e.flags=[]),t.pickedUri=void 0,e.confirm=!0,this.canSkipConfirmOverride=void 0;this.canStepsContinue(e);){let i;if(e.counter<3||null==e.reference){let i=yield*(0,u.Yv)(e,t,{placeholder:e=>`Choose a branch${e.showTags?" or tag":""} to create the new worktree for`,picked:e.reference?.ref??(await e.repo.getBranch())?.ref,titleContext:" for",value:(0,o.FT)(e.reference)?e.reference.ref:void 0});if(i===c.Vd)break;e.reference=i}if(e.counter<4||null==e.uri){if(null==e.reference||r.D.get("worktrees.promptForLocation",e.repo.folder)||null==t.defaultUri){let i=yield*this.createCommandChoosePathStep(e,t,{titleContext:` for ${(0,o.Wh)(e.reference,{capitalize:!0,icon:!1,label:"branch"!==e.reference.refType})}`,defaultUri:t.defaultUri});if(i===c.Vd)continue;e.uri=i,t.pickedUri=e.uri}else e.uri=t.defaultUri}if(this.confirm(e.confirm)){let i=yield*this.createCommandConfirmStep(e,t);if(i===c.Vd)continue;[e.uri,e.flags]=i}if(e.confirm=!0,this.canSkipConfirmOverride=void 0,e.reference?.refType==="branch"&&e.reference?.remote&&!e.flags.includes("-b")&&(e.flags.push("-b"),e.createBranch=(0,o.Av)(e.reference),null!=await e.repo.getBranch(e.createBranch)&&(e.createBranch=e.reference.name)),e.flags.includes("-b")){let i;if(null!=e.createBranch){let t=await this.container.git.validateBranchOrTagName(e.repo.path,e.createBranch);t&&(t=null==await e.repo.getBranch(e.createBranch)),t||(i=e.createBranch,e.createBranch=void 0)}if(null==e.createBranch){let r=yield*(0,u.f6)(e,t,{placeholder:"Please provide a name for the new branch",titleContext:` from ${(0,o.Wh)(e.reference,{capitalize:!0,icon:!1,label:"branch"!==e.reference.refType})}`,value:i??e.createBranch??(0,o.Av)(e.reference)});if(r===c.Vd){e.flags=[];continue}e.createBranch=r}}let s=e.flags.includes("--direct")?e.uri:n.Uri.joinPath(e.uri,...(e.createBranch??e.reference.name).replace(/\\/g,"/").split("/"));try{i=await e.repo.createWorktree(s,{commitish:e.reference?.name,createBranch:e.flags.includes("-b")?e.createBranch:void 0,detach:e.flags.includes("--detach"),force:e.flags.includes("--force")}),!1!==e.reveal&&(0,ew.ay)(void 0,{select:!0,focus:!0})}catch(t){if(el.P6.is(t,el.hK.AlreadyCheckedOut)&&!e.flags.includes("--force")){let t={title:"Create New Branch"},i={title:"Create Anyway"},r={title:"Cancel",isCloseAffordance:!0},s=await n.window.showWarningMessage(`Unable to create the new worktree because ${(0,o.Wh)(e.reference,{icon:!1,quoted:!0})} is already checked out.

Would you like to create a new branch for this worktree or forcibly create it anyway?`,{modal:!0},t,i,r);if(s===t){e.flags.push("-b"),this.canSkipConfirmOverride=!0,e.confirm=!1;continue}if(s===i){e.flags.push("--force"),this.canSkipConfirmOverride=!0,e.confirm=!1;continue}}else if(el.P6.is(t,el.hK.AlreadyExists)){let e={title:"OK"},t={title:"Open Folder"};n.window.showErrorMessage(`Unable to create a new worktree in '${ev.e.getFriendlyPath(s)}' because the folder already exists and is not empty.`,e,t).then(e=>{e===t&&(0,O.qM)(s)})}else(0,U.W8)(`Unable to create a new worktree in '${ev.e.getFriendlyPath(s)}.`)}if((0,c.uZ)(e),null==i)break;let a=r.D.get("worktrees.openAfterCreate");if("never"===a)break;if("prompt"===a){yield*this.openCommandSteps({subcommand:"open",repo:e.repo,uri:i.uri,counter:3,confirm:!0},t);break}queueMicrotask(()=>{switch(a){case"always":(0,O.ic)(i.uri,{location:"currentWindow"});break;case"alwaysNewWindow":(0,O.ic)(i.uri,{location:"newWindow"});break;case"onlyWhenEmpty":(0,O.ic)(i.uri,{location:n.workspace.workspaceFolders?.length?"currentWindow":"newWindow"})}})}}async *createCommandChoosePathStep(e,t,i){let r=(0,c.jf)({show:async r=>{let s=i?.defaultUri!=null,o=await n.window.showInformationMessage(`Choose a location in which to create the worktree${i.titleContext}.`,{modal:!0},{title:"Choose Location"},...s?[{title:"Use Default Location"}]:[]);if(null==o)return R.Xe.Back;if("Use Default Location"===o.title)return i.defaultUri;let a=await n.window.showOpenDialog({canSelectFiles:!1,canSelectFolders:!0,canSelectMany:!1,defaultUri:t.pickedUri??e.uri??t.defaultUri,openLabel:"Select Worktree Location",title:`${(0,u.C8)(`Choose a Worktree Location${i.titleContext}`,e,t)}`});return null==a||0===a.length?R.Xe.Back:a[0]}}),s=yield r;return(0,c.$V)(r,e,s)&&await (0,c.Wm)(r,e,s)?s:c.Vd}*createCommandConfirmStep(e,t){let i;let r=t.pickedUri??e.uri,s=(0,h.AO)(ev.e.getFriendlyPath(r),60),a=!0,d=e.repo.uri,p=`${(0,w.EZ)(d.path)}.worktrees`;d.toString()!==r.toString()?i=(0,w.SG)(r,d)?n.Uri.joinPath(d,"..",p):(0,w.EZ)(r.path)===p?r:n.Uri.joinPath(r,p):(i=n.Uri.joinPath(d,"..",p),a=!1);let g=e.createBranch??(null!=e.reference?(0,o.Av)(e.reference):void 0),m=g?n.Uri.joinPath(i,...g.replace(/\\/g,"/").split("/")):i,f=(0,h.AO)(ev.e.getFriendlyPath(m),65),v=(0,h.AO)(ev.e.getFriendlyPath(n.Uri.joinPath(i,"<new-branch-name>")),60),y=e.reference?.refType==="branch"&&e.reference?.remote,b=(0,c.Tv)((0,u.C8)(`Confirm ${t.title} \u2022 ${(0,o.Wh)(e.reference,{icon:!1,label:!1})}`,e,t),[l(e.flags,y?["-b"]:[],{label:y?"Create Local Branch and Worktree":t.title,description:" in subfolder",detail:`Will create worktree in $(folder) ${f}`},i),l(e.flags,["-b"],{label:y?"Create New Local Branch and Worktree":"Create New Branch and Worktree",description:" in subfolder",detail:`Will create worktree in $(folder) ${v}`},i),...a?[(0,j.fz)(),l(e.flags,["--direct"],{label:y?"Create Local Branch and Worktree":t.title,description:" directly in folder",detail:`Will create worktree directly in $(folder) ${s}`},r),l(e.flags,["-b","--direct"],{label:y?"Create New Local Branch and Worktree":"Create New Branch and Worktree",description:" directly in folder",detail:`Will create worktree directly in $(folder) ${s}`},r)]:[]],t),C=yield b;return(0,c.i9)(b,e,C)?[C[0].context,C[0].item]:c.Vd}async *deleteCommandSteps(e,t){for(t.worktrees=await e.repo.getWorktrees(),null==e.flags&&(e.flags=[]);this.canStepsContinue(e);){if(e.counter<3||null==e.uris||0===e.uris.length){t.title=eb("Worktrees",e.subcommand);let i=yield*(0,u.Mb)(e,t,{filter:e=>e.main||!e.opened,includeStatus:!0,picked:e.uris?.map(e=>e.toString()),placeholder:"Choose worktrees to delete"});if(i===c.Vd)break;e.uris=i.map(e=>e.uri)}t.title=eb((0,h._6)("Worktree",e.uris.length,{only:!0}),e.subcommand);let i=yield*this.deleteCommandConfirmStep(e,t);if(i!==c.Vd)for(let r of(e.flags=i,(0,c.uZ)(e),e.uris)){let i=!1;do{i=!1;let s=e.flags.includes("--force");try{if(s){let e;let i=t.worktrees.find(e=>e.uri.toString()===r.toString());try{e=await i?.getStatus()}catch{}if(e?.hasChanges){let e={title:"Force Delete"},t={title:"Cancel",isCloseAffordance:!0};if(await n.window.showWarningMessage(`The worktree in '${r.fsPath}' has uncommitted changes.

Deleting it will cause those changes to be FOREVER LOST.
This is IRREVERSIBLE!

Are you sure you still want to delete it?`,{modal:!0},e,t)!==e)return}}await e.repo.deleteWorktree(r,{force:s})}catch(t){if(el.Nk.is(t)){if(t.reason===el.xe.MainWorkingTree)n.window.showErrorMessage("Unable to delete the main worktree");else if(!s){let s={title:"Force Delete"},o={title:"Cancel",isCloseAffordance:!0};await n.window.showErrorMessage(t.reason===el.xe.HasChanges?`Unable to delete worktree because there are UNCOMMITTED changes in '${r.fsPath}'.

Forcibly deleting it will cause those changes to be FOREVER LOST.
This is IRREVERSIBLE!

Would you like to forcibly delete it?`:`Unable to delete worktree in '${r.fsPath}'.

Would you like to try to forcibly delete it?`,{modal:!0},s,o)===s&&(e.flags.push("--force"),i=!0)}}else(0,U.W8)(`Unable to delete worktree in '${r.fsPath}.`)}}while(i)}}}*deleteCommandConfirmStep(e,t){let i=(0,c.Tv)((0,u.C8)(`Confirm ${t.title}`,e,t),[l(e.flags,[],{label:t.title,detail:`Will delete ${(0,h._6)("worktree",e.uris.length,{only:1===e.uris.length})}${1===e.uris.length?` in $(folder) ${ev.e.getFriendlyPath(e.uris[0])}`:""}`}),l(e.flags,["--force"],{label:`Force ${t.title}`,description:"including ANY UNCOMMITTED changes",detail:`Will forcibly delete ${(0,h._6)("worktree",e.uris.length,{only:1===e.uris.length})} ${1===e.uris.length?` in $(folder) ${ev.e.getFriendlyPath(e.uris[0])}`:""}`})],t),r=yield i;return(0,c.i9)(i,e,r)?r[0].item:c.Vd}async *openCommandSteps(e,t){for(t.worktrees=await e.repo.getWorktrees(),null==e.flags&&(e.flags=[]);this.canStepsContinue(e);){if(e.counter<3||null==e.uri){t.title=eb("Worktree",e.subcommand);let i=yield*(0,u.UP)(e,t,{includeStatus:!0,picked:e.uri?.toString(),placeholder:"Choose worktree to open"});if(i===c.Vd)break;e.uri=i.uri}t.title=eb("Worktree",e.subcommand);let i=yield*this.openCommandConfirmStep(e,t);if(i===c.Vd)continue;e.flags=i,(0,c.uZ)(e);let r=t.worktrees.find(t=>t.uri.toString()===e.uri.toString());if(null==r)break;e.flags.includes("--reveal-explorer")?(0,O.qM)(r.uri):(0,O.ic)(r.uri,{location:(0,ew.BC)(e.flags)})}}*openCommandConfirmStep(e,t){let i=(0,c.Tv)((0,u.C8)(`Confirm ${t.title}`,e,t),[l(e.flags,[],{label:t.title,detail:`Will open in the current window, the worktree in $(folder) ${ev.e.getFriendlyPath(e.uri)}`}),l(e.flags,["--new-window"],{label:`${t.title} in a New Window`,detail:`Will open in a new window, the worktree in $(folder) ${ev.e.getFriendlyPath(e.uri)}`}),l(e.flags,["--add-to-workspace"],{label:"Add Worktree to Workspace",detail:`Will add into the current workspace, the worktree in $(folder) ${ev.e.getFriendlyPath(e.uri)}`}),l(e.flags,["--reveal-explorer"],{label:"Reveal in File Explorer",detail:`Will open in the File Explorer, the worktree in $(folder) ${ev.e.getFriendlyPath(e.uri)}`})],t),r=yield i;return(0,c.i9)(i,e,r)?r[0].item:c.Vd}}function eA(e,t,i){let r=new eP(e,t),s=r.find(t.command);return null==s?function*(){}():(r.setCommand(s,i),s.executeSteps())}class eP{constructor(e,t){this.container=e;let i=(0,s.fw)("gitlens:hasVirtualFolders",!1),n=i||(0,s.fw)("gitlens:readonly",!1)||(0,s.fw)("gitlens:untrusted",!1);if(this.items=[n?void 0:new g(e,t?.command==="branch"?t:void 0),n?void 0:new m(e,t?.command==="cherry-pick"?t:void 0),i?void 0:new v(e,t?.command==="co-authors"?t:void 0),n?void 0:new A(e,t?.command==="fetch"?t:void 0),new S(e,t?.command==="log"?t:void 0),n?void 0:new _(e,t?.command==="merge"?t:void 0),n?void 0:new F(e,t?.command==="pull"?t:void 0),n?void 0:new T(e,t?.command==="push"?t:void 0),n?void 0:new E(e,t?.command==="rebase"?t:void 0),n?void 0:new N(e,t?.command==="remote"?t:void 0),n?void 0:new H(e,t?.command==="reset"?t:void 0),n?void 0:new G(e,t?.command==="revert"?t:void 0),new ei(e,t?.command==="search"||t?.command==="grep"?t:void 0),new eo(e,t?.command==="show"?t:void 0),i?void 0:new eu(e,t?.command==="stash"?t:void 0),i?void 0:new ed(e,t?.command==="status"?t:void 0),n?void 0:new ep(e,t?.command==="switch"||t?.command==="checkout"?t:void 0),n?void 0:new ef(e,t?.command==="tag"?t:void 0),i?void 0:new eC(e,t?.command==="worktree"?t:void 0)].filter(e=>null!=e),"usage"===r.D.get("gitCommands.sortBy")){let e=this.container.storage.getWorkspace("gitComandPalette:usage");null!=e&&this.items.sort((t,i)=>(e[i.key]??0)-(e[t.key]??0))}this.hiddenItems=[]}buttons=[];hiddenItems;ignoreFocusOut=!1;items;matchOnDescription=!0;placeholder="Choose a git command";title="GitLens";_command;get command(){return this._command}find(e,t=!1){if(t){let t=e.toLowerCase();return this.items.find(e=>e.isFuzzyMatch(t))??this.hiddenItems.find(e=>e.isFuzzyMatch(t))}return this.items.find(t=>t.isMatch(e))??this.hiddenItems.find(t=>t.isMatch(e))}setCommand(e,t){null!=this._command&&(this._command.picked=!1),null!=e&&(e.picked=!0,e.pickedVia=t),this._command=e,null!=e&&this.updateCommandUsage(e.key,Date.now())}async updateCommandUsage(e,t){let i=this.container.storage.getWorkspace("gitComandPalette:usage");void 0===i&&(i=Object.create(null)),i[e]=t,await this.container.storage.storeWorkspace("gitComandPalette:usage",i)}}},2138:(e,t,i)=>{i.d(t,{_:()=>g});var r=i(5255),s=i(7462),n=i(439),o=i(6503),a=i(7925),l=i(635),h=i(9529),c=i(4336),u=i(7139),d=Object.defineProperty,p=Object.getOwnPropertyDescriptor;let g=class extends u.pu{constructor(e){super([r.Gh.OpenCommitOnRemote,r.Gh.Deprecated_OpenCommitInRemote,r.Gh.CopyRemoteCommitUrl]),this.container=e}static getMarkdownCommandArgs(e){return super.getMarkdownCommandArgsCore(r.Gh.OpenCommitOnRemote,"string"==typeof e?{sha:e}:e)}preExecute(e,t){let i=e.uri;if("editorLine"===e.type&&(t={...t,line:e.line}),(0,u.en)(e)){if(e.node.commit.isUncommitted)return Promise.resolve(void 0);t={...t,sha:e.node.commit.sha},i=e.node.uri}return(0,u.jT)(e)&&(t={sha:e.item.ref},i=e.uri),e.command===r.Gh.CopyRemoteCommitUrl&&(t={...t,clipboard:!0}),this.execute(e.editor,i,t)}async execute(e,t,i){let d=null!=(t=(0,u.SX)(t,e))?await s.YY.fromUri(t):void 0,p=(await l.hM(d,e,i?.clipboard?"Copy Remote Commit URL":"Open Commit On Remote"))?.path;if(p){null==d&&(d=s.YY.fromRepoPath(p)),i={...i};try{if(null==i.sha){let t=i.line??e?.selection.active.line;if(null==t)return;let r=await this.container.git.getBlameForLine(d,t,e?.document);if(null==r){(0,a.zk)("Unable to open commit on remote provider");return}i.sha=r.commit.isUncommitted?await r.commit.getPreviousSha()??n.Ii:r.commit.sha}await (0,h.P0)(r.Gh.OpenOnRemote,{resource:{type:o.J.Commit,sha:i.sha},repoPath:p,clipboard:i.clipboard})}catch(e){c.Yd.error(e,"OpenCommitOnRemoteCommand"),(0,a.W8)("Unable to open commit on remote provider")}}}};g=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?p(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&d(t,i,n),n})([(0,h.WD)()],g)},4893:(e,t,i)=>{i.d(t,{D:()=>w});var r=i(9496),s=i(5255),n=i(6897),o=i(7462),a=i(4321),l=i(7925),h=i(1857),c=i(9729),u=i(9529),d=i(4336),p=i(4627),g=i(7139),m=Object.defineProperty,f=Object.getOwnPropertyDescriptor;let w=class extends g.pu{constructor(e){super([s.Gh.OpenFileAtRevision,s.Gh.OpenBlamePriorToChange]),this.container=e}static getMarkdownCommandArgs(e,t,i){let n;return n=e instanceof r.Uri?{revisionUri:e,line:i,annotationType:t}:e,super.getMarkdownCommandArgsCore(s.Gh.OpenFileAtRevision,n)}async preExecute(e,t){if(e.command===s.Gh.OpenBlamePriorToChange){if(null==(t={...t,annotationType:"blame"}).revisionUri&&null!=e.editor){let i=e.editor.selection.active.line;if(i>=0)try{let r=await o.YY.fromUri(e.editor.document.uri),s=await this.container.git.getBlameForLine(r,i);if(null!=s){if(s.commit.isUncommitted){let e=await s.commit.getPreviousComparisonUrisForLine(i);if(e?.previous!=null)t.revisionUri=this.container.git.getRevisionUri(e.previous);else{(0,l.RR)(s.commit);return}}else{let e=null!=s?await s?.commit.getPreviousSha():void 0;if(null!=e)t.revisionUri=this.container.git.getRevisionUri(s.commit.getGitUri(!0));else{(0,l.RR)(s.commit);return}}}}catch(e){d.Yd.error(e,"OpenBlamePriorToChangeCommand")}}if(null==t.revisionUri){(0,l.W8)("Unable to open blame");return}}return this.execute(e.editor,e.uri,t)}async execute(e,t,i){if(null==(t=(0,g.SX)(t,e)))return;let r=await o.YY.fromUri(t);null==(i={...i}).line&&(i.line=e?.selection.active.line??0);try{if(null==i.revisionUri){let e=this.container.git.getLogForFile(r.repoPath,r.fsPath).then(e=>e??(r.sha?this.container.git.getLogForFile(r.repoPath,r.fsPath,{ref:r.sha}):void 0)),t=`Open ${"blame"===i.annotationType?"Blame":"File"} at Revision${(0,p.vk)(s.NE.Dot,2,2)}`,o=await (0,h.D)(e,`${t}${r.getFormattedFileName({suffix:r.sha?`:${(0,a.zL)(r.sha)}`:void 0,truncateTo:s.d$-t.length})}`,`Choose a commit to ${"blame"===i.annotationType?"blame":"open"} the file revision from`,{picked:r.sha,keys:["right","alt+right","ctrl+right"],onDidPressKey:async(e,t)=>{await (0,n.YS)(t.item.file,t.item,{annotationType:i.annotationType,line:i.line,preserveFocus:!0,preview:!1})},showOtherReferences:[c.$w.fromCommand("Choose a Branch or Tag...",s.Gh.OpenFileAtRevisionFrom),c.$w.fromCommand("Choose a Stash...",s.Gh.OpenFileAtRevisionFrom,{stash:!0})]});if(o?.file==null)return;await (0,n.YS)(o.file,o,{annotationType:i.annotationType,line:i.line,...i.showOptions});return}await (0,n.YS)(i.revisionUri,{annotationType:i.annotationType,line:i.line,...i.showOptions})}catch(e){d.Yd.error(e,"OpenFileAtRevisionCommand"),(0,l.W8)("Unable to open file at revision")}}};w=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?f(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&m(t,i,n),n})([(0,u.WD)()],w)},3016:(e,t,i)=>{i.d(t,{AI:()=>a,DY:()=>y,Ft:()=>p,I4:()=>c,Lp:()=>P,Mn:()=>d,My:()=>l,Nv:()=>f,Q0:()=>h,_9:()=>v,_r:()=>m,cq:()=>C,eY:()=>u,ip:()=>w,jQ:()=>n,vU:()=>b,v_:()=>g,zY:()=>A});var r=i(9496),s=i(5140);class n{constructor(e,t=!1){this.state=e,this._on=t}get iconPath(){let e=this.getToggledState().icon;return"string"==typeof e?{dark:r.Uri.file(s.W.instance.context.asAbsolutePath(`images/dark/${e}.svg`)),light:r.Uri.file(s.W.instance.context.asAbsolutePath(`images/light/${e}.svg`))}:e}get tooltip(){return this.getToggledState().tooltip}get on(){return this._on}set on(e){this._on=e}getState(){return"function"==typeof this.state?this.state():this.state}getToggledState(){return this.on?this.getState().on:this.getState().off}}class o extends n{constructor(e,t,i=!1){super({off:{tooltip:e,icon:t.off},on:{tooltip:e,icon:t.on}},i)}}let a={iconPath:new r.ThemeIcon("clear-all"),tooltip:"Clear"},l={iconPath:new r.ThemeIcon("sync"),tooltip:"Fetch"},h={iconPath:new r.ThemeIcon("refresh"),tooltip:"Load More"},c=class extends o{constructor(e=!1){super("Match Case",{off:"icon-match-case",on:"icon-match-case-selected"},e)}},u=class extends o{constructor(e=!1){super("Match All",{off:"icon-match-all",on:"icon-match-all-selected"},e)}},d=class extends o{constructor(e=!1){super("Match using Regular Expressions",{off:"icon-match-regex",on:"icon-match-regex-selected"},e)}},p={iconPath:new r.ThemeIcon("git-commit"),tooltip:"Choose a Specific Commit"},g=class extends n{constructor(e=!1,t,i){super(()=>({on:{tooltip:"Choose a Specific Commit",icon:new r.ThemeIcon("git-commit")},off:{tooltip:`Choose a Branch${t.showTags?" or Tag":""}`,icon:new r.ThemeIcon("git-branch")}}),e),this.onDidClick=i}},m={iconPath:new r.ThemeIcon("empty-window"),tooltip:"Open in New Window"},f={iconPath:new r.ThemeIcon("search"),tooltip:"Reveal in Side Bar"},w={iconPath:new r.ThemeIcon("settings-gear"),tooltip:"Set as Default Remote"},v={iconPath:new r.ThemeIcon("eye"),tooltip:"Open Details"},y={iconPath:new r.ThemeIcon("compare-changes"),tooltip:"Open Changes"},b={iconPath:new r.ThemeIcon("link-external"),tooltip:"Show Results in Side Bar"},C=class extends o{constructor(e=!1){super("Show Tags",{off:new r.ThemeIcon("tag"),on:"icon-tag-selected"},e)}},A={iconPath:new r.ThemeIcon("gitlens-confirm-checked"),tooltip:"You will be presented with a required confirmation step before the action is performed"},P=class extends n{constructor(e=!1,t,i){super(()=>({on:{tooltip:t?"For future actions, you will be presented with confirmation step before the action is performed\nClick to toggle":"You will be presented with confirmation step before the action is performed\nClick to toggle",icon:new r.ThemeIcon("gitlens-confirm-checked")},off:{tooltip:t?"For future actions, you won't be presented with confirmation step before the action is performed\nClick to toggle":"You won't be presented with confirmation step before the action is performed\nClick to toggle",icon:new r.ThemeIcon("gitlens-confirm-unchecked")}}),e),this.onDidClick=i}}},847:(e,t,i)=>{i.d(t,{B$:()=>N,C8:()=>B,C_:()=>U,FO:()=>Q,KT:()=>ea,Kf:()=>Y,Lt:()=>ee,Mb:()=>eo,NQ:()=>q,Oz:()=>ep,Qp:()=>er,Rj:()=>Z,UP:()=>en,Yv:()=>z,bR:()=>X,f6:()=>G,fD:()=>eh,fG:()=>j,j8:()=>ei,lA:()=>et,nI:()=>ec,s4:()=>J,sd:()=>V,up:()=>ed,v$:()=>H,xC:()=>K,yY:()=>es});var r=i(5255),s=i(5140),n=i(3401),o=i(6897),a=i(7445),l=i(4155),h=i(8834),c=i(252),u=i(6713),d=i(5025),p=i(5367),g=i(6450),m=i(4321),f=i(3050),w=i(6503),v=i(3646),y=i(9502),b=i(4794),C=i(6516),A=i(3931),P=i(9729),D=i(3599),k=i(1742),S=i(5009),R=i(2800),$=i(5148),_=i(1774),I=i(3105),F=i(7469),x=i(4627),T=i(2509),O=i(4239),E=i(3016);function B(e,t,i,s){let n;return 1===i.repos.length?s?`${e}${(0,x.$G)(s,r.d$-e.length)}`:e:(n=null!=t.repo?`${s??""}${(0,x.vk)(r.NE.Dot,2,2)}${t.repo.formattedName}`:1===t.repos.length?`${s??""}${(0,x.vk)(r.NE.Dot,2,2)}${t.repos[0].formattedName}`:`${(0,x.vk)(r.NE.Dot,2,2)}${t.repos.length} repositories`,`${e}${(0,x.$G)(n,r.d$-e.length)}`)}async function U(e,t){return N(e,["branches"],{buttons:t?.buttons,filter:t?.filter!=null?{branches:t.filter}:void 0,picked:t?.picked,sort:t?.sort==null||{branches:t.sort}})}async function W(e,t){return null==e?[]:(await e.getRemotes(t?.filter!=null?{filter:t.filter}:void 0)).map(e=>(0,k.vl)(e,t?.picked!=null&&("string"==typeof t.picked?e.name===t.picked:t.picked.includes(e.name)),{buttons:t?.buttons,upstream:!0}))}async function M(e,t){return N(e,["tags"],{buttons:t?.buttons,filter:t?.filter!=null?{tags:t.filter}:void 0,picked:t?.picked,sort:t?.sort==null||{tags:t.sort}})}async function L(e,{buttons:t,filter:i,includeStatus:r,picked:s}){return Promise.all([...(e instanceof v._j?await e.getWorktrees():e).filter(e=>null==i||i(e)).map(async e=>{let i,n=!1;if(r)try{i=await e.getStatus()}catch{n=!0}return(0,k.E0)(e,null!=s&&("string"==typeof s?e.uri.toString()===s:s.includes(e.uri.toString())),n,{buttons:t,path:!0,status:i})})])}async function N(e,t,{buttons:i,filter:r,picked:s,sort:n}={}){let o,a;if(null==e)return[];let l=!1;if(e instanceof v._j||1===e.length){l=!0;let i=e instanceof v._j?e:e[0],[s,h]=await Promise.allSettled([t.includes("branches")?i.getBranches({filter:r?.branches,sort:"boolean"==typeof n?n:n?.branches}):void 0,t.includes("tags")?i.getTags({filter:r?.tags,sort:!0}):void 0]);o=F.Sb(s)?.values??[],a=F.Sb(h)?.values??[]}else{let[i,s]=await Promise.allSettled([t.includes("branches")?Promise.allSettled(e.map(e=>e.getBranches({filter:r?.branches,sort:"boolean"==typeof n?n:n?.branches}))):void 0,t.includes("tags")?Promise.allSettled(e.map(e=>e.getTags({filter:r?.tags,sort:"boolean"==typeof n?n:n?.tags}))):void 0]),l="fulfilled"===i.status?i.value?.filter(e=>"fulfilled"===e.status)?.map(e=>e.value.values):void 0,h="fulfilled"===s.status?s.value?.filter(e=>"fulfilled"===e.status)?.map(e=>e.value.values):void 0;t.includes("branches")&&null!=l&&(o=(0,p.YF)((0,R.jV)(l,(e,t)=>e.name===t.name))),t.includes("tags")&&null!=h&&(a=(0,y.Pj)((0,R.jV)(h,(e,t)=>e.name===t.name)))}return(null==o||0===o.length)&&(null==a||0===a.length)?[]:null!=o&&0!==o.length&&(null==a||0===a.length)?[(0,P.fz)("Branches"),...await Promise.all(o.filter(e=>!e.remote).map(e=>(0,k.RE)(e,null!=s&&("string"==typeof s?e.ref===s:s.includes(e.ref)),{buttons:i,current:!!l&&"checkmark",ref:l,status:l,type:"remote"}))),(0,P.fz)("Remote Branches"),...await Promise.all(o.filter(e=>e.remote).map(e=>(0,k.RE)(e,null!=s&&("string"==typeof s?e.ref===s:s.includes(e.ref)),{buttons:i,current:!!l&&"checkmark",ref:l,status:l,type:"remote"})))]:null!=a&&0!==a.length&&(null==o||0===o.length)?a.map(e=>(0,k.MH)(e,null!=s&&("string"==typeof s?e.ref===s:s.includes(e.ref)),{buttons:i,message:!1,ref:l})):[(0,P.fz)("Branches"),...await Promise.all(o.filter(e=>!e.remote).map(e=>(0,k.RE)(e,null!=s&&("string"==typeof s?e.ref===s:s.includes(e.ref)),{buttons:i,current:!!l&&"checkmark",ref:l,status:l}))),(0,P.fz)("Tags"),...a.map(e=>(0,k.MH)(e,null!=s&&("string"==typeof s?e.ref===s:s.includes(e.ref)),{buttons:i,message:!1,ref:l,type:!0})),(0,P.fz)("Remote Branches"),...await Promise.all(o.filter(e=>e.remote).map(e=>(0,k.RE)(e,null!=s&&("string"==typeof s?e.ref===s:s.includes(e.ref)),{buttons:i,current:!!l&&"checkmark",ref:l,status:l,type:"remote"})))]}function H(e,t){return async(i,r)=>{let n=!1;if(r.startsWith("#")&&(n=!0,r=r.substring(1)),null==e)return!1;if(Array.isArray(e)){if(1!==e.length)return!1;e=e[0]}if(n&&t?.ranges&&(0,m.yk)(r))return i.items=[(0,k.RP)(r,e.path,!0,{alwaysShow:!0,buttons:t?.buttons,ref:!1,icon:!1})],!0;if(!await s.W.instance.git.validateReference(e.path,r))return!!n&&(i.items=[(0,D.fw)(D.Xe.Back,!0,{label:"Enter a reference or commit SHA"})],!0);if(!n&&await s.W.instance.git.hasBranchOrTag(e.path,{filter:{branches:e=>e.name.includes(r),tags:e=>e.name.includes(r)}}))return!1;let o=await s.W.instance.git.getCommit(e.path,r);return i.items=[(0,k.YY)(o,!0,{alwaysShow:!0,buttons:t?.buttons,compact:!0,icon:!0})],!0}}async function*G(e,t,i){let r=(0,O.Ke)({title:B(`${t.title}${i.titleContext??""}`,e,t),placeholder:i.placeholder,value:i.value,prompt:"Enter branch name",validate:async t=>{if(null==t)return[!1,void 0];if(0===(t=t.trim()).length)return[!1,"Please enter a valid branch name"];if("repo"in e)return await s.W.instance.git.validateBranchOrTagName(e.repo.path,t)?await e.repo.getBranch(t)?[!1,`A branch named '${t}' already exists`]:[!0,void 0]:[!1,`'${t}' isn't a valid branch name`];for(let i of e.repos){if(!await s.W.instance.git.validateBranchOrTagName(i.path,t))return[!1,`'${t}' isn't a valid branch name`];if(await i.getBranch(t))return[!1,`A branch named '${t}' already exists`]}return[!0,void 0]}}),n=yield r;return(0,O.$V)(r,e,n)&&await (0,O.Wm)(r,e,n)?n:O.Vd}async function*q(e,t,i){let r=(0,O.Ke)({title:B(`${t.title}${i.titleContext??""}`,e,t),placeholder:i.placeholder,value:i.value,prompt:"Enter remote name",validate:async t=>null==t?[!1,void 0]:0===(t=t.trim()).length?[!1,"Please enter a valid remote name"]:/[^a-zA-Z0-9-_.]/.test(t)?[!1,`'${t}' isn't a valid remote name`]:"repo"in e&&0!==(await e.repo.getRemotes({filter:e=>e.name===t})).length?[!1,`A remote named '${t}' already exists`]:[!0,void 0]}),s=yield r;return(0,O.$V)(r,e,s)&&await (0,O.Wm)(r,e,s)?s:O.Vd}async function*Y(e,t,i){let r=(0,O.Ke)({title:B(`${t.title}${i.titleContext??""}`,e,t),placeholder:i.placeholder,value:i.value,prompt:"Enter remote URL",validate:e=>{if(null==e)return[!1,void 0];if(0===(e=e.trim()).length)return[!1,"Please enter a valid remote URL"];let t=b.gK.test(e);return[t,t?void 0:`'${e}' isn't a valid remote URL`]}}),s=yield r;return(0,O.$V)(r,e,s)&&await (0,O.Wm)(r,e,s)?s:O.Vd}async function*j(e,t,i){let r=(0,O.Ke)({title:B(`${t.title}${i.titleContext??""}`,e,t),placeholder:i.placeholder,value:i.value,prompt:"Enter tag name",validate:async t=>{if(null==t)return[!1,void 0];if(0===(t=t.trim()).length)return[!1,"Please enter a valid tag name"];if("repo"in e){let i=await s.W.instance.git.validateBranchOrTagName(e.repo.path,t);return[i,i?void 0:`'${t}' isn't a valid tag name`]}for(let i of e.repos)if(!await s.W.instance.git.validateBranchOrTagName(i.path,t))return[!1,`'${t}' isn't a valid branch name`];return[!0,void 0]}}),n=yield r;return(0,O.$V)(r,e,n)&&await (0,O.Wm)(r,e,n)?n:O.Vd}async function*V(e,t,{filter:i,picked:r,placeholder:s,titleContext:o}){let a=await U(e.repo,{buttons:[E.Nv],filter:i,picked:r}),l=(0,O.xf)({title:B(`${t.title}${o??""}`,e,t),placeholder:0===a.length?`No branches found in ${e.repo.formattedName}`:s,matchOnDetail:!0,items:0===a.length?[(0,D.fw)(D.Xe.Back,!0),(0,D.fw)(D.Xe.Cancel)]:a,onDidClickItemButton:(e,t,{item:i})=>{t===E.Nv&&n.ay(i,{select:!0,focus:!1,expand:!0})},keys:["right","alt+right","ctrl+right"],onDidPressKey:async e=>{0!==e.activeItems.length&&await n.ay(e.activeItems[0].item,{select:!0,focus:!1,expand:!0})}}),h=yield l;return(0,O.i9)(l,e,h)?h[0].item:O.Vd}async function*Q(e,t,{filter:i,picked:r,placeholder:s,sort:o,titleContext:a}){let l=await U(e.repo,{buttons:[E.Nv],filter:i,picked:r,sort:o}),h=(0,O.xf)({multiselect:0!==l.length,title:B(`${t.title}${a??""}`,e,t),placeholder:0===l.length?`No branches found in ${e.repo.formattedName}`:s,matchOnDetail:!0,items:0===l.length?[(0,D.fw)(D.Xe.Back,!0),(0,D.fw)(D.Xe.Cancel)]:l,onDidClickItemButton:(e,t,{item:i})=>{t===E.Nv&&n.ay(i,{select:!0,focus:!1,expand:!0})},keys:["right","alt+right","ctrl+right"],onDidPressKey:async e=>{0!==e.activeItems.length&&await n.ay(e.activeItems[0].item,{select:!0,focus:!1,expand:!0})}}),c=yield h;return(0,O.i9)(h,e,c)?c.map(e=>e.item):O.Vd}async function*z(e,t,{filter:i,picked:s,placeholder:a,titleContext:l,value:h,additionalButtons:c,ranges:d}){t.showTags=!0;let p=new E.cq(t.showTags),g=async()=>N(e.repo,t.showTags?["branches","tags"]:["branches"],{buttons:"boolean"==typeof t.pickCommitForItem?[E.Ft,E.Nv]:[E.Nv],filter:i,picked:s,sort:!0}),f=await g(),w=(0,O.xf)({title:B(`${t.title}${l??""}`,e,t),placeholder:0===f.length?`No branches${t.showTags?" or tags":""} found in ${e.repo.formattedName}`:`${"string"==typeof a?a:a(t)}${r.NE.Space.repeat(3)}(or enter a reference using #)`,matchOnDescription:!0,matchOnDetail:!0,value:h,selectValueWhenShown:!0,items:0===f.length?[(0,D.fw)(D.Xe.Back,!0),(0,D.fw)(D.Xe.Cancel)]:f,additionalButtons:[...c??[],p],onDidClickItemButton:(e,i,{item:r})=>i===E.Ft?(t.pickCommitForItem=!0,!0):(i===E.Nv&&((0,m.UR)(r)?n.ay(r,{select:!0,focus:!1,expand:!0}):(0,m.gA)(r)?u.ay(r,{select:!0,focus:!1,expand:!0}):(0,m.FT)(r)&&o.Fw(r,{pin:!1,preserveFocus:!0})),!1),onDidClickButton:async(i,s)=>{if(s===p){i.busy=!0;try{t.showTags=!t.showTags,p.on=t.showTags;let s=await g();i.placeholder=0===s.length?`${e.repo.formattedName} has no branches${t.showTags?" or tags":""}`:`${"string"==typeof a?a:a(t)}${r.NE.Space.repeat(3)}(or enter a reference using #)`,i.items=s}finally{i.busy=!1}}},keys:["right","alt+right","ctrl+right"],onDidPressKey:e=>{if(0===e.activeItems.length)return;let t=e.activeItems[0].item;(0,m.UR)(t)?n.ay(t,{select:!0,focus:!1,expand:!0}):(0,m.gA)(t)?u.ay(t,{select:!0,focus:!1,expand:!0}):(0,m.FT)(t)&&o.Fw(t,{pin:!1,preserveFocus:!0})},onValidateValue:H(e.repo,{ranges:d})}),v=yield w;return(0,O.i9)(w,e,v)?v[0].item:O.Vd}async function*K(e,t,{filter:i,picked:s,placeholder:a,titleContext:l,value:h}){t.showTags=1===e.repos.length;let c=new E.cq(t.showTags),d=()=>N(e.repos,t.showTags?["branches","tags"]:["branches"],{buttons:[E.Nv],filter:{branches:1===e.repos.length?void 0:e=>!e.remote,...i},picked:s??e.reference?.ref,sort:{branches:{orderBy:"date:desc"},tags:{orderBy:"date:desc"}}}),p=await d(),g=(0,O.xf)({title:B(`${t.title}${l??""}`,e,t),placeholder:0===p.length?`No ${1===e.repos.length?"":"common "}branches${t.showTags?" or tags":""} found in ${1===e.repos.length?e.repos[0].formattedName:`${e.repos.length} repositories`}`:`${"string"==typeof a?a:a(t)}${r.NE.Space.repeat(3)}(or enter a reference using #)`,matchOnDescription:!0,matchOnDetail:!0,value:h??((0,m.FT)(e.reference)?e.reference.ref:void 0),selectValueWhenShown:!0,items:0===p.length?[(0,D.fw)(D.Xe.Back,!0),(0,D.fw)(D.Xe.Cancel)]:p,additionalButtons:[c],onDidClickItemButton:(e,t,{item:i})=>{t===E.Nv&&((0,m.UR)(i)?n.ay(i,{select:!0,focus:!1,expand:!0}):(0,m.gA)(i)?u.ay(i,{select:!0,focus:!1,expand:!0}):(0,m.FT)(i)&&o.Fw(i,{pin:!1,preserveFocus:!0}))},onDidClickButton:async(i,s)=>{if(s===c){i.busy=!0;try{t.showTags=!t.showTags,c.on=t.showTags;let s=await d();i.placeholder=0===s.length?`No ${1===e.repos.length?"":"common "}branches${t.showTags?" or tags":""} found in ${1===e.repos.length?e.repos[0].formattedName:`${e.repos.length} repositories`}`:`${"string"==typeof a?a:a(t)}${r.NE.Space.repeat(3)}(or enter a reference using #)`,i.items=s}finally{i.busy=!1}}},keys:["right","alt+right","ctrl+right"],onDidPressKey:e=>{if(0===e.activeItems.length)return;let t=e.activeItems[0].item;(0,m.UR)(t)?n.ay(t,{select:!0,focus:!1,expand:!0}):(0,m.gA)(t)?u.ay(t,{select:!0,focus:!1,expand:!0}):(0,m.FT)(t)&&o.Fw(t,{pin:!1,preserveFocus:!0})},onValidateValue:H(e.repos)}),f=yield g;return(0,O.i9)(g,e,f)?f[0].item:O.Vd}async function*J(e,t,{ignoreFocusOut:i,log:r,onDidLoadMore:s,picked:n,placeholder:a,showInSideBarCommand:l,showInSideBarButton:h,titleContext:c}){function u(e){if(null==e)return[(0,D.fw)(D.Xe.Back,!0),(0,D.fw)(D.Xe.Cancel)];let t=[E._9,E.Nv];return I.Ps(e.commits)?.[1].file!=null&&t.splice(0,0,E.DY),[...(0,I.UI)(e.commits.values(),e=>(0,k.YY)(e,null!=n&&("string"==typeof n?e.ref===n:n.includes(e.ref)),{buttons:t,compact:!0,icon:!0})),...e?.hasMore?[(0,D.fw)(D.Xe.LoadMore)]:[]]}let d=(0,O.xf)({title:B(`${t.title}${c??""}`,e,t),placeholder:"string"==typeof a?a:a(t,r),ignoreFocusOut:i,matchOnDescription:!0,matchOnDetail:!0,value:"string"==typeof n&&r?.count===0?n:void 0,selectValueWhenShown:!0,items:null!=l?[l,...u(r)]:u(r),onDidLoadMore:async e=>(e.keepScrollPosition=!0,r=await r?.more?.($.D.get("advanced.maxListItems")),s?.(r),"string"!=typeof a&&(e.placeholder=a(t,r)),u(r)),additionalButtons:[...h?.button!=null?[h?.button]:[],...r?.hasMore?[E.Q0]:[]],onDidClickItemButton:(e,t,i)=>{if(!P.$w.is(i))switch(t){case E._9:o.Fw(i.item,{pin:!1,preserveFocus:!0});break;case E.Nv:o.ay(i.item,{select:!0,focus:!1,expand:!0});break;case E.DY:{let e=i.item.file?.path;null!=e&&o.vw(e,i.item)}}},onDidClickButton:(e,t)=>{if(null==r)return;let i=e.activeItems.filter(e=>!P.$w.is(e));t===h?.button&&h.onDidClick(i)},keys:["right","alt+right","ctrl+right"],onDidPressKey:async(e,t)=>{if(0===e.activeItems.length)return;let i=e.activeItems.filter(e=>!P.$w.is(e));"ctrl+right"===t?o.Fw(i[0].item,{pin:!1,preserveFocus:!0}):await o.ay(i[0].item,{select:!0,focus:!1,expand:!0})},onValidateValue:H(e.repo,{buttons:[E._9,E.Nv]})}),p=yield d;return(0,O.i9)(d,e,p)?P.$w.is(p[0])?((0,O.uZ)(e),await p[0].execute(),O.Vd):p[0].item:O.Vd}function*Z(e,t,{log:i,onDidLoadMore:r,picked:s,placeholder:n,titleContext:a}){function l(e){return null==e?[(0,D.fw)(D.Xe.Back,!0),(0,D.fw)(D.Xe.Cancel)]:[...(0,I.UI)(e.commits.values(),e=>(0,k.YY)(e,null!=s&&("string"==typeof s?e.ref===s:s.includes(e.ref)),{buttons:[E._9,E.Nv],compact:!0,icon:!0}))]}let h=(0,O.xf)({title:B(`${t.title}${a??""}`,e,t),multiselect:null!=i,placeholder:"string"==typeof n?n:n(t,i),matchOnDescription:!0,matchOnDetail:!0,items:l(i),onDidLoadMore:async e=>(e.keepScrollPosition=!0,i=await i?.more?.($.D.get("advanced.maxListItems")),r?.(i),"string"!=typeof n&&(e.placeholder=n(t,i)),l(i)),additionalButtons:[...i?.hasMore?[E.Q0]:[]],onDidClickItemButton:(e,t,{item:i})=>{switch(t){case E._9:o.Fw(i,{pin:!1,preserveFocus:!0});break;case E.Nv:o.ay(i,{select:!0,focus:!1,expand:!0})}},keys:["right","alt+right","ctrl+right"],onDidPressKey:async(e,t)=>{0!==e.activeItems.length&&("ctrl+right"===t?o.Fw(e.activeItems[0].item,{pin:!1,preserveFocus:!0}):await o.ay(e.activeItems[0].item,{select:!0,focus:!1,expand:!0}))}}),c=yield h;return(0,O.i9)(h,e,c)?c.map(e=>e.item):O.Vd}async function*X(e,t,i="Choose contributors"){let r=(await s.W.instance.git.getOrOpenScmRepository(e.repo.path))?.inputBox.value,n=await s.W.instance.git.getContributors(e.repo.path),o=(0,O.xf)({title:B(t.title,e,t),allowEmpty:!0,multiselect:!0,placeholder:i,matchOnDescription:!0,items:await Promise.all(n.map(e=>(0,k.RI)(e,r?.includes(e.getCoauthor()),{buttons:[E.Nv]}))),onDidClickItemButton:(e,t,{item:i})=>{t===E.Nv&&a.a(i,{select:!0,focus:!1,expand:!0})},keys:["right","alt+right","ctrl+right"],onDidPressKey:e=>{0!==e.activeItems.length&&a.a(e.activeItems[0].item,{select:!0,focus:!1,expand:!0})}}),l=yield o;return(0,O.i9)(o,e,l)?l.map(e=>e.item):O.Vd}async function*ee(e,t,{filter:i,picked:r,placeholder:s,titleContext:n}){let o=await W(e.repo,{buttons:[E.Nv],filter:i,picked:r}),a=(0,O.xf)({title:B(`${t.title}${n??""}`,e,t),placeholder:0===o.length?`No remotes found in ${e.repo.formattedName}`:s,matchOnDetail:!0,items:0===o.length?[(0,D.fw)(D.Xe.Back,!0),(0,D.fw)(D.Xe.Cancel)]:o,onDidClickItemButton:(e,t,{item:i})=>{t===E.Nv&&l.ay(i,{select:!0,focus:!1,expand:!0})},keys:["right","alt+right","ctrl+right"],onDidPressKey:async e=>{0!==e.activeItems.length&&await l.ay(e.activeItems[0].item,{select:!0,focus:!1,expand:!0})}}),h=yield a;return(0,O.i9)(a,e,h)?h[0].item:O.Vd}async function*et(e,t,i="Choose a repository"){if("string"==typeof e.repo&&(e.repo=s.W.instance.git.getRepository(e.repo),null!=e.repo))return e.repo;let r=e.repo??await s.W.instance.git.getOrOpenRepositoryForEditor(),n=(0,O.xf)({title:t.title,placeholder:i,items:0===t.repos.length?[(0,D.fw)(D.Xe.Cancel)]:await Promise.all(t.repos.map(e=>(0,k.FO)(e,e.id===r?.id,{branch:!0,buttons:[E.Nv],fetched:!0,status:!0}))),onDidClickItemButton:(e,i,{item:r})=>{i===E.Nv&&h.ay(r.path,t.associatedView,{select:!0,focus:!1,expand:!0})},keys:["right","alt+right","ctrl+right"],onDidPressKey:e=>{0!==e.activeItems.length&&h.ay(e.activeItems[0].item.path,t.associatedView,{select:!0,focus:!1,expand:!0})}}),o=yield n;return(0,O.i9)(n,e,o)?o[0].item:O.Vd}async function*ei(e,t,i){let r;if(i={placeholder:"Choose repositories",skipIfPossible:!1,...i},null!=e.repos){if((0,R.GI)(e.repos)){if(r=(0,R.DZ)(e.repos,e=>t.repos.find(t=>t.path===e)),i.skipIfPossible&&0!==r.length&&e.repos.length===r.length)return r}else r=e.repos}else{let e=await s.W.instance.git.getOrOpenRepositoryForEditor();r=null!=e?[e]:[]}let n=(0,O.xf)({multiselect:!0,title:t.title,placeholder:i.placeholder,items:0===t.repos.length?[(0,D.fw)(D.Xe.Cancel)]:await Promise.all(t.repos.map(e=>(0,k.FO)(e,r.some(t=>t.id===e.id),{branch:!0,buttons:[E.Nv],fetched:!0,status:!0}))),onDidClickItemButton:(e,i,{item:r})=>{i===E.Nv&&h.ay(r.path,t.associatedView,{select:!0,focus:!1,expand:!0})},keys:["right","alt+right","ctrl+right"],onDidPressKey:e=>{0!==e.activeItems.length&&h.ay(e.activeItems[0].item.path,t.associatedView,{select:!0,focus:!1,expand:!0})}}),o=yield n;return(0,O.i9)(n,e,o)?o.map(e=>e.item):O.Vd}function*er(e,t,{ignoreFocusOut:i,stash:r,picked:s,placeholder:n,titleContext:o}){let a=(0,O.xf)({title:B(`${t.title}${o??""}`,e,t),placeholder:"string"==typeof n?n:n(t,r),ignoreFocusOut:i,matchOnDescription:!0,matchOnDetail:!0,items:null==r?[(0,D.fw)(D.Xe.Back,!0),(0,D.fw)(D.Xe.Cancel)]:[...(0,I.UI)(r.commits.values(),e=>(0,k.YY)(e,null!=s&&("string"==typeof s?e.ref===s:s.includes(e.ref)),{buttons:[E._9],compact:!0,icon:!0}))],onDidClickItemButton:(e,t,{item:i})=>{t===E._9&&c.Fw(i,{pin:!1,preserveFocus:!0})},keys:["right","alt+right","ctrl+right"],onDidPressKey:async e=>{0!==e.activeItems.length&&await c.Fw(e.activeItems[0].item,{pin:!1,preserveFocus:!0})}}),l=yield a;return(0,O.i9)(a,e,l)?l[0].item:O.Vd}async function*es(e,t,{filter:i,picked:r,placeholder:s,titleContext:n}){let o=await M(e.repo,{buttons:[E.Nv],filter:i,picked:r}),a=(0,O.xf)({multiselect:0!==o.length,title:B(`${t.title}${n??""}`,e,t),placeholder:0===o.length?`No tags found in ${e.repo.formattedName}`:s,matchOnDetail:!0,items:0===o.length?[(0,D.fw)(D.Xe.Back,!0),(0,D.fw)(D.Xe.Cancel)]:o,onDidClickItemButton:(e,t,{item:i})=>{t===E.Nv&&u.ay(i,{select:!0,focus:!1,expand:!0})},keys:["right","alt+right","ctrl+right"],onDidPressKey:async e=>{0!==e.activeItems.length&&await u.ay(e.activeItems[0].item,{select:!0,focus:!1,expand:!0})}}),l=yield a;return(0,O.i9)(a,e,l)?l.map(e=>e.item):O.Vd}async function*en(e,t,{filter:i,includeStatus:r,picked:s,placeholder:n,titleContext:o}){let a=await L(t.worktrees??e.repo,{buttons:[E._r,E.Nv],filter:i,includeStatus:r,picked:s}),l=(0,O.xf)({title:B(`${t.title}${o??""}`,e,t),placeholder:0===a.length?`No worktrees found in ${e.repo.formattedName}`:n,matchOnDetail:!0,items:0===a.length?[(0,D.fw)(D.Xe.Back,!0),(0,D.fw)(D.Xe.Cancel)]:a,onDidClickItemButton:(e,t,{item:i})=>{switch(t){case E._r:(0,T.ic)(i.uri,{location:"newWindow"});break;case E.Nv:d.ay(i,{select:!0,focus:!1,expand:!0})}},keys:["right","alt+right","ctrl+right"],onDidPressKey:async e=>{0!==e.activeItems.length&&await d.ay(e.activeItems[0].item,{select:!0,focus:!1,expand:!0})}}),h=yield l;return(0,O.i9)(l,e,h)?h[0].item:O.Vd}async function*eo(e,t,{filter:i,includeStatus:r,picked:s,placeholder:n,titleContext:o}){let a=await L(t.worktrees??e.repo,{buttons:[E._r,E.Nv],filter:i,includeStatus:r,picked:s}),l=(0,O.xf)({multiselect:0!==a.length,title:B(`${t.title}${o??""}`,e,t),placeholder:0===a.length?`No worktrees found in ${e.repo.formattedName}`:n,matchOnDetail:!0,items:0===a.length?[(0,D.fw)(D.Xe.Back,!0),(0,D.fw)(D.Xe.Cancel)]:a,onDidClickItemButton:(e,t,{item:i})=>{switch(t){case E._r:(0,T.ic)(i.uri,{location:"newWindow"});break;case E.Nv:d.ay(i,{select:!0,focus:!1,expand:!0})}},keys:["right","alt+right","ctrl+right"],onDidPressKey:async e=>{0!==e.activeItems.length&&await d.ay(e.activeItems[0].item,{select:!0,focus:!1,expand:!0})}}),h=yield l;return(0,O.i9)(l,e,h)?h.map(e=>e.item):O.Vd}async function*ea(e,t){let i=(0,O.xf)({title:B((0,m.Wh)(e.reference,{capitalize:!0,icon:!1}),e,t),placeholder:(0,m.Wh)(e.reference,{capitalize:!0,icon:!1}),ignoreFocusOut:!0,items:await el(e),onDidClickItemButton:(t,i,r)=>{switch(i){case E._9:(0,m.pZ)(e.reference)?c.Fw(e.reference,{pin:!1,preserveFocus:!0}):o.Fw(e.reference,{pin:!1,preserveFocus:!0});break;case E.Nv:(0,m.pZ)(e.reference)?c.ay(e.reference,{select:!0,focus:!1,expand:!0}):o.ay(e.reference,{select:!0,focus:!1,expand:!0})}},keys:["right","alt+right","ctrl+right"],onDidPressKey:async(e,t)=>{0!==e.activeItems.length&&await e.activeItems[0].onDidPressKey(t)}}),r=yield i;return(0,O.i9)(i,e,r)?r[0]:O.Vd}async function el(e){let t;let i=[new A.EE(e.reference),new A.sQ(e.reference)];if((0,g.G2)(e.reference))i.push((0,P.fz)("Actions"),new k.Wv("Apply Stash...",{command:"stash",state:{subcommand:"apply",repo:e.repo,reference:e.reference}}),new k.Wv("Delete Stash...",{command:"stash",state:{subcommand:"drop",repo:e.repo,reference:e.reference}}),(0,P.fz)(),new A.NC(e.reference));else{let r=await s.W.instance.git.getRemotesWithProviders(e.repo.path,{sort:!0});r?.length&&i.push((0,P.fz)(f.ss.getHighlanderProviderName(r)??"Remote"),new S.az(r,{type:w.J.Commit,sha:e.reference.sha}),new S.eO(r,{type:w.J.Commit,sha:e.reference.sha})),i.push((0,P.fz)("Actions"));let n=await s.W.instance.git.getBranch(e.repo.path),[o,a]=await Promise.all([null!=n?s.W.instance.git.getCommitBranches(e.repo.path,e.reference.ref,n.name,{commitDate:(0,g.f_)(e.reference)?e.reference.committer.date:void 0}):void 0,n?.remote||n?.upstream==null?void 0:e.reference.isPushed()]);o?.length?((t=!a)&&i.push(new k.Wv("Push to Commit...",{command:"push",state:{repos:e.repo,reference:e.reference}})),i.push(new k.Wv("Revert Commit...",{command:"revert",state:{repo:e.repo,references:[e.reference]}}),new k.Wv(`Reset ${n?.name??"Current Branch"} to Commit...`,{command:"reset",state:{repo:e.repo,reference:e.reference}}),new k.Wv(`Reset ${n?.name??"Current Branch"} to Previous Commit...`,{command:"reset",state:{repo:e.repo,reference:(0,m.xB)(`${e.reference.ref}^`,e.reference.repoPath,{refType:"revision",name:`${e.reference.name}^`,message:e.reference.message})}}))):i.push(new k.Wv("Cherry Pick Commit...",{command:"cherry-pick",state:{repo:e.repo,references:[e.reference]}})),i.push(new k.Wv(`Rebase ${n?.name??"Current Branch"} onto Commit...`,{command:"rebase",state:{repo:e.repo,reference:e.reference}}),new k.Wv("Switch to Commit...",{command:"switch",state:{repos:[e.repo],reference:e.reference}}),(0,P.fz)(),new k.Wv("Create Branch at Commit...",{command:"branch",state:{subcommand:"create",repo:e.repo,reference:e.reference}}),new k.Wv("Create Tag at Commit...",{command:"tag",state:{subcommand:"create",repo:e.repo,reference:e.reference}}),(0,P.fz)("Copy"),new A.OT(e.reference),new A.NC(e.reference))}return i.push((0,P.fz)("Open"),new A.CV(e.reference),new A.Y4(e.reference),new A.o$(e.reference),(0,P.fz)(),new A.lN(e.reference),new A.A1(e.reference)),i.push((0,P.fz)("Compare"),new A.Jw(e.reference),new A.m5(e.reference)),i.push((0,P.fz)(),new A.eG(e.reference),new A.nl(e.reference)),i.push((0,P.fz)("Browse"),new A.Lf(e.reference,{openInNewWindow:!1}),new A.Lf(e.reference,{before:!0,openInNewWindow:!1}),new A.Lf(e.reference,{openInNewWindow:!0}),new A.Lf(e.reference,{before:!0,openInNewWindow:!0})),i.unshift(new A.PF(e.reference,{unpublished:t,hint:"Click to see all changed files"})),i}function*eh(e,t,i){e.reference.files;let r=(0,O.xf)({title:B((0,m.Wh)(e.reference,{capitalize:!0,icon:!1}),e,t),placeholder:(0,m.Wh)(e.reference,{capitalize:!0,icon:!1}),ignoreFocusOut:!0,items:[new A.PF(e.reference,{picked:null==e.fileName,hint:`Click to see ${(0,g.G2)(e.reference)?"stash":"commit"} actions`}),(0,P.fz)("Files"),...e.reference.files?.map(t=>new A.zr(e.reference,t,i?.picked===t.path))??[]],matchOnDescription:!0,onDidClickItemButton:(t,i,r)=>{switch(i){case E._9:(0,m.pZ)(e.reference)?c.Fw(e.reference,{pin:!1,preserveFocus:!0}):o.Fw(e.reference,{pin:!1,preserveFocus:!0});break;case E.Nv:(0,m.pZ)(e.reference)?c.ay(e.reference,{select:!0,focus:!1,expand:!0}):o.ay(e.reference,{select:!0,focus:!1,expand:!0})}},keys:["right","alt+right","ctrl+right"],onDidPressKey:async(e,t)=>{0!==e.activeItems.length&&await e.activeItems[0].onDidPressKey(t)}}),s=yield r;return(0,O.i9)(r,e,s)?s[0]:O.Vd}async function*ec(e,t){let i=(0,O.xf)({title:B((0,m.Wh)(e.reference,{capitalize:!0,icon:!1}),e,t,`${(0,x.vk)(r.NE.Dot,2,2)}${(0,_.d)(e.fileName,{fileOnly:!0})}`),placeholder:`${(0,_.d)(e.fileName,{relativeTo:e.repo.path})} in ${(0,m.Wh)(e.reference,{icon:!1})}`,ignoreFocusOut:!0,items:await eu(e),matchOnDescription:!0,onDidClickItemButton:(t,i,r)=>{switch(i){case E._9:(0,m.pZ)(e.reference)?c.Fw(e.reference,{pin:!1,preserveFocus:!0}):o.Fw(e.reference,{pin:!1,preserveFocus:!0});break;case E.Nv:(0,m.pZ)(e.reference)?c.ay(e.reference,{select:!0,focus:!1,expand:!0}):o.ay(e.reference,{select:!0,focus:!1,expand:!0})}},keys:["right","alt+right","ctrl+right"],onDidPressKey:async(e,t)=>{0!==e.activeItems.length&&await e.activeItems[0].onDidPressKey(t)}}),s=yield i;return(0,O.i9)(i,e,s)?s[0]:O.Vd}async function eu(e){let t=await e.reference.findFile(e.fileName);if(null==t)return[];let i=[new A.EE(e.reference),new A.sQ(e.reference)];if((0,g.G2)(e.reference))i.push((0,P.fz)(),new A.NC(e.reference),(0,P.fz)("Actions"),new A.do(e.reference,t),new A.QP(e.reference,t),(0,P.fz)(),new A.NC(e.reference));else{let r=await s.W.instance.git.getRemotesWithProviders(e.repo.path,{sort:!0});r?.length&&i.push((0,P.fz)(f.ss.getHighlanderProviderName(r)??"Remote"),new S.az(r,{type:w.J.Revision,fileName:e.fileName,commit:e.reference}),new S.eO(r,{type:w.J.Revision,fileName:e.fileName,commit:e.reference}),(0,P.fz)(),new S.az(r,{type:w.J.Commit,sha:e.reference.ref}),new S.eO(r,{type:w.J.Commit,sha:e.reference.sha})),i.push((0,P.fz)("Actions"),new A.do(e.reference,t),new A.QP(e.reference,t),(0,P.fz)("Copy"),new A.OT(e.reference),new A.NC(e.reference))}return i.push((0,P.fz)("Open"),new A.lp(e.reference,e.fileName),new A.aU(e.reference,e.fileName),new A.xL(e.reference,e.fileName),(0,P.fz)()),"D"!==t.status&&i.push(new A.ZO(e.reference,t)),i.push(new A.Wt(e.reference,t)),i.push((0,P.fz)("Compare"),new A.Jw(e.reference),new A.m5(e.reference)),i.push((0,P.fz)("Browse"),new A.Lf(e.reference,{openInNewWindow:!1}),new A.Lf(e.reference,{before:!0,openInNewWindow:!1}),new A.Lf(e.reference,{openInNewWindow:!0}),new A.Lf(e.reference,{before:!0,openInNewWindow:!0})),i.unshift(new A.PF(e.reference,{file:t,hint:"Click to see all changed files"})),i}function*ed(e,t){let i=t.status.getUpstreamStatus({expand:!0,separator:", "}),s=t.status.getFormattedDiffStatus({expand:!0,separator:", "}),n=(0,O.xf)({title:B(t.title,e,t),placeholder:`${i?`${i}, ${s}`:s}`,ignoreFocusOut:!0,items:function(e,t){let i;let s=[],n=t.status.computeWorkingTreeStatus();return i=0===n.staged&&0===n.unstaged?"No working tree changes":`$(files) ${n.staged?`${(0,x._6)("staged file",n.staged)} (${n.stagedStatus})`:""}${n.unstaged?`${n.staged?", ":""}${(0,x._6)("unstaged file",n.unstaged)} (${n.unstagedStatus})`:""}`,t.status.upstream?(0===t.status.state.ahead&&0===t.status.state.behind?s.push((0,D.fw)(D.Xe.Noop,!0,{label:`$(git-branch) ${t.status.branch} is up to date with $(git-branch) ${t.status.upstream}`,detail:i})):0!==t.status.state.ahead&&0!==t.status.state.behind?s.push((0,D.fw)(D.Xe.Noop,!0,{label:`$(git-branch) ${t.status.branch} has diverged from $(git-branch) ${t.status.upstream}`,detail:i})):0!==t.status.state.ahead?s.push((0,D.fw)(D.Xe.Noop,!0,{label:`$(git-branch) ${t.status.branch} is ahead of $(git-branch) ${t.status.upstream}`,detail:i})):0!==t.status.state.behind&&s.push((0,D.fw)(D.Xe.Noop,!0,{label:`$(git-branch) ${t.status.branch} is behind $(git-branch) ${t.status.upstream}`,detail:i})),0!==t.status.state.behind&&s.push(new k.Wv(`$(cloud-download) ${(0,x._6)("commit",t.status.state.behind)} behind`,{command:"log",state:{repo:e.repo,reference:(0,m.xB)((0,m.oI)(t.status.ref,t.status.upstream),e.repo.path)}})),0!==t.status.state.ahead&&s.push(new k.Wv(`$(cloud-upload) ${(0,x._6)("commit",t.status.state.ahead)} ahead`,{command:"log",state:{repo:e.repo,reference:(0,m.xB)((0,m.oI)(t.status.upstream,t.status.ref),e.repo.path)}}))):s.push((0,D.fw)(D.Xe.Noop,!0,{label:`$(git-branch) ${t.status.branch} has no upstream`,detail:i})),t.status.files.length&&(s.push(new A.K6(n.stagedAddsAndChanges.concat(n.unstagedAddsAndChanges))),s.push(new A.rl(n.stagedAddsAndChanges.concat(n.unstagedAddsAndChanges)))),n.staged>0&&(s.push(new A.K6(n.stagedAddsAndChanges,{label:"$(files) Open Staged Files"})),s.push(new A.rl(n.stagedAddsAndChanges,{label:"$(files) Open Only Staged Files"}))),n.unstaged>0&&(s.push(new A.K6(n.unstagedAddsAndChanges,{label:"$(files) Open Unstaged Files"})),s.push(new A.rl(n.unstagedAddsAndChanges,{label:"$(files) Open Only Unstaged Files"}))),t.status.files.length&&s.push(new P.$w("$(x) Close Unchanged Files",r.Gh.CloseUnchangedFiles)),s}(e,t),keys:["right","alt+right","ctrl+right"],onDidPressKey:async(e,t)=>{0!==e.activeItems.length&&await e.activeItems[0].onDidPressKey(t)}}),o=yield n;return(0,O.i9)(n,e,o)?o[0]:O.Vd}async function*ep(e,t,i){let r;let n=await s.W.instance.git.access(i,e.repo.path);if(n.allowed)return;let o=[];if(n.subscription.current.account?.verified===!1)o.push((0,D.fw)(D.Xe.RequiresVerification,!0)),r="You must verify your email before you can continue";else{if(null==n.subscription.required)return;r="✨ Requires a trial or paid plan for use on privately hosted repos",(0,C.aG)(n.subscription.required)&&null!=n.subscription.current.account?(r="✨ Requires a paid plan for use on privately hosted repos",o.push((0,D.fw)(D.Xe.RequiresPaidSubscription,!0))):null!=n.subscription.current.account||(0,C.gA)(n.subscription.current)?o.push((0,D.fw)(D.Xe.ExtendTrial)):o.push((0,D.fw)(D.Xe.StartPreviewTrial,!0))}let a=(0,O.xf)({title:B(t.title,e,t),placeholder:r,items:[...o,(0,D.fw)(D.Xe.Cancel)]}),l=yield a;return(0,O.i9)(a,e,l)?void 0:O.Vd}},4239:(e,t,i)=>{i.d(t,{$V:()=>p,Dr:()=>a,Gj:()=>o,Ke:()=>m,PH:()=>y,Tv:()=>g,Vd:()=>l,Wm:()=>u,YB:()=>c,a:()=>n,i9:()=>d,jf:()=>w,tR:()=>h,uZ:()=>v,xf:()=>f});var r=i(3599),s=i(5148);function n(e){return"object"==typeof e&&null!=e.show}function o(e){return"object"==typeof e&&null==e.items&&null==e.show}function a(e){return"object"==typeof e&&null!=e.items}let l=Symbol("BreakStep");class h{constructor(e,t,i,r,s={}){this.container=e,this.key=t,this.label=i,this.title=r,this.description=s.description,this.detail=s.detail}description;detail;initialState;_currentStep;_stepsIterator;get canConfirm(){return!0}get canSkipConfirm(){return!0}_picked=!1;get picked(){return this._picked}set picked(e){this._picked=e,e||(this._pickedVia="menu")}_pickedVia="menu";get pickedVia(){return this._pickedVia}set pickedVia(e){this._pickedVia=e}get skipConfirmKey(){return`${this.key}:${this.pickedVia}`}get value(){return this._currentStep}confirm(e){return!this.canConfirm||!this.canSkipConfirm||(null!=e?e:!s.D.get("gitCommands.skipConfirmations").includes(this.skipConfirmKey))}isMatch(e){return this.key===e}isFuzzyMatch(e){return this.label===e}executeSteps(){return this.steps(this.getStepState(!0))}async previous(){return(await this.next(r.Xe.Back)).value}async next(e){null==this._stepsIterator&&(this._stepsIterator=this.steps(this.getStepState(!1)));let t=await this._stepsIterator.next(e);return(t.done&&(this.initialState=void 0,this._stepsIterator=void 0),t.value===l)?(this._currentStep=void 0,{...t,value:void 0}):(this._currentStep=t.value,t)}async retry(){return await this.next(r.Xe.Noop),this.value}canStepsContinue(e){return e.counter>=(e.startingStep??0)}createConfirmStep(e,t,i,r={}){return g(e,t,{title:this.title},i,r)}getStepState(e){return{counter:0,...this.initialState,startingStep:e?this.initialState?.counter??0:0}}}function c(e){return e instanceof h}async function u(e,t,i){if(!p(e,t,i))return!1;let[r]=await e.validate?.(i)??[!0];return!!r&&(t.counter++,!0)}function d(e,t,i){return!!p(e,t,i)&&!!(e.validate?.(i)??!0)&&(t.counter++,!0)}function p(e,t,i){if(null==i)return!1;if((0,r.wX)(i)){switch(i){case r.Xe.Back:t.counter--,t.counter<=(t.startingStep??0)&&(t.counter=0);break;case r.Xe.Cancel:v(t)}return!1}return!0}function g(e,t,i,s,n){return{isConfirmationStep:!0,placeholder:`Confirm ${i.title}`,title:e,ignoreFocusOut:!0,items:[...t,s??(0,r.fw)(r.Xe.Cancel)],selectedItems:[t.find(e=>e.picked)??t[0]],...n??{}}}function m(e){return e.ignoreFocusOut=!0,e}function f(e){return e}function w(e){return e}function v(e){e.counter=-1}function y(e,t){return t.enabled=!1,e.frozen=!0,{[Symbol.dispose]:()=>{e.frozen=!1,t.enabled=!0,t.show()}}}},6199:(e,t,i)=>{i.d(t,{t:()=>d});var r=i(5255),s=i(3050),n=i(635),o=i(9529),a=i(3105),l=i(7139),h=Object.defineProperty,c=Object.getOwnPropertyDescriptor,u=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?c(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&h(t,i,n),n};let d=class extends l.mY{constructor(e){super(r.Gh.ConnectRemoteProvider),this.container=e}static getMarkdownCommandArgs(e){let t;return t=s.ss.is(e)?{remote:e.name,repoPath:e.repoPath}:e,super.getMarkdownCommandArgsCore(r.Gh.ConnectRemoteProvider,t)}preExecute(e,t){return(0,l.C$)(e)&&(t={...t,remote:e.node.remote.name,repoPath:e.node.remote.repoPath}),this.execute(t)}async execute(e){let t,i,r;if(e?.repoPath==null){let e=new Map;for(let t of this.container.git.openRepositories){let i=await t.getRichRemote();i?.provider!=null&&e.set(t,i)}if(0===e.size)return!1;if(1===e.size){let i;[i,t]=(0,a.Ps)(e),r=i.path}else{let i=await (0,n.E2)(void 0,"Choose which repository to connect to the remote provider",[...e.keys()]);if(i?.item==null)return;r=i.repoPath,t=e.get(i.item)}}else if(e?.remote==null){if(r=e.repoPath,null==(t=await this.container.git.getBestRemoteWithIntegration(r,{includeDisconnected:!0})))return!1}else if(r=e.repoPath,t=(i=await this.container.git.getRemotesWithProviders(r)).find(t=>t.name===e.remote),!t?.hasIntegration())return!1;let s=this.container.integrations.getByRemote(t);if(null==s)return!1;let o=await s.connect();return o&&!(i??await this.container.git.getRemotesWithProviders(r)).some(e=>e.default)&&await t.setAsDefault(!0),o}};d=u([(0,o.WD)()],d);let p=class extends l.mY{constructor(e){super(r.Gh.DisconnectRemoteProvider),this.container=e}static getMarkdownCommandArgs(e){let t;return t=s.ss.is(e)?{remote:e.name,repoPath:e.repoPath}:e,super.getMarkdownCommandArgsCore(r.Gh.DisconnectRemoteProvider,t)}preExecute(e,t){return(0,l.C$)(e)&&(t={...t,remote:e.node.remote.name,repoPath:e.node.remote.repoPath}),this.execute(t)}async execute(e){let t,i;if(e?.repoPath==null){let e=new Map;for(let t of this.container.git.openRepositories){let i=await t.getRichRemote(!0);null!=i&&e.set(t,i)}if(0===e.size)return;if(1===e.size){let r;[r,t]=(0,a.Ps)(e),i=r.path}else{let r=await (0,n.E2)(void 0,"Choose which repository to disconnect from the remote provider",[...e.keys()]);if(r?.item==null)return;i=r.repoPath,t=e.get(r.item)}}else if(e?.remote==null){if(i=e.repoPath,null==(t=await this.container.git.getBestRemoteWithIntegration(i,{includeDisconnected:!1})))return}else if(i=e.repoPath,t=(await this.container.git.getRemotesWithProviders(i)).find(t=>t.name===e.remote),!t?.hasIntegration())return;let r=this.container.integrations.getByRemote(t);return r?.disconnect()}};p=u([(0,o.WD)()],p)},1676:(e,t,i)=>{i.d(t,{C:()=>f});var r=i(5255),s=i(9311),n=i(6897),o=i(7462),a=i(4321),l=i(6934),h=i(7925),c=i(9529),u=i(3105),d=i(4336),p=i(7139),g=Object.defineProperty,m=Object.getOwnPropertyDescriptor;let f=class extends p.pu{constructor(e){super([r.Gh.ShowCommitInView,r.Gh.ShowInDetailsView,r.Gh.ShowCommitsInView]),this.container=e}static getMarkdownCommandArgs(e,t){return super.getMarkdownCommandArgsCore(r.Gh.ShowCommitInView,"string"==typeof e?{refs:[e],repoPath:t}:e)}preExecute(e,t){return"viewItem"===e.type&&(t={...t},(0,p.en)(e)&&(t.ref=(0,a.qj)(e.node.commit))),this.execute(e.editor,e.uri,t)}async execute(e,t,i){if(null!=(i={...i}).ref)return(0,n.Fw)(i.ref);if(void 0===i.refs){if(null==(t=(0,p.SX)(t,e)))return;let r=await o.YY.fromUri(t);if(i.repoPath=r.repoPath,null!=e)try{let t=e.document.isDirty?await this.container.git.getBlameForRangeContents(r,e.selection,e.document.getText()):await this.container.git.getBlameForRange(r,e.selection);if(void 0===t)return(0,h.zk)("Unable to find commits");i.refs=[...(0,u.DZ)(t.commits.values(),e=>e.isUncommitted?void 0:e.ref)]}catch(e){return d.Yd.error(e,"ShowCommitsInViewCommand","getBlameForRange"),(0,h.W8)("Unable to find commits")}else{if(null==r.sha)return;i.refs=[r.sha]}}return 1===i.refs.length?(0,n.Fw)((0,a.xB)(i.refs[0],i.repoPath,{refType:"revision"})):(0,s.m)({command:"search",state:{repo:i?.repoPath,query:(0,l.pU)(i.refs),showResultsInSideBar:!0}})}};f=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?m(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&g(t,i,n),n})([(0,c.WD)()],f)},1744:(e,t,i)=>{i.d(t,{o:()=>p});var r=i(5255),s=i(9311),n=i(6897),o=i(7462),a=i(7925),l=i(9529),h=i(4336),c=i(7139),u=Object.defineProperty,d=Object.getOwnPropertyDescriptor;let p=class extends c.Lk{constructor(e){super([r.Gh.RevealCommitInView,r.Gh.ShowQuickCommit]),this.container=e}static getMarkdownCommandArgs(e,t){return super.getMarkdownCommandArgsCore(r.Gh.ShowQuickCommit,"string"==typeof e?{sha:e,repoPath:t}:e)}preExecute(e,t){return e.command===r.Gh.RevealCommitInView&&((t={...t}).revealInView=!0),"viewItem"===e.type&&((t={...t}).sha=e.node.uri.sha,(0,c.en)(e)&&(t.commit=e.node.commit)),this.execute(e.editor,e.uri,t)}async execute(e,t,i){let r,l;if(i?.commit==null){if(i?.repoPath!=null&&null!=i.sha)l=i.repoPath,r=o.YY.fromRepoPath(l);else{if(null==(t=(0,c.SX)(t,e)))return;l=(r=await o.YY.fromUri(t)).repoPath}}else null==i.sha&&(i.sha=i.commit.sha),r=i.commit.getGitUri(),l=i.commit.repoPath,null==t&&(t=i.commit.file?.uri);if(null==(i={...i}).sha){if(null==e)return;let t=e.selection.active.line;if(t<0)return;try{let e=await this.container.git.getBlameForLine(r,t);if(null==e){(0,a.zk)("Unable to show commit");return}if(e.commit.isUncommitted){(0,a.f3)("Unable to show commit");return}i.sha=e.commit.sha,l=e.commit.repoPath,i.commit=e.commit}catch(e){h.Yd.error(e,"ShowQuickCommitCommand",`getBlameForLine(${t})`),(0,a.W8)("Unable to show commit");return}}try{if((null==i.commit||null!=i.commit.file)&&(null!=i.repoLog&&(i.commit=i.repoLog.commits.get(i.sha),null==i.commit&&(i.repoLog=void 0)),null==i.repoLog&&(i.commit=await this.container.git.getCommit(l,i.sha))),null==i.commit){(0,a.G)("Unable to show commit");return}if(i.revealInView){await (0,n.ay)(i.commit,{select:!0,focus:!0,expand:!0});return}await (0,s.m)({command:"show",state:{repo:l,reference:i.commit}})}catch(e){h.Yd.error(e,"ShowQuickCommitCommand"),(0,a.W8)("Unable to show commit")}}};p=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?d(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&u(t,i,n),n})([(0,l.WD)()],p)},8918:(e,t,i)=>{i.d(t,{M:()=>g});var r=i(9496),s=i(5255),n=i(9311),o=i(7462),a=i(6450),l=i(7925),h=i(9529),c=i(4336),u=i(7139),d=Object.defineProperty,p=Object.getOwnPropertyDescriptor;let g=class extends u.Lk{constructor(e){super([s.Gh.ShowQuickCommitFile,s.Gh.ShowQuickCommitRevision,s.Gh.ShowQuickCommitRevisionInDiffLeft,s.Gh.ShowQuickCommitRevisionInDiffRight,s.Gh.ShowLineCommitInView]),this.container=e}static getMarkdownCommandArgs(e){return super.getMarkdownCommandArgsCore(s.Gh.ShowQuickCommitFile,e)}async preExecute(e,t){if("editorLine"===e.type&&(t={...t,line:e.line}),e.command===s.Gh.ShowLineCommitInView&&(t={...t,inView:!0}),null!=e.editor&&e.command.startsWith(s.Gh.ShowQuickCommitRevision)){let i=await o.YY.fromUri(e.editor.document.uri);t={...t,sha:i.sha}}return"viewItem"===e.type&&(t={...t,sha:e.node.uri.sha},(0,u.en)(e)&&(t.commit=e.node.commit)),this.execute(e.editor,e.uri,t)}async execute(e,t,i){let d;if(null!=(t=(0,u.SX)(t,e))){if(null!=(i={...i}).revisionUri?(d=o.YY.fromRevisionUri(r.Uri.parse(i.revisionUri,!0)),i.sha=d.sha):d=await o.YY.fromUri(t),null==i.sha){let t=i.line??e?.selection.active.line;if(null==t)return;try{let e=await this.container.git.getBlameForLine(d,t);if(null==e){(0,l.zk)("Unable to show commit file details");return}if(e.commit.isUncommitted){(0,l.f3)("Unable to show commit file details");return}i.sha=e.commit.sha,i.commit=e.commit}catch(e){c.Yd.error(e,"ShowQuickCommitFileDetailsCommand",`getBlameForLine(${t})`),(0,l.W8)("Unable to show commit file details");return}}try{if(null==i.commit&&(null!=i.fileLog&&(i.commit=i.fileLog.commits.get(i.sha),null==i.commit&&(i.fileLog=void 0)),null==i.fileLog)){let e=i.commit?.repoPath??d.repoPath;if(i.commit=await this.container.git.getCommitForFile(e,d,{ref:i.sha}),null==i.commit){(0,l.G)("Unable to show commit file details");return}}if(null==i.commit){(0,l.G)("Unable to show commit file details");return}let e=i.commit?.file?.path??d.fsPath;(0,a.f_)(i.commit)&&null==i.commit.files&&await i.commit.ensureFullDetails(),i.inView?await (0,h.P0)(s.Gh.ShowCommitsInView,{refs:[i.commit.sha],repoPath:i.commit.repoPath}):await (0,n.m)({command:"show",state:{repo:i.commit.repoPath,reference:i.commit,fileName:e}})}catch(e){c.Yd.error(e,"ShowQuickCommitFileDetailsCommand"),(0,l.W8)("Unable to show commit file details")}}}};g=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?p(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&d(t,i,n),n})([(0,h.WD)()],g)},2540:(e,t,i)=>{i.d(t,{N4:()=>n,S4:()=>l,TA:()=>a,ef:()=>o,oE:()=>h});var r,s,n=((r=n||{}).CopyRemoteCommitUrl="gitlens.copyRemoteCommitUrl",r.CopyRemoteFileUrl="gitlens.copyRemoteFileUrl",r.DiffWithPrevious="gitlens.diffWithPrevious",r.OpenCommitOnRemote="gitlens.openCommitOnRemote",r.OpenFileOnRemote="gitlens.openFileOnRemote",r.RevealCommitInView="gitlens.revealCommitInView",r.ShowCommitsInView="gitlens.showCommitsInView",r.ShowQuickCommitDetails="gitlens.showQuickCommitDetails",r.ShowQuickCommitFileDetails="gitlens.showQuickCommitFileDetails",r.ShowQuickCurrentBranchHistory="gitlens.showQuickRepoHistory",r.ShowQuickFileHistory="gitlens.showQuickFileHistory",r.ToggleFileBlame="gitlens.toggleFileBlame",r.ToggleFileChanges="gitlens.toggleFileChanges",r.ToggleFileChangesOnly="gitlens.toggleFileChangesOnly",r.ToggleFileHeatmap="gitlens.toggleFileHeatmap",r),o=((s=o||{}).CopyRemoteCommitUrl="gitlens.copyRemoteCommitUrl",s.CopyRemoteFileUrl="gitlens.copyRemoteFileUrl",s.DiffWithPrevious="gitlens.diffWithPrevious",s.DiffWithWorking="gitlens.diffWithWorking",s.OpenCommitOnRemote="gitlens.openCommitOnRemote",s.OpenFileOnRemote="gitlens.openFileOnRemote",s.RevealCommitInView="gitlens.revealCommitInView",s.ShowCommitsInView="gitlens.showCommitsInView",s.ShowQuickCommitDetails="gitlens.showQuickCommitDetails",s.ShowQuickCommitFileDetails="gitlens.showQuickCommitFileDetails",s.ShowQuickCurrentBranchHistory="gitlens.showQuickRepoHistory",s.ShowQuickFileHistory="gitlens.showQuickFileHistory",s.ToggleCodeLens="gitlens.toggleCodeLens",s.ToggleFileBlame="gitlens.toggleFileBlame",s.ToggleFileChanges="gitlens.toggleFileChanges",s.ToggleFileChangesOnly="gitlens.toggleFileChangesOnly",s.ToggleFileHeatmap="gitlens.toggleFileHeatmap",s);let a=["defaultItemLimit","formats","pageItemLimit","showRelativeDateMarkers"],l=["branches","commits","commitDetails","contributors","drafts","fileHistory","lineHistory","patchDetails","remotes","repositories","searchAndCompare","stashes","tags","worktrees","workspaces"];function h(e){switch(e){case"silent":return"off";case"errors":return"error";case"verbose":return"info";default:return e}}},5255:(e,t,i)=>{i.d(t,{Gh:()=>d,NE:()=>g,XP:()=>m,ZY:()=>n,_h:()=>p,d$:()=>s,lw:()=>w,m1:()=>r,mN:()=>u,sN:()=>f});let r="gitlens",s=80,n={".png":"image/png",".gif":"image/gif",".jpg":"image/jpeg",".jpeg":"image/jpeg",".jpe":"image/jpeg",".webp":"image/webp",".tif":"image/tiff",".tiff":"image/tiff",".bmp":"image/bmp"};var o,a,l,h,c,u=((o=u||{})[o.Hash=35]="Hash",o[o.Slash=47]="Slash",o[o.Digit0=48]="Digit0",o[o.Digit1=49]="Digit1",o[o.Digit2=50]="Digit2",o[o.Digit3=51]="Digit3",o[o.Digit4=52]="Digit4",o[o.Digit5=53]="Digit5",o[o.Digit6=54]="Digit6",o[o.Digit7=55]="Digit7",o[o.Digit8=56]="Digit8",o[o.Digit9=57]="Digit9",o[o.Backslash=92]="Backslash",o[o.A=65]="A",o[o.B=66]="B",o[o.C=67]="C",o[o.D=68]="D",o[o.E=69]="E",o[o.F=70]="F",o[o.Z=90]="Z",o[o.a=97]="a",o[o.b=98]="b",o[o.c=99]="c",o[o.d=100]="d",o[o.e=101]="e",o[o.f=102]="f",o[o.z=122]="z",o),d=((a=d||{}).ActionPrefix="gitlens.action.",a.AddAuthors="gitlens.addAuthors",a.BrowseRepoAtRevision="gitlens.browseRepoAtRevision",a.BrowseRepoAtRevisionInNewWindow="gitlens.browseRepoAtRevisionInNewWindow",a.BrowseRepoBeforeRevision="gitlens.browseRepoBeforeRevision",a.BrowseRepoBeforeRevisionInNewWindow="gitlens.browseRepoBeforeRevisionInNewWindow",a.ClearFileAnnotations="gitlens.clearFileAnnotations",a.CloseUnchangedFiles="gitlens.closeUnchangedFiles",a.CloseWelcomeView="gitlens.closeWelcomeView",a.CompareWith="gitlens.compareWith",a.CompareHeadWith="gitlens.compareHeadWith",a.CompareWorkingWith="gitlens.compareWorkingWith",a.ComputingFileAnnotations="gitlens.computingFileAnnotations",a.ConnectRemoteProvider="gitlens.connectRemoteProvider",a.CopyAutolinkUrl="gitlens.copyAutolinkUrl",a.CopyCurrentBranch="gitlens.copyCurrentBranch",a.CopyDeepLinkToBranch="gitlens.copyDeepLinkToBranch",a.CopyDeepLinkToCommit="gitlens.copyDeepLinkToCommit",a.CopyDeepLinkToComparison="gitlens.copyDeepLinkToComparison",a.CopyDeepLinkToRepo="gitlens.copyDeepLinkToRepo",a.CopyDeepLinkToTag="gitlens.copyDeepLinkToTag",a.CopyDeepLinkToWorkspace="gitlens.copyDeepLinkToWorkspace",a.CopyMessageToClipboard="gitlens.copyMessageToClipboard",a.CopyRemoteBranchesUrl="gitlens.copyRemoteBranchesUrl",a.CopyRemoteBranchUrl="gitlens.copyRemoteBranchUrl",a.CopyRemoteCommitUrl="gitlens.copyRemoteCommitUrl",a.CopyRemoteComparisonUrl="gitlens.copyRemoteComparisonUrl",a.CopyRemoteFileUrl="gitlens.copyRemoteFileUrlToClipboard",a.CopyRemoteFileUrlWithoutRange="gitlens.copyRemoteFileUrlWithoutRange",a.CopyRemoteFileUrlFrom="gitlens.copyRemoteFileUrlFrom",a.CopyRemoteIssueUrl="gitlens.copyRemoteIssueUrl",a.CopyRemotePullRequestUrl="gitlens.copyRemotePullRequestUrl",a.CopyRemoteRepositoryUrl="gitlens.copyRemoteRepositoryUrl",a.CopyShaToClipboard="gitlens.copyShaToClipboard",a.CopyRelativePathToClipboard="gitlens.copyRelativePathToClipboard",a.CreatePatch="gitlens.createPatch",a.CreateCloudPatch="gitlens.createCloudPatch",a.CreatePullRequestOnRemote="gitlens.createPullRequestOnRemote",a.DiffDirectory="gitlens.diffDirectory",a.DiffDirectoryWithHead="gitlens.diffDirectoryWithHead",a.DiffWith="gitlens.diffWith",a.DiffWithNext="gitlens.diffWithNext",a.DiffWithNextInDiffLeft="gitlens.diffWithNextInDiffLeft",a.DiffWithNextInDiffRight="gitlens.diffWithNextInDiffRight",a.DiffWithPrevious="gitlens.diffWithPrevious",a.DiffWithPreviousInDiffLeft="gitlens.diffWithPreviousInDiffLeft",a.DiffWithPreviousInDiffRight="gitlens.diffWithPreviousInDiffRight",a.DiffLineWithPrevious="gitlens.diffLineWithPrevious",a.DiffWithRevision="gitlens.diffWithRevision",a.DiffWithRevisionFrom="gitlens.diffWithRevisionFrom",a.DiffWithWorking="gitlens.diffWithWorking",a.DiffWithWorkingInDiffLeft="gitlens.diffWithWorkingInDiffLeft",a.DiffWithWorkingInDiffRight="gitlens.diffWithWorkingInDiffRight",a.DiffLineWithWorking="gitlens.diffLineWithWorking",a.DisconnectRemoteProvider="gitlens.disconnectRemoteProvider",a.DisableDebugLogging="gitlens.disableDebugLogging",a.EnableDebugLogging="gitlens.enableDebugLogging",a.DisableRebaseEditor="gitlens.disableRebaseEditor",a.EnableRebaseEditor="gitlens.enableRebaseEditor",a.ExternalDiff="gitlens.externalDiff",a.ExternalDiffAll="gitlens.externalDiffAll",a.FetchRepositories="gitlens.fetchRepositories",a.GenerateCommitMessage="gitlens.generateCommitMessage",a.GetStarted="gitlens.getStarted",a.InviteToLiveShare="gitlens.inviteToLiveShare",a.OpenAutolinkUrl="gitlens.openAutolinkUrl",a.OpenBlamePriorToChange="gitlens.openBlamePriorToChange",a.OpenBranchesOnRemote="gitlens.openBranchesOnRemote",a.OpenBranchOnRemote="gitlens.openBranchOnRemote",a.OpenCurrentBranchOnRemote="gitlens.openCurrentBranchOnRemote",a.OpenChangedFiles="gitlens.openChangedFiles",a.OpenCommitOnRemote="gitlens.openCommitOnRemote",a.OpenComparisonOnRemote="gitlens.openComparisonOnRemote",a.OpenFileHistory="gitlens.openFileHistory",a.OpenFileFromRemote="gitlens.openFileFromRemote",a.OpenFileOnRemote="gitlens.openFileOnRemote",a.OpenFileOnRemoteFrom="gitlens.openFileOnRemoteFrom",a.OpenFileAtRevision="gitlens.openFileRevision",a.OpenFileAtRevisionFrom="gitlens.openFileRevisionFrom",a.OpenFolderHistory="gitlens.openFolderHistory",a.OpenOnRemote="gitlens.openOnRemote",a.OpenIssueOnRemote="gitlens.openIssueOnRemote",a.OpenCloudPatch="gitlens.openCloudPatch",a.OpenPatch="gitlens.openPatch",a.OpenPullRequestOnRemote="gitlens.openPullRequestOnRemote",a.OpenAssociatedPullRequestOnRemote="gitlens.openAssociatedPullRequestOnRemote",a.OpenRepoOnRemote="gitlens.openRepoOnRemote",a.OpenRevisionFile="gitlens.openRevisionFile",a.OpenRevisionFileInDiffLeft="gitlens.openRevisionFileInDiffLeft",a.OpenRevisionFileInDiffRight="gitlens.openRevisionFileInDiffRight",a.OpenWalkthrough="gitlens.openWalkthrough",a.OpenWorkingFile="gitlens.openWorkingFile",a.OpenWorkingFileInDiffLeft="gitlens.openWorkingFileInDiffLeft",a.OpenWorkingFileInDiffRight="gitlens.openWorkingFileInDiffRight",a.PullRepositories="gitlens.pullRepositories",a.PushRepositories="gitlens.pushRepositories",a.GitCommands="gitlens.gitCommands",a.GitCommandsBranch="gitlens.gitCommands.branch",a.GitCommandsCherryPick="gitlens.gitCommands.cherryPick",a.GitCommandsMerge="gitlens.gitCommands.merge",a.GitCommandsRebase="gitlens.gitCommands.rebase",a.GitCommandsReset="gitlens.gitCommands.reset",a.GitCommandsRevert="gitlens.gitCommands.revert",a.GitCommandsSwitch="gitlens.gitCommands.switch",a.GitCommandsTag="gitlens.gitCommands.tag",a.GitCommandsWorktree="gitlens.gitCommands.worktree",a.GitCommandsWorktreeOpen="gitlens.gitCommands.worktree.open",a.OpenOrCreateWorktreeForGHPR="gitlens.ghpr.views.openOrCreateWorktree",a.PlusHide="gitlens.plus.hide",a.PlusLoginOrSignUp="gitlens.plus.loginOrSignUp",a.PlusLogout="gitlens.plus.logout",a.PlusManage="gitlens.plus.manage",a.PlusPurchase="gitlens.plus.purchase",a.PlusResendVerification="gitlens.plus.resendVerification",a.PlusRestore="gitlens.plus.restore",a.PlusShowPlans="gitlens.plus.showPlans",a.PlusStartPreviewTrial="gitlens.plus.startPreviewTrial",a.PlusValidate="gitlens.plus.validate",a.QuickOpenFileHistory="gitlens.quickOpenFileHistory",a.RefreshFocus="gitlens.focus.refresh",a.RefreshGraph="gitlens.graph.refresh",a.RefreshHover="gitlens.refreshHover",a.ResetAvatarCache="gitlens.resetAvatarCache",a.ResetAIKey="gitlens.resetAIKey",a.ResetSuppressedWarnings="gitlens.resetSuppressedWarnings",a.ResetTrackedUsage="gitlens.resetTrackedUsage",a.ResetViewsLayout="gitlens.resetViewsLayout",a.RevealCommitInView="gitlens.revealCommitInView",a.ShareAsCloudPatch="gitlens.shareAsCloudPatch",a.SearchCommits="gitlens.showCommitSearch",a.SearchCommitsInView="gitlens.views.searchAndCompare.searchCommits",a.ShowBranchesView="gitlens.showBranchesView",a.ShowCommitDetailsView="gitlens.showCommitDetailsView",a.ShowCommitInView="gitlens.showCommitInView",a.ShowCommitsInView="gitlens.showCommitsInView",a.ShowCommitsView="gitlens.showCommitsView",a.ShowContributorsView="gitlens.showContributorsView",a.ShowDraftsView="gitlens.showDraftsView",a.ShowFileHistoryView="gitlens.showFileHistoryView",a.ShowFocusPage="gitlens.showFocusPage",a.ShowGraph="gitlens.showGraph",a.ShowGraphPage="gitlens.showGraphPage",a.ShowGraphView="gitlens.showGraphView",a.ShowHomeView="gitlens.showHomeView",a.ShowAccountView="gitlens.showAccountView",a.ShowInCommitGraph="gitlens.showInCommitGraph",a.ShowInCommitGraphView="gitlens.showInCommitGraphView",a.ShowInDetailsView="gitlens.showInDetailsView",a.ShowInTimeline="gitlens.showInTimeline",a.ShowLastQuickPick="gitlens.showLastQuickPick",a.ShowLineCommitInView="gitlens.showLineCommitInView",a.ShowLineHistoryView="gitlens.showLineHistoryView",a.OpenOnlyChangedFiles="gitlens.openOnlyChangedFiles",a.ShowPatchDetailsPage="gitlens.showPatchDetailsPage",a.ShowQuickBranchHistory="gitlens.showQuickBranchHistory",a.ShowQuickCommit="gitlens.showQuickCommitDetails",a.ShowQuickCommitFile="gitlens.showQuickCommitFileDetails",a.ShowQuickCurrentBranchHistory="gitlens.showQuickRepoHistory",a.ShowQuickFileHistory="gitlens.showQuickFileHistory",a.ShowQuickRepoStatus="gitlens.showQuickRepoStatus",a.ShowQuickCommitRevision="gitlens.showQuickRevisionDetails",a.ShowQuickCommitRevisionInDiffLeft="gitlens.showQuickRevisionDetailsInDiffLeft",a.ShowQuickCommitRevisionInDiffRight="gitlens.showQuickRevisionDetailsInDiffRight",a.ShowQuickStashList="gitlens.showQuickStashList",a.ShowRemotesView="gitlens.showRemotesView",a.ShowRepositoriesView="gitlens.showRepositoriesView",a.ShowSearchAndCompareView="gitlens.showSearchAndCompareView",a.ShowSettingsPage="gitlens.showSettingsPage",a.ShowSettingsPageAndJumpToBranchesView="gitlens.showSettingsPage!branches-view",a.ShowSettingsPageAndJumpToCommitsView="gitlens.showSettingsPage!commits-view",a.ShowSettingsPageAndJumpToContributorsView="gitlens.showSettingsPage!contributors-view",a.ShowSettingsPageAndJumpToFileHistoryView="gitlens.showSettingsPage!file-history-view",a.ShowSettingsPageAndJumpToLineHistoryView="gitlens.showSettingsPage!line-history-view",a.ShowSettingsPageAndJumpToRemotesView="gitlens.showSettingsPage!remotes-view",a.ShowSettingsPageAndJumpToRepositoriesView="gitlens.showSettingsPage!repositories-view",a.ShowSettingsPageAndJumpToSearchAndCompareView="gitlens.showSettingsPage!search-compare-view",a.ShowSettingsPageAndJumpToStashesView="gitlens.showSettingsPage!stashes-view",a.ShowSettingsPageAndJumpToTagsView="gitlens.showSettingsPage!tags-view",a.ShowSettingsPageAndJumpToWorkTreesView="gitlens.showSettingsPage!worktrees-view",a.ShowSettingsPageAndJumpToViews="gitlens.showSettingsPage!views",a.ShowSettingsPageAndJumpToCommitGraph="gitlens.showSettingsPage!commit-graph",a.ShowSettingsPageAndJumpToAutolinks="gitlens.showSettingsPage!autolinks",a.ShowStashesView="gitlens.showStashesView",a.ShowTagsView="gitlens.showTagsView",a.ShowTimelinePage="gitlens.showTimelinePage",a.ShowTimelineView="gitlens.showTimelineView",a.ShowWelcomePage="gitlens.showWelcomePage",a.ShowWorktreesView="gitlens.showWorktreesView",a.ShowWorkspacesView="gitlens.showWorkspacesView",a.StashApply="gitlens.stashApply",a.StashSave="gitlens.stashSave",a.StashSaveFiles="gitlens.stashSaveFiles",a.SwitchAIModel="gitlens.switchAIModel",a.SwitchMode="gitlens.switchMode",a.ToggleCodeLens="gitlens.toggleCodeLens",a.ToggleFileBlame="gitlens.toggleFileBlame",a.ToggleFileBlameInDiffLeft="gitlens.toggleFileBlameInDiffLeft",a.ToggleFileBlameInDiffRight="gitlens.toggleFileBlameInDiffRight",a.ToggleFileChanges="gitlens.toggleFileChanges",a.ToggleFileChangesOnly="gitlens.toggleFileChangesOnly",a.ToggleFileHeatmap="gitlens.toggleFileHeatmap",a.ToggleFileHeatmapInDiffLeft="gitlens.toggleFileHeatmapInDiffLeft",a.ToggleFileHeatmapInDiffRight="gitlens.toggleFileHeatmapInDiffRight",a.ToggleGraph="gitlens.toggleGraph",a.ToggleMaximizedGraph="gitlens.toggleMaximizedGraph",a.ToggleLineBlame="gitlens.toggleLineBlame",a.ToggleReviewMode="gitlens.toggleReviewMode",a.ToggleZenMode="gitlens.toggleZenMode",a.ViewsCopy="gitlens.views.copy",a.ViewsOpenDirectoryDiff="gitlens.views.openDirectoryDiff",a.ViewsOpenDirectoryDiffWithWorking="gitlens.views.openDirectoryDiffWithWorking",a.Deprecated_DiffHeadWith="gitlens.diffHeadWith",a.Deprecated_DiffWorkingWith="gitlens.diffWorkingWith",a.Deprecated_OpenBranchesInRemote="gitlens.openBranchesInRemote",a.Deprecated_OpenBranchInRemote="gitlens.openBranchInRemote",a.Deprecated_OpenCommitInRemote="gitlens.openCommitInRemote",a.Deprecated_OpenFileInRemote="gitlens.openFileInRemote",a.Deprecated_OpenInRemote="gitlens.openInRemote",a.Deprecated_OpenRepoInRemote="gitlens.openRepoInRemote",a.Deprecated_ShowFileHistoryInView="gitlens.showFileHistoryInView",a);let p=new Map([["workbench.view.scm",["branches","commits","remotes","repositories","stashes","tags","worktrees","contributors"]],["workbench.view.extension.gitlensPanel",["graph","graphDetails"]],["workbench.view.extension.gitlensInspect",["commitDetails","fileHistory","lineHistory","timeline","searchAndCompare"]],["workbench.view.extension.gitlens",["home","workspaces","account"]]]);var g=((l=g||{}).AngleBracketLeftHeavy="❰",l.AngleBracketRightHeavy="❱",l.ArrowBack="↩",l.ArrowDown="↓",l.ArrowDownUp="⇵",l.ArrowDropRight="⤷",l.ArrowHeadRight="➤",l.ArrowLeft="←",l.ArrowLeftDouble="⇐",l.ArrowLeftRight="↔",l.ArrowLeftRightDouble="⇔",l.ArrowLeftRightDoubleStrike="⇎",l.ArrowLeftRightLong="⟷",l.ArrowRight="→",l.ArrowRightDouble="⇒",l.ArrowRightHollow="⇨",l.ArrowUp="↑",l.ArrowUpDown="⇅",l.ArrowUpRight="↗",l.ArrowsHalfLeftRight="⇋",l.ArrowsHalfRightLeft="⇌",l.ArrowsLeftRight="⇆",l.ArrowsRightLeft="⇄",l.Asterisk="∗",l.Check="✔",l.Dash="—",l.Dot="•",l.Ellipsis="…",l.EnDash="–",l.Envelope="✉",l.EqualsTriple="≡",l.Flag="⚑",l.FlagHollow="⚐",l.MiddleEllipsis="⋯",l.MuchLessThan="≪",l.MuchGreaterThan="≫",l.Pencil="✎",l.Space=" ",l.SpaceThin=" ",l.SpaceThinnest=" ",l.SquareWithBottomShadow="❏",l.SquareWithTopShadow="❐",l.Warning="⚠",l.ZeroWidthSpace="​",l);let m=["left","alt+left","ctrl+left","right","alt+right","ctrl+right","alt+,","alt+.","alt+enter","ctrl+enter","escape"];var f=((h=f||{}).DebugConsole="debug",h.File="file",h.Git="git",h.GitHub="github",h.GitLens="gitlens",h.Output="output",h.PRs="pr",h.Terminal="vscode-terminal",h.Vsls="vsls",h.VslsScc="vsls-scc",h.Virtual="vscode-vfs",h),w=((c=w||{}).Version="gitlens:synced:version",c.PreReleaseVersion="gitlens:synced:preVersion",c.HomeViewWelcomeVisible="gitlens:views:welcome:visible",c)},5140:(e,t,i)=>{let r,s,n,o,a,l,h,c,u,d;i.d(t,{W:()=>hO,N:()=>hE});var p,g,m,f,w,v,y,b=i(9496),C=i(5148);let A=require("child_process"),P=require("fs");var D=i(1017),k=i.n(D),S=i(7282),R=i(4372),$=i(5255),_=((p=_||{})[p.Throw=0]="Throw",p[p.Ignore=1]="Ignore",p),I=i(6592),F=i(4321),x=i(6398),T=i(5367),O=(e,t)=>(t=Symbol[e])?t:Symbol.for("Symbol."+e),E=(e,t,i)=>{if(null!=t){var r;if("object"!=typeof t&&"function"!=typeof t)throw TypeError("Object expected");if(i&&(r=t[O("asyncDispose")]),void 0===r&&(r=t[O("dispose")]),"function"!=typeof r)throw TypeError("Object not disposable");e.push([i,r,t])}else i&&e.push([i]);return t},B=(e,t,i)=>{var r="function"==typeof SuppressedError?SuppressedError:function(e,t,i,r){return(r=Error(i)).name="SuppressedError",r.error=e,r.suppressed=t,r},s=e=>t=i?new r(e,t,"An error was suppressed during disposal"):(i=!0,e),n=r=>{for(;r=e.pop();)try{var o=r[1]&&r[1].call(r[2]);if(r[0])return Promise.resolve(o).then(n,e=>(s(e),n()))}catch(e){s(e)}if(i)throw t};return n()};let U=/^<h>(.+)<n>(.+)<u>(.*)<t>(?:\[(?:ahead ([0-9]+))?[,\s]*(?:behind ([0-9]+))?]|\[(gone)])?<r>(.*)<d>(.*)$/gm;var W=i(2800),M=i(3700),L=i(4627),N=i(6450),H=i(439),G=i(7881),q=i(3961),Y=(e,t)=>(t=Symbol[e])?t:Symbol.for("Symbol."+e),j=(e,t,i)=>{if(null!=t){var r;if("object"!=typeof t&&"function"!=typeof t)throw TypeError("Object expected");if(i&&(r=t[Y("asyncDispose")]),void 0===r&&(r=t[Y("dispose")]),"function"!=typeof r)throw TypeError("Object not disposable");e.push([i,r,t])}else i&&e.push([i]);return t},V=(e,t,i)=>{var r="function"==typeof SuppressedError?SuppressedError:function(e,t,i,r){return(r=Error(i)).name="SuppressedError",r.error=e,r.suppressed=t,r},s=e=>t=i?new r(e,t,"An error was suppressed during disposal"):(i=!0,e),n=r=>{for(;r=e.pop();)try{var o=r[1]&&r[1].call(r[2]);if(r[0])return Promise.resolve(o).then(n,e=>(s(e),n()))}catch(e){s(e)}if(i)throw t};return n()};let Q=/diff --git a\/(.*) b\/(.*)/,z=/^@@ -(\d+?),(\d+?) \+(\d+?),(\d+?) @@/,K=/(\S)\S*\t([^\t\n]+)(?:\t(.+))?/,J=/^(\d+?|-)\s+?(\d+?|-)\s+?(.*)(?:\n\s(delete|rename|copy|create))?/,Z=/(.+)\s=>\s(.+)/,X=/(.*?){(.+?)?\s=>\s(.*?)?}(.*)/,ee=/^<r> (.*)\s*(?:(?:diff --git a\/(.*) b\/(.*))|(?:(\S)\S*\t([^\t\n]+)(?:\t(.+))?))/gm,et=/^<r> (\S+)\s*(.*)$/s,ei=/^(\S)\S*\t([^\t\n]+)(?:\t(.+)?)?$/gm,er=/(?<files>\d+) files? changed(?:, (?<additions>\d+) insertions?\(\+\))?(?:, (?<deletions>\d+) deletions?\(-\))?/,es="%x3c",en="%x3e",eo="%x2f",ea="%x20";var el=((g=el||{})[g.Log=0]="Log",g[g.LogFile=1]="LogFile",g);function eh(e,t){let i=t?.prefix??"",r=[];for(let s in e)r.push(s),i+=`${t?.fieldPrefix??""}${e[s]}${t?.fieldSuffix??(t?.fieldPrefix==null?"%x00":"")}`;let s=["-z",`--format=${i}`];return t?.additionalArgs!=null&&t.additionalArgs.length>0&&s.push(...t.additionalArgs),{arguments:s,parse:function*(e){let i,s={},n=0,o=(0,L.UM)(e,t?.separator??"\x00");if(t?.skip)for(let e=0;e<t.skip;e++)i=o.next();for(;!(i=o.next()).done;)s[r[n++]]=i.value,n===r.length&&(n=0,i=o.next(),t?.parseEntry?.(o,s),yield s,s={})}}}function ec(e){return{arguments:["-z",`--format=${e}`],parse:function*(e){let t;let i=(0,L.UM)(e,"\x00");for(;!(t=i.next()).done;)yield t.value}}}function eu(e){return eh(e,{additionalArgs:["--shortstat"],parseEntry:function(e,t){let i=e.next().value,r=er.exec(i);return r?.groups!=null&&(t.stats={files:Number(r.groups.files||0),additions:Number(r.groups.additions||0),deletions:Number(r.groups.deletions||0)}),e.next(),t},prefix:"%x00%x00",separator:"\x00",fieldSuffix:"%x00",skip:2})}let ed=`${es}${eo}f${en}%n${es}r${en}${ea}%H%n${es}a${en}${ea}%aN%n${es}e${en}${ea}%aE%n${es}d${en}${ea}%at%n${es}n${en}${ea}%cN%n${es}m${en}${ea}%cE%n${es}c${en}${ea}%ct%n${es}p${en}${ea}%P%n${es}t${en}${ea}%D%n${es}s${en}%n%B%n${es}${eo}s${en}%n${es}f${en}`,ep=`${es}${eo}f${en}%n${es}r${en}${ea}%H%n${es}a${en}${ea}%aN%n${es}e${en}${ea}%aE%n${es}d${en}${ea}%at%n${es}n${en}${ea}%cN%n${es}m${en}${ea}%cE%n${es}c${en}${ea}%ct%n${es}p${en}${ea}%P%n${es}s${en}%n%B%n${es}${eo}s${en}%n${es}f${en}`,eg=`${es}r${en}${ea}%H`;function em(e,t,i,r,s,n,o,a,l,h,c,u){var d=[];try{let p,g,m,f,w;let v=j(d,(0,x.k)(`Git.parseLog(${r}, fileName=${s}, sha=${n})`,{log:!1,logLevel:"debug"}));if(!t)return;let y={},b=0,C=!0,A=(0,L.UM)(`${t}</f>`),P=A.next();if(P.done)return;void 0!==r&&(r=(0,M.AH)(r));let D=new Map,k=a;e:for(;!(P=A.next()).done&&(w=P.value,!l||!a||!(b>=a));)switch(w.charCodeAt(1)){case 114:y={sha:w.substring(4)};break;case 97:H.CL===y.sha?y.author="You":y.author=w.substring(4);break;case 101:y.authorEmail=w.substring(4);break;case 100:y.authorDate=w.substring(4);break;case 110:y.committer=w.substring(4);break;case 109:case 99:y.committedDate=w.substring(4);break;case 112:w=w.substring(4),y.parentShas=0!==w.length?w.split(" "):void 0;break;case 116:w=w.substring(4),y.tips=0!==w.length?w.split(", "):void 0;break;case 115:for(;!(P=A.next()).done&&(w=P.value,"</s>"!==w);)void 0===y.summary?y.summary=w:y.summary+=`
${w}`;null!=y.summary&&10===y.summary.charCodeAt(y.summary.length-1)&&(y.summary=y.summary.slice(0,-1));break;case 102:{P=A.next();let t=!0;for((P.done||"</f>"===P.value)&&(t=!1);t&&!(P=A.next()).done&&(w=P.value,"</f>"!==w);)if(!w.startsWith("warning:")){if(0===i)g=K.exec(w),null!=g&&(void 0===y.files&&(y.files=[]),m=g[3],void 0!==m?y.files.push({status:g[1],path:m,originalPath:g[2]}):y.files.push({status:g[1],path:g[2]}));else{if(g=Q.exec(w),null!=g){for([,y.originalPath,y.path]=g,y.path===y.originalPath?(y.originalPath=void 0,y.status=G.NV.Modified):y.status=G.NV.Renamed,A.next(),A.next(),P=A.next(),g=z.exec(P.value),null!==g&&(y.line={sha:y.sha,originalLine:parseInt(g[1],10),line:parseInt(g[3],10)});!(P=A.next()).done&&"</f>"!==P.value;);break}if(P=A.next(),g=J.exec(`${w}
${P.value}`),null!=g)switch(y.fileStats={additions:Number(g[1])||0,deletions:Number(g[2])||0,changes:0},g[4]){case void 0:default:y.status="M",y.path=g[3];break;case"copy":case"rename":if(y.status="copy"===g[4]?"C":"R",m=g[3],f=X.exec(m),null!=f){let[,e,t,i,r]=f;i?y.path=`${e}${i}${r}`:y.path=`${e.endsWith("/")&&r.startsWith("/")?e.slice(0,-1):e}${r}`,t?y.originalPath=`${e}${t}${r}`:y.originalPath=`${e.endsWith("/")&&r.startsWith("/")?e.slice(0,-1):e}${r}`}else f=Z.exec(m),null!=f?(y.path=f[2],y.originalPath=f[1]):y.path=m;break;case"create":y.status="A",y.path=g[3];break;case"delete":y.status="D",y.path=g[3]}if(P.done||"</f>"===P.value)break}}void 0!==y.files&&(y.path=(0,W.DZ)(y.files,e=>e.path?e.path:void 0).join(", ")),C&&void 0===r&&1===i&&void 0!==s?(r=(0,M.AH)(s.replace(s.startsWith("/")?`/${y.path}`:y.path,"")),p=(0,M.AH)((0,M.Gf)(r,s))):p=y.path??(null!=r&&null!=s?(0,M.AH)((0,M.Gf)(r,s)):void 0),C=!1;let n=D.get(y.sha);if(void 0===n){if(b++,a&&b>a)break e}else k&&k--;!function(e,t,i,r,s,n,o,a,l){if(null==i){null!=t.author&&(0,q.o)(a,t.author,t.authorEmail)&&(t.author="You"),null!=t.committer&&(0,q.o)(a,t.committer,t.committerEmail)&&(t.committer="You");let h=t.originalPath??(n!==t.path?t.path:void 0),c={files:t.files?.map(e=>new G.K8(s,e.path,e.status,e.originalPath))};1===r&&null!=n&&(c.file=new G.K8(s,n,t.status,h,void 0,t.fileStats));let u=l?.get(t.sha);null!=u?(i=new N.aM(e,s,u.sha,u.author,u.committer,u.summary,u.parents,u.message,c,void 0,null!=t.line?[t.line]:[],t.tips,u.stashName,u.stashOnRef),o.set(u.sha,i)):(i=new N.aM(e,s,t.sha,new N._j(t.author,t.authorEmail,new Date(1e3*t.authorDate)),new N._j(t.committer,t.committerEmail,new Date(1e3*t.committedDate)),t.summary?.split("\n",1)[0]??"",t.parentShas??[],t.summary??"",c,void 0,null!=t.line?[t.line]:[],t.tips),o.set(t.sha,i))}}(e,y,n,i,r,p,D,o,c)}}return v?.stop({suffix:` parsed ${D.size} commits`}),{repoPath:r,commits:D,sha:n,count:b,limit:a,range:h,hasMore:u??!!(k&&b>k&&1!==k)}}catch(e){var p=e,g=!0}finally{V(d,p,g)}}function ef(e,t,i){var r=[];try{let s,n,o,a,l,h,c;j(r,(0,x.k)("Git.parseLogSimple",{log:!1,logLevel:"debug"}));do{if(c=ee.exec(e),null==c)break;if(c[1]===i||t-- >0)continue;[,s,n,o,a,l,h]=c,l=` ${o||n||h||l}`.substr(1),a=null==a||0===a.length?void 0:` ${a}`.substr(1)}while(t>=0)return ee.lastIndex=0,[null==s||0===s.length?void 0:` ${s}`.substr(1),l,a]}catch(e){var s=e,n=!0}finally{V(r,s,n)}}function ew(e,t){var i=[];try{let r,s,n;j(i,(0,x.k)("Git.parseLogSimpleRenamed",{log:!1,logLevel:"debug"}));let o=et.exec(e);if(null==o)return[void 0,void 0,void 0];let[,a,l]=o;for(;o=ei.exec(l),null!=o;){if([,r,s,n]=o,t!==s){r=void 0,s=void 0,n=void 0;continue}s=` ${n||s}`.substr(1),r=null==r||0===r.length?void 0:` ${r}`.substr(1);break}return ei.lastIndex=0,[null==a||0===a.length||null==s?void 0:` ${a}`.substr(1),s,r]}catch(e){var r=e,s=!0}finally{V(i,r,s)}}var ev=i(7512),ey=i(4488),eb=Object.defineProperty,eC=Object.getOwnPropertyDescriptor,eA=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?eC(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&eb(t,i,n),n};class eP{constructor(e,t,i,r,s,n,o){this.repoPath=e,this.sha=t,this._selector=i,this.date=r,this.command=s,this.commandArgs=n,this.details=o}_previousSha;formatDate(e){return(0,ev.p6)(this.date,e??"MMMM Do, YYYY h:mma")}formatDateFromNow(){return(0,ev.Zh)(this.date)}get formattedDate(){return"absolute"===hO.instance.CommitDateFormatting.dateStyle?this.formatDate(hO.instance.CommitDateFormatting.dateFormat):this.formatDateFromNow()}get HEAD(){return null==this._selector||0===this._selector.length?"":this._selector.startsWith("refs/heads")?this._selector.substr(11):this._selector.startsWith("refs/remotes")?this._selector.substr(13):this._selector}get previousSha(){return this._previousSha}get previousShortSha(){return(0,F.zL)(this._previousSha)}get selector(){return this._selector}get shortSha(){return(0,F.zL)(this.sha)}update(e,t){void 0!==e&&(this._previousSha=e),void 0!==t&&(this._selector=t)}}eA([(0,ey.H)(e=>e??"MMMM Do, YYYY h:mma")],eP.prototype,"formatDate",1),eA([(0,ey.H)()],eP.prototype,"HEAD",1),eA([(0,ey.H)()],eP.prototype,"previousShortSha",1),eA([(0,ey.H)()],eP.prototype,"shortSha",1);var eD=(e,t)=>(t=Symbol[e])?t:Symbol.for("Symbol."+e),ek=(e,t,i)=>{if(null!=t){var r;if("object"!=typeof t&&"function"!=typeof t)throw TypeError("Object expected");if(i&&(r=t[eD("asyncDispose")]),void 0===r&&(r=t[eD("dispose")]),"function"!=typeof r)throw TypeError("Object not disposable");e.push([i,r,t])}else i&&e.push([i]);return t},eS=(e,t,i)=>{var r="function"==typeof SuppressedError?SuppressedError:function(e,t,i,r){return(r=Error(i)).name="SuppressedError",r.error=e,r.suppressed=t,r},s=e=>t=i?new r(e,t,"An error was suppressed during disposal"):(i=!0,e),n=r=>{for(;r=e.pop();)try{var o=r[1]&&r[1].call(r[2]);if(r[0])return Promise.resolve(o).then(n,e=>(s(e),n()))}catch(e){s(e)}if(i)throw t};return n()};let eR=/^<r>(.+)<d>(.+?)@{(.+)}<s>(\w*)(.*?)(?::(.*))?$/gm,e$=/.*?\/?HEAD$/,e_="%x3c",eI="%x3e",eF=`${e_}r${eI}%H${e_}d${eI}%gD${e_}s${eI}%gs`;var ex=i(4794),eT=i(9502),eO=(e,t)=>(t=Symbol[e])?t:Symbol.for("Symbol."+e),eE=(e,t,i)=>{if(null!=t){var r;if("object"!=typeof t&&"function"!=typeof t)throw TypeError("Object expected");if(i&&(r=t[eO("asyncDispose")]),void 0===r&&(r=t[eO("dispose")]),"function"!=typeof r)throw TypeError("Object not disposable");e.push([i,r,t])}else i&&e.push([i]);return t},eB=(e,t,i)=>{var r="function"==typeof SuppressedError?SuppressedError:function(e,t,i,r){return(r=Error(i)).name="SuppressedError",r.error=e,r.suppressed=t,r},s=e=>t=i?new r(e,t,"An error was suppressed during disposal"):(i=!0,e),n=r=>{for(;r=e.pop();)try{var o=r[1]&&r[1].call(r[2]);if(r[0])return Promise.resolve(o).then(n,e=>(s(e),n()))}catch(e){s(e)}if(i)throw t};return n()};let eU=/^<n>(.+)<\*r>(.*)<r>(.*)<d>(.*)<ad>(.*)<s>(.*)$/gm;var eW=i(4241),eM=i(3105),eL=i(4336),eN=i(8227),eH=i(6004),eG=i(2509),eq=i(4550);let eY="GitLens",ej="win32"===S.platform,eV=/[\\/]/,eQ=/\.ps1$/i,ez=/\.(bat|cmd)$/i,eK=/\.(js)$/i;function eJ(e){if(eV.test(e))return e;let t=(0,D.join)(".",e);try{let e=(0,P.statSync)(t);if(e?.isFile()&&eZ(e))return t}catch{}let i=S.env.PATH;if(null!=i&&0!==i.length){let t;for(let r of i.split(ej?";":":")){let i=(0,D.join)(r,e);try{if(t=(0,P.statSync)(i),t?.isFile()&&eZ(t))return i}catch{}}}return e}function eZ(e){if(ej)return!0;let t=!e.gid||null!=S.getgid&&e.gid===S.getgid(),i=!e.uid||null!=S.getuid&&e.uid===S.getuid();return!!(1&e.mode||8&e.mode&&t||64&e.mode&&i)}let eX=/stdout maxBuffer( length)? exceeded/;class e0 extends Error{constructor(e,t,i){super(e.message),this.original=e,this.stdout=t,this.stderr=i,t=t.trim(),i=i.trim(),Error.captureStackTrace?.(this,e0)}get cmd(){return this.original.cmd}get killed(){return this.original.killed}get code(){return this.original.code}get signal(){return this.original.signal}}class e1 extends e0{constructor(e,t,i,r="SIGTERM"){super({name:"CancelledRunError",message:"Cancelled",cmd:e,killed:t,code:i,signal:r},"",""),Error.captureStackTrace?.(this,e1)}}function e2(e,t,r,s){let{stdin:n,stdinEncoding:o,...a}={maxBuffer:104857600,...s},l=!1;return new Promise((h,c)=>{let u=(0,A.execFile)(e,t,a,async(n,o,d)=>{if(!l){if(s?.exitCodeOnly){h(n?.code??u.exitCode);return}if(null!=n){let e,t;if(eX.test(n.message)&&(n.message=`Command output exceeded the allocated stdout buffer. Set 'options.maxBuffer' to a larger value than ${a.maxBuffer} bytes`),"utf8"===r||"binary"===r||"buffer"===r)e=o.toString(),t=d.toString();else{let s=(await i.e(429).then(i.t.bind(i,4914,23))).decode;e=s(Buffer.from(o,"binary"),r),t=s(Buffer.from(d,"binary"),r)}c(new e0(n,e,t));return}d&&eL.Yd.warn(`Warning(${e} ${t.join(" ")}): ${d}`),"utf8"===r||"binary"===r||"buffer"===r?h(o):h((0,(await i.e(429).then(i.t.bind(i,4914,23))).decode)(Buffer.from(o,"binary"),r))}});s?.cancellation?.onCancellationRequested(()=>{let t=u.kill();l=!0,s?.exitCodeOnly?h(0):c(new e1(e,t))}),null!=n&&u.stdin?.end(n,o??"utf8")})}async function e4(e){return new Promise(t=>(0,P.access)(e,P.constants.F_OK,e=>t(null==e)))}var e5=Object.defineProperty,e6=Object.getOwnPropertyDescriptor;let e3=Object.freeze([]),e8=Object.freeze({}),e9=Object.freeze(["-c","color.branch=false"]),e7=Object.freeze(["-c","color.diff=false"]),te=Object.freeze(["-c","log.showSignature=false"]),tt=Object.freeze(["-c","log.showSignature=false","-c","diff.renameLimit=0"]),ti=Object.freeze(["-c","color.status=false"]),tr=new TextDecoder("utf8"),ts="4b825dc642cb6eb9a060e54bf8d69288fbee4904",tn={badRevision:/bad revision '(.*?)'/i,cantLockRef:/cannot lock ref|unable to update local ref/i,changesWouldBeOverwritten:/Your local changes to the following files would be overwritten/i,commitChangesFirst:/Please, commit your changes before you can/i,conflict:/^CONFLICT \([^)]+\): \b/m,invalidObjectName:/invalid object name: (.*)\s/i,invalidObjectNameList:/could not open object name list: (.*)\s/i,noFastForward:/\(non-fast-forward\)/i,noMergeBase:/no merge base/i,noRemoteRepositorySpecified:/No remote repository specified\./i,noUserNameConfigured:/Please tell me who you are\./i,invalidLineCount:/file .+? has only \d+ lines/i,uncommittedChanges:/contains modified or untracked files/i,alreadyExists:/already exists/i,alreadyCheckedOut:/already checked out/i,mainWorkingTree:/is a main working tree/i,noUpstream:/^fatal: The current branch .* has no upstream branch/i,permissionDenied:/Permission.*denied/i,pushRejected:/^error: failed to push some refs to\b/m,rebaseMultipleBranches:/cannot rebase onto multiple branches/i,remoteAhead:/rejected because the remote contains work/i,remoteConnection:/Could not read from remote repository/i,tagConflict:/! \[rejected\].*\(would clobber existing tag\)/m,unmergedFiles:/is not possible because you have unmerged files/i,unstagedChanges:/You have unstaged changes/i},to={notARepository:/Not a git repository/i,outsideRepository:/is outside repository/i,noPath:/no such path/i,noCommits:/does not have any commits/i,notFound:/Path '.*?' does not exist in/i,foundButNotInRevision:/Path '.*?' exists on disk, but not in/i,headNotABranch:/HEAD does not point to a branch/i,noUpstream:/no upstream configured for branch '(.*?)'/i,unknownRevision:/ambiguous argument '.*?': unknown revision or path not in the working tree|not stored as a remote-tracking branch/i,mustRunInWorkTree:/this operation must be run in a work tree/i,patchWithConflicts:/Applied patch to '.*?' with conflicts/i,noRemoteRepositorySpecified:/No remote repository specified\./i,remoteConnectionError:/Could not read from remote repository/i,notAGitCommand:/'.+' is not a git command/i,tipBehind:/tip of your current branch is behind/i};function ta(e,t,i){let r=e.message||e.toString();if(null!=r&&0!==r.length){for(let e of Object.values(to))if(e.test(r)){let e=void 0!==i?` [${(0,L.qk)(i)}ms]`:"";return eL.Yd.warn(`[${t}] Git ${r.trim().replace(/fatal: /g,"").replace(/\r?\n|\r/g,` ${$.NE.Dot} `)}${e}`),""}let e=tn.badRevision.exec(r);if(null!=e){let[,t]=e;if(t?.endsWith("^3"))return""}}throw e}let tl=0;class th{pendingCommands=new Map;async git(e,...t){let i,r;if(!b.workspace.isTrusted)throw new I.q6;let s=(0,R.a)(),{configs:n,correlationKey:o,errors:a,encoding:l,...h}=e,c={...h,encoding:(l??"utf8")==="utf8"?"utf8":"buffer",env:{...S.env,...this._gitEnv,...e.env??e8,GCM_INTERACTIVE:"NEVER",GCM_PRESERVE_CREDS:"TRUE",LC_ALL:"C"}},u=`[${c.cwd}] git ${t.join(" ")}`,d=`${void 0!==o?`${o}:`:""}${e?.stdin!=null?`${tl===Number.MAX_SAFE_INTEGER&&(tl=0),tl++}:`:""}${u}`,p=this.pendingCommands.get(d);void 0===p?(i=!1,t.unshift("-c","core.quotepath=false","-c","color.ui=false",...null!=n?n:e3),"win32"===S.platform&&t.unshift("-c","core.longpaths=true"),p=e2(await this.path(),t,l??"utf8",c),this.pendingCommands.set(d,p)):(i=!0,eL.Yd.debug(`[GIT  ] ${u} ${$.NE.Dot} waiting...`));try{return await p}catch(t){switch(r=t,a){case _.Ignore:return r=void 0,"";case _.Throw:throw t;default:return r=void 0,ta(t,e.cwd,s)}}finally{this.pendingCommands.delete(d),this.logGitCommand(u,r,(0,L.qk)(s),i)}}async gitSpawn(e,...t){let i;if(!b.workspace.isTrusted)throw new I.q6;let r=(0,R.a)(),{cancellation:s,configs:n,stdin:o,stdinEncoding:a,...l}=e,h={stdio:[o?"pipe":"ignore",null,null],...l,env:{...S.env,...this._gitEnv,...e.env??e8,GCM_INTERACTIVE:"NEVER",GCM_PRESERVE_CREDS:"TRUE",LC_ALL:"C"}},c=`(spawn) [${h.cwd}] git ${t.join(" ")}`;if(t.unshift("-c","core.quotepath=false","-c","color.ui=false",...void 0!==n?n:e3),"win32"===S.platform&&t.unshift("-c","core.longpaths=true"),s){let e=new AbortController;h.signal=e.signal,s.onCancellationRequested(()=>e.abort())}let u=(0,A.spawn)(await this.path(),t,h);return o&&u.stdin?.end(o,a??"utf8"),u.once("error",e=>i=e),u.once("exit",()=>this.logGitCommand(c,i,(0,L.qk)(r),!1)),u}_gitLocation;_gitLocationPromise;async getLocation(){return null==this._gitLocation&&(null==this._gitLocationPromise&&(this._gitLocationPromise=this._gitLocator()),this._gitLocation=await this._gitLocationPromise),this._gitLocation}_gitLocator;setLocator(e){this._gitLocator=e,this._gitLocationPromise=void 0,this._gitLocation=void 0}_gitEnv;setEnv(e){this._gitEnv=e}async path(){return(await this.getLocation()).path}async version(){return(await this.getLocation()).version}async isAtLeastVersion(e){return -1!==(0,eq.qu)((0,eq.mL)(await this.version()),(0,eq.mL)(e))}maybeIsAtLeastVersion(e){return null!=this._gitLocation?-1!==(0,eq.qu)((0,eq.mL)(this._gitLocation.version),(0,eq.mL)(e)):void 0}add(e,t){return this.git({cwd:e},"add","-A","--",t)}apply(e,t,i={}){let r=["apply","--whitespace=warn"];return i.allowConflicts&&r.push("-3"),this.git({cwd:e,stdin:t},...r)}async apply2(e,t,...i){return this.git({cwd:e,cancellation:t?.cancellation,configs:t?.configs??te,env:t?.env,errors:t?.errors,stdin:t?.stdin},"apply",...i,...t?.stdin?["-"]:e3)}ignoreRevsFileMap=new Map;async blame(e,t,i){let r;let[s,n]=(0,M.uo)(t,e,!0),o=["blame","--root","--incremental"];if(i?.ignoreWhitespace&&o.push("-w"),i?.startLine!=null&&null!=i.endLine&&o.push(`-L ${i.startLine},${i.endLine}`),i?.args!=null){let e=i.args.findIndex(e=>"--ignore-revs-file"!==e&&e.startsWith("--ignore-revs-file"));if(-1!==e){let t=/^--ignore-revs-file\s*=?\s*(.*)$/.exec(i.args[e]);null!=t&&i.args.splice(e,1,"--ignore-revs-file",t[1])}o.push(...i.args)}let a=this.maybeIsAtLeastVersion("2.23");void 0===a&&(a=await this.isAtLeastVersion("2.23"));let l=o.indexOf("--ignore-revs-file");if(a){let e;-1!==l?(e=o[l+1],(0,M.YP)(e)||(e=(0,M.RQ)(n,e))):e=(0,M.RQ)(n,".git-blame-ignore-revs");let t=this.ignoreRevsFileMap.get(e);if(void 0!==t)a=t;else{try{a=await e4(e)}catch{a=!1}this.ignoreRevsFileMap.set(e,a)}}a||-1===l?a&&-1===l&&o.push("--ignore-revs-file",".git-blame-ignore-revs"):o.splice(l,2),i?.contents!=null?(o.push("--contents","-"),r=i.contents):i?.ref&&((0,F.rD)(i.ref)?(o.push("--contents","-"),r=await this.show(e,t,":")):o.push(i.ref));try{return await this.git({cwd:n,stdin:r,correlationKey:i?.correlationKey},...o,"--",s)}catch(t){let e=tn.invalidObjectNameList.exec(t.message);if(null!=e)throw new I.Ms(e[1],t);if(null!=(e=tn.invalidObjectName.exec(t.message)))throw new I.PZ(e[1],t);throw t}}branch__set_upstream(e,t,i,r){return this.git({cwd:e},"branch","--set-upstream-to",`${i}/${r}`,t)}branchOrTag__containsOrPointsAt(e,t,i){let r=[i?.type??"branch"];return i?.all?r.push("-a"):i?.remotes&&r.push("-r"),r.push(i?.mode==="pointsAt"?`--points-at=${t}`:`--contains=${t}`,"--format=%(refname:short)"),i?.name!=null&&r.push(i.name),this.git({cwd:e,configs:e9,errors:_.Ignore},...r)}async cat_file__size(e,t){let i=await this.git({cwd:e},"cat-file","-s",t);return i.length?parseInt(i.trim(),10):0}check_ignore(e,...t){return this.git({cwd:e,errors:_.Ignore,stdin:t.join("\x00")},"check-ignore","-z","--stdin")}check_mailmap(e,t){return this.git({cwd:e,errors:_.Ignore},"check-mailmap",t)}async check_ref_format(e,t,i={branch:!0}){let r=["check-ref-format"];i.branch?r.push("--branch"):r.push("--normalize");try{return!!(await this.git({cwd:t??"",errors:_.Throw},...r,e)).trim()}catch{return!1}}checkout(e,t,{createBranch:i,path:r}={}){let s=["checkout"];return i?s.push("-b",i,t,"--"):(s.push(t,"--"),r&&([r,e]=(0,M.uo)(r,e,!0),s.push(r))),this.git({cwd:e},...s)}async cherrypick(e,t,i={}){let r=["cherry-pick"];i?.noCommit&&r.push("-n"),r.push(t);try{await this.git({cwd:e,errors:i?.errors},...r)}catch(r){let e=r?.toString()??"",i=I.e9.Other;throw tn.changesWouldBeOverwritten.test(e)||tn.changesWouldBeOverwritten.test(r.stderr??"")?i=I.e9.OverwrittenChanges:(tn.conflict.test(e)||tn.conflict.test(r.stdout??""))&&(i=I.e9.Conflict),new I.oj(i,r,t)}}async clone(e,t){let i=0,[,,r]=(0,ex.Sk)(e),s=r.split("/").pop();if(!s)return;let n=(0,D.join)(t,s);for(;await e4(n)&&i<20;)i++,n=(0,D.join)(t,`${r}-${i}`);return await this.git({cwd:t},"clone",e,n),n}async config__get(e,t,i){let r=await this.git({cwd:t??"",errors:_.Ignore,local:i?.local},"config","--get",e);return 0===r.length?void 0:r.trim()}async config__get_regex(e,t,i){let r=await this.git({cwd:t??"",errors:_.Ignore,local:i?.local},"config","--get-regex",e);return 0===r.length?void 0:r.trim()}async config__set(e,t,i){let r=["config","--local"];null==t?r.push("--unset",e):r.push(e,t),await this.git({cwd:i??"",local:!0},...r)}async diff(e,t,i,r,s={}){let n=["diff","--no-ext-diff","--minimal"];null!=s.linesOfContext&&n.push(`-U${s.linesOfContext}`),s.renames&&n.push(`-M${null==s.similarityThreshold?"":`${s.similarityThreshold}%`}`),null!=s.filters&&0!==s.filters.length&&n.push(`--diff-filter=${s.filters.join("")}`),i&&(i.endsWith("^3^")&&(i=ts),n.push((0,F.rD)(i)?"--staged":i)),r&&n.push((0,F.rD)(r)?"--staged":r);try{return await this.git({cwd:e,configs:e7,encoding:s.encoding},...n,"--",t)}catch(o){let n=tn.badRevision.exec(o.message);if(null!==n){let[,o]=n;if(o===i&&null!=o&&o.endsWith("^"))return this.diff(e,t,ts,r,s)}throw o}}async diff2(e,t,...i){return this.git({cwd:e,cancellation:t?.cancellation,configs:t?.configs??te,errors:t?.errors,stdin:t?.stdin},"diff",...t?.stdin?["--stdin"]:e3,...i,...i.includes("--")?e3:["--"])}async diff__contents(e,t,i,r,s={}){let n=["diff",`-M${null==s.similarityThreshold?"":`${s.similarityThreshold}%`}`,"--no-ext-diff","-U0","--minimal"];null!=s.filters&&0!==s.filters.length&&n.push(`--diff-filter=${s.filters.join("")}`),n.push("--no-index");try{return await this.git({cwd:e,configs:e7,encoding:s.encoding,stdin:r},...n,"--",t,"-")}catch(o){if(o instanceof e0&&o.stdout)return o.stdout;let n=tn.badRevision.exec(o.message);if(null!==n){let[,o]=n;if(o===i&&null!=o&&o.endsWith("^"))return this.diff__contents(e,t,ts,r,s)}throw o}}diff__name_status(e,t,i,{filters:r,similarityThreshold:s}={}){let n=["diff","--name-status",`-M${null==s?"":`${s}%`}`,"--no-ext-diff","-z"];return null!=r&&0!==r.length&&n.push(`--diff-filter=${r.join("")}`),t&&n.push(t),i&&n.push(i),this.git({cwd:e,configs:e7},...n,"--")}async diff__shortstat(e,t){let i=["diff","--shortstat","--no-ext-diff"];t&&i.push(t);try{return await this.git({cwd:e,configs:e7},...i,"--")}catch(t){let e=t?.toString()??"";if(tn.noMergeBase.test(e))return;throw t}}difftool(e,t,i,r={}){let s=["difftool","--no-prompt",`--tool=${i}`];return r.staged&&s.push("--staged"),r.ref1&&s.push(r.ref1),r.ref2&&s.push(r.ref2),this.git({cwd:e},...s,"--",t)}difftool__dir_diff(e,t,i,r){let s=["difftool","--dir-diff",`--tool=${t}`,i];return r&&s.push(r),this.git({cwd:e},...s)}async fetch(e,t={}){let i=["fetch"];t.prune&&i.push("--prune"),t.branch&&t.remote?t.upstream&&t.pull?i.push("-u",t.remote,`${t.upstream}:${t.branch}`):i.push(t.remote,t.upstream||t.branch):t.remote?i.push(t.remote):t.all&&i.push("--all");try{await this.git({cwd:e},...i)}catch(r){let e=r?.toString()??"",i=I.uI.Other;throw tn.noFastForward.test(e)||tn.noFastForward.test(r.stderr??"")?i=I.uI.NoFastForward:tn.noRemoteRepositorySpecified.test(e)||tn.noRemoteRepositorySpecified.test(r.stderr??"")?i=I.uI.NoRemote:(tn.remoteConnection.test(e)||tn.remoteConnection.test(r.stderr??""))&&(i=I.uI.RemoteConnection),new I.kp(i,r,t?.branch,t?.remote)}}async push(e,t){let i=["push"];null!=t.force&&(t.force.withLease?(i.push("--force-with-lease"),t.force.ifIncludes&&await this.isAtLeastVersion("2.30.0")&&i.push("--force-if-includes")):i.push("--force")),t.branch&&t.remote?t.upstream?i.push("-u",t.remote,`${t.branch}:${t.upstream}`):t.publish?i.push("--set-upstream",t.remote,t.branch):i.push(t.remote,t.branch):t.remote&&i.push(t.remote);try{await this.git({cwd:e},...i)}catch(r){let e=r?.toString()??"",i=I.gk.Other;throw tn.remoteAhead.test(e)||tn.remoteAhead.test(r.stderr??"")?i=I.gk.RemoteAhead:to.tipBehind.test(e)||to.tipBehind.test(r.stderr??"")?i=I.gk.TipBehind:tn.pushRejected.test(e)||tn.pushRejected.test(r.stderr??"")?i=t?.force?.withLease?/! \[rejected\].*\(stale info\)/m.test(r.stderr||"")?I.gk.PushRejectedWithLease:t.force.ifIncludes&&/! \[rejected\].*\(remote ref updated since checkout\)/m.test(r.stderr||"")?I.gk.PushRejectedWithLeaseIfIncludes:I.gk.PushRejected:I.gk.PushRejected:tn.permissionDenied.test(e)||tn.permissionDenied.test(r.stderr??"")?i=I.gk.PermissionDenied:tn.remoteConnection.test(e)||tn.remoteConnection.test(r.stderr??"")?i=I.gk.RemoteConnection:(tn.noUpstream.test(e)||tn.noUpstream.test(r.stderr??""))&&(i=I.gk.NoUpstream),new I.FD(i,r,t?.branch,t?.remote)}}async pull(e,t){let i=["pull"];t.tags&&i.push("--tags"),t.rebase&&i.push("-r"),t.remote&&t.branch&&(i.push(t.remote),i.push(t.branch));try{await this.git({cwd:e},...i)}catch(r){let e=r?.toString()??"",i=I.PK.Other;throw tn.conflict.test(e)||tn.conflict.test(r.stdout??"")?i=I.PK.Conflict:tn.noUserNameConfigured.test(e)||tn.noUserNameConfigured.test(r.stderr??"")?i=I.PK.GitIdentity:tn.remoteConnection.test(e)||tn.remoteConnection.test(r.stderr??"")?i=I.PK.RemoteConnection:tn.unstagedChanges.test(e)||tn.unstagedChanges.test(r.stderr??"")?i=I.PK.UnstagedChanges:tn.unmergedFiles.test(e)||tn.unmergedFiles.test(r.stderr??"")?i=I.PK.UnmergedFiles:tn.commitChangesFirst.test(e)||tn.commitChangesFirst.test(r.stderr??"")?i=I.PK.UncommittedChanges:tn.changesWouldBeOverwritten.test(e)||tn.changesWouldBeOverwritten.test(r.stderr??"")?i=I.PK.OverwrittenChanges:tn.cantLockRef.test(e)||tn.cantLockRef.test(r.stderr??"")?i=I.PK.RefLocked:tn.rebaseMultipleBranches.test(e)||tn.rebaseMultipleBranches.test(r.stderr??"")?i=I.PK.RebaseMultipleBranches:(tn.tagConflict.test(e)||tn.tagConflict.test(r.stderr??""))&&(i=I.PK.TagConflict),new I.wG(i,r,t?.branch,t?.remote)}}for_each_ref__branch(e,t={all:!1}){let i=["for-each-ref","--format=%3ch%3e%(HEAD)%3cn%3e%(refname)%3cu%3e%(upstream:short)%3ct%3e%(upstream:track)%3cr%3e%(objectname)%3cd%3e%(committerdate:iso8601)","refs/heads"];return t.all&&i.push("refs/remotes"),this.git({cwd:e},...i)}log(e,t,...i){return this.git({cwd:e,cancellation:t?.cancellation,configs:t?.configs??te,errors:t?.errors,stdin:t?.stdin},"log",...t?.stdin?["--stdin"]:e3,...i,...t?.ref&&!(0,F.rD)(t.ref)?[t.ref]:e3,...i.includes("--")?e3:["--"])}async logStreamTo(e,t,i,r,...s){let n=["log",...s];r?.stdin&&n.push("--stdin");let o=await this.gitSpawn({cwd:e,configs:r?.configs??te,stdin:r?.stdin},...n,"--"),a=tc(t),l=!1,h=0;return new Promise((e,t)=>{let r=[],s=[];function n(e){r.push(e)}function c(e){t(e)}function u(i){0!==i&&t(Error(r.join(""))),e([s,h])}o.on("error",c),o.on("exit",u),o.stdout.setEncoding("utf8"),o.stdout.on("data",function t(r){s.push(r),h+=r.match(/(?:^\x00*|\x00\x00)[0-9a-f]{40}\x00/g)?.length??0,!l&&a.test(r)&&(l=!0,h>i&&(i=h+50)),l&&!(h<=i)&&(o.removeListener("exit",u),o.removeListener("error",c),o.stdout.removeListener("data",t),o.stderr.removeListener("data",n),o.kill(),e([s,h]))}),o.stderr.setEncoding("utf8"),o.stderr.on("data",n)})}log__file(e,t,i,{all:r,argsOrFormat:s,fileMode:n="full",filters:o,limit:a,merges:l=!1,ordering:h,renames:c=!0,reverse:u=!1,since:d,skip:p,startLine:g,endLine:m}={}){let[f,w]=(0,M.uo)(t,e,!0);null==s&&(s=[`--format=${r?ed:ep}`]),"string"==typeof s&&(s=[`--format=${s}`]);let v=["log",...s];return h&&v.push(`--${h}-order`),a&&!u&&v.push(`-n${a+1}`),p&&v.push(`--skip=${p}`),d&&v.push(`--since="${d}"`),r&&v.push("--all","--single-worktree"),l&&v.push("--first-parent"),c&&null!=g&&(c=!1),c&&v.push("--follow"),null!=o&&0!==o.length&&v.push(`--diff-filter=${o.join("")}`),"none"!==n&&(null==g?"simple"===n||(0,M.Mh)(f)?v.push("--name-status"):v.push("--numstat","--summary"):v.push(`-L ${g},${null==m?g:m}:${f}`)),i&&!(0,F.rD)(i)&&(u?v.push("--reverse","--ancestry-path",`${i}..HEAD`):v.push(i)),null==g&&v.push("--",f),this.git({cwd:w,configs:te},...v)}async log__file_recent(e,t,i){let r=["log",`-M${i?.similarityThreshold==null?"":`${i?.similarityThreshold}%`}`,"-n1","--format=%H"];i?.ordering&&r.push(`--${i?.ordering}-order`),i?.ref&&r.push(i?.ref);let s=await this.git({cancellation:i?.cancellation,cwd:e,configs:te,errors:_.Ignore},...r,"--",t);return 0===s.length?void 0:s.trim()}async log__find_object(e,t,i,r,s,n){let o=["log","-n1","--no-renames","--format=%H",`--find-object=${t}`,i];r&&o.push(`--${r}-order`),s&&o.push("--",s);let a=await this.git({cancellation:n,cwd:e,configs:te,errors:_.Ignore},...o);return 0===a.length?void 0:a.trim()}async log__recent(e,t){let i=["log","-n1","--format=%H"];t&&i.push(`--${t}-order`);let r=await this.git({cwd:e,configs:te,errors:_.Ignore},...i,"--");return 0===r.length?void 0:r.trim()}async log__recent_committerdate(e,t){let i=["log","-n1","--format=%ct"];t&&i.push(`--${t}-order`);let r=await this.git({cwd:e,configs:te,errors:_.Ignore},...i,"--");return 0===r.length?void 0:r.trim()}log__search(e,t=e3,i){let r;if(i?.shas!=null){let t=(0,eM.v_)(i.shas,"\n");return this.git({cwd:e,stdin:t},"show","--stdin","--name-status",`--format=${ep}`,"--use-mailmap")}return[t,r]=(0,W.lx)(t,t.indexOf("--")),this.git({cwd:e,configs:["-C",e,...te],stdin:i?.stdin},"log",...i?.stdin?["--stdin"]:e3,"--name-status",`--format=${ep}`,"--use-mailmap",...t,...i?.ordering?[`--${i.ordering}-order`]:e3,...i?.limit?[`-n${i.limit+1}`]:e3,...i?.skip?[`--skip=${i.skip}`]:e3,...r)}async ls_files(e,t,i){let r=["ls-files"];i?.ref&&((0,F.l3)(i.ref)?(0,F.rD)(i.ref)&&r.push("--stage"):r.push(`--with-tree=${i.ref}`)),!i?.ref&&i?.untracked&&r.push("-o");let s=await this.git({cwd:e,errors:_.Ignore},...r,"--",t);return 0===s.length?void 0:s.trim()}ls_remote(e,t,i){return this.git({cwd:e},"ls-remote",t,i)}ls_remote__HEAD(e,t){return this.git({cwd:e},"ls-remote","--symref",t,"HEAD")}async ls_tree(e,t,i){let r=["ls-tree"];i?r.push("-l",t,"--",i):r.push("-lrt",t,"--");let s=await this.git({cwd:e,errors:_.Ignore},...r);return 0===s.length?void 0:s.trim()}merge_base(e,t,i,r){let s=["merge-base"];return r?.forkPoint&&s.push("--fork-point"),this.git({cwd:e},...s,t,i)}async merge_base__is_ancestor(e,t,i){return 0===await this.git({cwd:e,exitCodeOnly:!0},...["merge-base","--is-ancestor"],t,i)}reflog(e,{all:t,branch:i,limit:r,ordering:s,skip:n}={}){let o=["log","--walk-reflogs",`--format=${eF}`,"--date=iso8601"];return s&&o.push(`--${s}-order`),t&&o.push("--all"),r&&o.push(`-n${r}`),n&&o.push(`--skip=${n}`),i&&o.push(i),this.git({cwd:e,configs:te},...o,"--")}remote(e){return this.git({cwd:e},"remote","-v")}remote__add(e,t,i,r){let s=["remote","add"];return r?.fetch&&s.push("-f"),this.git({cwd:e},...s,t,i)}remote__prune(e,t){return this.git({cwd:e},"remote","prune",t)}remote__remove(e,t){return this.git({cwd:e},"remote","remove",t)}remote__get_url(e,t){return this.git({cwd:e},"remote","get-url",t)}reset(e,t){return this.git({cwd:e},"reset","-q","--",t)}async rev_list(e,t,i){let r=["rev-list"];i?.all&&r.push("--all"),i?.maxParents!=null&&r.push(`--max-parents=${i.maxParents}`);let s=(await this.git({cwd:e,errors:_.Ignore},...r,t,"--")).trim().split("\n");if(0!==s.length)return s}async rev_list__count(e,t,i){let r=["rev-list","--count"];i&&r.push("--all");let s=await this.git({cwd:e,errors:_.Ignore},...r,t,"--");if(0===(s=s.trim()).length)return;let n=parseInt(s,10);return isNaN(n)?void 0:n}async rev_list__left_right(e,t,i){let r=["rev-list","--left-right","--count"];i?.length&&r.push(...i.map(e=>`--author=^${e.name} <${e.email}>$`));let s=await this.git({cwd:e,errors:_.Ignore},...r,...t,"--");if(0===s.length)return;let n=s.split("	");if(2!==n.length)return;let[o,a]=n,l={ahead:parseInt(o,10),behind:parseInt(a,10)};if(!(isNaN(l.ahead)||isNaN(l.behind)))return l}async rev_parse(e,t){let i=await this.git({cwd:e,errors:_.Ignore},"rev-parse",t);return 0===i.length?void 0:i.trim()}async rev_parse__currentBranch(e,t){try{return[await this.git({cwd:e,errors:_.Throw},"rev-parse","--abbrev-ref","--symbolic-full-name","@","@{u}","--"),void 0]}catch(r){let i=r?.toString()??"";if(tn.badRevision.test(i)||to.noUpstream.test(i)){let t,i;if(null!=r.stdout&&0!==r.stdout.length)return[r.stdout,void 0];try{let t=await this.symbolic_ref(e,"HEAD");if(null!=t)return[t.trim(),void 0]}catch{}try{let t=await this.symbolic_ref(e,"refs/remotes/origin/HEAD");if(null!=t)return[t.trim().substr(7),void 0]}catch(t){if(/is not a symbolic ref/.test(t.stderr))try{let t=await this.ls_remote__HEAD(e,"origin");if(null!=t){let e=/ref:\s(\S+)\s+HEAD/m.exec(t);if(null!=e){let[,t]=e;return[t.substr(11),void 0]}}}catch{}}let s=await this.config__get("init.defaultBranch",e)??"main",n=await this.config__get_regex(`branch\\.${s}\\.+`,e,{local:!0});if(n){let e=/^branch\..+\.remote\s(.+)$/m.exec(n);null!=e&&(t=e[1]),null!=(e=/^branch\..+\.merge\srefs\/heads\/(.+)$/m.exec(n))&&(i=e[1])}return[`${s}${t&&i?`
${t}/${i}`:""}`,void 0]}if(to.headNotABranch.test(i)){let i=await this.log__recent(e,t);if(void 0===i)return;return[`(HEAD detached at ${(0,F.zL)(i)})`,i]}ta(r,e);return}}async rev_parse__git_dir(e){let t=await this.git({cwd:e,errors:_.Ignore},"rev-parse","--git-dir","--git-common-dir");if(0===t.length)return;let[i,r]=t.split("\n").map(e=>e.trimStart());return((0,M.YP)(i)||(i=(0,M.RQ)(e,i)),i=(0,M.AH)(i),r)?((0,M.YP)(r)||(r=(0,M.RQ)(e,r)),{path:i,commonPath:(r=(0,M.AH)(r))!==i?r:void 0}):{path:i}}async rev_parse__show_toplevel(e){let t;if(!b.workspace.isTrusted)try{if((0,P.accessSync)((0,M.RQ)(e,"HEAD")),t=await this.git({cwd:e,errors:_.Throw,configs:["-C",e]},"rev-parse","--show-cdup"),""===t.trim())return eL.Yd.log(`Skipping (untrusted workspace); bare clone repository detected in '${e}'`),e3}catch{}try{return t=await this.git({cwd:e,errors:_.Throw},"rev-parse","--show-toplevel"),0===t.length?e3:[!0,(0,M.AH)(t.trimStart().replace(/[\r|\n]+$/,""))]}catch(s){if(s instanceof I.q6)return e3;let i=/^fatal: detected dubious ownership in repository at '([^']+)'[\s\S]*git config --global --add safe\.directory '?([^'\n]+)'?$/m.exec(s.stderr);if(i?.length===3)return eL.Yd.log(`Skipping; unsafe repository detected in '${i[1]}'; run 'git config --global --add safe.directory ${i[2]}' to allow it`),[!1];let r=/this operation must be run in a work tree/.test(s.stderr);if(r&&b.workspace.isTrusted&&"true"===(t=await this.git({cwd:e,errors:_.Ignore},"rev-parse","--is-bare-repository")).trim()&&(t=(t=await this.git({cwd:e,errors:_.Ignore},"rev-parse","--git-common-dir")).trim()).length)return[!0,(0,M.AH)(("."===t?e:t).trimStart().replace(/[\r|\n]+$/,""))];if(r||"ENOENT"===s.code){let t=!r&&await e4(e);if(!t){do{let i=(0,M.XX)(e);if(i===e||0===i.length)return e3;e=i,t=await e4(e)}while(!t)return this.rev_parse__show_toplevel(e)}}return e3}}async rev_parse__verify(e,t,i){let r=["rev-parse","--verify"];await this.isAtLeastVersion("2.30")&&r.push("--end-of-options");let s=await this.git({cwd:e,errors:_.Ignore},...r,i?`${t}:./${i}`:`${t}^{commit}`);return 0===s.length?void 0:s.trim()}async show(e,t,i,r={}){let[s,n]=(0,M.uo)(t,e,!0);if((0,F.rD)(i)&&(i=":"),(0,F.l3)(i))throw Error(`ref=${i} is uncommitted`);let o={configs:te,cwd:n,encoding:r.encoding??"utf8",errors:_.Throw},a=i.endsWith(":")?`${i}./${s}`:`${i}:./${s}`;try{return await this.git(o,"show","--textconv",a,"--")}catch(n){let s=n?.toString()??"";if(":"===i&&tn.badRevision.test(s))return this.show(e,t,"HEAD:",r);if(tn.badRevision.test(s)||to.notFound.test(s)||to.foundButNotInRevision.test(s))return;return ta(n,o.cwd)}}show2(e,t,...i){return this.git({cwd:e,cancellation:t?.cancellation,configs:t?.configs??te},"show",...i,...i.includes("--")?e3:["--"])}show__diff(e,t,i,r,{similarityThreshold:s}={}){let n=["show",`-M${null==s?"":`${s}%`}`,"--format=","--minimal","-U0",i,"--",t];return null!=r&&0!==r.length&&n.push(r),this.git({cwd:e},...n)}show__name_status(e,t,i){return this.git({cwd:e},"show","--name-status","--format=","-z",i,"--",t)}show_ref__tags(e){return this.git({cwd:e,errors:_.Ignore},"show-ref","--tags")}stash__apply(e,t,i){return t?this.git({cwd:e},"stash",i?"pop":"apply",t):Promise.resolve(void 0)}async stash__rename(e,t,i,r,s){return await this.stash__delete(e,t,i),this.git({cwd:e},"stash","store","-m",s?`On ${s}: ${r}`:r,i)}async stash__delete(e,t,i){if(t){if(i){let r=await this.git({cwd:e,errors:_.Ignore},"show","--format=%H","--no-patch",t);if(r?.trim()!==i)throw Error("Unable to delete stash; mismatch with stash number")}return this.git({cwd:e},"stash","drop",t)}}stash__list(e,{args:t,similarityThreshold:i}){return null==t&&(t=["--name-status"]),this.git({cwd:e},"stash","list",...t,`-M${null==i?"":`${i}%`}`)}async stash__push(e,t,{includeUntracked:i,keepIndex:r,onlyStaged:s,pathspecs:n,stdin:o}={}){let a=["stash","push"];if((i||null!=n&&0!==n.length)&&a.push("-u"),r&&a.push("-k"),s){if(await this.isAtLeastVersion("2.35"))a.push("--staged");else throw Error("Git version 2.35 or higher is required for --staged")}if(t&&a.push("-m",t),o&&null!=n&&0!==n.length){await this.git({cwd:e,stdin:n.join("\x00")},...a,"--pathspec-from-file=-","--pathspec-file-nul");return}a.push("--"),null!=n&&0!==n.length&&a.push(...n);try{await this.git({cwd:e},...a)}catch(e){if(e instanceof e0&&e.stdout.includes("Saved working directory and index state")&&e.stderr.includes("Cannot remove worktree changes"))throw new I.s8(I.g1.ConflictingStagedAndUnstagedLines);throw e}}async status(e,t=1,{similarityThreshold:i}={}){let r=["status",t>=2?`--porcelain=v${t}`:"--porcelain","--branch","-u"];return await this.isAtLeastVersion("2.18")&&r.push(`--find-renames${null==i?"":`=${i}%`}`),this.git({cwd:e,configs:ti,env:{GIT_OPTIONAL_LOCKS:"0"}},...r,"--")}async status__file(e,t,i=1,{similarityThreshold:r}={}){let[s,n]=(0,M.uo)(t,e,!0),o=["status",i>=2?`--porcelain=v${i}`:"--porcelain"];return await this.isAtLeastVersion("2.18")&&o.push(`--find-renames${null==r?"":`=${r}%`}`),this.git({cwd:n,configs:ti,env:{GIT_OPTIONAL_LOCKS:"0"}},...o,"--",s)}symbolic_ref(e,t){return this.git({cwd:e},"symbolic-ref","--short",t)}tag(e){return this.git({cwd:e},"tag","-l","--format=%3cn%3e%(refname)%3c*r%3e%(*objectname)%3cr%3e%(objectname)%3cd%3e%(creatordate:iso8601)%3cad%3e%(authordate:iso8601)%3cs%3e%(subject)")}worktree__add(e,t,{commitish:i,createBranch:r,detach:s,force:n}={}){let o=["worktree","add"];return n&&o.push("--force"),r&&o.push("-b",r),s&&o.push("--detach"),o.push(t),i&&o.push(i),this.git({cwd:e},...o)}worktree__list(e){return this.git({cwd:e},"worktree","list","--porcelain")}worktree__remove(e,t,{force:i}={}){let r=["worktree","remove"];return i&&r.push("--force"),r.push(t),this.git({cwd:e,errors:_.Throw},...r)}async readDotGitFile(e,t,i){try{let r=await b.workspace.fs.readFile(b.Uri.joinPath(e.uri,...t)),s=tr.decode(r);if(s=i?.trim??!0?s.trim():s,i?.numeric){let e=Number.parseInt(s,10);return isNaN(e)?void 0:e}return s}catch(e){if(i?.throw)throw e;return}}async runGitCommandViaTerminal(e,t,i,r){let s;let n=(0,eH.UH)(),o=await this.getLocation(),a=(0,M.AH)(o.path??"git"),l=C.D.get("terminal.overrideGitEditor")?`-c "core.editor=${(0,eG._L)()}" `:"",h=i.map(e=>e.startsWith("#")||/['();$|>&<]/.test(e)?`"${e}"`:e);if(a.includes(" ")){let i=b.env.shell;eL.Yd.debug(n,`\u2022 git path '${a}' contains spaces, detected shell: '${i}'`),s=`${(ej?/(pwsh|powershell)\.exe/i:/pwsh/i).test(i)?"&":""} "${a}" -C "${e}" ${l}${t} ${h.join(" ")}`}else s=`${a} -C "${e}" ${l}${t} ${h.join(" ")}`;eL.Yd.log(n,`\u2022 '${s}'`),this.logCore(`[TERM] ${s}`);let d=(null==c&&(c=b.window.createTerminal(eY),u=b.window.onDidCloseTerminal(e=>{e.name===eY&&(c=void 0,u?.dispose(),u=void 0)}),hO.instance.context.subscriptions.push(u)),c);d.show(!1),d.sendText(s,r?.execute??!1)}logGitCommand(e,t,i,r){let s=i>eN.O,n=s&&r?" (slow, waiting)":r?" (waiting)":s?" (slow)":"";null!=t?eL.Yd.error("",`[GIT  ] ${e} ${$.NE.Dot} ${(t.message||String(t)||"").trim().replace(/fatal: /g,"").replace(/\r?\n|\r/g,` ${$.NE.Dot} `)} [${i}ms]${n}`):s?eL.Yd.warn(`[GIT  ] ${e} [*${i}ms]${n}`):eL.Yd.log(`[GIT  ] ${e} [${i}ms]${n}`),this.logCore(`[${s?"*":" "}${i.toString().padStart(6)}ms] ${e}${n}`,t)}_gitOutput;logCore(e,t){eL.Yd.enabled(null!=t?"error":"debug")&&(this._gitOutput??=b.window.createOutputChannel("GitLens (Git)"),this._gitOutput.appendLine(`${eL.Yd.timestamp} ${e}${null!=t?` ${$.NE.Dot} FAILED`:""}`),null!=t&&this._gitOutput.appendLine(`
${String(t)}
`))}}function tc(e){return RegExp(`(?:^\0*|\0\0)${e}\0`)}((e,t,i,r)=>{for(var s,n=r>1?void 0:r?e6(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&e5(t,i,n)})([(0,eW.cM)()],th.prototype,"runGitCommandViaTerminal",1);var tu=i(2037),td=i.n(tu),tp=i(3951),tg=i(1177),tm=i(7338),tf=i(8388),tw=i(3148),tv=i(8887),ty=i(7462),tb=i(1719),tC=i(3050),tA=i(6503),tP=i(3646),tD=i(827),tk=(e,t)=>(t=Symbol[e])?t:Symbol.for("Symbol."+e),tS=(e,t,i)=>{if(null!=t){var r;if("object"!=typeof t&&"function"!=typeof t)throw TypeError("Object expected");if(i&&(r=t[tk("asyncDispose")]),void 0===r&&(r=t[tk("dispose")]),"function"!=typeof r)throw TypeError("Object not disposable");e.push([i,r,t])}else i&&e.push([i]);return t},tR=(e,t,i)=>{var r="function"==typeof SuppressedError?SuppressedError:function(e,t,i,r){return(r=Error(i)).name="SuppressedError",r.error=e,r.suppressed=t,r},s=e=>t=i?new r(e,t,"An error was suppressed during disposal"):(i=!0,e),n=r=>{for(;r=e.pop();)try{var o=r[1]&&r[1].call(r[2]);if(r[0])return Promise.resolve(o).then(n,e=>(s(e),n()))}catch(e){s(e)}if(i)throw t};return n()};function t$(e,t,i,r){var s=[];try{let n,o,a,l;let h=tS(s,(0,x.k)(`Git.parseBlame(${i})`,{log:!1,logLevel:"debug"}));if(!t)return;let c=new Map,u=new Map,d=[];for(o of(0,L.UM)(t))if(!((a=o.split(" ")).length<2)){if([n]=a,null==l){l={sha:n,originalLine:parseInt(a[1],10),line:parseInt(a[2],10),lineCount:parseInt(a[3],10)};continue}switch(n){case"author":l.sha===H.CL?l.author="You":l.author=o.slice(n.length+1).trim();break;case"author-mail":{if(l.sha===H.CL){l.authorEmail=r?.email;continue}l.authorEmail=o.slice(n.length+1).trim();let e=l.authorEmail.indexOf("<");if(e>=0){let t=l.authorEmail.indexOf(">",e);t>e?l.authorEmail=l.authorEmail.substring(e+1,t):l.authorEmail=l.authorEmail.substring(e+1)}break}case"author-time":l.authorDate=a[1];break;case"author-tz":l.authorTimeZone=a[1];break;case"committer":(0,F.l3)(l.sha)?l.committer="You":l.committer=o.slice(n.length+1).trim();break;case"committer-mail":{if((0,F.l3)(l.sha)){l.committerEmail=r?.email;continue}l.committerEmail=o.slice(n.length+1).trim();let e=l.committerEmail.indexOf("<");if(e>=0){let t=l.committerEmail.indexOf(">",e);t>e?l.committerEmail=l.committerEmail.substring(e+1,t):l.committerEmail=l.committerEmail.substring(e+1)}break}case"committer-time":l.committerDate=a[1];break;case"committer-tz":l.committerTimeZone=a[1];break;case"summary":l.summary=o.slice(n.length+1).trim();break;case"previous":l.previousSha=a[1],l.previousPath=a.slice(2).join(" ");break;case"filename":l.path=o.slice(n.length+1),function(e,t,i,r,s,n,o){let a=r.get(t.sha);if(null==a){if(null!=t.author){null!=o&&(null!=o.name||null!=o.email)&&(null==o.name||o.name===t.author)&&(null==o.email||o.email===t.authorEmail)&&(t.author="You");let e=s.get(t.author);null==e&&(e={name:t.author,lineCount:0},s.set(t.author,e))}a=new N.aM(e,i,t.sha,new N._j(t.author,t.authorEmail,new Date(1e3*t.authorDate)),new N._j(t.committer,t.committerEmail,new Date(1e3*t.committerDate)),t.summary,[],void 0,new G.K8(i,t.path,G.NV.Modified,t.previousPath&&t.previousPath!==t.path?t.previousPath:void 0,t.previousSha),void 0,[]),r.set(t.sha,a)}for(let e=0,i=t.lineCount;e<i;e++){let i={sha:t.sha,previousSha:a.file.previousSha,originalLine:t.originalLine+e,line:t.line+e};a.lines.push(i),n[i.line-1]=i}}(e,l,i,u,c,d,r),l=void 0}}for(let[,e]of u){if(!e.author.name)continue;let t=c.get(e.author.name);if(void 0==t)return;t.lineCount+=e.lines.length}let p=new Map([...c.entries()].sort((e,t)=>t[1].lineCount-e[1].lineCount));return h?.stop({suffix:` parsed ${d.length} lines, ${u.size} commits`}),{repoPath:i,authors:p,commits:u,lines:d}}catch(e){var n=e,o=!0}finally{tR(s,n,o)}}var t_=(e,t)=>(t=Symbol[e])?t:Symbol.for("Symbol."+e),tI=(e,t,i)=>{if(null!=t){var r;if("object"!=typeof t&&"function"!=typeof t)throw TypeError("Object expected");if(i&&(r=t[t_("asyncDispose")]),void 0===r&&(r=t[t_("dispose")]),"function"!=typeof r)throw TypeError("Object not disposable");e.push([i,r,t])}else i&&e.push([i]);return t},tF=(e,t,i)=>{var r="function"==typeof SuppressedError?SuppressedError:function(e,t,i,r){return(r=Error(i)).name="SuppressedError",r.error=e,r.suppressed=t,r},s=e=>t=i?new r(e,t,"An error was suppressed during disposal"):(i=!0,e),n=r=>{for(;r=e.pop();)try{var o=r[1]&&r[1].call(r[2]);if(r[0])return Promise.resolve(o).then(n,e=>(s(e),n()))}catch(e){s(e)}if(i)throw t};return n()};let tx=/(\d+)\s+files? changed(?:,\s+(\d+)\s+insertions?\(\+\))?(?:,\s+(\d+)\s+deletions?\(-\))?/;function tT(e){let[t,i]=e.split(","),r=Number(t),s=Number(i)||1;return{count:s,position:{start:r,end:r+s-1}}}function tO(e,t=!1){var i=[];try{let r;let s=tI(i,(0,x.k)("Git.parseFileDiff",{log:!1,logLevel:"debug"}));if(!e)return;let n=[],o=e.split("\n"),a=-1;for(;++a<o.length&&!o[a].startsWith("@@"););for(;a<o.length;){if(!(r=o[a]).startsWith("@@")){a++;continue}let[e,t]=r.split("@@")[1].trim().split(" "),i=tT(t.slice(1)),s=tT(e.slice(1)),l=new Map,h=i.position.start;r=o[++a];let c=a;for(;a<o.length&&!r.startsWith("@@");)switch(r[0]){case"-":{let e=h;for(;r?.startsWith("-");)l.set(e++,{current:void 0,previous:r.slice(1),state:"removed"}),r=o[++a];if(r?.startsWith("+")){let e=h;for(;r?.startsWith("+");){let t=l.get(e);null!=t?(t.current=r.slice(1),t.state="changed"):l.set(e,{current:r.slice(1),previous:void 0,state:"added"}),e++,r=o[++a]}h=e}else h=e;break}case"+":l.set(h++,{current:r.slice(1),previous:void 0,state:"added"}),r=o[++a];break;case" ":l.set(h++,{current:r.slice(1),previous:r.slice(1),state:"unchanged"}),r=o[++a];break;default:r=o[++a]}let u={contents:`${o.slice(c,a).join("\n")}
`,current:i,previous:s,lines:l};n.push(u)}return s?.stop({suffix:` parsed ${n.length} hunks`}),{contents:t?e:void 0,hunks:n}}catch(e){var r=e,s=!0}finally{tF(i,r,s)}}function tE(e,t){var i=[];try{let r;let s=tI(i,(0,x.k)("Git.parseDiffNameStatusFiles",{log:!1,logLevel:"debug"}));if(!e)return;let n=[],o=e.split("\x00");for(let e=0;e<o.length-1;e++)r=o[e][0],"."===r&&(r="?"),n.push({status:r,path:o[++e],originalPath:r.startsWith("R")||r.startsWith("C")?o[++e]:void 0,repoPath:t});return s?.stop({suffix:` parsed ${n.length} files`}),n}catch(e){var r=e,s=!0}finally{tF(i,r,s)}}var tB=(e,t)=>(t=Symbol[e])?t:Symbol.for("Symbol."+e),tU=(e,t,i)=>{if(null!=t){var r;if("object"!=typeof t&&"function"!=typeof t)throw TypeError("Object expected");if(i&&(r=t[tB("asyncDispose")]),void 0===r&&(r=t[tB("dispose")]),"function"!=typeof r)throw TypeError("Object not disposable");e.push([i,r,t])}else i&&e.push([i]);return t},tW=(e,t,i)=>{var r="function"==typeof SuppressedError?SuppressedError:function(e,t,i,r){return(r=Error(i)).name="SuppressedError",r.error=e,r.suppressed=t,r},s=e=>t=i?new r(e,t,"An error was suppressed during disposal"):(i=!0,e),n=r=>{for(;r=e.pop();)try{var o=r[1]&&r[1].call(r[2]);if(r[0])return Promise.resolve(o).then(n,e=>(s(e),n()))}catch(e){s(e)}if(i)throw t};return n()};let tM=/(?:ahead ([0-9]+))/,tL=/(?:behind ([0-9]+))/;function tN(e,t,i){var r=[];try{let s=tU(r,(0,x.k)(`Git.parseStatus(${t}, v=${i})`,{log:!1,logLevel:"debug"}));if(!e)return;let n=e.split("\n").filter(e=>!!e);if(0===n.length)return;let o=i<2?function(e,t){let i,r;let s=[],n={ahead:0,behind:0},o=-1;for(;++o<e.length;){let a=e[o];if(a.startsWith("##")){let e=a.split(" ");if([i,r]=e[1].split("..."),e.length>2){let t=e.slice(2).join(" "),i=tM.exec(t);n.ahead=null==i?0:Number(i[1])||0;let r=tL.exec(t);n.behind=null==r?0:Number(r[1])||0}}else{let e=a.substring(0,2),i=a.substring(3);if(e.startsWith("R")||e.startsWith("C")){let[r,n]=i.replace(/"/g,"").split("->");s.push(tH(t,e,n.trim(),r.trim()))}else s.push(tH(t,e,i))}}return new tD.Hk((0,M.AH)(t),i??"","",s,n,r)}(n,t):function(e,t){let i,r,s;let n=[],o={ahead:0,behind:0},a=-1;for(;++a<e.length;){let l=e[a];if(l.startsWith("#")){let e=l.split(" ");switch(e[1]){case"branch.oid":r=e[2];break;case"branch.head":i=e[2];break;case"branch.upstream":s=e[2];break;case"branch.ab":o.ahead=Number(e[2].substring(1)),o.behind=Number(e[3].substring(1))}}else{let e=l.split(" ");switch(e[0][0]){case"1":n.push(tH(t,e[1],e.slice(8).join(" ")));break;case"2":{let i=e.slice(9).join(" ").split("	");n.push(tH(t,e[1],i[0],i[1]));break}case"u":n.push(tH(t,e[1],e.slice(10).join(" ")));break;case"?":n.push(tH(t,"??",e.slice(1).join(" ")))}}}return new tD.Hk((0,M.AH)(t),i??"",r??"",n,o,s)}(n,t);return s?.stop({suffix:` parsed ${o.files.length} files`}),o}catch(e){var s=e,n=!0}finally{tW(r,s,n)}}function tH(e,t,i,r){let s,n=t.startsWith(".")?void 0:t[0].trim();return(null==n||0===n.length)&&(n=void 0),t.length>1&&(null==(s="."!==t[1]?t[1].trim():void 0)||0===s.length)&&(s=void 0),new tD.JB(e,n,s,i,r)}var tG=(e,t)=>(t=Symbol[e])?t:Symbol.for("Symbol."+e),tq=(e,t,i)=>{if(null!=t){var r;if("object"!=typeof t&&"function"!=typeof t)throw TypeError("Object expected");if(i&&(r=t[tG("asyncDispose")]),void 0===r&&(r=t[tG("dispose")]),"function"!=typeof r)throw TypeError("Object not disposable");e.push([i,r,t])}else i&&e.push([i]);return t},tY=(e,t,i)=>{var r="function"==typeof SuppressedError?SuppressedError:function(e,t,i,r){return(r=Error(i)).name="SuppressedError",r.error=e,r.suppressed=t,r},s=e=>t=i?new r(e,t,"An error was suppressed during disposal"):(i=!0,e),n=r=>{for(;r=e.pop();)try{var o=r[1]&&r[1].call(r[2]);if(r[0])return Promise.resolve(o).then(n,e=>(s(e),n()))}catch(e){s(e)}if(i)throw t};return n()};let tj=/(?:.+?)\s+(.+?)\s+(.+?)\s+(.+?)\s+(.+)/gm,tV=/^(\S+)\s+(\S+)\s+(\S+)\s+(.*)$/gm;function tQ(e){var t=[];try{let i,r,s,n,o;let a=tq(t,(0,x.k)("Git.parseTree",{log:!1,logLevel:"debug"})),l=[];if(!e)return l;for(;o=tj.exec(e),null!=o;)[,i,r,s,n]=o,l.push({commitSha:null==r||0===r.length?"":` ${r}`.substr(1),path:null==n||0===n.length?"":` ${n}`.substr(1),size:Number(s)||0,type:null==i||0===i.length?"":` ${i}`.substr(1)});return a?.stop({suffix:` parsed ${l.length} trees`}),l}catch(e){var i=e,r=!0}finally{tY(t,i,r)}}var tz=i(2674),tK=(e,t)=>(t=Symbol[e])?t:Symbol.for("Symbol."+e),tJ=(e,t,i)=>{if(null!=t){var r;if("object"!=typeof t&&"function"!=typeof t)throw TypeError("Object expected");if(i&&(r=t[tK("asyncDispose")]),void 0===r&&(r=t[tK("dispose")]),"function"!=typeof r)throw TypeError("Object not disposable");e.push([i,r,t])}else i&&e.push([i]);return t},tZ=(e,t,i)=>{var r="function"==typeof SuppressedError?SuppressedError:function(e,t,i,r){return(r=Error(i)).name="SuppressedError",r.error=e,r.suppressed=t,r},s=e=>t=i?new r(e,t,"An error was suppressed during disposal"):(i=!0,e),n=r=>{for(;r=e.pop();)try{var o=r[1]&&r[1].call(r[2]);if(r[0])return Promise.resolve(o).then(n,e=>(s(e),n()))}catch(e){s(e)}if(i)throw t};return n()},tX=i(2500),t0=i(6934),t1=i(7925),t2=i(2226),t4=i(5432),t5=i(9796),t6=i(7469),t3=i(1526),t8=i(9701),t9=i(6700),t7=Object.defineProperty,ie=Object.getOwnPropertyDescriptor;class it{constructor(e,t){this.container=e,this.scmGit=t,this._disposable=C.D.onDidChange(this.onConfigurationChanged,this),this.onConfigurationChanged()}icon=new b.ThemeIcon("sparkle");title="Generate Commit Message (Experimental)";_disposable;_subscription;onConfigurationChanged(e){(null==e||C.D.changed(e,"ai.experimental.generateCommitMessage.enabled"))&&(C.D.get("ai.experimental.generateCommitMessage.enabled")?this._subscription=this.scmGit.registerCommitMessageProvider(this):(this._subscription?.dispose(),this._subscription=void 0))}dispose(){this._subscription?.dispose(),this._disposable.dispose()}async provideCommitMessage(e,t,i){let r=(0,eH.UH)(),s=e.inputBox.value;try{let e=await this.container.ai.generateCommitMessage(t,{cancellation:i,context:s,progress:{location:b.ProgressLocation.Notification,title:"Generating commit message..."}});return s?`${s}

${e}`:e}catch(e){eL.Yd.error(r,e),e instanceof Error&&e.message.startsWith("No changes")&&b.window.showInformationMessage("No changes to generate a commit message from.");return}}}((e,t,i,r)=>{for(var s,n=r>1?void 0:r?ie(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&t7(t,i,n)})([(0,eW.cM)({args:!1})],it.prototype,"provideCommitMessage",1);class ii extends Error{constructor(e){super("Unable to find git"),this.original=e,Error.captureStackTrace?.(this,ii)}}class ir extends Error{constructor(e){super("Invalid Git configuration"),this.original=e,Error.captureStackTrace?.(this,ir)}}async function is(e){let t;let i=(0,x.k)(`findSpecificGit(${e})`,{logLevel:"debug"});try{t=await e2(e,["--version"],"utf8")}catch(e){if(i?.stop({message:` ${$.NE.Dot} Unable to find git: ${e}`}),/bad config/i.test(e.message))throw new ir(e);throw e}if(!e||"git"===e){let r=function e(t,i){if(!ej)return{cmd:eJ(t),args:i};if(!(0,P.existsSync)(t))for(let r of[".exe",".bat",".cmd",".ps1"]){let s=eJ(`${t}${r}`);if((0,P.existsSync)(s))return e(s,i)}return eQ.test(t)?{cmd:(0,D.join)(S.env.SYSTEMROOT??"C:\\WINDOWS","System32","WindowsPowerShell","v1.0","PowerShell.exe"),args:["-ExecutionPolicy","Unrestricted","-NoLogo","-NonInteractive","-File",t].concat(i)}:ez.test(t)?{cmd:(0,D.join)(S.env.SYSTEMROOT??"C:\\WINDOWS","System32","cmd.exe"),args:["/C",t,...i]}:eK.test(t)?{cmd:S.execPath,args:[t].concat(i)}:{cmd:t,args:i}}(e,["--version"]).cmd;try{t=await e2(r,["--version"],"utf8")}catch(e){if(i?.stop({message:` ${$.NE.Dot} Unable to find git: ${e}`}),/bad config/i.test(e.message))throw new ir(e);throw e}e=r}let r=t.trim().replace(/^git version /,"").trim();return i?.stop({message:` ${$.NE.Dot} Found ${r} in ${e}; ${t}`}),{path:e,version:r}}async function io(){try{let e=(await e2("which",["git"],"utf8")).trim();if("/usr/bin/git"!==e)return is(e);try{return await e2("xcode-select",["-p"],"utf8"),is(e)}catch(t){if(2===t.code)return Promise.reject(new ii(t));return is(e)}}catch(e){return Promise.reject(e instanceof ir||e instanceof ii?e:new ii(e))}}function ia(e){return null==e||0===e.length?Promise.reject(new ii):is((0,D.join)(e,"Git","cmd","git.exe"))}async function il(e,t=!0){try{if(null==e||"string"==typeof e)return await is(e??"git");try{return(0,t6.Yj)(...e.map(e=>is(e)))}catch(e){throw new ii(e)}}catch(e){if(!t)return Promise.reject(e instanceof ir||e instanceof ii?e:new ii(e));try{switch(S.platform){case"darwin":return await io();case"win32":return await ia(S.env.ProgramW6432).then(null,()=>ia(S.env["ProgramFiles(x86)"])).then(null,()=>ia(S.env.ProgramFiles)).then(null,()=>is("git"));default:return Promise.reject(new ii)}}catch(e){return Promise.reject(e instanceof ir||e instanceof ii?e:new ii(e))}}}var ih=Object.defineProperty,ic=Object.getOwnPropertyDescriptor,iu=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?ic(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&ih(t,i,n),n};let id=Object.freeze([]),ip=Promise.resolve(void 0),ig=Object.freeze({values:[]}),im={doesNotExist:/no such file or directory/i},iw=/(?<=^\/?)([a-zA-Z])(?=:\/)/,iv=/^user\.(name|email) (.*)$/gm,iy=/(.+)\s<(.+)>/,ib=/(?:(?:(?<wip>WIP) on|On) (?<onref>[^/](?!.*\/\.)(?!.*\.\.)(?!.*\/\/)(?!.*@\{)[^\000-\037\177 ~^:?*[\\]+[^./]):\s*)?(?<summary>.*)$/s,iC=["merge","pull"];class iA{constructor(e,t){this.container=e,this.git=t,this.git.setLocator(this.ensureGit.bind(this)),this._disposables.push(C.D.onDidChange(e=>{C.D.changed(e,"remotes")&&this.resetCaches("remotes")},this),this.container.events.on("git:cache:reset",e=>e.data.repoPath?this.resetCache(e.data.repoPath,...e.data.caches??id):this.resetCaches(...e.data.caches??id)))}descriptor={id:"git",name:"Git",virtual:!1};supportedSchemes=new Set([$.sN.File,$.sN.Git,$.sN.GitLens,$.sN.PRs]);_onDidChange=new b.EventEmitter;get onDidChange(){return this._onDidChange.event}_onDidChangeRepository=new b.EventEmitter;get onDidChangeRepository(){return this._onDidChangeRepository.event}_onDidCloseRepository=new b.EventEmitter;get onDidCloseRepository(){return this._onDidCloseRepository.event}_onDidOpenRepository=new b.EventEmitter;get onDidOpenRepository(){return this._onDidOpenRepository.event}_branchesCache=new Map;_contributorsCache=new Map;_mergeStatusCache=new Map;_rebaseStatusCache=new Map;_remotesCache=new Map;_repoInfoCache=new Map;_stashesCache=new Map;_tagsCache=new Map;_trackedPaths=new t3.bM;_disposables=[];dispose(){b.Disposable.from(...this._disposables).dispose()}get useCaching(){return C.D.get("advanced.caching.enabled")}onRepositoryChanged(e,t){t.changed(tP.I6.Config,tP.du.Any)&&this._repoInfoCache.delete(e.path),t.changed(tP.I6.Heads,tP.I6.Remotes,tP.du.Any)&&(this._branchesCache.delete(e.path),this._contributorsCache.delete(e.path),this._contributorsCache.delete(`stats|${e.path}`)),t.changed(tP.I6.Remotes,tP.I6.RemoteProviders,tP.du.Any)&&this._remotesCache.delete(e.path),t.changed(tP.I6.Index,tP.I6.Unknown,tP.du.Any)&&this._trackedPaths.clear(),t.changed(tP.I6.Merge,tP.du.Any)&&this._mergeStatusCache.delete(e.path),t.changed(tP.I6.Rebase,tP.du.Any)&&this._rebaseStatusCache.delete(e.path),t.changed(tP.I6.Stash,tP.du.Any)&&this._stashesCache.delete(e.path),t.changed(tP.I6.Tags,tP.du.Any)&&this._tagsCache.delete(e.path),this._onDidChangeRepository.fire(t)}_gitLocator;async ensureGit(){return null==this._gitLocator&&(this._gitLocator=this.findGit()),this._gitLocator}async findGit(){let e=(0,eH.UH)();if(!C.D.getAny("git.enabled",null,!0))throw eL.Yd.log(e,'Built-in Git is disabled ("git.enabled": false)'),(0,t1.EZ)(),new ii;let t=this.getScmGitApi();(async function(){var i;let r=await t;if(null==r)return;if(i=this.container,"function"==typeof r.registerCommitMessageProvider&&new it(i,r),C.D.get("experimental.nativeGit")){for(let t of Object.values(r.git))if(null!=t&&"object"==typeof t&&"git"in t){for(let i of Object.values(t.git))if(null!=i&&"object"==typeof i&&"GIT_ASKPASS"in i){eL.Yd.debug(e,"Found built-in Git env"),this.git.setEnv(i);break}}}let s=new Set,n=(0,t5.Ds)(()=>{if(!this.container.deactivating){for(let e of s)this._onDidCloseRepository.fire({uri:e});s.clear()}},1e3);for(let e of(this._disposables.push(r.onDidCloseRepository(e=>{this.container.deactivating||(s.add(e.rootUri),n())}),r.onDidOpenRepository(e=>this._onDidOpenRepository.fire({uri:e.rootUri}))),r.repositories))this._onDidOpenRepository.fire({uri:e.rootUri})}).call(this);let i=C.D.getAny("git.path")??this.container.storage.getWorkspace("gitPath"),r=(0,R.a)(),s=il(i),n=t.then(e=>{let t=e?.git.path;if(!t)return s;if(null!=i){if("string"==typeof i){if(t===i)return s}else if(i.includes(t))return s}return il(t,!1)}),o=await (0,t6.Yj)(s,n);return setTimeout(()=>void this.container.storage.storeWorkspace("gitPath",o.path),1e3),null!=e?e.exitDetails=` ${$.NE.Dot} Git (${o.version}) found in ${"git"===o.path?"PATH":o.path}`:eL.Yd.log(e,`Git (${o.version}) found in ${"git"===o.path?"PATH":o.path} [${(0,L.qk)(r)}ms]`),-1===(0,eq.qu)((0,eq.mL)(o.version),(0,eq.mL)("2.7.2"))&&(eL.Yd.log(e,`Git version (${o.version}) is outdated`),(0,t1.PS)(o.version,"2.7.2")),o}async discoverRepositories(e,t){if(e.scheme!==$.sN.File)return[];try{let i=C.D.getAny("git.autoRepositoryDetection")??!0,r=b.workspace.getWorkspaceFolder(e);if(null==r&&!t?.silent||(await this.ensureGit(),t?.cancellation?.isCancellationRequested))return[];let s=await this.repositorySearch(r??e,t?.depth??(!1===i||"openEditors"===i?0:void 0),t?.cancellation,t?.silent);if(!t?.silent&&(!0===i||"subFolders"===i))for(let e of s)this.getOrOpenScmRepository(e.uri);return!t?.silent&&s.length>0&&this._trackedPaths.clear(),s}catch(e){if(e instanceof ir)(0,t1.p1)();else if(e instanceof ii)(0,t1.Lw)();else{let i=e?.message??"";i&&!t?.silent&&b.window.showErrorMessage(`Unable to initialize Git; ${i}`)}throw e}}openRepository(e,t,i,r,s){s||this.getOrOpenScmRepository(t);let n=[new tP._j(this.container,this.onRepositoryChanged.bind(this),this.descriptor,e??b.workspace.getWorkspaceFolder(t),t,i,r??!b.window.state.focused,s)],o=this.toCanonicalMap.get((0,M.M)(t));return null!=o&&null==this.container.git.getRepository(o)&&n.push(new tP._j(this.container,this.onRepositoryChanged.bind(this),this.descriptor,e??b.workspace.getWorkspaceFolder(o),o,i,r??!b.window.state.focused,!0)),n}openRepositoryInitWatcher(){let e=b.workspace.createFileSystemWatcher("**/.git",!1,!0,!0);return{onDidCreate:e.onDidCreate,dispose:()=>void e.dispose()}}_supportedFeatures=new Map;async supports(e){let t=this._supportedFeatures.get(e);if(null!=t)return t;switch(e){case tv.A.Worktrees:return t=await this.git.isAtLeastVersion("2.17.0"),this._supportedFeatures.set(e,t),t;case tv.A.StashOnlyStaged:return t=await this.git.isAtLeastVersion("2.35.0"),this._supportedFeatures.set(e,t),t;case tv.A.ForceIfIncludes:return t=await this.git.isAtLeastVersion("2.30.0"),this._supportedFeatures.set(e,t),t;default:return!0}}async visibility(e){let t=await this.getRemotes(e,{sort:!0});if(0===t.length)return["local",void 0];let i=!0;for await(let e of(0,t6.rX)(t.map(e=>this.getRemoteVisibility(e))))if("fulfilled"===e.status){if("public"===e.value[0])return["public",(0,tC.Ym)(e.value[1])];"local"!==e.value[0]&&(i=!1)}return i?["local",void 0]:["private",(0,tC.Ym)(t)]}_pendingRemoteVisibility=new Map;async getRemoteVisibility(e){let t;let i=(0,eH.UH)();switch(e.provider?.id){case"github":case"gitlab":case"bitbucket":case"azure-devops":case"gitea":case"gerrit":case"google-source":if(null==(t=e.provider.url({type:tA.J.Repo})))return["private",e];break;default:{if(!(t=e.url).includes("git@"))return(0,M.tE)(t)?["private",e]:["local",e];let[i,r]=t.split("@")[1].split(":");if(!i||!r)return["private",e];t=`https://${i}/${r}`}}let r=this._pendingRemoteVisibility.get(t);if(null==r){let e=new AbortController,i=setTimeout(()=>e.abort(),3e4);(r=(0,tg.he)(t,{method:"HEAD",agent:(0,tg.Nx)(),signal:e.signal})).finally(()=>clearTimeout(i)),this._pendingRemoteVisibility.set(t,r)}try{let t=await r;if(t.ok)return["public",e];eL.Yd.debug(i,`Response=${t.status}`)}catch(e){eL.Yd.error(e,i)}finally{this._pendingRemoteVisibility.delete(t)}return["private",e]}async repositorySearch(e,t,i,r){let s,n,o,a,l;let h=(0,eH.UH)();e instanceof b.Uri?(n=e,s=b.workspace.getWorkspaceFolder(n)):n=e.uri,t=t??C.D.get("advanced.repositorySearchDepth",n)??C.D.getAny("git.repositoryScanMaxDepth",n,1),eL.Yd.log(h,`searching (depth=${t})...`);let c=[],u=await this.findRepositoryUri(n,!0);if(null!=u){o=(0,M.AH)(u.fsPath);let e=this.toCanonicalMap.get((0,M.M)(u));null!=e&&(a=(0,M.AH)(e.fsPath)),eL.Yd.log(h,`found root repository in '${u.fsPath}'`),c.push(...this.openRepository(s,u,!0,void 0,r))}if(t<=0||i?.isCancellationRequested)return c;let d=new Set(C.D.getAny("git.repositoryScanIgnoredFolders",n,[]));for(let[e,t]of Object.entries({...C.D.getAny("files.exclude",n,{}),...C.D.getAny("search.exclude",n,{})}))t&&(e.includes("*.")||(e.startsWith("**/")&&(e=e.substring(3)),d.add(e)));try{l=await this.repositorySearchCore(n.fsPath,t,d,i)}catch(t){let e=t?.toString()??"";return im.doesNotExist.test(e)?eL.Yd.log(h,`FAILED${e?` Error: ${e}`:""}`):eL.Yd.error(t,h,"FAILED"),c}for(let e of l){e=(0,M.XX)(e);let t=(0,M.AH)(e);if(tm.IJ&&(t===o||null!=a&&t===a)||(0,L.qq)(t,o)||null!=a&&(0,L.qq)(t,a))continue;eL.Yd.log(h,`searching in '${e}'...`),eL.Yd.debug(h,`normalizedRepoPath=${t}, rootPath=${o}, canonicalRootPath=${a}`);let i=await this.findRepositoryUri(b.Uri.file(e),!0);null!=i&&(eL.Yd.log(h,`found repository in '${i.fsPath}'`),c.push(...this.openRepository(s,i,!1,void 0,r)))}return c}repositorySearchCore(e,t,i,r,s=[]){let n=(0,eH.UH)();return r?.isCancellationRequested?Promise.resolve(s):new Promise((o,a)=>{(0,P.readdir)(e,{withFileTypes:!0},async(l,h)=>{let c;if(null!=l){a(l);return}if(0===h.length){o(s);return}for(c of(t--,h)){if(r?.isCancellationRequested)break;if(".git"===c.name)s.push((0,D.resolve)(e,c.name));else if(t>=0&&c.isDirectory()&&!i.has(c.name))try{await this.repositorySearchCore((0,D.resolve)(e,c.name),t,i,r,s)}catch(e){eL.Yd.error(e,n,"FAILED")}}o(s)})})}canHandlePathOrUri(e,t){if(this.supportedSchemes.has(e))return(0,M.M)(t)}getAbsoluteUri(e,t){if("string"==typeof t){if((0,M.tE)(t))t=b.Uri.parse(t,!0);else{if(!(0,M.YP)(t))throw b.window.showErrorMessage(`Unable to get absolute uri between ${"string"==typeof e?e:e.toString(!0)} and ${t}; Base path '${t}' must be an absolute path`),Error(`Base path '${t}' must be an absolute path`);t=b.Uri.file(t)}}if("string"==typeof e){let i=(0,M.AH)(e);if(!(0,M.YP)(i))return b.Uri.joinPath(t,i)}let i=this.getRelativePath(e,t);return b.Uri.joinPath(t,i)}async getBestRevisionUri(e,t,i){if(i!==H.Ii){if(!i||(0,F.l3)(i)&&!(0,F.rD)(i)){let i=await this.git.ls_files(e,t);return null!=i||null!=(i=await this.git.ls_files(e,t,{untracked:!0}))?this.getAbsoluteUri(t,e):void 0}if((0,F.rD)(i)){let i=await this.getScmRepository(e);if(null==i){let t=this.fromCanonicalMap.get(e);null!=t&&(i=await this.getScmRepository(t.fsPath))}if(null!=i)return this.getScmGitUri(t,e)}return this.getRevisionUri(e,t,i)}}getRelativePath(e,t){if("string"==typeof t){if((0,M.tE)(t))t=b.Uri.parse(t,!0);else{if(!(0,M.YP)(t))throw b.window.showErrorMessage(`Unable to get relative path between ${"string"==typeof e?e:e.toString(!0)} and ${t}; Base path '${t}' must be an absolute path`),Error(`Base path '${t}' must be an absolute path`);t=b.Uri.file(t)}}if("string"==typeof e){if((0,M.tE)(e))e=b.Uri.parse(e,!0);else{if(!(0,M.YP)(e))return(0,M.AH)(e);e=b.Uri.file(e)}}let i=(0,M.Gf)(t.fsPath,e.fsPath);return(0,M.AH)(i)}getRevisionUri(e,t,i){let r;if((0,F.l3)(i)&&!(0,F.rD)(i))return this.getAbsoluteUri(t,e);if((t=(0,M.AH)(this.getAbsoluteUri(t,e).fsPath)).startsWith("//")){let e=t.indexOf("/",2);r=t.substring(0,e),t=t.substring(e)}47!==t.charCodeAt(0)&&(t=`/${t}`);let s={ref:i,repoPath:(0,M.AH)(e),uncPath:r};return b.Uri.from({scheme:$.sN.GitLens,authority:(0,ty.Tg)(s),path:t,query:i?JSON.stringify({ref:(0,F.zL)(i).replace("/"," ∕ ")}):void 0})}async getWorkingUri(e,t){let i,r,s=this.getRelativePath(t,e);for(;;){if(null!=(i=await this.git.ls_files(e,s))){s=(0,L.pW)(i,"\n")[0];break}let t=C.D.get("advanced");if(null==(r=await this.git.log__file_recent(e,s,{ordering:t.commitOrdering,similarityThreshold:t.similarityThreshold})))return;if(null==(i=await this.git.log__file(e,".",r,{argsOrFormat:eg,fileMode:"simple",filters:["R","C","D"],limit:1,ordering:t.commitOrdering}))||0===i.length)break;let[n,o,a]=ew(i,s);if("D"===a&&null!=o)return;if(null==n||null==o)break;s=o}return t=this.getAbsoluteUri(s,e),await e4(t.fsPath)?t:void 0}async addRemote(e,t,i,r){await this.git.remote__add(e,t,i,r),this.container.events.fire("git:cache:reset",{repoPath:e,caches:["remotes"]})}async pruneRemote(e,t){await this.git.remote__prune(e,t),this.container.events.fire("git:cache:reset",{repoPath:e,caches:["remotes"]})}async removeRemote(e,t){await this.git.remote__remove(e,t),this.container.events.fire("git:cache:reset",{repoPath:e,caches:["remotes"]})}async applyChangesToWorkingFile(e,t,i){let r;let s=(0,eH.UH)();if(null==(t=t??e.sha)||null==e.repoPath)return;null==i&&(i=t,t=`${t}^`);let[n,o]=(0,M.uo)(e,e.repoPath);try{r=await this.git.diff(o,n,t,i),await this.git.apply(o,r)}catch(t){let e=t?.toString()??"";if(r&&/patch does not apply/i.test(e)){let e=await b.window.showWarningMessage("Unable to apply changes cleanly. Retry and allow conflicts?",{title:"Yes"},{title:"No",isCloseAffordance:!0});if(null==e||"Yes"!==e.title)return;if("Yes"===e.title)try{await this.git.apply(o,r,{allowConflicts:!0});return}catch(e){t=e}}eL.Yd.error(t,s),(0,t1.W8)("Unable to apply changes")}}async applyUnreachableCommitForPatch(e,t,i){let r=(0,eH.UH)(),s=await this.getStatusForRepo(e);if(s?.files?.length)try{await this.git.stash__push(e,void 0,{includeUntracked:!0})}catch(e){eL.Yd.error(e,r),e instanceof I.s8?(0,t1.W8)(`Error applying patch - unable to stash changes: ${e.message}`):(0,t1.W8)("Error applying patch - unable to stash changes");return}let n=e,o=await this.getBranch(e),a=i?.branchName==null||o?.name===i.branchName||(await this.getBranches(e,{filter:e=>e.name===i.branchName}))?.values?.length>0,l=i?.branchName!=null&&!a&&i.createBranchIfNeeded;if(i?.createWorktreePath!=null){if(i?.branchName===null||i.branchName===o?.name){(0,t1.W8)("Error applying patch - unable to create worktree");return}try{await this.createWorktree(e,i.createWorktreePath,{commitish:i?.branchName!=null&&a?i.branchName:o?.name,createBranch:l?i.branchName:void 0})}catch(e){eL.Yd.error(e,r),e instanceof I.P6?(0,t1.W8)(`Error applying patch - unable to create worktree: ${e.message}`):(0,t1.W8)("Error applying patch - unable to create worktree");return}let t=await this.container.git.getWorktree(e,e=>(0,M.AH)(e.uri.fsPath)===(0,M.AH)(i.createWorktreePath));if(null==t){(0,t1.W8)("Error applying patch - unable to create worktree");return}n=t.uri.fsPath}if(i?.branchName!=null&&o?.name!==i.branchName){let e=l?o?.ref??"HEAD":i.branchName;await this.checkout(n,e,{createBranch:l?i.branchName:void 0})}try{await this.git.cherrypick(n,t,{noCommit:!0,errors:_.Throw})}catch(e){eL.Yd.error(e,r),e instanceof I.oj?e.reason===I.e9.Conflict?(0,t1.W8)("Error applying patch - conflicts detected. Please resolve conflicts."):(0,t1.W8)(`Error applying patch - unable to apply patch changes: ${e.message}`):(0,t1.W8)("Error applying patch - unable to apply patch changes");return}b.window.showInformationMessage("Patch applied successfully")}async checkout(e,t,i){let r=(0,eH.UH)();try{await this.git.checkout(e,t,i),this.container.events.fire("git:cache:reset",{repoPath:e,caches:["branches","status"]})}catch(i){let e=i?.toString()??"";if(/overwritten by checkout/i.test(e)){(0,t1.W8)(`Unable to checkout '${t}'. Please commit or stash your changes before switching branches`);return}eL.Yd.error(i,r),(0,t1.W8)(`Unable to checkout '${t}'`)}}async clone(e,t){let i=(0,eH.UH)();try{return this.git.clone(e,t)}catch(t){eL.Yd.error(t,i),(0,t1.W8)(`Unable to clone '${e}'`)}}async createUnreachableCommitForPatch(e,t,i,r){let s=(0,eH.UH)(),n=await P.promises.mkdtemp(k().join((0,tu.tmpdir)(),"gl-")),o=(0,M.RQ)(n,"index");try{let s={GIT_INDEX_FILE:o},n=await this.git.git({cwd:e,env:s},"ls-tree","-z","-r","--full-name",i);await this.git.git({cwd:e,env:s,stdin:n},"update-index","-z","--index-info"),await this.git.apply2(e,{env:s,stdin:t},"--cached");let a=(await this.git.git({cwd:e,env:s},"write-tree"))?.trim(),l=(await this.git.git({cwd:e,env:s},"commit-tree",a,"-p",i,"-m",r))?.trim();return this.getCommit(e,l)}catch(e){throw eL.Yd.error(e,s),e}finally{try{await P.promises.rmdir(n,{recursive:!0})}catch(e){}}}resetCache(e,...t){(0===t.length||t.includes("branches"))&&this._branchesCache.delete(e),(0===t.length||t.includes("contributors"))&&this._contributorsCache.delete(e),(0===t.length||t.includes("remotes"))&&this._remotesCache.delete(e),(0===t.length||t.includes("stashes"))&&this._stashesCache.delete(e),(0===t.length||t.includes("status"))&&(this._mergeStatusCache.delete(e),this._rebaseStatusCache.delete(e)),(0===t.length||t.includes("tags"))&&this._tagsCache.delete(e),0===t.length&&(this._trackedPaths.delete(e),this._repoInfoCache.delete(e))}resetCaches(...e){(0===e.length||e.includes("branches"))&&this._branchesCache.clear(),(0===e.length||e.includes("contributors"))&&this._contributorsCache.clear(),(0===e.length||e.includes("remotes"))&&this._remotesCache.clear(),(0===e.length||e.includes("stashes"))&&this._stashesCache.clear(),(0===e.length||e.includes("status"))&&(this._mergeStatusCache.clear(),this._rebaseStatusCache.clear()),(0===e.length||e.includes("tags"))&&this._tagsCache.clear(),0===e.length&&(this._trackedPaths.clear(),this._repoInfoCache.clear())}async excludeIgnoredUris(e,t){let i=new Map(t.map(e=>[(0,M.AH)(e.fsPath),e])),r=await this.git.check_ignore(e,...i.keys());if(null==r)return t;let s=r.split("\x00").filter(e=>!!e);if(0===s.length)return t;for(let e of s)i.delete(e);return[...i.values()]}async fetch(e,t){let i=(0,eH.UH)(),{branch:r,...s}=t??{};try{if((0,F.UR)(r)){let[i,s]=(0,T.$q)(r);if(null==s)return;await this.git.fetch(e,{branch:i,remote:s,upstream:(0,F.Gn)(r),pull:t?.pull})}else await this.git.fetch(e,s);this.container.events.fire("git:cache:reset",{repoPath:e})}catch(e){if(eL.Yd.error(e,i),!I.kp.is(e))throw e;b.window.showErrorMessage(e.message)}}async push(e,t){let i,r,s,n,o;let a=(0,eH.UH)();if((0,F.UR)(t?.reference))null!=t.publish?(i=t.reference.name,r=t.publish.remote,s=(0,F.Gn)(t.reference)):([i,r]=(0,T.$q)(t.reference),s=void 0);else{let o=await this.getBranch(e);if(null==o)return;i=t?.reference!=null?`${t.reference.ref}:${t?.publish!=null?"refs/heads/":""}${o.getNameWithoutRemote()}`:o.name,r=o.getRemoteName()??t?.publish?.remote,s=t?.reference==null&&t?.publish!=null?o.name:void 0,t?.publish?.remote!=null&&t?.reference!=null&&(n={branch:o.getNameWithoutRemote(),remote:r,remoteBranch:o.getNameWithoutRemote()})}if(t?.publish==null&&null==r&&null==s)throw new I.FD(I.gk.Other);if(t?.force){let e=C.D.getAny("git.useForcePushWithLease")??!0;o=e?{withLease:e,ifIncludes:C.D.getAny("git.useForcePushIfIncludes")??!0}:{withLease:e}}try{await this.git.push(e,{branch:i,remote:r,upstream:s,force:o,publish:t?.publish!=null}),null!=n&&await this.git.branch__set_upstream(e,n.branch,n.remote,n.remoteBranch),this.container.events.fire("git:cache:reset",{repoPath:e})}catch(e){if(eL.Yd.error(e,a),!I.FD.is(e))throw e;b.window.showErrorMessage(e.message)}}async pull(e,t){let i=(0,eH.UH)(),r=t?.branch;if(!(0,F.UR)(r)&&null==(r=await this.getBranch(e)))return;let[s,n]=(0,T.$q)(r);if(null!=n||null!=r.upstream)try{await this.git.pull(e,{branch:s,remote:n,rebase:t?.rebase,tags:t?.tags}),this.container.events.fire("git:cache:reset",{repoPath:e})}catch(e){if(eL.Yd.error(e,i),!I.wG.is(e))throw e;b.window.showErrorMessage(e.message)}}toCanonicalMap=new Map;fromCanonicalMap=new Map;unsafePaths=new Set;async findRepositoryUri(e,t){let i;let r=(0,eH.UH)();try{let s;if(null==t&&(t=((await b.workspace.fs.stat(e)).type&b.FileType.Directory)===b.FileType.Directory),t||(e=b.Uri.joinPath(e,"..")),[s,i]=await this.git.rev_parse__show_toplevel(e.fsPath),s?this.unsafePaths.delete(e.fsPath):!1===s&&this.unsafePaths.add(e.fsPath),!i)return;let n=b.Uri.file(i);if(tm.ED&&0!==n.authority.length&&0===e.authority.length){let t=iw.exec(e.path);if(null!=t){let[,e]=t;try{let t=await new Promise(t=>P.realpath.native(`${e}:\\`,{encoding:"utf8"},(e,i)=>t(null!=e?void 0:i)));if(null!=t){let r=(0,M.QY)(n.fsPath,t);return i=(0,M.AH)(n.fsPath.replace(t,`${e.toLowerCase()}:${r||t.endsWith("\\")?"\\":""}`)),b.Uri.file(i)}}catch{}}return b.Uri.file((0,M.AH)(e.fsPath))}let o=this.toCanonicalMap.get(i);if(null==o){let t;[i,t]=await new Promise(t=>{(0,P.realpath)(e.fsPath,{encoding:"utf8"},(s,n)=>{if(null!=s){eL.Yd.debug(r,`fs.realpath failed; repoPath=${i}`),t([i,void 0]);return}if((0,M.QY)(e.fsPath,n)){eL.Yd.debug(r,`No symlink detected; repoPath=${i}`),t([i,void 0]);return}let o=(0,M.AH)(n),a=(0,M.B9)(`${i}/`,`${o}/`,"/"),l=(0,M.AH)(e.fsPath);o=a<o.length-1?l.substring(0,l.length-(o.length-a)):l,eL.Yd.debug(r,`Symlink detected; repoPath=${i}, path=${e.fsPath}, resolvedPath=${n}`),t([i,o])})}),null!=t&&(this.toCanonicalMap.set(i,b.Uri.file(t)),this.fromCanonicalMap.set(t,b.Uri.file(i)))}return i?b.Uri.file(i):void 0}catch(e){eL.Yd.error(e,r);return}}getAheadBehindCommitCount(e,t,i){return this.git.rev_list__left_right(e,t,i?.authors)}async getBlame(e,t){let i=(0,eH.UH)();if(t?.isDirty)return this.getBlameContents(e,t.getText());let r="blame";null!=e.sha&&(r+=`:${e.sha}`);let s=await this.container.tracker.getOrAdd(t??e);if(this.useCaching){if(null!=s.state){let e=s.state.getBlame(r);if(null!=e)return eL.Yd.debug(i,`Cache hit: '${r}'`),e.item}eL.Yd.debug(i,`Cache miss: '${r}'`),s.state??=new t9.p}let n=this.getBlameCore(e,s,r,i);return null!=s.state&&(eL.Yd.debug(i,`Cache add: '${r}'`),s.state.setBlame(r,{item:n})),n}async getBlameCore(e,t,i,r){let s=await this.isTrackedWithDetails(e);if(null==s)return eL.Yd.log(r,`Skipping blame; '${e.fsPath}' is not tracked`),ip;let[n,o]=s;try{let t=await this.git.blame(o,n,{ref:e.sha,args:C.D.get("advanced.blame.customArguments"),ignoreWhitespace:C.D.get("blame.ignoreWhitespace")});return t$(this.container,t,o,await this.getCurrentUser(o))}catch(e){if(eL.Yd.error(e,r),null!=t.state){let s=e?.toString()??"";return eL.Yd.debug(r,`Cache replace (with empty promise): '${i}'; reason=${s}`),t.state.setBlame(i,{item:ip,errorMessage:s}),t.setBlameFailure(e),(e instanceof I.Ms||e instanceof I.PZ)&&(0,t1.CO)(e),ip}return}}async getBlameContents(e,t){let i=(0,eH.UH)(),r=`blame:${(0,tp.FB)(t)}`,s=await this.container.tracker.getOrAdd(e);if(this.useCaching){if(null!=s.state){let e=s.state.getBlame(r);if(null!=e)return eL.Yd.debug(i,`Cache hit: ${r}`),e.item}eL.Yd.debug(i,`Cache miss: ${r}`),s.state??=new t9.p}let n=this.getBlameContentsCore(e,t,s,r,i);return null!=s.state&&(eL.Yd.debug(i,`Cache add: '${r}'`),s.state.setBlame(r,{item:n})),n}async getBlameContentsCore(e,t,i,r,s){let n=await this.isTrackedWithDetails(e);if(null==n)return eL.Yd.log(s,`Skipping blame; '${e.fsPath}' is not tracked`),ip;let[o,a]=n;try{let e=await this.git.blame(a,o,{contents:t,args:C.D.get("advanced.blame.customArguments"),correlationKey:`:${r}`,ignoreWhitespace:C.D.get("blame.ignoreWhitespace")});return t$(this.container,e,a,await this.getCurrentUser(a))}catch(e){if(eL.Yd.error(e,s),null!=i.state){let t=e?.toString()??"";return eL.Yd.debug(s,`Cache replace (with empty promise): '${r}'; reason=${t}`),i.state.setBlame(r,{item:ip,errorMessage:t}),i.setBlameFailure(e),(e instanceof I.Ms||e instanceof I.PZ)&&(0,t1.CO)(e),ip}return}}async getBlameForLine(e,t,i,r){if(i?.isDirty)return this.getBlameForLineContents(e,t,i.getText(),r);let s=(0,eH.UH)();if(!r?.forceSingleLine&&this.useCaching){let r=await this.getBlame(e,i);if(null==r)return;let s=r.lines[t];if(null==s){if(r.lines.length!==t)return;s=r.lines[t-1]}let n=r.commits.get(s.sha);if(null==n)return;return{author:{...r.authors.get(n.author.name),lineCount:n.lines.length},commit:n,line:s}}let n=t+1,[o,a]=(0,M.uo)(e,e.repoPath);try{let i=await this.git.blame(a,o,{ref:e.sha,args:C.D.get("advanced.blame.customArguments"),ignoreWhitespace:C.D.get("blame.ignoreWhitespace"),startLine:n,endLine:n}),r=t$(this.container,i,a,await this.getCurrentUser(a));if(null==r)return;return{author:(0,eM.Ps)(r.authors.values()),commit:(0,eM.Ps)(r.commits.values()),line:r.lines[t]}}catch(e){eL.Yd.error(e,s),(e instanceof I.Ms||e instanceof I.PZ)&&(0,t1.CO)(e);return}}async getBlameForLineContents(e,t,i,r){if(!r?.forceSingleLine&&this.useCaching){let r=await this.getBlameContents(e,i);if(null==r)return;let s=r.lines[t];if(null==s){if(r.lines.length!==t)return;s=r.lines[t-1]}let n=r.commits.get(s.sha);if(null==n)return;return{author:{...r.authors.get(n.author.name),lineCount:n.lines.length},commit:n,line:s}}let s=t+1,[n,o]=(0,M.uo)(e,e.repoPath);try{let e=await this.git.blame(o,n,{contents:i,args:C.D.get("advanced.blame.customArguments"),ignoreWhitespace:C.D.get("blame.ignoreWhitespace"),startLine:s,endLine:s}),r=t$(this.container,e,o,await this.getCurrentUser(o));if(null==r)return;return{author:(0,eM.Ps)(r.authors.values()),commit:(0,eM.Ps)(r.commits.values()),line:r.lines[t]}}catch{return}}async getBlameForRange(e,t){let i=await this.getBlame(e);if(null!=i)return this.getBlameRange(i,e,t)}async getBlameForRangeContents(e,t,i){let r=await this.getBlameContents(e,i);if(null!=r)return this.getBlameRange(r,e,t)}getBlameRange(e,t,i){if(0===e.lines.length||0===i.start.line&&i.end.line===e.lines.length-1)return{allLines:e.lines,...e};let r=e.lines.slice(i.start.line,i.end.line+1),s=new Set(r.map(e=>e.sha)),n=i.start.line+1,o=i.end.line+1,a=new Map,l=new Map;for(let t of e.commits.values()){if(!s.has(t.sha))continue;let e=t.with({lines:t.lines.filter(e=>e.line>=n&&e.line<=o)});l.set(t.sha,e);let i=a.get(e.author.name);null==i&&(i={name:e.author.name,lineCount:0},a.set(i.name,i)),i.lineCount+=e.lines.length}let h=new Map([...a.entries()].sort((e,t)=>t[1].lineCount-e[1].lineCount));return{repoPath:t.repoPath,authors:h,commits:l,lines:r,allLines:e.lines}}async getBranch(e){let{values:[t]}=await this.getBranches(e,{filter:e=>e.current});if(null!=t)return t;let i=C.D.get("advanced.commitOrdering"),r=await this.git.rev_parse__currentBranch(e,i);if(null==r)return;let[s,n]=r[0].split("\n");if((0,T.uz)(s)){let[o,a]=await Promise.allSettled([this.getRebaseStatus(e),this.git.log__recent_committerdate(e,i)]),l=(0,t6.Sb)(a);t=new T.XI(this.container,e,t6.Sb(o)?.incoming.name??s,!1,!0,null!=l?new Date(1e3*Number(l)):void 0,r[1],n?{name:n,missing:!1}:void 0,void 0,void 0,void 0,null!=o)}return t}async getBranches(e,t){if(null==e)return ig;let i=this.useCaching?this._branchesCache.get(e):void 0;null==i&&(i=(async function(){try{let t=await this.git.for_each_ref__branch(e,{all:!0});if(null==t||0===t.length){let t;let i=C.D.get("advanced.commitOrdering"),r=await this.git.rev_parse__currentBranch(e,i);if(null!=r){let[s,n]=r[0].split("\n"),[o,a]=await Promise.all([(0,T.uz)(s)?this.getRebaseStatus(e):void 0,this.git.log__recent_committerdate(e,i)]);t=new T.XI(this.container,e,o?.incoming.name??s,!1,!0,null!=a?new Date(1e3*Number(a)):void 0,r[1],{name:n,missing:!1},void 0,void 0,void 0,null!=o)}return null!=t?{values:[t]}:ig}return{values:function(e,t,i){var r=[];try{let s,n,o,a,l,h,c,u,d,p;let g=E(r,(0,x.k)(`Git.parseBranches(${i})`,{log:!1,logLevel:"debug"})),m=[];if(!t)return m;for(;p=U.exec(t),null!=p;){if([,s,n,o,a,l,h,c,u]=p,n.startsWith("refs/remotes/")){if((n=n.substr(13)).endsWith("/HEAD"))continue;d=!0}else n=n.substr(11),d=!1;m.push(new T.XI(e,i,n,d,42===s.charCodeAt(0),u?new Date(u):void 0,null==c||0===c.length?void 0:` ${c}`.substr(1),null==o||0===o.length?void 0:{name:` ${o}`.substr(1),missing:!!h},Number(a)||0,Number(l)||0))}return g?.stop({suffix:` parsed ${m.length} branches`}),m}catch(e){var s=e,n=!0}finally{B(r,s,n)}}(this.container,t,e)}}catch(t){return this._branchesCache.delete(e),ig}}).call(this),this.useCaching&&t?.cursor==null&&this._branchesCache.set(e,i));let r=await i;return t?.filter!=null&&(r={...r,values:r.values.filter(t.filter)}),t?.sort&&(0,T.YF)(r.values,"boolean"==typeof t.sort?void 0:t.sort),r}async getChangedFilesCount(e,t){let i=await this.git.diff__shortstat(e,t);if(i)return function(e){var t=[];try{let i=tI(t,(0,x.k)("Git.parseDiffShortStat",{log:!1,logLevel:"debug"}));if(!e)return;let r=tx.exec(e);if(null==r)return;let[,s,n,o]=r,a={changedFiles:null==s?0:parseInt(s,10),additions:null==n?0:parseInt(n,10),deletions:null==o?0:parseInt(o,10)};return i?.stop({suffix:` parsed ${a.changedFiles} files, +${a.additions} -${a.deletions}`}),a}catch(e){var i=e,r=!0}finally{tF(t,i,r)}}(i)}async getCommit(e,t){let i=await this.getLog(e,{limit:2,ref:t});if(null!=i)return i.commits.get(t)??(0,eM.Ps)(i.commits.values())}async getCommitBranches(e,t,i,r){if(null!=i){let r=await this.git.branchOrTag__containsOrPointsAt(e,t,{type:"branch",mode:"contains",name:i});return r?[r?.trim()]:[]}let s=await this.git.branchOrTag__containsOrPointsAt(e,t,{type:"branch",...r});return s?(0,W.DZ)(s.split("\n"),e=>e.trim()||void 0):[]}getCommitCount(e,t){return this.git.rev_list__count(e,t)}async getCommitForFile(e,t,i){let r=(0,eH.UH)(),[s,n]=(0,M.uo)(t,e);try{let e;let t=await this.getLogForFile(n,s,{limit:2,ref:i?.ref,range:i?.range});if(null==t)return;if(i?.ref){let e=t.commits.get(i.ref);if(null==e&&!i?.firstIfNotFound&&((0,F.D3)(i.ref)||(0,F.l3)(i.ref)))return}return e??(0,eM.Ps)(t.commits.values())}catch(e){eL.Yd.error(e,r);return}}async getCommitsForGraph(e,t,i){let r;let s=i?.limit??C.D.get("graph.defaultItemLimit")??5e3,h=C.D.get("graph.pageItemLimit")??1e3,c=C.D.get("graph.commitOrdering",void 0,"date"),u=i?.include?.stats,d=i?.include?.stats&&!u?(null==o&&(o=eu({sha:"%H",author:"%aN",authorEmail:"%aE",authorDate:"%at",committerDate:"%ct",parents:"%P",tips:"%D",message:"%B"})),o):(null==n&&(n=eh({sha:"%H",author:"%aN",authorEmail:"%aE",authorDate:"%at",committerDate:"%ct",parents:"%P",tips:"%D",message:"%B"})),n),p=(null==l&&(l=ec("%H")),l),g=(null==a&&(a=eu({sha:"%H"})),a),[m,f,w,v,y]=await Promise.allSettled([this.git.log(e,void 0,...p.arguments,"-n1",i?.ref??"HEAD"),this.getStash(e),this.getBranches(e),this.getRemotes(e),this.getCurrentUser(e)]),b=t6.Sb(w)?.values,A=null!=b?new Map(b.map(e=>[e.name,e])):new Map,P=b?.find(e=>e.current),D=P?.upstream?.name,k=(0,t6.Sb)(y),S=(0,t6.Sb)(v),R=null!=S?new Map(S.map(e=>[e.name,e])):new Map,$=(0,eM.Ps)(p.parse((0,t6.Sb)(m)??"")),_=new Map,I=(0,t6.Sb)(f);null!=I&&0!==I.commits.size&&(r=(0,eM.v_)((0,eM.UI)(I.commits.values(),e=>e.sha.substring(0,9)),"\n"));let x=C.D.get("graph.avatars",void 0,!0),O=new Map,E=new Set,B=new Set,U=new Map,W=0,M=0,L=0;async function N(s,n,o){let a,l,p,m,f,w,v,y,b,C,P,S,$,H,G,Y,j,V,Q,z,K,J,Z,X,ee,et,ei,er;let es=W;M++;let en=s;for(;;){let t;let u=[...d.arguments,`--${c}-order`,"--all"];if(o?.skip&&u.push(`--skip=${o.skip}`),n)[t,s]=await this.git.logStreamTo(e,n,s,r?{stdin:r}:void 0,...u);else if(u.push(`-n${en+1}`),t=await this.git.log(e,r?{stdin:r}:void 0,...u),o&&!tc(o.sha).test(t)){if(l===t.length)return{repoPath:e,avatars:O,ids:E,includes:i?.include,branches:A,remotes:R,downstreams:_,rows:[]};l=t.length,en=(0===en?h:en)*2,o.skip-=Math.floor(.1*o.skip);continue}if(!t)return{repoPath:e,avatars:O,ids:E,includes:i?.include,branches:A,remotes:R,downstreams:_,rows:[]};a=t,0!==s&&(s=en);break}let eo=[],ea=new Map,el=!1,eh=!1,ec=0;for(let i of d.parse(a))if(ec++,!E.has(i.sha)&&(W++,!U.has(i.sha))){if(E.add(i.sha),$=[],G=[],j=[],b={},el=!1,i.tips){for(ei of(ea.clear(),i.tips.split(", ")))if("refs/stash"!==ei){if(ei.startsWith("tag: ")){et=ei.substring(5),ee=(0,eT.YU)(e,et),y={webviewItem:"gitlens:tag",webviewItemValue:{type:"tag",ref:(0,F.xB)(et,e,{id:ee,refType:"tag",name:et})}},Y={id:ee,name:et,annotated:!0,context:(0,t8.BH)(y)},j.push(Y);continue}if((el=ei.startsWith("HEAD"))&&(B.add(i.sha),"HEAD"!==ei&&(ei=ei.substring(8))),(J=(0,T.Lo)(ei))&&null!=(z=R.get(J))){if("HEAD"===(v=(0,T.S3)(ei)))continue;K=(0,T.Vx)(e,!0,ei),m=((x?z.provider?.avatarUri:void 0)??tC.dM(this.container,z,t))?.toString(!0),y={webviewItem:"gitlens:branch+remote",webviewItemValue:{type:"branch",ref:(0,F.xB)(ei,e,{id:K,refType:"branch",name:ei,remote:!0,upstream:{name:z.name,missing:!1}})}},H={id:K,name:v,owner:z.name,url:z.url,avatarUrl:m,context:(0,t8.BH)(y),current:ei===D,hostingServiceType:z.provider?.id},G.push(H),null==(C=ea.get(v))&&(C={remotes:[]},ea.set(v,C)),null==C.remotes&&(C.remotes=[]),C.remotes.push(y.webviewItemValue.ref);continue}if(f=A.get(ei),w=f?.id??(0,T.Vx)(e,!1,ei),y={webviewItem:`gitlens:branch${el?"+current":""}${f?.upstream!=null?"+tracking":""}`,webviewItemValue:{type:"branch",ref:(0,F.xB)(ei,e,{id:w,refType:"branch",name:ei,remote:!1,upstream:f?.upstream})}},S={id:w,name:ei,isCurrentHead:el,context:(0,t8.BH)(y),upstream:f?.upstream!=null?{name:f.upstream.name,id:(0,T.Vx)(e,!0,f.upstream.name)}:void 0},$.push(S),f?.upstream?.name!=null){let e=_.get(f.upstream.name);null==e&&(e=[],_.set(f.upstream.name,e)),e.push(ei)}null==(C=ea.get(ei))&&(C={},ea.set(ei,C)),el&&(C.head=!0),C.local=y.webviewItemValue.ref}for([P,C]of ea)null!=C.remotes&&(null!=C.local&&C.remotes.length>0||C.remotes.length>1)&&(null==b.refGroups&&(b.refGroups={}),b.refGroups[P]=(0,t8.BH)({webviewItemGroup:`gitlens:refGroup${C.head?"+current":""}`,webviewItemGroupValue:{type:"refGroup",refs:null!=C.local?[C.local,...C.remotes]:C.remotes}}))}if(Z=I?.commits.get(i.sha),Q=i.parents?i.parents.split(" "):[],B.has(i.sha))for(V of Q)B.add(V);null!=Z&&Q.length>1&&(U.set(Q[1],i.sha),U.set(Q[2],i.sha),Q.splice(1,2)),null!=Z||O.has(i.authorEmail)||null==(p=(0,tf.x4)(i.authorEmail))||O.set(i.authorEmail,p.toString(!0)),eh=(0,q.o)(k,i.author,i.authorEmail),null!=Z?b.row=(0,t8.BH)({webviewItem:"gitlens:stash",webviewItemValue:{type:"stash",ref:(0,F.xB)(i.sha,e,{refType:"stash",name:Z.name,number:Z.number})}}):(b.row=(0,t8.BH)({webviewItem:`gitlens:commit${el?"+HEAD":""}${B.has(i.sha)?"+current":""}`,webviewItemValue:{type:"commit",ref:(0,F.xB)(i.sha,e,{refType:"revision",message:i.message})}}),b.avatar=(0,t8.BH)({webviewItem:`gitlens:contributor${eh?"+current":""}`,webviewItemValue:{type:"contributor",repoPath:e,name:i.author,email:i.authorEmail,current:eh}})),eo.push({sha:i.sha,parents:Q,author:eh?"You":i.author,email:i.authorEmail,date:1e3*Number("author-date"===c?i.authorDate:i.committerDate),message:(0,tw.X)(i.message.trim()),type:null!=Z?"stash-node":Q.length>1?"merge-node":"commit-node",heads:$,remotes:G,tags:j,contexts:b}),null!=i.stats&&(null==X&&(X=new Map),X.set(i.sha,i.stats))}let eu=o?.sha,ed=(0,eM.Z$)(E);return o=null!=ed?{sha:ed,skip:W-M}:void 0,u&&(null==X&&(X=new Map),L++,er={isLoaded:()=>0===L,promise:new Promise(async t=>{try{let t=[...g.arguments];0===es?t.push(`-n${W}`):t.push(`-n${W-es}`,`--skip=${es}`),t.push(`--${c}-order`,"--all");let i=await this.git.log(e,r?{stdin:r}:void 0,...t);if(i)for(let e of g.parse(i))X.set(e.sha,e.stats)}finally{L--,t()}})}),{repoPath:e,avatars:O,ids:E,includes:i?.include,remappedIds:U,branches:A,remotes:R,downstreams:_,rows:eo,id:n,rowsStats:X,rowsStatsDeferred:er,paging:{limit:0===s?ec:s,startingCursor:eu,hasMore:0!==s&&ec>s},more:async(e,t)=>N.call(this,e,t,o)}}return N.call(this,s,$)}async getCommitTags(e,t,i){let r=await this.git.branchOrTag__containsOrPointsAt(e,t,{type:"tag",...i});return r?(0,W.DZ)(r.split("\n"),e=>e.trim()||void 0):[]}getConfig(e,t){return this.git.config__get(t,e)}setConfig(e,t,i){return this.git.config__set(t,i,e)}async getContributors(e,t){if(null==e)return[];let i=t?.stats?`stats|${e}`:e,n=this.useCaching?this._contributorsCache.get(i):void 0;return null==n&&(n=(async function(){try{e=(0,M.AH)(e);let i=await this.getCurrentUser(e),n=t?.stats?(null==s&&(s=eu({sha:"%H",author:"%aN",email:"%aE",date:"%at"})),s):(null==r&&(r=eh({sha:"%H",author:"%aN",email:"%aE",date:"%at"})),r),o=[...n.arguments,"--full-history","--first-parent"];t?.all&&o.push("--all","--single-worktree");let a=await this.git.log(e,{ref:t?.ref},...o),l=new Map;for(let t of n.parse(a)){let r=`${t.author}|${t.email}`,s=l.get(r);if(null==s)s=new tb.V(e,t.author,t.email,1,new Date(1e3*Number(t.date)),(0,q.o)(i,t.author,t.email),t.stats),l.set(r,s);else{s.count++;let e=new Date(1e3*Number(t.date));e>s.date&&(s.date=e)}}return[...l.values()]}catch(e){return this._contributorsCache.delete(i),[]}}).call(this),this.useCaching&&this._contributorsCache.set(i,n)),n}async getCurrentUser(e){if(!e)return;let t=(0,eH.UH)(),i=this._repoInfoCache.get(e),r=i?.user;if(null!=r)return r;if(null!==r){r={name:void 0,email:void 0};try{let t=await this.git.config__get_regex("^user\\.",e,{local:!0});if(t){let e,i,s;for(;s=iv.exec(t),null!=s;)[,e,i]=s,r[e]=` ${i}`.substr(1)}else{if(r.name=S.env.GIT_AUTHOR_NAME||S.env.GIT_COMMITTER_NAME||tu.userInfo()?.username||void 0,!r.name){this._repoInfoCache.set(e,{...i,user:null});return}r.email=S.env.GIT_AUTHOR_EMAIL||S.env.GIT_COMMITTER_EMAIL||S.env.EMAIL||`${r.name}@${(0,tu.hostname)()}`}let s=`${r.name} <${r.email}>`,n=await this.git.check_mailmap(e,s);if(null!=n&&0!==n.length&&s!==n){let e=iy.exec(n);null!=e&&([,r.name,r.email]=e)}return this._repoInfoCache.set(e,{...i,user:r}),r}catch(r){eL.Yd.error(r,t),this._repoInfoCache.set(e,{...i,user:null});return}}}async getDefaultBranchName(e,t){if(null!=e){if(!t)try{let t=await this.git.symbolic_ref(e,"HEAD");if(null!=t)return t.trim()}catch{}t=t??"origin";try{let i=await this.git.ls_remote__HEAD(e,t);if(null==i)return;let r=/ref:\s(\S+)\s+HEAD/m.exec(i);if(null==r)return;let[,s]=r;return s.substr(11)}catch{return}}}async getDiff(e,t,i,r){let s;let n=(0,eH.UH)(),o=[`-U${r?.context??3}`];t===H.CL?null!=i?o.push(i):i="HEAD":t===H.pw?(o.push("--staged"),null!=i?o.push(i):i="HEAD"):null==i?""===t||"HEAD"===t.toUpperCase()?(i="HEAD",o.push(i)):(i=`${t}^`,o.push(i,t)):o.push(i,t);try{s=await this.git.diff2(e,{errors:_.Throw},...o)}catch(e){eL.Yd.error(e,n);return}return{contents:s,from:i,to:t}}async getDiffFiles(e,t){let i=await this.git.apply2(e,{stdin:t},"--numstat","--summary","-z");if(i)return{files:function(e,t){var i=[];try{let r=tI(i,(0,x.k)("Git.parseApplyFiles",{log:!1,logLevel:"debug"}));if(!e)return[];let s=new Map,n=e.split("\x00"),o=n.pop();for(let e of n){if(!(e=e.trim()))continue;let[i,r,n]=e.split("	");s.set((0,M.AH)(n),new G.K8(t,n,"M",void 0,void 0,{changes:0,additions:parseInt(i,10),deletions:parseInt(r,10)}))}for(let e of o.split("\n")){if(!(e=e.trim()))continue;let i=/(rename) (.*?)\{(.+?)\s+=>\s+(.+?)\}(?: \(\d+%\))|(create|delete) mode \d+ (.+)/.exec(e);if(null==i)continue;let[,r,n,o,a,l,h]=i;if(null!=r){a=(0,M.AH)((0,M.RQ)(n,a)),o=(0,M.AH)((0,M.RQ)(n,o));let e=s.get(a);s.set(a,new G.K8(t,a,"R",o,void 0,e.stats))}else{let e=s.get((0,M.AH)(h));s.set(h,new G.K8(t,e.path,"create"===l?"A":"D",void 0,void 0,e.stats))}}return r?.stop({suffix:` parsed ${s.size} files`}),[...s.values()]}catch(e){var r=e,s=!0}finally{tF(i,r,s)}}(i,e)}}async getDiffForFile(e,t,i){let r=(0,eH.UH)(),s="diff";null!=t&&(s+=`:${t}`),null!=i&&(s+=`:${i}`);let n=await this.container.tracker.getOrAdd(e);if(this.useCaching){if(null!=n.state){let e=n.state.getDiff(s);if(null!=e)return eL.Yd.debug(r,`Cache hit: '${s}'`),e.item}eL.Yd.debug(r,`Cache miss: '${s}'`),n.state??=new t9.p}let o=await iP(e),a=this.getDiffForFileCore(e.repoPath,e.fsPath,t,i,{encoding:o},n,s,r);return null!=n.state&&(eL.Yd.debug(r,`Cache add: '${s}'`),n.state.setDiff(s,{item:a})),a}async getDiffForFileCore(e,t,i,r,s,n,o,a){let[l,h]=(0,M.uo)(t,e);try{let e=await this.git.diff(h,l,i,r,{...s,filters:["M"],linesOfContext:0,renames:!0,similarityThreshold:C.D.get("advanced.similarityThreshold")});return tO(e)}catch(e){if(null!=n.state){let t=e?.toString()??"";return eL.Yd.debug(a,`Cache replace (with empty promise): '${o}'`),n.state.setDiff(o,{item:ip,errorMessage:t}),ip}return}}async getDiffForFileContents(e,t,i){let r=(0,eH.UH)(),s=`diff:${(0,tp.FB)(i)}`,n=await this.container.tracker.getOrAdd(e);if(this.useCaching){if(null!=n.state){let e=n.state.getDiff(s);if(null!=e)return eL.Yd.debug(r,`Cache hit: ${s}`),e.item}eL.Yd.debug(r,`Cache miss: ${s}`),n.state??=new t9.p}let o=await iP(e),a=this.getDiffForFileContentsCore(e.repoPath,e.fsPath,t,i,{encoding:o},n,s,r);return null!=n.state&&(eL.Yd.debug(r,`Cache add: '${s}'`),n.state.setDiff(s,{item:a})),a}async getDiffForFileContentsCore(e,t,i,r,s,n,o,a){let[l,h]=(0,M.uo)(t,e);try{let e=await this.git.diff__contents(h,l,i,r,{...s,filters:["M"],similarityThreshold:C.D.get("advanced.similarityThreshold")});return tO(e)}catch(e){if(null!=n.state){let t=e?.toString()??"";return eL.Yd.debug(a,`Cache replace (with empty promise): '${o}'`),n.state.setDiff(o,{item:ip,errorMessage:t}),ip}return}}async getDiffForLine(e,t,i,r){try{let s=await this.getDiffForFile(e,i,r);if(null==s)return;let n=t+1,o=s.hunks.find(e=>e.current.position.start<=n&&e.current.position.end>=n);if(null==o)return;let a=o.lines.get(n);if(null==a)return;return{hunk:o,line:a}}catch(e){return}}async getDiffStatus(e,t,i,r){try{let s=await this.git.diff__name_status(e,t,i,{similarityThreshold:C.D.get("advanced.similarityThreshold"),...r});if(!s)return;let n=tE(s,e);return null==n||0===n.length?void 0:n}catch(e){return}}async getFileStatusForCommit(e,t,i){if(i===H.Ii||(0,F.l3)(i))return;let[r,s]=(0,M.uo)(t,e),n=await this.git.show__name_status(s,r,i);if(!n)return;let o=tE(n,e);if(null!=o&&0!==o.length)return o[0]}async getFirstCommitSha(e){let t=await this.git.rev_list(e,"HEAD",{maxParents:0});return t?.[0]}async getGitDir(e){let t;let i=this._repoInfoCache.get(e);if(i?.gitDir!=null)return i.gitDir;let r=await this.git.rev_parse__git_dir(e);return t=null!=r?{uri:b.Uri.file(r.path),commonUri:null!=r.commonPath?b.Uri.file(r.commonPath):void 0}:{uri:this.getAbsoluteUri(".git",e)},this._repoInfoCache.set(e,{...i,gitDir:t}),t}async getLastFetchedTimestamp(e){try{let t=await this.getGitDir(e),i=await b.workspace.fs.stat(b.Uri.joinPath(t.uri,"FETCH_HEAD"));if(i.size>0)return i.mtime}catch{}}async getLog(e,t){let i=(0,eH.UH)();try{let i;let r=t?.limit??C.D.get("advanced.maxListItems")??0,s=C.D.get("advanced.similarityThreshold"),n=[`--format=${t?.all?ed:ep}`,`-M${null==s?"":`${s}%`}`];t?.status!==null&&n.push(`--${t?.status??"name-status"}`,"--full-history"),t?.all&&n.push("--all");let o=t?.merges??!0;o?(r<=2&&n.push("-m"),n.push("first-parent"===o?"--first-parent":"--no-min-parents")):n.push("--no-merges");let a=t?.ordering??C.D.get("advanced.commitOrdering");a&&n.push(`--${a}-order`),t?.authors?.length&&n.push("--use-mailmap",...t.authors.map(e=>`--author=^${e.name} <${e.email}>$`)),t?.since&&(i=!0,n.push(`--since="${t.since}"`)),t?.until&&(i=!0,n.push(`--until="${t.until}"`)),t?.extraArgs?.length&&(t.extraArgs.some(e=>e.startsWith("-n")||e.startsWith("--until=")||e.startsWith("--since="))&&(i=!0),n.push(...t.extraArgs)),r&&(i=void 0,n.push(`-n${r+1}`));let l=await this.git.log(e,{configs:tt,ref:t?.ref,stdin:t?.stdin},...n),h=em(this.container,l,el.Log,e,void 0,t?.ref,await this.getCurrentUser(e),r,!1,void 0,void 0,i);if(null!=h&&(h.query=i=>this.getLog(e,{...t,limit:i}),h.hasMore)){let e;if(null!=t){let i;({extraArgs:i,...e}=t)}h.more=this.getLogMoreFn(h,e)}return h}catch(e){eL.Yd.error(e,i);return}}async getLogRefsOnly(e,t){let i=(0,eH.UH)(),r=t?.limit??C.D.get("advanced.maxListItems")??0;try{let i=ec("%H"),s=[...i.arguments,"--full-history"],n=t?.ordering??C.D.get("advanced.commitOrdering");n&&s.push(`--${n}-order`),r&&s.push(`-n${r+1}`),t?.since&&s.push(`--since="${t.since}"`);let o=t?.merges??!0;o?s.push("first-parent"===o?"--first-parent":"--no-min-parents"):s.push("--no-merges"),t?.authors?.length&&(s.includes("--use-mailmap")||s.push("--use-mailmap"),s.push(...t.authors.map(e=>`--author=^${e.name} <${e.email}>$`)));let a=await this.git.log(e,{ref:t?.ref},...s);return new Set(i.parse(a))}catch(e){eL.Yd.error(e,i);return}}getLogMoreFn(e,t){return async i=>{let r,s;let n=null!=i&&"object"==typeof i?i.until:void 0,o="number"==typeof i?i:void 0;if(n&&(0,eM.G)(e.commits.values(),e=>e.ref===n))return e;if(o=o??C.D.get("advanced.maxSearchItems")??0,(0,F.yk)(e.sha)){let i=await this.getLog(e.repoPath,{...t,limit:0===o?0:(t?.limit??0)+o});return null==i?{...e,hasMore:!1,more:void 0}:i}let a=(0,eM.Z$)(e.commits.values()),l=a?.ref;if(t?.all){let e=a?.committer.date;r=null!=e?Math.ceil(e.getTime()/1e3)+1:void 0}let h=null==n?o:0;for(;;){let i=await this.getLog(e.repoPath,{...t,limit:h,...r?{until:r,extraArgs:["--boundary"]}:{ref:null==n?`${l}^`:`${n}^..${l}^`}});if(null==i)return{...e,hasMore:!1,more:void 0};let a=e.commits.size,c=new Map([...e.commits,...i.commits]);if(a===c.size&&0!==h){if(s===i.commits.size)return{...e,hasMore:!1,more:void 0};s=i.commits.size,h*=2;continue}null!=r&&null!=l&&i.commits.has(l);let u={repoPath:e.repoPath,commits:c,sha:e.sha,range:void 0,count:c.size,limit:null==n?(e.limit??0)+o:void 0,hasMore:null!=n||i.hasMore,startingCursor:eM.Z$(e.commits)?.[0],endingCursor:i.endingCursor,pagedCommits:()=>{for(let t of e.commits.keys())i.commits.delete(t);return i.commits},query:i=>this.getLog(e.repoPath,{...t,limit:i})};return u.hasMore&&(u.more=this.getLogMoreFn(u,t)),u}}}async getLogForFile(e,t,i){if(null==e)return;let r=(0,eH.UH)(),s=this.getRelativePath(t,e);if(null!=e&&e===s)throw Error(`File name cannot match the repository path; path=${s}`);let n={reverse:!1,...i};null==n.renames&&(n.renames=C.D.get("advanced.fileHistoryFollowsRenames")),null==n.merges&&(n.merges=C.D.get("advanced.fileHistoryShowMergeCommits"));let o="log";null!=n.ref&&(o+=`:${n.ref}`),null==n.all&&(n.all=C.D.get("advanced.fileHistoryShowAllBranches")),n.all&&(o+=":all"),n.limit=n.limit??C.D.get("advanced.maxListItems")??0,n.limit&&(o+=`:n${n.limit}`),n.merges&&(o+=":merges"),n.renames&&(o+=":follow"),n.reverse&&(o+=":reverse"),n.since&&(o+=`:since=${n.since}`),n.skip&&(o+=`:skip${n.skip}`);let a=await this.container.tracker.getOrAdd(ty.YY.fromFile(s,e,n.ref));if(!n.force&&this.useCaching&&null==n.range){if(null!=a.state){let i=a.state.getLog(o);if(null!=i)return eL.Yd.debug(r,`Cache hit: '${o}'`),i.item;if(null!=n.ref||null!=n.limit&&0!==n.limit){let i=a.state.getLog(`log${n.renames?":follow":""}${n.reverse?":reverse":""}`);if(null!=i){if(null==n.ref)return eL.Yd.debug(r,`Cache hit: ~'${o}'`),i.item;eL.Yd.debug(r,`Cache ?: '${o}'`);let s=await i.item;if(null!=s&&!s.hasMore&&s.commits.has(n.ref)){eL.Yd.debug(r,`Cache hit: '${o}'`);let i=!0,a=0,l=new Map((0,eM.DZ)(s.commits.entries(),([e,t])=>{if(i){if(e!==n?.ref)return;i=!1}if(a++,n?.limit==null||!(a>n.limit))return[e,t]})),h={...n};return{...s,limit:h.limit,count:l.size,commits:l,query:i=>this.getLogForFile(e,t,{...h,limit:i})}}}}}eL.Yd.debug(r,`Cache miss: '${o}'`),a.state??=new t9.p}let l=this.getLogForFileCore(e,s,n,a,o,r);return null!=a.state&&null==n.range&&(eL.Yd.debug(r,`Cache add: '${o}'`),a.state.setLog(o,{item:l})),l}async getLogForFileCore(e,t,{ref:i,range:r,...s},n,o,a){let l=await this.isTrackedWithDetails(t,e,i);if(null==l)return eL.Yd.log(a,`Skipping log; '${t}' is not tracked`),ip;let[h,c]=l;try{null!=r&&r.start.line>r.end.line&&(r=new b.Range(r.end,r.start));let n=await this.git.log__file(c,h,i,{ordering:C.D.get("advanced.commitOrdering"),...s,startLine:null==r?void 0:r.start.line+1,endLine:null==r?void 0:r.end.line+1}),o=em(this.container,n,(0,M.Mh)(h)?el.Log:el.LogFile,c,h,i,await this.getCurrentUser(c),s.limit,s.reverse??!1,r);if(null!=o){let n={...s,ref:i,range:r};o.query=i=>this.getLogForFile(e,t,{...n,limit:i}),o.hasMore&&(o.more=this.getLogForFileMoreFn(o,t,n))}return o}catch(e){if(null!=n.state&&null==r&&!s.reverse){let t=e?.toString()??"";return eL.Yd.debug(a,`Cache replace (with empty promise): '${o}'`),n.state.setLog(o,{item:ip,errorMessage:t}),ip}return}}getLogForFileMoreFn(e,t,i){return async r=>{let s;let n=null!=r&&"object"==typeof r?r.until:void 0,o="number"==typeof r?r:void 0;if(n&&(0,eM.G)(e.commits.values(),e=>e.ref===n))return e;o=o??C.D.get("advanced.maxSearchItems")??0;let a=(0,eM.Z$)(e.commits.values());if(null!=a&&(s=a.ref,null!=a.file)){let e=a.file.originalPath??a.file.path;e!==t&&(t=e)}let l=await this.getLogForFile(e.repoPath,t,{...i,limit:null==n?o:0,ref:i.all?void 0:null==n?`${s}^`:`${n}^..${s}^`,skip:i.all?e.count:void 0});if(null==l)return{...e,hasMore:!1,more:void 0};let h=new Map([...e.commits,...l.commits]),c={repoPath:e.repoPath,commits:h,sha:e.sha,range:e.range,count:h.size,limit:null==n?(e.limit??0)+o:void 0,hasMore:null!=n||l.hasMore,query:r=>this.getLogForFile(e.repoPath,t,{...i,limit:r})};if(i.renames){let e=(0,eM.sE)(l.commits.values(),e=>!!e.file?.originalPath&&e.file?.originalPath!==t);t=e?.file?.originalPath??t}return c.hasMore&&(c.more=this.getLogForFileMoreFn(c,t,i)),c}}async getMergeBase(e,t,i,r){let s=(0,eH.UH)();try{let s=await this.git.merge_base(e,t,i,r);if(null==s)return;return s.split("\n")[0].trim()||void 0}catch(e){eL.Yd.error(e,s);return}}async getMergeStatus(e){let t=this.useCaching?this._mergeStatusCache.get(e):void 0;return null==t&&(t=(async function(){let t=await this.git.rev_parse__verify(e,"MERGE_HEAD");if(null==t)return;let[i,r,s]=await Promise.allSettled([this.getBranch(e),this.getMergeBase(e,"MERGE_HEAD","HEAD"),this.getCommitBranches(e,"MERGE_HEAD",void 0,{all:!0,mode:"pointsAt"})]),n=(0,t6.Sb)(i),o=(0,t6.Sb)(r),a=(0,t6.Sb)(s);return{type:"merge",repoPath:e,mergeBase:o,HEAD:(0,F.xB)(t,e,{refType:"revision"}),current:(0,F.LB)(n),incoming:a?.length===1?(0,F.xB)(a[0],e,{refType:"branch",name:a[0],remote:!1}):void 0}}).call(this),this.useCaching&&this._mergeStatusCache.set(e,t)),t}async getRebaseStatus(e){let t=this.useCaching?this._rebaseStatusCache.get(e):void 0;return null==t&&(t=(async function(){let t,i;let r=await this.getGitDir(e),[s,n]=await Promise.allSettled([this.git.readDotGitFile(r,["rebase-merge","head-name"]),this.git.readDotGitFile(r,["rebase-apply","head-name"])]),o=(0,t6.Sb)(s),a=(0,t6.Sb)(n),l=a??o;if(null==l)return;let h=null!=a?"rebase-apply":"rebase-merge",[c,u,d,p,g,m]=await Promise.allSettled([this.git.rev_parse__verify(e,"REBASE_HEAD"),this.git.readDotGitFile(r,[h,"orig-head"]),this.git.readDotGitFile(r,[h,"onto"]),this.git.readDotGitFile(r,[h,"msgnum"],{numeric:!0}),this.git.readDotGitFile(r,[h,"end"],{numeric:!0}),this.git.readDotGitFile(r,[h,"message"],{throw:!0}).catch(()=>this.git.readDotGitFile(r,[h,"message-squashed"]))]),f=(0,t6.Sb)(u),w=(0,t6.Sb)(d);if(null==f||null==w)return;let v=(0,t6.Sb)(c);t=null!=v?await this.getMergeBase(e,v,"HEAD"):await this.getMergeBase(e,w,f),l.startsWith("refs/heads/")&&(l=l.substr(11).trim());let[y,b]=await Promise.allSettled([this.getCommitBranches(e,w,void 0,{all:!0,mode:"pointsAt"}),this.getCommitTags(e,w,{mode:"pointsAt"})]),C=(0,t6.Sb)(y),A=(0,t6.Sb)(b);if(null!=C){for(let t of C)if(!t.startsWith("(no branch, rebasing")){i=(0,F.xB)(t,e,{refType:"branch",name:t,remote:!1});break}}if(null==i&&null!=A){for(let t of A)if(!t.startsWith("(no branch, rebasing")){i=(0,F.xB)(t,e,{refType:"tag",name:t});break}}return{type:"rebase",repoPath:e,mergeBase:t,HEAD:(0,F.xB)(v??f,e,{refType:"revision"}),onto:(0,F.xB)(w,e,{refType:"revision"}),current:i,incoming:(0,F.xB)(l,e,{refType:"branch",name:l,remote:!1}),steps:{current:{number:(0,t6.Sb)(p)??0,commit:null!=v?(0,F.xB)(v,e,{refType:"revision",message:(0,t6.Sb)(m)}):void 0},total:(0,t6.Sb)(g)??0}}}).call(this),this.useCaching&&this._rebaseStatusCache.set(e,t)),t}async getNextComparisonUris(e,t,i,r=0){if(!i)return;let s=this.getRelativePath(t,e);if((0,F.rD)(i))return{current:ty.YY.fromFile(s,e,i),next:ty.YY.fromFile(s,e,void 0)};let n=await this.getNextUri(e,t,i,r);if(null==n){let r=await this.getStatusForFile(e,t);return null!=r&&null!=r.indexStatus?{current:ty.YY.fromFile(s,e,i),next:ty.YY.fromFile(s,e,H.pw)}:{current:ty.YY.fromFile(s,e,i),next:ty.YY.fromFile(s,e,void 0)}}return{current:0===r?ty.YY.fromFile(s,e,i):await this.getNextUri(e,t,i,r-1),next:n}}async getNextUri(e,t,i,r=0){let s;if(!i||(0,F.rD)(i))return;i===H.Ii&&(i=void 0,s=["A"]);let n=this.getRelativePath(t,e),o=await this.git.log__file(e,n,i,{argsOrFormat:eg,fileMode:"simple",filters:s,limit:r+1,ordering:C.D.get("advanced.commitOrdering"),reverse:!0});if(null==o||0===o.length)return;let[a,l,h]=ef(o,r);if("D"===h){if(null==(o=await this.git.log__file(e,".",a,{argsOrFormat:eg,fileMode:"simple",filters:["R","C"],limit:1,ordering:C.D.get("advanced.commitOrdering")}))||0===o.length)return ty.YY.fromFile(l??n,e,a);let[t,i]=ew(o,l??n);return ty.YY.fromFile(i??l??n,e,t??a??H.Ii)}return ty.YY.fromFile(l??n,e,a)}async getOldestUnpushedRefForFile(e,t){let[i,r]=(0,M.uo)(t,e),s=await this.git.log__file(r,i,"@{u}..",{argsOrFormat:["-z","--format=%H"],fileMode:"none",ordering:C.D.get("advanced.commitOrdering"),renames:!0});if(!s)return;let n=s.lastIndexOf("\x00",s.length-2);return -1===n?void 0:s.slice(n+1,s.length-2)}async getPreviousComparisonUris(e,t,i,r=0){if(i===H.Ii)return;let s=this.getRelativePath(t,e);if(i){if((0,F.rD)(i)){let n=0===r?ty.YY.fromFile(s,e,i):await this.getPreviousUri(e,t,void 0,r-1);if(null==n||n.sha===H.Ii)return;return{current:n,previous:await this.getPreviousUri(e,t,void 0,r)}}}else{let n=await this.getStatusForFile(e,t);if(null!=n){if(null!=n.indexStatus)return(null==n.workingTreeStatus&&r++,0===r)?{current:ty.YY.fromFile(s,e,void 0),previous:ty.YY.fromFile(s,e,H.pw)}:{current:ty.YY.fromFile(s,e,H.pw),previous:await this.getPreviousUri(e,t,i,r-1)};if(null!=n.workingTreeStatus&&0===r)return{current:ty.YY.fromFile(s,e,void 0),previous:await this.getPreviousUri(e,t,void 0,r)}}else 0===r&&r++}let n=0===r?ty.YY.fromFile(s,e,i):await this.getPreviousUri(e,t,i,r-1);if(null!=n&&n.sha!==H.Ii)return{current:n,previous:await this.getPreviousUri(e,t,i,r)}}async getPreviousComparisonUrisForLine(e,t,i,r,s=0){let n;if(r===H.Ii)return;let o=this.getRelativePath(t,e);if(r){if((0,F.rD)(r)){let n=0===s?ty.YY.fromFile(o,e,r):await this.getPreviousUri(e,t,void 0,s-1,i);if(n.sha===H.Ii)return;return{current:n,previous:await this.getPreviousUri(e,t,void 0,s,i),line:i}}let a=new ty.YY(t,{repoPath:e,sha:r}),l=await this.getBlameForLine(a,i);if(null==l)return;r=l.commit.sha,o=l.commit.file?.path??l.commit.file?.originalPath??o,t=this.getAbsoluteUri(o,e),i=l.line.originalLine-1,0===s&&l.commit.file?.previousSha&&(n=ty.YY.fromFile(o,e,l.commit.file.previousSha))}else{let a=new ty.YY(t,e),l=await b.workspace.openTextDocument(t),h=l.isDirty?await this.getBlameForLineContents(a,i,l.getText()):await this.getBlameForLine(a,i);if(null==h)return;if(h.commit.isUncommitted){let r=await this.getStatusForFile(e,t);return null!=r&&null!=r.indexStatus?{current:ty.YY.fromFile(o,e,void 0),previous:ty.YY.fromFile(o,e,H.pw),line:i}:{current:ty.YY.fromFile(o,e,void 0),previous:await this.getPreviousUri(e,t,void 0,s,i),line:i}}r=h.commit.sha,o=h.commit.file?.path??h.commit.file?.originalPath??o,t=this.getAbsoluteUri(o,e),i=h.line.originalLine-1,0===s&&h.commit.file?.previousSha&&(n=ty.YY.fromFile(o,e,h.commit.file.previousSha))}let a=0===s?ty.YY.fromFile(o,e,r):await this.getPreviousUri(e,t,r,s-1,i);if(a.sha!==H.Ii)return{current:a,previous:n??await this.getPreviousUri(e,t,r,s,i),line:i}}async getPreviousUri(e,t,i,r=0,s){let n;if(i===H.Ii)return;let o=(0,eH.UH)();i===H.CL&&(i=void 0);let a=this.getRelativePath(t,e);try{n=await this.git.log__file(e,a,i,{argsOrFormat:eg,fileMode:"simple",limit:r+2,ordering:C.D.get("advanced.commitOrdering"),startLine:null!=s?s+1:void 0})}catch(s){let r=s?.toString()??"";if((null==i||(0,F.rD)(i))&&tn.invalidLineCount.test(r)){if(null==i){let i=await this.getStatusForFile(e,t);if(i?.indexStatus!=null)return ty.YY.fromFile(a,e,H.pw)}return i=await this.git.log__file_recent(e,a,{ordering:C.D.get("advanced.commitOrdering")}),ty.YY.fromFile(a,e,i??H.Ii)}throw eL.Yd.error(s,o),s}if(null==n||0===n.length)return;let[l,h]=ef(n,r,i);if(null==i||i!==l)return ty.YY.fromFile(h??a,e,l??H.Ii)}async getIncomingActivity(e,t){let i=(0,eH.UH)(),r=t?.limit??C.D.get("advanced.maxListItems")??0;try{let i=await this.git.reflog(e,{ordering:C.D.get("advanced.commitOrdering"),...t,limit:100*r});if(null==i)return;let s=function(e,t,i,r,s){var n=[];try{let o,a,l,h,c,u,d,p,g,m,f,w;let v=ek(n,(0,x.k)(`Git.parseRefLog(${t})`,{log:!1,logLevel:"debug"}));if(!e)return;let y=[],b=0,C=0;for(;w=eR.exec(e),null!=w;){if([,o,a,l,h,c,u]=w,C++,void 0!==f){if(o===f.sha&&(l!==m||!e$.test(f.selector)||e$.test(a)))continue;if(o!==f.sha&&(null!=d&&p===m&&g==f.sha&&e$.test(f.selector)?f.update(o,d):f.update(o),y.push(f),f=void 0,m=void 0,b++,0!==r&&b>=r))break}if("HEAD"===h){d=a,p=l,g=o;continue}i.includes(h)&&(f=new eP(t,` ${o}`.substr(1),` ${a}`.substr(1),new Date(l),` ${h}`.substr(1),null==c||0===c.length?void 0:c.substr(1),null==u||0===u.length?void 0:u.substr(1)),m=l)}return eR.lastIndex=0,v?.stop({suffix:` parsed ${y.length} records`}),{repoPath:t,records:y,count:b,total:C,limit:r,hasMore:0!==r&&b>=r||0!==s&&C>=s}}catch(e){var o=e,a=!0}finally{eS(n,o,a)}}(i,e,iC,r,100*r);return s?.hasMore&&(s.more=this.getReflogMoreFn(s,t)),s}catch(e){eL.Yd.error(e,i);return}}getReflogMoreFn(e,t){return async i=>{i=i??C.D.get("advanced.maxSearchItems")??0;let r=await this.getIncomingActivity(e.repoPath,{...t,limit:i,skip:e.total});if(null==r)return{...e,hasMore:!1,more:void 0};let s={repoPath:e.repoPath,records:[...e.records,...r.records],count:e.count+r.count,total:e.total+r.total,limit:(e.limit??0)+i,hasMore:r.hasMore};return s.hasMore&&(s.more=this.getReflogMoreFn(s,t)),s}}async getRemotes(e,t){if(null==e)return[];let i=(0,eH.UH)(),r=this.useCaching?this._remotesCache.get(e):void 0;null==r&&(r=(async function(){let t=(0,tX.v)(C.D.get("remotes",this.container.git.getRepository(e)?.folder?.uri??null));try{let i=await this.git.remote(e);return(0,ex.pW)(this.container,i,e,(0,tX.B)(this.container,t))}catch(t){return this._remotesCache.delete(e),eL.Yd.error(t,i),[]}}).call(this),this.useCaching&&this._remotesCache.set(e,r));let s=await r;return t?.sort&&tC.ss.sort(s),s}getRevisionContent(e,t,i){let[r,s]=(0,M.uo)(t,e);return this.git.show(s,r,i,{encoding:"buffer"})}async getStash(e){if(null==e)return;let t=this.useCaching?this._stashesCache.get(e):void 0;if(void 0===t){let i=function(e){let t="%x00",i=[];for(let r in e)i.push(r),t+=`%x00${e[r]}`;return{arguments:["-z",`--format=${t}`,"--name-status"],parse:function*(e){let t,r,s;for(let n of(0,L.UM)(e,"\x00\x00\x00")){let e;t={},r=[],(s=(0,L.UM)(n,"\x00")).next(),s.next();let o=0;for(;!(e=s.next()).done;)if(o<i.length)t[i[o++]]=e.value;else{let t={status:e.value.trim(),path:void 0};e=s.next(),t.path=e.value,(t.status.startsWith("R")||t.status.startsWith("C"))&&(e=s.next(),t.originalPath=e.value),r.push(t)}t.files=r,yield t}}}}({sha:"%H",date:"%at",committedDate:"%ct",parents:"%P",stashName:"%gd",summary:"%gs"}),r=await this.git.stash__list(e,{args:i.arguments,similarityThreshold:C.D.get("advanced.similarityThreshold")}),s=new Map;for(let t of i.parse(r)){let i,r,n;let o=ib.exec(t.summary);o?.groups!=null?(i=o.groups.onref,n=0===(r=o.groups.summary.trim()).length?"WIP":o.groups.wip?`WIP: ${r}`:r):n=t.summary.trim(),s.set(t.sha,new N.aM(this.container,e,t.sha,new N._j("You",void 0,new Date(1e3*t.date)),new N._j("You",void 0,new Date(1e3*t.committedDate)),n.split("\n",1)[0]??"",t.parents.split(" "),n,t.files?.map(t=>new G.K8(e,t.path,t.status,t.originalPath))??[],void 0,[],void 0,t.stashName,i))}t={repoPath:e,commits:s},this.useCaching&&this._stashesCache.set(e,t??null)}return t??void 0}async getStatusForFile(e,t){let i=await this.git.isAtLeastVersion("2.11")?2:1,[r,s]=(0,M.uo)(t,e),n=tN(await this.git.status__file(s,r,i,{similarityThreshold:C.D.get("advanced.similarityThreshold")}),s,i);return n?.files?.[0]}async getStatusForFiles(e,t){let i=await this.git.isAtLeastVersion("2.11")?2:1,[r,s]=(0,M.uo)(t,e),n=tN(await this.git.status__file(s,r,i,{similarityThreshold:C.D.get("advanced.similarityThreshold")}),s,i);return n?.files??[]}async getStatusForRepo(e){if(null==e)return;let t=await this.git.isAtLeastVersion("2.11")?2:1,i=tN(await this.git.status(e,t,{similarityThreshold:C.D.get("advanced.similarityThreshold")}),e,t);if(i?.detached){let t=await this.getRebaseStatus(e);if(null!=t)return new tD.Hk(e,t.incoming.name,i.sha,i.files,i.state,i.upstream,!0)}return i}async getTags(e,t){if(null==e)return ig;let i=this.useCaching?this._tagsCache.get(e):void 0;null==i&&(i=(async function(){try{let t=await this.git.tag(e);return{values:function(e,t){var i=[];try{let r,s,n,o,a,l,h;let c=eE(i,(0,x.k)(`Git.parseTags(${t})`,{log:!1,logLevel:"debug"})),u=[];if(!e)return u;for(;h=eU.exec(e),null!=h;)[,r,s,n,o,a,l]=h,r=r.substr(10),u.push(new eT.gE(t,r,` ${s||n}`.substr(1),` ${l}`.substr(1),o?new Date(o):void 0,null==a||0===a.length?void 0:new Date(a)));return c?.stop({suffix:` parsed ${u.length} tags`}),u}catch(e){var r=e,s=!0}finally{eB(i,r,s)}}(t,e)}}catch(t){return this._tagsCache.delete(e),ig}}).call(this),this.useCaching&&this._tagsCache.set(e,i));let r=await i;return t?.filter!=null&&(r={...r,values:r.values.filter(t.filter)}),t?.sort&&(0,eT.Pj)(r.values,"boolean"==typeof t.sort?void 0:t.sort),r}async getTreeEntryForRevision(e,t,i){if(null==e||!t)return;let[r,s]=(0,M.uo)(t,e);if((0,F.rD)(i)){let[t]=function(e){var t=[];try{let i,r,s,n,o;let a=tq(t,(0,x.k)("Git.parseLsFiles",{log:!1,logLevel:"debug"})),l=[];if(!e)return l;for(;o=tV.exec(e),null!=o;)[,r,s,n,i]=o,l.push({path:null==i||0===i.length?"":` ${i}`.substr(1),object:null==s||0===s.length?"":` ${s}`.substr(1),mode:null==r||0===r.length?"":` ${r}`.substr(1),stage:parseInt(n,10)});return a?.stop({suffix:` parsed ${l.length} files`}),l}catch(e){var i=e,r=!0}finally{tY(t,i,r)}}(await this.git.ls_files(s,r,{ref:i}));if(null==t)return;return{commitSha:i,path:r,size:await this.git.cat_file__size(e,t.object),type:"blob"}}return tQ(await this.git.ls_tree(s,i,r))[0]}async getTreeForRevision(e,t){return null==e?[]:tQ(await this.git.ls_tree(e,t))}async hasBranchOrTag(e,t){let[{values:i},{values:r}]=await Promise.all([this.getBranches(e,{filter:t?.filter?.branches,sort:!1}),this.getTags(e,{filter:t?.filter?.tags,sort:!1})]);return 0!==i.length||0!==r.length}async hasCommitBeenPushed(e,t){return null!=e&&this.git.merge_base__is_ancestor(e,t,"@{u}")}hasUnsafeRepositories(){return 0!==this.unsafePaths.size}isTrackable(e){return this.supportedSchemes.has(e.scheme)}async isTracked(e){return await this.isTrackedWithDetails(e)!=null}async isTrackedWithDetails(e,t,i){let r,s;if("string"==typeof e){if(i===H.Ii)return;s=this.container.git.getRepository(b.Uri.file(e)),t=t||s?.path,[r,t]=(0,M.uo)(e,t)}else{if(!this.isTrackable(e)||e instanceof ty.YY&&(i=e.sha)===H.Ii)return;s=this.container.git.getRepository(e),t=t||s?.path,[r,t]=(0,M.uo)(e,t)}let n=t?`${t}/${r}`:r,o=n;o=`${i??""}:${o.startsWith("/")?o:`/${o}`}`;let a=this._trackedPaths.get(o);return null!=a||(a=this.isTrackedCore(n,r,t??"",i,s),this._trackedPaths.set(o,a),a=await a,this._trackedPaths.set(o,a)),a}async isTrackedCore(e,t,i,r,s){if(r===H.Ii)return;let n=(0,eH.UH)();try{for(;;){i||([t,i]=(0,M.uo)(e,"",!0));let n=!!await this.git.ls_files(i,t);if(n)return[t,i];if(i){let[i,r]=(0,M.uo)(e,"",!0);if(i!==t&&(n=!!await this.git.ls_files(r,i))){if(s=await this.container.git.getOrOpenRepository(b.Uri.file(e),{detectNested:!0}),null!=s)return(0,M.uo)(e,s.path);return[i,r]}}if(n||!r||(0,F.l3)(r)||(n=!!await this.git.ls_files(i,t,{ref:r}))||(n=!!await this.git.ls_files(i,t,{ref:`${r}^`})),!n){if(null!=s){let r=t.indexOf("/");if(r<0||r===t.length-1)return;let n=await this.container.git.getOrOpenRepository(b.Uri.file(e),{detectNested:!0});if(null!=n&&n!==s){[t,i]=(0,M.uo)(e,s.path),s=void 0;continue}}return}return[t,i]}}catch(e){eL.Yd.error(e,n);return}}async getDiffTool(e){return await this.git.config__get("diff.guitool",e,{local:!0})??this.git.config__get("diff.tool",e,{local:!0})}async openDiffTool(e,t,i){let r=(0,eH.UH)(),[s,n]=(0,M.uo)(t,e);try{let e=i?.tool;if(!e){let t=(0,eH.UH)();if(e=C.D.get("advanced.externalDiffTool")||await this.getDiffTool(n),null==e)throw Error("No diff tool found");eL.Yd.log(t,`Using tool=${e}`)}await this.git.difftool(n,s,e,i)}catch(t){let e=t?.toString()??"";if("No diff tool found"===e||/Unknown .+? tool/.test(e)){let e="View Git Docs";await b.window.showWarningMessage("Unable to open changes because the specified diff tool cannot be found or no Git diff tool is configured",e)===e&&b.env.openExternal(b.Uri.parse("https://git-scm.com/docs/git-config#Documentation/git-config.txt-difftool"));return}eL.Yd.error(t,r),(0,t1.W8)("Unable to open compare")}}async openDirectoryCompare(e,t,i,r){let s=(0,eH.UH)();try{if(!r){let t=(0,eH.UH)();if(r=C.D.get("advanced.externalDirectoryDiffTool")||await this.getDiffTool(e),null==r)throw Error("No diff tool found");eL.Yd.log(t,`Using tool=${r}`)}await this.git.difftool__dir_diff(e,r,t,i)}catch(t){let e=t?.toString()??"";if("No diff tool found"===e||/Unknown .+? tool/.test(e)){let e="View Git Docs";await b.window.showWarningMessage("Unable to open directory compare because the specified diff tool cannot be found or no Git diff tool is configured",e)===e&&b.env.openExternal(b.Uri.parse("https://git-scm.com/docs/git-config#Documentation/git-config.txt-difftool"));return}eL.Yd.error(t,s),(0,t1.W8)("Unable to open directory compare")}}async resolveReference(e,t,i,r){let s;if(!t||t===H.Ii||null==i&&(0,F.D3)(t)||null!=i&&(0,F.l3)(t))return t;if(null==i)return!r?.force&&!(0,F.yo)(t)||t.endsWith("^3")?t:await this.git.rev_parse__verify(e,t)??t;let n=this.getRelativePath(i,e);r?.timeout!=null&&(s=new t2.Ac(r.timeout));let[o,a]=await Promise.allSettled([this.git.rev_parse__verify(e,t,n),this.git.log__file_recent(e,n,{ref:t,cancellation:s?.token})]);if(null==(0,t6.Sb)(o))return H.Ii;let l=(0,t6.Sb)(a),h=s?.token.isCancellationRequested;return s?.dispose(),h?t:l??t}async richSearchCommits(e,t,i){t={matchAll:!1,matchCase:!1,matchRegex:!0,...t};try{let r,s;let n=i?.limit??C.D.get("advanced.maxSearchItems")??0,o=C.D.get("advanced.similarityThreshold"),a=await this.getCurrentUser(e),{args:l,files:h,shas:c}=(0,t0.vx)(t,a);if(l.push(`-M${null==o?"":`${o}%`}`,"--"),0!==h.length&&l.push(...h),null==c){let t=await this.getStash(e);if(t?.commits.size){for(let e of(r=new Map,t.commits.values()))for(let t of(r.set(e.sha,e),e.parents))r.set(t,e);s=(0,eM.v_)((0,eM.UI)(t.commits.values(),e=>e.sha.substring(0,9)),"\n")}}let u=await this.git.log__search(e,c?.size?void 0:l,{ordering:C.D.get("advanced.commitOrdering"),...i,limit:n,shas:c,stdin:s}),d=em(this.container,u,el.Log,e,void 0,void 0,a,n,!1,void 0,r);if(null!=d){let r=function(e){return async s=>{s=s??C.D.get("advanced.maxSearchItems")??0;let n=await this.richSearchCommits(e.repoPath,t,{...i,limit:s,skip:e.count});if(null==n)return{...e,hasMore:!1,more:void 0};let o=new Map([...e.commits,...n.commits]),a={repoPath:e.repoPath,commits:o,sha:e.sha,range:e.range,count:o.size,limit:(e.limit??0)+s,hasMore:n.hasMore,query:r=>this.richSearchCommits(e.repoPath,t,{...i,limit:r})};return a.hasMore&&(a.more=r.call(this,a)),a}};d.query=r=>this.richSearchCommits(e,t,{...i,limit:r}),d.hasMore&&(d.more=r.call(this,d))}return d}catch(e){return}}async searchCommits(e,t,i){t={matchAll:!1,matchCase:!1,matchRegex:!0,...t};let r=(0,t0.FL)(t);try{let n;let o=(null==h&&(h=eh({sha:"%H",authorDate:"%at",committerDate:"%ct"})),h),a=t.query.includes("@me")?await this.getCurrentUser(e):void 0,{args:l,files:c,shas:u}=(0,t0.vx)(t,a);if(u?.size){let s=await this.git.show2(e,{cancellation:i?.cancellation},"-s",...o.arguments,...u.values(),...l,"--"),n=0,a=new Map((0,eM.UI)(o.parse(s),e=>[e.sha,{i:n++,date:1e3*Number(i?.ordering==="author-date"?e.authorDate:e.committerDate)}]));return{repoPath:e,query:t,comparisonKey:r,results:a}}let d=i?.limit??C.D.get("advanced.maxSearchItems")??0,p=C.D.get("advanced.similarityThreshold"),g=await this.getStash(e);g?.commits.size&&(n=(0,eM.v_)((0,eM.UI)(g.commits.values(),e=>e.sha.substring(0,9)),"\n"));let m=[...o.arguments,`-M${null==p?"":`${p}%`}`,"--use-mailmap"],f=new Map,w=0;async function s(a,h){let u;if(i?.cancellation?.isCancellationRequested)return{repoPath:e,query:t,comparisonKey:r,results:f};try{u=await this.git.log(e,{cancellation:i?.cancellation,configs:["-C",e,...te],errors:_.Throw,stdin:n},...m,...l,...i?.ordering?[`--${i.ordering}-order`]:id,...a?[`-n${a+1}`]:id,...h?.skip?[`--skip=${h.skip}`]:id,"--",...c)}catch(s){if(s instanceof e1||i?.cancellation?.isCancellationRequested)return{repoPath:e,query:t,comparisonKey:r,results:f};throw new I.l0(s)}if(i?.cancellation?.isCancellationRequested)return{repoPath:e,query:t,comparisonKey:r,results:f};let d=w;for(let e of o.parse(u)){if(f.has(e.sha)){a--;continue}f.set(e.sha,{i:w++,date:1e3*Number(i?.ordering==="author-date"?e.authorDate:e.committerDate)})}d=w-d;let p=eM.Z$(f)?.[0];return h=null!=p?{sha:p,skip:w}:void 0,{repoPath:e,query:t,comparisonKey:r,results:f,paging:0!==a&&d>a?{limit:a,hasMore:!0}:void 0,more:async e=>s.call(this,e,h)}}return s.call(this,d)}catch(e){if(e instanceof I.l0)throw e;throw new I.l0(e)}}async runGitCommandViaTerminal(e,t,i,r){await this.git.runGitCommandViaTerminal(e,t,i,r)}validateBranchOrTagName(e,t){return this.git.check_ref_format(t,e)}async validateReference(e,t){return null!=t&&0!==t.length&&(!!(t===H.Ii||(0,F.l3)(t))||await this.git.rev_parse__verify(e,t)!=null)}async stageFile(e,t){await this.git.add(e,"string"==typeof t?t:(0,M.uo)(t,e)[0])}async stageDirectory(e,t){await this.git.add(e,"string"==typeof t?t:(0,M.uo)(t,e)[0])}async unstageFile(e,t){await this.git.reset(e,"string"==typeof t?t:(0,M.uo)(t,e)[0])}async unstageDirectory(e,t){await this.git.reset(e,"string"==typeof t?t:(0,M.uo)(t,e)[0])}async stashApply(e,t,i){try{await this.git.stash__apply(e,t,!!i?.deleteAfter)}catch(e){if(e instanceof Error){let t=e.message??"";if(t.includes("Your local changes to the following files would be overwritten by merge"))throw new I.ef(I.bk.WorkingChanges,e);if(t.includes("Auto-merging")&&t.includes("CONFLICT")||e instanceof e0&&(e.stdout.includes("Auto-merging")&&e.stdout.includes("CONFLICT")||e.stdout.includes("needs merge"))){b.window.showInformationMessage("Stash applied with conflicts");return}throw new I.ef(`Unable to apply stash \u2014 ${t.trim().replace(/\n+?/g,"; ")}`,e)}throw new I.ef(`Unable to apply stash \u2014 ${String(e)}`,e)}}async stashDelete(e,t,i){await this.git.stash__delete(e,t,i),this.container.events.fire("git:cache:reset",{repoPath:e,caches:["stashes"]})}async stashRename(e,t,i,r,s){await this.git.stash__rename(e,t,i,r,s),this.container.events.fire("git:cache:reset",{repoPath:e,caches:["stashes"]})}async stashSave(e,t,i,r){if(null==i){await this.git.stash__push(e,t,r),this.container.events.fire("git:cache:reset",{repoPath:e,caches:["stashes","status"]});return}await this.ensureGitVersion("2.13.2","Stashing individual files"," Please retry by stashing everything or install a more recent version of Git and try again.");let s=i.map(t=>`./${(0,M.uo)(t,e)[0]}`),n="2.30.0",o=await this.git.isAtLeastVersion(n);!o&&(0,W.IP)(s)>3e4&&await this.ensureGitVersion(n,`Stashing so many files (${s.length}) at once`," Please retry by stashing fewer files or install a more recent version of Git and try again."),await this.git.stash__push(e,t,{...r,pathspecs:s,stdin:o}),this.container.events.fire("git:cache:reset",{repoPath:e,caches:["stashes"]})}async createWorktree(e,t,i){let r=(0,eH.UH)();try{await this.git.worktree__add(e,t,i),i?.createBranch&&this.container.events.fire("git:cache:reset",{repoPath:e,caches:["branches"]})}catch(t){eL.Yd.error(t,r);let e=String(t);if(tn.alreadyCheckedOut.test(e))throw new I.P6(I.hK.AlreadyCheckedOut,t);if(tn.alreadyExists.test(e))throw new I.P6(I.hK.AlreadyExists,t);throw new I.P6(void 0,t)}}async getWorktrees(e){return await this.ensureGitVersion("2.7.6","Displaying worktrees"," Please install a more recent version of Git and try again."),function(e,t){var i=[];try{let r,s,n,o,a,l,h;let c=tJ(i,(0,x.k)(`Git.parseWorktrees(${t})`,{log:!1,logLevel:"debug"})),u=[];if(!e)return u;null!=t&&(t=(0,M.AH)(t));let d=!0;for(r of(0,L.UM)(e)){if(s=r.indexOf(" "),-1===s?(n=r,o=""):(n=r.substring(0,s),o=r.substring(s+1)),0===n.length&&null!=h){u.push(new tz.e(d,h.bare?"bare":h.detached?"detached":"branch",t,b.Uri.file(h.path),h.locked??!1,h.prunable??!1,h.sha,h.branch)),h=void 0,d=!1;continue}switch(null==h&&(h={}),n){case"worktree":h.path=o;break;case"bare":h.bare=!0;break;case"HEAD":h.sha=o;break;case"branch":h.branch=o.substr(11);break;case"detached":h.detached=!0;break;case"locked":[,a]=o.split(" ",2),h.locked=a?.trim()||!0;break;case"prunable":[,l]=o.split(" ",2),h.prunable=l?.trim()||!0}}return c?.stop({suffix:` parsed ${u.length} worktrees`}),u}catch(e){var r=e,s=!0}finally{tZ(i,r,s)}}(await this.git.worktree__list(e),e)}async getWorktreesDefaultUri(e){let t=C.D.get("worktrees.defaultLocation");if(null==t)return;t.startsWith("~")&&(t=(0,M.RQ)((0,tu.homedir)(),t.slice(1)));let i=this.container.git.getRepository(e)?.folder;return t=(0,L.sX)(t,{userHome:(0,tu.homedir)(),workspaceFolder:i?.uri.fsPath,workspaceFolderBasename:i?.name}),this.getAbsoluteUri(t,e)}async deleteWorktree(e,t,i){let r=(0,eH.UH)();await this.ensureGitVersion("2.17.0","Deleting worktrees"," Please install a more recent version of Git and try again.");try{await this.git.worktree__remove(e,t,i)}catch(t){eL.Yd.error(t,r);let e=String(t);if(tn.mainWorkingTree.test(e))throw new I.Nk(I.xe.MainWorkingTree,t);if(tn.uncommittedChanges.test(e))throw new I.Nk(I.xe.HasChanges,t);throw new I.Nk(void 0,t)}}_scmGitApi;async getScmGitApi(){return this._scmGitApi??(this._scmGitApi=this.getScmGitApiCore())}async getScmGitApiCore(){try{let e=b.extensions.getExtension("vscode.git");if(null==e)return;let t=e.isActive?e.exports:await e.activate();return t?.getAPI(1)}catch{return}}getScmGitUri(e,t){let i=this.fromCanonicalMap.get(t),r=this.getAbsoluteUri(e,i??t);return b.Uri.from({scheme:$.sN.Git,path:r.path,query:JSON.stringify({path:r.fsPath,ref:"~"})})}async getOpenScmRepositories(){let e=(0,eH.UH)();try{let e=await this.getScmGitApi();return e?.repositories??[]}catch(t){return eL.Yd.error(t,e),[]}}async getScmRepository(e){let t=(0,eH.UH)();try{let t=await this.getScmGitApi();return t?.getRepository(b.Uri.file(e))??void 0}catch(e){eL.Yd.error(e,t);return}}async getOrOpenScmRepository(e){let t=(0,eH.UH)();try{let t=e instanceof b.Uri?e:b.Uri.file(e),i=await this.getScmGitApi(),r=i?.getRepository(t)??void 0;return null==r&&i?.openRepository!=null&&(r=await i?.openRepository?.(t)??void 0),r}catch(e){eL.Yd.error(e,t);return}}async ensureGitVersion(e,t,i){if(!await this.git.isAtLeastVersion(e))throw Error(`${t} requires a newer version of Git (>= ${e}) than is currently installed (${await this.git.version()}).${i}`)}}async function iP(e){let t=C.D.getAny("files.encoding",e);return null==t||"utf8"===t?"utf8":(0,(await i.e(429).then(i.t.bind(i,4914,23))).encodingExists)(t)?t:"utf8"}iu([(0,eW.cM)()],iA.prototype,"findGit",1),iu([(0,eW.fF)({exit:!0})],iA.prototype,"discoverRepositories",1),iu([(0,eW.fF)({exit:!0})],iA.prototype,"openRepository",1),iu([(0,eW.fF)({singleLine:!0})],iA.prototype,"openRepositoryInitWatcher",1),iu([(0,eW.fF)({exit:e=>`returned ${e[0]}`})],iA.prototype,"visibility",1),iu([(0,eW.fF)({args:{0:e=>e.url},exit:e=>`returned ${e[0]}`})],iA.prototype,"getRemoteVisibility",1),iu([(0,eW.cM)({args:!1,singleLine:!0,prefix:(e,t)=>`${e.prefix}(${(t instanceof b.Uri?t:t.uri).fsPath})`,exit:e=>`returned ${e.length} repositories ${0!==e.length?eL.Yd.toLoggable(e):""}`})],iA.prototype,"repositorySearch",1),iu([(0,eW.fF)({args:{2:!1,3:!1},exit:!0})],iA.prototype,"repositorySearchCore",1),iu([(0,eW.cM)({exit:!0})],iA.prototype,"getBestRevisionUri",1),iu([(0,eW.cM)({exit:!0})],iA.prototype,"getWorkingUri",1),iu([(0,eW.cM)()],iA.prototype,"addRemote",1),iu([(0,eW.cM)()],iA.prototype,"pruneRemote",1),iu([(0,eW.cM)()],iA.prototype,"removeRemote",1),iu([(0,eW.cM)()],iA.prototype,"applyChangesToWorkingFile",1),iu([(0,eW.cM)()],iA.prototype,"applyUnreachableCommitForPatch",1),iu([(0,eW.cM)()],iA.prototype,"checkout",1),iu([(0,eW.cM)()],iA.prototype,"clone",1),iu([(0,eW.cM)({args:{1:"<contents>",3:"<message>"}})],iA.prototype,"createUnreachableCommitForPatch",1),iu([(0,eW.cM)({singleLine:!0})],iA.prototype,"resetCache",1),iu([(0,eW.cM)({singleLine:!0})],iA.prototype,"resetCaches",1),iu([(0,eW.cM)({args:{1:e=>e.length}})],iA.prototype,"excludeIgnoredUris",1),iu([(0,t4.H)(),(0,eW.cM)()],iA.prototype,"fetch",1),iu([(0,t4.H)(),(0,eW.cM)()],iA.prototype,"push",1),iu([(0,t4.H)(),(0,eW.cM)()],iA.prototype,"pull",1),iu([(0,t4.H)(),(0,eW.fF)()],iA.prototype,"findRepositoryUri",1),iu([(0,eW.cM)({args:{1:e=>e.join(",")}})],iA.prototype,"getAheadBehindCommitCount",1),iu([(0,t4.H)((e,t)=>`${e.toString()}|${t?.isDirty}`),(0,eW.cM)({args:{1:e=>e?.isDirty}})],iA.prototype,"getBlame",1),iu([(0,eW.cM)({args:{1:"<contents>"}})],iA.prototype,"getBlameContents",1),iu([(0,t4.H)((e,t,i,r)=>`${e.toString()}|${t}|${i?.isDirty}|${r?.forceSingleLine}`),(0,eW.cM)({args:{2:e=>e?.isDirty}})],iA.prototype,"getBlameForLine",1),iu([(0,eW.cM)({args:{2:"<contents>"}})],iA.prototype,"getBlameForLineContents",1),iu([(0,eW.cM)()],iA.prototype,"getBlameForRange",1),iu([(0,eW.cM)({args:{2:"<contents>"}})],iA.prototype,"getBlameForRangeContents",1),iu([(0,eW.cM)({args:{0:"<blame>"}})],iA.prototype,"getBlameRange",1),iu([(0,t4.H)(),(0,eW.cM)()],iA.prototype,"getBranch",1),iu([(0,eW.cM)({args:{1:!1}})],iA.prototype,"getBranches",1),iu([(0,eW.cM)()],iA.prototype,"getChangedFilesCount",1),iu([(0,eW.cM)()],iA.prototype,"getCommit",1),iu([(0,eW.cM)()],iA.prototype,"getCommitBranches",1),iu([(0,eW.cM)()],iA.prototype,"getCommitCount",1),iu([(0,eW.cM)()],iA.prototype,"getCommitForFile",1),iu([(0,eW.cM)()],iA.prototype,"getCommitsForGraph",1),iu([(0,eW.cM)()],iA.prototype,"getCommitTags",1),iu([(0,eW.cM)()],iA.prototype,"getContributors",1),iu([(0,t4.H)(),(0,eW.cM)()],iA.prototype,"getCurrentUser",1),iu([(0,eW.cM)()],iA.prototype,"getDefaultBranchName",1),iu([(0,eW.cM)()],iA.prototype,"getDiff",1),iu([(0,eW.cM)({args:{1:!1}})],iA.prototype,"getDiffFiles",1),iu([(0,eW.cM)()],iA.prototype,"getDiffForFile",1),iu([(0,eW.cM)({args:{1:"<contents>"}})],iA.prototype,"getDiffForFileContents",1),iu([(0,eW.cM)()],iA.prototype,"getDiffForLine",1),iu([(0,eW.cM)()],iA.prototype,"getDiffStatus",1),iu([(0,eW.cM)()],iA.prototype,"getFileStatusForCommit",1),iu([(0,eW.cM)()],iA.prototype,"getFirstCommitSha",1),iu([(0,t4.H)(),(0,eW.fF)()],iA.prototype,"getGitDir",1),iu([(0,eW.fF)()],iA.prototype,"getLastFetchedTimestamp",1),iu([(0,eW.cM)()],iA.prototype,"getLog",1),iu([(0,eW.cM)()],iA.prototype,"getLogRefsOnly",1),iu([(0,eW.cM)()],iA.prototype,"getLogForFile",1),iu([(0,eW.cM)()],iA.prototype,"getMergeBase",1),iu([(0,eW.cM)()],iA.prototype,"getMergeStatus",1),iu([(0,eW.cM)()],iA.prototype,"getRebaseStatus",1),iu([(0,eW.cM)()],iA.prototype,"getNextComparisonUris",1),iu([(0,eW.cM)()],iA.prototype,"getNextUri",1),iu([(0,eW.cM)()],iA.prototype,"getOldestUnpushedRefForFile",1),iu([(0,eW.cM)()],iA.prototype,"getPreviousComparisonUris",1),iu([(0,eW.cM)()],iA.prototype,"getPreviousComparisonUrisForLine",1),iu([(0,eW.cM)()],iA.prototype,"getPreviousUri",1),iu([(0,eW.cM)()],iA.prototype,"getIncomingActivity",1),iu([(0,eW.cM)({args:{1:!1}})],iA.prototype,"getRemotes",1),iu([(0,t4.H)(),(0,eW.cM)()],iA.prototype,"getRevisionContent",1),iu([(0,t4.H)(),(0,eW.cM)()],iA.prototype,"getStash",1),iu([(0,eW.cM)()],iA.prototype,"getStatusForFile",1),iu([(0,eW.cM)()],iA.prototype,"getStatusForFiles",1),iu([(0,eW.cM)()],iA.prototype,"getStatusForRepo",1),iu([(0,eW.cM)({args:{1:!1}})],iA.prototype,"getTags",1),iu([(0,eW.cM)()],iA.prototype,"getTreeEntryForRevision",1),iu([(0,eW.cM)()],iA.prototype,"getTreeForRevision",1),iu([(0,eW.cM)({args:{1:!1}})],iA.prototype,"hasBranchOrTag",1),iu([(0,eW.cM)()],iA.prototype,"hasCommitBeenPushed",1),iu([(0,eW.cM)({exit:e=>`returned ${null!=e?`[${e[0]},[${e[1]}]`:"false"}`})],iA.prototype,"isTrackedWithDetails",1),iu([(0,eW.fF)()],iA.prototype,"isTrackedCore",1),iu([(0,eW.cM)()],iA.prototype,"getDiffTool",1),iu([(0,eW.cM)()],iA.prototype,"openDiffTool",1),iu([(0,eW.cM)()],iA.prototype,"openDirectoryCompare",1),iu([(0,eW.cM)()],iA.prototype,"resolveReference",1),iu([(0,eW.cM)({args:{1:e=>`[${e.matchAll?"A":""}${e.matchCase?"C":""}${e.matchRegex?"R":""}]: ${e.query.length>500?`${e.query.substring(0,500)}...`:e.query}`}})],iA.prototype,"richSearchCommits",1),iu([(0,eW.cM)()],iA.prototype,"searchCommits",1),iu([(0,eW.cM)({args:{2:!1}})],iA.prototype,"runGitCommandViaTerminal",1),iu([(0,eW.cM)()],iA.prototype,"validateBranchOrTagName",1),iu([(0,eW.cM)()],iA.prototype,"validateReference",1),iu([(0,eW.cM)()],iA.prototype,"stageFile",1),iu([(0,eW.cM)()],iA.prototype,"stageDirectory",1),iu([(0,eW.cM)()],iA.prototype,"unstageFile",1),iu([(0,eW.cM)()],iA.prototype,"unstageDirectory",1),iu([(0,eW.cM)()],iA.prototype,"stashApply",1),iu([(0,eW.cM)()],iA.prototype,"stashDelete",1),iu([(0,eW.cM)()],iA.prototype,"stashRename",1),iu([(0,eW.cM)({args:{2:e=>e?.length}})],iA.prototype,"stashSave",1),iu([(0,eW.cM)()],iA.prototype,"createWorktree",1),iu([(0,t4.H)(),(0,eW.cM)()],iA.prototype,"getWorktrees",1),iu([(0,eW.cM)()],iA.prototype,"getWorktreesDefaultUri",1),iu([(0,eW.cM)()],iA.prototype,"deleteWorktree",1),iu([(0,eW.cM)()],iA.prototype,"getScmGitApiCore",1),iu([(0,eW.cM)()],iA.prototype,"getOpenScmRepositories",1),iu([(0,eW.cM)()],iA.prototype,"getScmRepository",1),iu([(0,eW.cM)()],iA.prototype,"getOrOpenScmRepository",1);class iD extends th{constructor(e){super(),this.localGit=e}async git(e,...t){if(e.local)return e.cwd="",this.localGit.git(e,...t);let i=await hO.instance.vsls.guest();if(null==i)throw Error("No guest");return i.git(e,...t)}async gitSpawn(e,...t){throw Error("Git spawn not supported in Live Share")}async logStreamTo(e,t,i,r,...s){let n=await hO.instance.vsls.guest();if(null==n)throw Error("No guest");return n.gitLogStreamTo(e,t,i,r,...s)}}class ik extends iA{descriptor={id:"vsls",name:"Live Share",virtual:!1};supportedSchemes=new Set([$.sN.Vsls,$.sN.VslsScc]);async discoverRepositories(e){if(!this.supportedSchemes.has(e.scheme))return[];let t=(0,eH.UH)();try{let t=await this.container.vsls.guest(),i=await t?.getRepositoriesForUri(e);if(null==i||0===i.length)return[];return i.flatMap(e=>this.openRepository(void 0,b.Uri.parse(e.folderUri,!0),e.root,void 0,e.closed))}catch(e){return eL.Yd.error(e,t),[]}}canHandlePathOrUri(e,t){let i=super.canHandlePathOrUri(e,t);return null!=i?`${e}:${i}`:void 0}getAbsoluteUri(e,t){e=(0,M.IC)(e);let i=("string"!=typeof t?t.scheme:void 0)??("string"!=typeof e?e.scheme:void 0)??$.sN.Vsls;return super.getAbsoluteUri(e,t).with({scheme:i})}async findRepositoryUri(e,t){let i;let r=(0,eH.UH)();try{let r;if(null==t&&(t=((await b.workspace.fs.stat(e)).type&b.FileType.Directory)===b.FileType.Directory),t||(e=b.Uri.joinPath(e,"..")),[r,i]=await this.git.rev_parse__show_toplevel(e.fsPath),r?this.unsafePaths.delete(e.fsPath):this.unsafePaths.add(e.fsPath),!i)return;return i?b.Uri.parse(i,!0):void 0}catch(e){eL.Yd.error(e,r);return}}getLastFetchedTimestamp(e){return Promise.resolve(void 0)}}async function iS(){let e;let t=i$();for(;;){try{e=await b.workspace.fs.stat(t)}catch{break}if(new Date().getTime()-e.ctime>3e4)break;await (0,t6.Dc)(100)}try{await b.workspace.fs.writeFile(t,new Uint8Array(0))}catch(e){return eL.Yd.error(e,"acquireSharedFolderWriteLock"),!1}return!0}async function iR(){try{let e=i$();await b.workspace.fs.delete(e)}catch(e){return eL.Yd.error(e,"releaseSharedFolderWriteLock"),!1}return!0}function i$(){return b.Uri.file(k().join(td().homedir(),".gk","lockfile"))}function i_(){return b.Uri.file(k().join(td().homedir(),".gk","repoMapping.json"))}function iI(){return b.Uri.file(k().join(td().homedir(),".gk","cloudWorkspaces.json"))}class iF{constructor(e){this.container=e}dispose(){}_localRepoDataMap=void 0;async ensureLocalRepoDataMap(){null==this._localRepoDataMap&&await this.loadLocalRepoDataMap()}async getLocalRepoDataMap(){return await this.ensureLocalRepoDataMap(),this._localRepoDataMap??{}}async getLocalRepoPaths(e){let t=[];if(null!=e.remoteUrl){let i=await this._getLocalRepoPaths(e.remoteUrl);null!=i&&t.push(...i)}if(null!=e.repoInfo){let{provider:i,owner:r,repoName:s}=e.repoInfo;if(null!=i&&null!=r&&null!=s){let e=await this._getLocalRepoPaths(`${i}/${r}/${s}`);null!=e&&t.push(...e)}}return t}async _getLocalRepoPaths(e){let t=await this.getLocalRepoDataMap();return t[e]?.paths}async loadLocalRepoDataMap(){let e=i_();try{let t=await b.workspace.fs.readFile(e);this._localRepoDataMap=JSON.parse(t.toString())??{}}catch(e){eL.Yd.error(e,"loadLocalRepoDataMap")}}async writeLocalRepoPath(e,t){if(null!=e.remoteUrl&&await this._writeLocalRepoPath(e.remoteUrl,t),e.repoInfo?.provider!=null&&e.repoInfo?.owner!=null&&e.repoInfo?.repoName!=null){let{provider:i,owner:r,repoName:s}=e.repoInfo,n=`${i}/${r}/${s}`;await this._writeLocalRepoPath(n,t)}}async _writeLocalRepoPath(e,t){if(!await iS())return;await this.loadLocalRepoDataMap(),null==this._localRepoDataMap&&(this._localRepoDataMap={}),null==this._localRepoDataMap[e]?this._localRepoDataMap[e]={paths:[t]}:null==this._localRepoDataMap[e].paths?this._localRepoDataMap[e].paths=[t]:this._localRepoDataMap[e].paths.includes(t)||this._localRepoDataMap[e].paths.push(t);let i=i_(),r=new Uint8Array(Buffer.from(JSON.stringify(this._localRepoDataMap)));try{await b.workspace.fs.writeFile(i,r)}catch(e){eL.Yd.error(e,"writeLocalRepoPath")}await iR()}}class ix{_cloudWorkspacePathMap=void 0;async ensureCloudWorkspacePathMap(){null==this._cloudWorkspacePathMap&&await this.loadCloudWorkspacePathMap()}async getCloudWorkspacePathMap(){return await this.ensureCloudWorkspacePathMap(),this._cloudWorkspacePathMap??{}}async loadCloudWorkspacePathMap(){let e=iI();try{let t=await b.workspace.fs.readFile(e);this._cloudWorkspacePathMap=JSON.parse(t.toString())?.workspaces??{}}catch(e){eL.Yd.error(e,"loadCloudWorkspacePathMap")}}async getCloudWorkspaceRepoPath(e,t){let i=await this.getCloudWorkspacePathMap();return i[e]?.repoPaths?.[t]}async getCloudWorkspaceCodeWorkspacePath(e){let t=await this.getCloudWorkspacePathMap();return t[e]?.externalLinks?.[".code-workspace"]}async removeCloudWorkspaceCodeWorkspaceFilePath(e){if(!await iS()||(await this.loadCloudWorkspacePathMap(),this._cloudWorkspacePathMap?.[e]?.externalLinks?.[".code-workspace"]==null))return;delete this._cloudWorkspacePathMap[e].externalLinks[".code-workspace"];let t=iI(),i=new Uint8Array(Buffer.from(JSON.stringify({workspaces:this._cloudWorkspacePathMap})));try{await b.workspace.fs.writeFile(t,i)}catch(e){eL.Yd.error(e,"writeCloudWorkspaceCodeWorkspaceFilePathToMap")}await iR()}async confirmCloudWorkspaceCodeWorkspaceFilePath(e){let t=await this.getCloudWorkspacePathMap(),i=t[e]?.externalLinks?.[".code-workspace"];if(null==i)return!1;try{return await b.workspace.fs.stat(b.Uri.file(i)),!0}catch{return!1}}async writeCloudWorkspaceRepoDiskPathToMap(e,t,i){if(!await iS())return;await this.loadCloudWorkspacePathMap(),null==this._cloudWorkspacePathMap&&(this._cloudWorkspacePathMap={}),null==this._cloudWorkspacePathMap[e]&&(this._cloudWorkspacePathMap[e]={repoPaths:{},externalLinks:{}}),null==this._cloudWorkspacePathMap[e].repoPaths&&(this._cloudWorkspacePathMap[e].repoPaths={}),this._cloudWorkspacePathMap[e].repoPaths[t]=i;let r=iI(),s=new Uint8Array(Buffer.from(JSON.stringify({workspaces:this._cloudWorkspacePathMap})));try{await b.workspace.fs.writeFile(r,s)}catch(e){eL.Yd.error(e,"writeCloudWorkspaceRepoDiskPathToMap")}await iR()}async writeCloudWorkspaceCodeWorkspaceFilePathToMap(e,t){if(!await iS())return;await this.loadCloudWorkspacePathMap(),null==this._cloudWorkspacePathMap&&(this._cloudWorkspacePathMap={}),null==this._cloudWorkspacePathMap[e]&&(this._cloudWorkspacePathMap[e]={repoPaths:{},externalLinks:{}}),null==this._cloudWorkspacePathMap[e].externalLinks&&(this._cloudWorkspacePathMap[e].externalLinks={}),this._cloudWorkspacePathMap[e].externalLinks[".code-workspace"]=t;let i=iI(),r=new Uint8Array(Buffer.from(JSON.stringify({workspaces:this._cloudWorkspacePathMap})));try{await b.workspace.fs.writeFile(i,r)}catch(e){eL.Yd.error(e,"writeCloudWorkspaceCodeWorkspaceFilePathToMap")}await iR()}async getLocalWorkspaceData(){let e,t;try{if(e=b.Uri.file(k().join(td().homedir(),".gk","localWorkspaces.json")),t=await b.workspace.fs.readFile(e),t?.length)return JSON.parse(t.toString())}catch(i){try{if(e=b.Uri.file(k().join(td().homedir(),`${"windows"===(0,tm.Xf)()?"/AppData/Roaming/":""}.gitkraken`,"workspaces","workspaces.json")),t=await b.workspace.fs.readFile(e),t?.length)return JSON.parse(t.toString())}catch(e){eL.Yd.error(e,"getLocalWorkspaceData")}}return{workspaces:{}}}async writeCodeWorkspaceFile(e,t,i){let r,s;try{s=await b.workspace.fs.readFile(e),r=JSON.parse(s.toString())}catch(e){r={folders:[],settings:{}}}r.folders=t.map(e=>({path:e})),i?.workspaceId!=null&&(r.settings["gitkraken.workspaceId"]=i.workspaceId),i?.workspaceAutoAddSetting!=null&&(r.settings["gitkraken.workspaceAutoAddSetting"]=i.workspaceAutoAddSetting);let n=new Uint8Array(Buffer.from(JSON.stringify(r)));try{await b.workspace.fs.writeFile(e,n),i?.workspaceId!=null&&await this.writeCloudWorkspaceCodeWorkspaceFilePathToMap(i.workspaceId,e.fsPath)}catch(e){return eL.Yd.error(e,"writeCodeWorkspaceFile"),!1}return!0}async updateCodeWorkspaceFileSettings(e,t){let i,r;try{r=await b.workspace.fs.readFile(e),i=JSON.parse(r.toString())}catch(e){return!1}null!=t.workspaceAutoAddSetting&&(i.settings["gitkraken.workspaceAutoAddSetting"]=t.workspaceAutoAddSetting);let s=new Uint8Array(Buffer.from(JSON.stringify(i)));try{await b.workspace.fs.writeFile(e,s)}catch(e){return eL.Yd.error(e,"updateCodeWorkspaceFileSettings"),!1}return!0}}function iT(){return null==d&&(d=new th),d}async function iO(e){let t=iT(),r=[new iA(e,t),new ik(e,new iD(t))];if(C.D.get("virtualRepositories.enabled")){let t=(await i.e(457).then(i.bind(i,997))).GitHubGitProvider;r.push(new t(e))}return r}async function iE(e){let t=[{label:"OpenAI",kind:b.QuickPickItemKind.Separator},{label:"OpenAI",description:"GPT-4 Turbo",provider:"openai",model:"gpt-4-1106-preview"},{label:"OpenAI",description:"GPT-4",provider:"openai",model:"gpt-4"},{label:"OpenAI",description:"GPT-4 32k",provider:"openai",model:"gpt-4-32k"},{label:"OpenAI",description:"GPT-3.5 Turbo",provider:"openai",model:"gpt-3.5-turbo-1106"},{label:"Anthropic",kind:b.QuickPickItemKind.Separator},{label:"Anthropic",description:"Claude 2.1",provider:"anthropic",model:"claude-2.1"},{label:"Anthropic",description:"Claude 2.0",provider:"anthropic",model:"claude-2"},{label:"Anthropic",description:"Claude Instant",provider:"anthropic",model:"claude-instant-1"}];null!=e?t=t.filter(t=>t.kind!==b.QuickPickItemKind.Separator&&t.provider===e):e=C.D.get("ai.experimental.provider")??"openai";let i=C.D.get(`ai.experimental.${e}.model`);for(let r of(null==i&&(i="anthropic"===e?"claude-2.1":"gpt-4-1106-preview"),t))if(r.kind!==b.QuickPickItemKind.Separator&&r.model===i){r.description=`${r.description}  \u2713`,r.picked=!0;break}return await b.window.showQuickPick(t,{title:"Switch AI Model",placeHolder:"select an AI model to use for experimental AI features",matchOnDescription:!0})}class iB{constructor(e){this.container=e}id="anthropic";name="Anthropic";dispose(){}get model(){return C.D.get("ai.experimental.anthropic.model")||null}async getOrChooseModel(){let e=this.model;if(null!=e)return e;let t=await iE(this.id);if(null!=t)return await C.D.updateEffective(`ai.experimental.${t.provider}.model`,t.model),t.model}async generateCommitMessage(e,t){let i=await iU(this.container.storage);if(null==i)return;let r=await this.getOrChooseModel();if(null==r)return;let s=0,n=iH(r,2600);for(;;){let o=e.substring(0,n),a=C.D.get("experimental.generateCommitMessagePrompt");a.endsWith(".")||(a+=".");let l={model:r,prompt:`

Human: You are an advanced AI programming assistant tasked with summarizing code changes into a concise and meaningful commit message. Compose a commit message that:
- Strictly synthesizes meaningful information from the provided code diff
- Utilizes any additional user-provided context to comprehend the rationale behind the code changes
- Is clear and brief, with an informal yet professional tone, and without superfluous descriptions
- Avoids unnecessary phrases such as "this commit", "this change", and the like
- Avoids direct mention of specific code identifiers, names, or file names, unless they are crucial for understanding the purpose of the changes
- Most importantly emphasizes the 'why' of the change, its benefits, or the problem it addresses rather than only the 'what' that changed

Follow the user's instructions carefully, don't repeat yourself, don't include the code in the output, or make anything up!

Human: Here is the code diff to use to generate the commit message:

${o}

${t?.context?`Human: Here is additional context which should be taken into account when generating the commit message:

${t.context}`:""}

Human: ${a}

Assistant:`,stream:!1,max_tokens_to_sample:5e3},h=await this.fetch(i,l);if(!h.ok){let e;try{e=await h.json()}catch{}if(s++<2&&e?.error?.type==="invalid_request_error"&&e?.error?.message?.includes("prompt is too long")){n-=500*s;continue}throw Error(`Unable to generate commit message: (${this.name}:${h.status}) ${e?.error?.message||h.statusText})`)}return e.length>n&&b.window.showWarningMessage(`The diff of the staged changes had to be truncated to ${n} characters to fit within the Anthropic's limits.`),(await h.json()).completion.trim()}}async explainChanges(e,t){let i=await iU(this.container.storage);if(null==i)return;let r=await this.getOrChooseModel();if(null==r)return;let s=0,n=iH(r,3e3);for(;;){let o=t.substring(0,n),a=`${"claude-2.1"!==r?"\n\nHuman: ":""}You are an advanced AI programming assistant tasked with summarizing code changes into an explanation that is both easy to understand and meaningful. Construct an explanation that:
- Concisely synthesizes meaningful information from the provided code diff
- Incorporates any additional context provided by the user to understand the rationale behind the code changes
- Places the emphasis on the 'why' of the change, clarifying its benefits or addressing the problem that necessitated the change, beyond just detailing the 'what' has changed

Do not make any assumptions or invent details that are not supported by the code diff or the user-provided context.

Human: Here is additional context provided by the author of the changes, which should provide some explanation to why these changes where made. Please strongly consider this information when generating your explanation:

${e}

Human: Now, kindly explain the following code diff in a way that would be clear to someone reviewing or trying to understand these changes:

${o}

Human: Remember to frame your explanation in a way that is suitable for a reviewer to quickly grasp the essence of the changes, the issues they resolve, and their implications on the codebase.

Assistant:`,l={model:r,prompt:a,stream:!1,max_tokens_to_sample:5e3},h=await this.fetch(i,l);if(!h.ok){let e;try{e=await h.json()}catch{}if(s++<2&&e?.error?.type==="invalid_request_error"&&e?.error?.message?.includes("prompt is too long")){n-=500*s;continue}throw Error(`Unable to explain commit: (${this.name}:${h.status}) ${e?.error?.message||h.statusText})`)}return t.length>n&&b.window.showWarningMessage(`The diff of the commit changes had to be truncated to ${n} characters to fit within the OpenAI's limits.`),(await h.json()).completion.trim()}}fetch(e,t){return(0,tg.he)("https://api.anthropic.com/v1/complete",{headers:{Accept:"application/json",Authorization:`Bearer ${e}`,"Content-Type":"application/json","X-API-Key":e,"anthropic-version":"2023-06-01"},method:"POST",body:JSON.stringify(t)})}}async function iU(e){let t=await e.getSecret("gitlens.anthropic.key");if(!t){let i=b.window.createInputBox();i.ignoreFocusOut=!0;let r=[];try{let e={iconPath:new b.ThemeIcon("link-external"),tooltip:"Open the Anthropic API Key Page"};t=await new Promise(t=>{r.push(i.onDidHide(()=>t(void 0)),i.onDidChangeValue(e=>{if(e&&!/(?:sk-)?[a-zA-Z0-9-_]{32,}/.test(e)){i.validationMessage="Please enter a valid Anthropic API key";return}i.validationMessage=void 0}),i.onDidAccept(()=>{let e=i.value.trim();if(!e||!/(?:sk-)?[a-zA-Z0-9-_]{32,}/.test(e)){i.validationMessage="Please enter a valid Anthropic API key";return}t(e)}),i.onDidTriggerButton(t=>{t===e&&b.env.openExternal(b.Uri.parse("https://console.anthropic.com/account/keys"))})),i.password=!0,i.title="Connect to Anthropic",i.placeholder="Please enter your Anthropic API key to use this feature",i.prompt=(0,eG.gn)("input-prompt-links")?'Enter your [Anthropic API Key](https://console.anthropic.com/account/keys "Get your Anthropic API key")':"Enter your Anthropic API Key",i.buttons=[e],i.show()})}finally{i.dispose(),r.forEach(e=>void e.dispose())}if(!t)return;e.storeSecret("gitlens.anthropic.key",t)}return t}class iW{constructor(e){this.container=e}id="openai";name="OpenAI";dispose(){}get model(){return C.D.get("ai.experimental.openai.model")||null}get url(){return C.D.get("ai.experimental.openai.url")||"https://api.openai.com/v1/chat/completions"}async getOrChooseModel(){let e=this.model;if(null!=e)return e;let t=await iE(this.id);if(null!=t)return await C.D.updateEffective(`ai.experimental.${t.provider}.model`,t.model),t.model}async generateCommitMessage(e,t){let i=await iM(this.container.storage);if(null==i)return;let r=await this.getOrChooseModel();if(null==r)return;let s=0,n=iH(r,2600);for(;;){let o=e.substring(0,n),a=C.D.get("experimental.generateCommitMessagePrompt");a.endsWith(".")||(a+=".");let l={model:r,messages:[{role:"system",content:`You are an advanced AI programming assistant tasked with summarizing code changes into a concise and meaningful commit message. Compose a commit message that:
- Strictly synthesizes meaningful information from the provided code diff
- Utilizes any additional user-provided context to comprehend the rationale behind the code changes
- Is clear and brief, with an informal yet professional tone, and without superfluous descriptions
- Avoids unnecessary phrases such as "this commit", "this change", and the like
- Avoids direct mention of specific code identifiers, names, or file names, unless they are crucial for understanding the purpose of the changes
- Most importantly emphasizes the 'why' of the change, its benefits, or the problem it addresses rather than only the 'what' that changed

Follow the user's instructions carefully, don't repeat yourself, don't include the code in the output, or make anything up!`},{role:"user",content:`Here is the code diff to use to generate the commit message:

${o}`},...t?.context?[{role:"user",content:`Here is additional context which should be taken into account when generating the commit message:

${t.context}`}]:[],{role:"user",content:a}]},h=await this.fetch(i,l);if(!h.ok){let e;if(404===h.status)throw Error(`Unable to generate commit message: Your API key doesn't seem to have access to the selected '${r}' model`);if(429===h.status)throw Error(`Unable to generate commit message: (${this.name}:${h.status}) Too many requests (rate limit exceeded) or your API key is associated with an expired trial`);try{e=await h.json()}catch{}if(s++<2&&e?.error?.code==="context_length_exceeded"){n-=500*s;continue}throw Error(`Unable to generate commit message: (${this.name}:${h.status}) ${e?.error?.message||h.statusText}`)}return e.length>n&&b.window.showWarningMessage(`The diff of the staged changes had to be truncated to ${n} characters to fit within the OpenAI's limits.`),(await h.json()).choices[0].message.content.trim()}}async explainChanges(e,t){let i=await iM(this.container.storage);if(null==i)return;let r=await this.getOrChooseModel();if(null==r)return;let s=0,n=iH(r,3e3);for(;;){let o=t.substring(0,n),a={model:r,messages:[{role:"system",content:`You are an advanced AI programming assistant tasked with summarizing code changes into an explanation that is both easy to understand and meaningful. Construct an explanation that:
- Concisely synthesizes meaningful information from the provided code diff
- Incorporates any additional context provided by the user to understand the rationale behind the code changes
- Places the emphasis on the 'why' of the change, clarifying its benefits or addressing the problem that necessitated the change, beyond just detailing the 'what' has changed

Do not make any assumptions or invent details that are not supported by the code diff or the user-provided context.`},{role:"user",content:`Here is additional context provided by the author of the changes, which should provide some explanation to why these changes where made. Please strongly consider this information when generating your explanation:

${e}`},{role:"user",content:`Now, kindly explain the following code diff in a way that would be clear to someone reviewing or trying to understand these changes:

${o}`},{role:"user",content:"Remember to frame your explanation in a way that is suitable for a reviewer to quickly grasp the essence of the changes, the issues they resolve, and their implications on the codebase."}]},l=await this.fetch(i,a);if(!l.ok){let e;if(404===l.status)throw Error(`Unable to explain commit: Your API key doesn't seem to have access to the selected '${r}' model`);if(429===l.status)throw Error(`Unable to explain commit: (${this.name}:${l.status}) Too many requests (rate limit exceeded) or your API key is associated with an expired trial`);try{e=await l.json()}catch{}if(s++<2&&e?.error?.code==="context_length_exceeded"){n-=500*s;continue}throw Error(`Unable to explain commit: (${this.name}:${l.status}) ${e?.error?.message||l.statusText}`)}return t.length>n&&b.window.showWarningMessage(`The diff of the commit changes had to be truncated to ${n} characters to fit within the OpenAI's limits.`),(await l.json()).choices[0].message.content.trim()}}fetch(e,t){let i=this.url,r=i.includes(".azure.com");return(0,tg.he)(i,{headers:{Accept:"application/json","Content-Type":"application/json",...r?{"api-key":e}:{Authorization:`Bearer ${e}`}},method:"POST",body:JSON.stringify(t)})}}async function iM(e){let t=await e.getSecret("gitlens.openai.key");if(!t){let i=b.window.createInputBox();i.ignoreFocusOut=!0;let r=[];try{let e={iconPath:new b.ThemeIcon("link-external"),tooltip:"Open the OpenAI API Key Page"};t=await new Promise(t=>{r.push(i.onDidHide(()=>t(void 0)),i.onDidChangeValue(e=>{if(e&&!/(?:sk-)?[a-zA-Z0-9]{32,}/.test(e)){i.validationMessage="Please enter a valid OpenAI API key";return}i.validationMessage=void 0}),i.onDidAccept(()=>{let e=i.value.trim();if(!e||!/(?:sk-)?[a-zA-Z0-9]{32,}/.test(e)){i.validationMessage="Please enter a valid OpenAI API key";return}t(e)}),i.onDidTriggerButton(t=>{t===e&&b.env.openExternal(b.Uri.parse("https://platform.openai.com/account/api-keys"))})),i.password=!0,i.title="Connect to OpenAI",i.placeholder="Please enter your OpenAI API key to use this feature",i.prompt=(0,eG.gn)("input-prompt-links")?'Enter your [OpenAI API Key](https://platform.openai.com/account/api-keys "Get your OpenAI API key")':"Enter your OpenAI API Key",i.buttons=[e],i.show()})}finally{i.dispose(),r.forEach(e=>void e.dispose())}if(!t)return;e.storeSecret("gitlens.openai.key",t)}return t}class iL{constructor(e){this.container=e}_provider;dispose(){this._provider?.dispose()}get providerId(){return this._provider?.id}async generateCommitMessage(e,t){let i;if(Array.isArray(e))i=e.join("\n");else{let r=(0,tP.uC)(e)?e:this.container.git.getRepository(e);if(null==r)throw Error("Unable to find repository");let s=await this.container.git.getDiff(r.uri,H.pw);if(!s?.contents&&(s=await this.container.git.getDiff(r.uri,H.CL),!s?.contents))throw Error("No changes to generate a commit message from.");if(t?.cancellation?.isCancellationRequested)return;i=s.contents}let r=await this.getOrChooseProvider();if(null!=r&&await iN(r,this.container.storage)&&!t?.cancellation?.isCancellationRequested)return t?.progress!=null?b.window.withProgress(t.progress,async()=>r.generateCommitMessage(i,{context:t?.context})):r.generateCommitMessage(i,{context:t?.context})}async explainCommit(e,t,i){let r;if("string"==typeof e||e instanceof b.Uri){if("string"!=typeof t||!t)throw Error("Invalid arguments provided");r=await this.container.git.getCommit(e,t)}else{if("string"==typeof t)throw Error("Invalid arguments provided");r=(0,N.f_)(e)?e:await this.container.git.getCommit(e.repoPath,e.ref),i=t}if(null==r)throw Error("Unable to find commit");let s=await this.container.git.getDiff(r.repoPath,r.sha);if(!s?.contents)throw Error("No changes found to explain.");let n=await this.getOrChooseProvider();if(null!=n&&await iN(n,this.container.storage))return(r.hasFullDetails()||(await r.ensureFullDetails(),(0,N.yp)(r)),i?.progress!=null)?b.window.withProgress(i.progress,async()=>n.explainChanges(r.message,s.contents)):n.explainChanges(r.message,s.contents)}reset(){let{providerId:e}=this;null!=e&&(this.container.storage.deleteSecret(`gitlens.${e}.key`),this.container.storage.delete(`confirm:ai:tos:${e}`),this.container.storage.deleteWorkspace(`confirm:ai:tos:${e}`))}supports(e){return"anthropic"===e||"openai"===e}async switchProvider(){await this.getOrChooseProvider(!0)}async getOrChooseProvider(e){let t=e?void 0:C.D.get("ai.experimental.provider")||void 0;if(null==t||!this.supports(t)){let e=await iE();if(null==e)return;t=e.provider,await C.D.updateEffective("ai.experimental.provider",t),await C.D.updateEffective(`ai.experimental.${t}.model`,e.model)}return t!==this._provider?.id&&(this._provider?.dispose(),"anthropic"===t?this._provider=new iB(this.container):(this._provider=new iW(this.container),"openai"!==t&&await C.D.updateEffective("ai.experimental.provider","openai"))),this._provider}}async function iN(e,t){if(t.get(`confirm:ai:tos:${e.id}`,!1)||t.getWorkspace(`confirm:ai:tos:${e.id}`,!1))return!0;let i={title:"Yes"},r={title:"Always for this Workspace"},s={title:"Always"},n=await b.window.showInformationMessage(`This GitLens experimental feature requires sending a diff of the code changes to ${e.name}. This may contain sensitive information.

Do you want to continue?`,{modal:!0},i,r,s,{title:"No",isCloseAffordance:!0});return n===i||(n===r?(t.storeWorkspace(`confirm:ai:tos:${e.id}`,!0),!0):n===s&&(t.store(`confirm:ai:tos:${e.id}`,!0),!0))}function iH(e,t){let i;switch(e){case"gpt-4-1106-preview":i=128e3;break;case"gpt-4-32k":case"gpt-4-32k-0613":i=32768;break;case"gpt-4":case"gpt-4-0613":i=8192;break;case"gpt-3.5-turbo-1106":case"gpt-3.5-turbo-16k":i=16385;break;case"gpt-3.5-turbo":default:i=4096;break;case"claude-2.1":i=2e5;break;case"claude-2":case"claude-instant-1":i=1e5}let r=3.1*i-t/3.1;return Math.floor(r-.1*r)}var iG=i(3139),iq=i(623),iY=i(9338),ij=i(1062),iV=i(2185),iQ=i(248),iz=Object.defineProperty,iK=Object.getOwnPropertyDescriptor,iJ=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?iK(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&iz(t,i,n),n};let iZ=b.window.createTextEditorDecorationType({after:{margin:"0 0 0 3em",textDecoration:"none"},rangeBehavior:b.DecorationRangeBehavior.ClosedOpen});class iX{constructor(e){this.container=e,this._disposable=b.Disposable.from((0,iV.IH)(e.onReady)(this.onReady,this),C.D.onDidChange(this.onConfigurationChanged,this),e.fileAnnotations.onDidToggleAnnotations(this.onFileAnnotationsToggled,this),e.integrations.onDidChangeConnectionState((0,t5.Ds)(()=>void this.refresh(b.window.activeTextEditor),250)))}_cancellation;_disposable;_editor;_enabled=!1;dispose(){this.clearAnnotations(this._editor),this.container.lineTracker.unsubscribe(this),this._disposable.dispose()}onReady(){this.onConfigurationChanged()}onConfigurationChanged(e){C.D.changed(e,"currentLine")&&(C.D.changed(e,"currentLine.enabled")&&(C.D.get("currentLine.enabled")?(this._enabled=!0,this.resume()):(this._enabled=!1,this.setLineTracker(!1))),this.refresh(b.window.activeTextEditor))}_suspended=!1;get suspended(){return!this._enabled||this._suspended}resume(){return this.setLineTracker(!0),!!this._suspended&&(this._suspended=!1,!0)}suspend(){return this.setLineTracker(!1),!this._suspended&&(this._suspended=!0,!0)}onActiveLinesChanged(e){if(!e.pending&&void 0!==e.selections){this.refresh(e.editor);return}this.clear(e.editor)}onFileAnnotationsToggled(){this.refresh(b.window.activeTextEditor)}clear(e){this._cancellation?.cancel(),this._editor!==e&&null!=this._editor&&this.clearAnnotations(this._editor),this.clearAnnotations(e)}async toggle(e){this._enabled=!(this._enabled&&!this.suspended),this._enabled?this.resume()&&await this.refresh(e):this.suspend()&&await this.refresh(e)}clearAnnotations(e){void 0!==e&&!0!==e._disposed&&e.setDecorations(iZ,[])}getPullRequestsForLines(e,t){let i=new Map;if(0===t.size)return i;let r=this.container.git.getBestRemoteWithIntegration(e);for(let[,e]of t){if(e.commit.isUncommitted)continue;let t=i.get(e.commit.ref);null==t&&(t=r.then(t=>e.commit.getAssociatedPullRequest(t)),i.set(e.commit.ref,t))}return i}async refresh(e){let t;if(null==e&&null==this._editor)return;let i=(0,eH.UH)(),r=this.container.lineTracker.selections;if(null==e||null==r||!(0,eG.PH)(e)){(0,eH.lH)(i,` ${$.NE.Dot} Skipped because there is no valid editor or no valid selections`),this.clear(this._editor);return}this._editor!==e&&(this.clear(this._editor),this._editor=e);let s=C.D.get("currentLine");if(this.suspended){(0,eH.lH)(i,` ${$.NE.Dot} Skipped because the controller is suspended`),this.clear(e);return}let n=await this.container.tracker.getOrAdd(e.document);if(!n.isBlameable&&this.suspended){null!=i&&(i.exitDetails=` ${$.NE.Dot} Skipped because the ${this.suspended?"controller is suspended":`document(${n.uri.toString(!0)}) is not blameable`}`),this.clear(e);return}if(null==e.document||!this.container.lineTracker.includes(r)){null!=i&&(i.exitDetails=` ${$.NE.Dot} Skipped because the ${null==e.document?"editor is gone":`selection(s)=${r.map(e=>`[${e.anchor}-${e.active}]`).join()} are no longer current`}`);return}null!=i&&(i.exitDetails=` ${$.NE.Dot} selection(s)=${r.map(e=>`[${e.anchor}-${e.active}]`).join()}`);let o=new Map,a=new Map;for(let e of r){let t=this.container.lineTracker.getState(e.active);if(t?.commit==null){eL.Yd.debug(i,`Line ${e.active} returned no commit`);continue}null!=t.commit.message||o.has(t.commit.ref)||o.set(t.commit.ref,t.commit.ensureFullDetails()),a.set(e.active,t)}let l=n.uri.repoPath;if(e.document.uri.scheme===$.sN.Vsls||e.document.uri.scheme===$.sN.VslsScc){let e=C.D.get("hovers");t={autolinks:e.autolinks.enabled,dateFormat:C.D.get("defaultDateFormat"),format:e.detailsMarkdownFormat,pullRequests:e.pullRequests.enabled}}let h=null!=l&&s.pullRequests.enabled&&iY.i.has(s.format,"pullRequest","pullRequestAgo","pullRequestAgoOrDate","pullRequestDate","pullRequestState");this._cancellation?.cancel(),this._cancellation=new b.CancellationTokenSource;let c=this._cancellation.token,u=iY.i.has(s.format,"tips")?this.container.git.getBranchesAndTagsTipsFn(l):void 0;async function d(e,i,r,o,l){let h=[];for(let[c,u]of a){let a=u.commit;if(null==a||a.isUncommitted&&""===s.uncommittedChangesFormat)continue;let d=o?.get(a.ref),p=(0,iQ.sV)(a,a.isUncommitted?s.uncommittedChangesFormat??s.format:s.format,{dateFormat:null===s.dateFormat?C.D.get("defaultDateFormat"):s.dateFormat,getBranchAndTagTips:r,pullRequest:d?.value,pullRequestPendingMessage:`PR ${$.NE.Ellipsis}`},s.scrollable);p.range=i.document.validateRange(new b.Range(c,1073741824,c,1073741824)),null!=t&&(p.hoverMessage=await (0,ij.nN)(e,a,n.uri,c,{...t,pullRequest:d?.value,timeout:l})),h.push(p)}i.setDecorations(iZ,h)}let p=h?await (0,t2.T0)(this.getPullRequestsForLines(l,a),!0,c,100,async t=>{if("timedout"!==t.reason||c.isCancellationRequested||e!==this._editor)return;eL.Yd.debug(i,`${$.NE.Dot} pull request queries took too long (over 100 ms)`);let[r,s]=await Promise.allSettled([u,t.value]);if(c.isCancellationRequested||e!==this._editor)return;let n=(0,t6.Sb)(s),o=(0,t6.Sb)(r);eL.Yd.debug(i,`${$.NE.Dot} pull request queries completed; updating...`),d(this.container,e,o,n)}):void 0,[g]=await Promise.allSettled([u,...o.values()]);c.isCancellationRequested||await d(this.container,e,(0,t6.Sb)(g),p,100)}setLineTracker(e){if(e){this.container.lineTracker.subscribed(this)||this.container.lineTracker.subscribe(this,this.container.lineTracker.onDidChangeActiveLines(this.onActiveLinesChanged,this));return}this.container.lineTracker.unsubscribe(this)}}iJ([(0,eW.cM)()],iX.prototype,"resume",1),iJ([(0,eW.cM)()],iX.prototype,"suspend",1),iJ([(0,eW.fF)({args:{0:e=>`editor=${e.editor?.document.uri.toString(!0)}, selections=${e.selections?.map(e=>`[${e.anchor}-${e.active}]`).join(",")}, pending=${!!e.pending}, reason=${e.reason}`}})],iX.prototype,"onActiveLinesChanged",1),iJ([(0,eW.fF)({args:!1,singleLine:!0})],iX.prototype,"clear",1),iJ([(0,eW.cM)({args:!1})],iX.prototype,"toggle",1),iJ([(0,eW.fF)({args:!1})],iX.prototype,"refresh",1);var i0=i(8294);class i1{_cache=new Map;constructor(e){}dispose(){this._cache.clear()}delete(e,t){this._cache.delete(`${e}:${t}`)}get(e,t,i,r){let s=this._cache.get(`${e}:${t}`);if(null==s||null!=s.expiresAt&&s.expiresAt>0&&s.expiresAt<Date.now()||null!=s.etag&&s.etag!==i){let{value:s,expiresAt:n}=r();return this.set(e,t,s,i,n)?.value}return s.value}getIssueOrPullRequest(e,t,i,r){let{key:s,etag:n}=i2(t,i);return null==t?this.get("issuesOrPrsById",`id:${e}:${s}`,n,r):this.get("issuesOrPrsByIdAndRepo",`id:${e}:${s}:${JSON.stringify(t)}}`,n,r)}getPullRequestForBranch(e,t,i,r){let{key:s,etag:n}=i2(t,i);return this.get("prByBranch",`branch:${e}:${s}`,n,this.wrapPullRequestCacheable(r,s,n))}getPullRequestForSha(e,t,i,r){let{key:s,etag:n}=i2(t,i);return this.get("prsBySha",`sha:${e}:${s}`,n,this.wrapPullRequestCacheable(r,s,n))}getRepositoryDefaultBranch(e,t,i){let{key:r,etag:s}=i2(e,t);return this.get("defaultBranch",`repo:${r}`,s,i)}getRepositoryMetadata(e,t,i){let{key:r,etag:s}=i2(e,t);return this.get("repoMetadata",`repo:${r}`,s,i)}set(e,t,i,r,s){let n;return(0,t6.tI)(i)?(i.then(i=>{this.set(e,t,i,r,s)},()=>{this.delete(e,t)}),n={value:i,etag:r}):n={value:i,etag:r,expiresAt:s??function(e,t){let i=Date.now(),r=i+36e5;switch(e){case"defaultBranch":case"repoMetadata":return 0;case"issuesOrPrsById":case"issuesOrPrsByIdAndRepo":{if(null==t)return 0;if(!t.closed)return r;let e=i-(t.closedDate??t.date).getTime();return i+(e>12096e5?12:1)*36e5}case"prByBranch":case"prsBySha":{if(null==t)return"prByBranch"===e?r:0;if("opened"===t.state)return r;let s=i-(t.closedDate??t.mergedDate??t.date).getTime();return i+(s>12096e5?12:1)*36e5}default:return null==t?0:r}}(e,i)},this._cache.set(`${e}:${t}`,n),n}wrapPullRequestCacheable(e,t,i){return()=>{let r=e();return(0,t6.tI)(r.value)&&r.value.then(e=>{null!=e&&this.set("issuesOrPrsById",`id:${e.id}:${t}`,e,i)}),r}}}function i2(e,t){return{key:e.key,etag:`${e.key}:${t?.maybeConnected??!1}`}}var i4=i(2061);class i5{constructor(e){this.container=e,this._disposable=b.Disposable.from((0,iV.IH)(e.onReady)(this.onReady,this),C.D.onDidChange(this.onConfigurationChanged,this))}_canToggle=!1;_disposable;_provider;_providerDisposable;dispose(){this._providerDisposable?.dispose(),this._disposable?.dispose()}onReady(){this.onConfigurationChanged()}onConfigurationChanged(e){if(C.D.changed(e,["codeLens","defaultDateFormat","defaultDateSource","defaultDateStyle"])){null!=e&&eL.Yd.log("CodeLens config changed; resetting CodeLens provider");let t=C.D.get("codeLens");t.enabled&&(t.recentChange.enabled||t.authors.enabled)?this.ensureProvider():(this._providerDisposable?.dispose(),this._provider=void 0),this._canToggle=t.recentChange.enabled||t.authors.enabled,(0,i4.v)("gitlens:disabledToggleCodeLens",!this._canToggle)}}onBlameStateChanged(e){null!=this._provider&&e.blameable&&(eL.Yd.log("Blame state changed; resetting CodeLens provider"),this._provider.reset("saved"))}onDirtyIdleTriggered(e){if(null==this._provider||!e.document.isBlameable)return;let t=C.D.get("advanced.blame.sizeThresholdAfterEdit");t>0&&e.document.lineCount>t||(eL.Yd.log("Dirty idle triggered; resetting CodeLens provider"),this._provider.reset("idle"))}toggleCodeLens(){if(this._canToggle){if(eL.Yd.log("toggleCodeLens()"),null!=this._provider){this._providerDisposable?.dispose(),this._provider=void 0;return}this.ensureProvider()}}async ensureProvider(){if(null!=this._provider){this._provider.reset();return}this._providerDisposable?.dispose();let{GitCodeLensProvider:e}=await i.e(477).then(i.bind(i,5183));this._provider=new e(this.container),this._providerDisposable=b.Disposable.from(b.languages.registerCodeLensProvider(e.selector,this._provider),this.container.tracker.onDidChangeBlameState(this.onBlameStateChanged,this),this.container.tracker.onDidTriggerDirtyIdle(this.onDirtyIdleTriggered,this))}}var i6=i(2540);let i3=new Set(["commit:selected","draft:selected","file:selected"]),i8=new Map;class i9{_emitter=new b.EventEmitter;dispose(){this._emitter.dispose()}fire(e,t,i){i3.has(e)&&i8.set(e,t),this._emitter.fire({name:e,data:t,source:i?.source})}fireAsync(e,t,i){queueMicrotask(()=>this.fire(e,t,i))}getCachedEventArgs(e){return i8.get(e)}on(e,t,i){return this._emitter.event(function(r){e===r.name&&t.call(i,r)},i)}}let i7={done:!0,value:void 0};class re{_value="";_pos=0;reset(e){return this._value=e,this._pos=0,this}next(){return this._pos+=1,this}hasNext(){return this._pos<this._value.length-1}cmp(e){return e.charCodeAt(0)-this._value.charCodeAt(this._pos)}value(){return this._value[this._pos]}}class rt{constructor(e=!0,t=!0){this._splitOnBackslash=e,this._caseSensitive=t}_value;_from;_to;reset(e){return this._value=e.replace(/\\$|\/$/,""),this._from=0,this._to=0,this.next()}hasNext(){return this._to<this._value.length}next(){this._from=this._to;let e=!0;for(;this._to<this._value.length;this._to++){let t=this._value.charCodeAt(this._to);if(t===$.mN.Slash||this._splitOnBackslash&&t===$.mN.Backslash){if(e)this._from++;else break}else e=!1}return this}cmp(e){return this._caseSensitive?(0,L.TT)(e,this._value,0,e.length,this._from,this._to):(0,L.j_)(e,this._value,0,e.length,this._from,this._to)}value(){return this._value.substring(this._from,this._to)}}class ri{segment;value;key;left;mid;right;isEmpty(){return!this.left&&!this.mid&&!this.right&&!this.value}}class rr{static forPaths(){return new rr(new rt)}static forStrings(){return new rr(new re)}_iter;_root;constructor(e){this._iter=e}clear(){this._root=void 0}set(e,t){let i;let r=this._iter.reset(e);for(this._root||(this._root=new ri,this._root.segment=r.value()),i=this._root;;){let e=r.cmp(i.segment);if(e>0)i.left||(i.left=new ri,i.left.segment=r.value()),i=i.left;else if(e<0)i.right||(i.right=new ri,i.right.segment=r.value()),i=i.right;else if(r.hasNext())r.next(),i.mid||(i.mid=new ri,i.mid.segment=r.value()),i=i.mid;else break}let s=i.value;return i.value=t,i.key=e,s}get(e){return this._getNode(e)?.value}_getNode(e){let t=this._iter.reset(e),i=this._root;for(;i;){let e=t.cmp(i.segment);if(e>0)i=i.left;else if(e<0)i=i.right;else if(t.hasNext())t.next(),i=i.mid;else break}return i}has(e){let t=this._getNode(e);return!(t?.value===void 0&&t?.mid===void 0)}delete(e){this._delete(e,!1)}deleteSuperstr(e){this._delete(e,!0)}_delete(e,t){let i=this._iter.reset(e),r=[],s=this._root;for(;s;){let e=i.cmp(s.segment);if(e>0)r.push([1,s]),s=s.left;else if(e<0)r.push([-1,s]),s=s.right;else if(i.hasNext())i.next(),r.push([0,s]),s=s.mid;else{for(t?(s.left=void 0,s.mid=void 0,s.right=void 0):s.value=void 0;r.length>0&&s.isEmpty();){let[e,t]=r.pop();switch(e){case 1:t.left=void 0;break;case 0:t.mid=void 0;break;case -1:t.right=void 0}s=t}break}}}findSubstr(e){let t;let i=this._iter.reset(e),r=this._root;for(;r;){let e=i.cmp(r.segment);if(e>0)r=r.left;else if(e<0)r=r.right;else if(i.hasNext())i.next(),t=r.value||t,r=r.mid;else break}return r?.value||t}findSuperstr(e,t=!1){let i=this._iter.reset(e),r=this._root;for(;r;){let e=i.cmp(r.segment);if(e>0)r=r.left;else if(e<0)r=r.right;else if(i.hasNext())i.next(),r=r.mid;else{if(!r.mid)return;return r=r.mid,{[Symbol.iterator]:()=>this._nodeIterator(r,t)}}}}_nodeIterator(e,t=!1){let i,r,s;return{next:()=>(s||(s=[],r=0,this._forEach(e,e=>s.push(e),t)),r>=s.length)?i7:(i?i.value=s[r++]:i={done:!1,value:s[r++]},i)}}forEach(e){this._forEach(this._root,e)}_forEach(e,t,i=!1){void 0!==e&&(this._forEach(e.left,t,i),e.value&&t(e.value,e.key),i||this._forEach(e.mid,t,i),this._forEach(e.right,t,i))}any(){return void 0!==this._root&&!this._root.isEmpty()}count(e){return void 0===this._root||this._root.isEmpty()?0:(0,eM.QX)(this.entries(),void 0===e?void 0:([,t])=>e(t))}entries(){return this._iterator(this._root)}values(){return(0,eM.UI)(this.entries(),([,e])=>e)}highlander(){let e,t;if(void 0===this._root||this._root.isEmpty())return;let i=this.entries(),r=0;for(;!(e=i.next()).done;)if(t=e.value,++r>1)return;return t}some(e){return!(void 0===this._root||this._root.isEmpty())&&(0,eM.G)(this.entries(),([,t])=>e(t))}*[Symbol.iterator](){yield*this._iterator(this._root)}*_iterator(e){e&&(yield*this._iterator(e.left),e.value&&(yield[e.key,e.value]),yield*this._iterator(e.mid),yield*this._iterator(e.right))}}var rs=Object.defineProperty,rn=Object.getOwnPropertyDescriptor,ro=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?rn(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&rs(t,i,n),n};let ra=new Uint8Array(0);function rl(e){let t=(0,ty.uy)(e)?e:ty.YY.fromRevisionUri(e);return{path:t.relativePath,ref:t.sha,repoPath:t.repoPath}}class rh{constructor(e){this.container=e,this._disposable=b.Disposable.from(b.workspace.registerFileSystemProvider($.sN.GitLens,this,{isCaseSensitive:tm.IJ,isReadonly:!0}))}_disposable;_searchTreeMap=new Map;dispose(){this._disposable.dispose()}_onDidChangeFile=new b.EventEmitter;get onDidChangeFile(){return this._onDidChangeFile.event}copy(e,t,i){throw b.FileSystemError.NoPermissions(e)}createDirectory(e){throw b.FileSystemError.NoPermissions(e)}delete(e,t){throw b.FileSystemError.NoPermissions(e)}async readDirectory(e){let{path:t,ref:i,repoPath:r}=rl(e),s=await this.getTree(t,i,r);if(void 0===s)throw b.FileSystemError.FileNotFound(e);return[...(0,eM.UI)(s,e=>[null!=t&&0!==t.length?(0,M.AH)((0,M.Gf)(t,e.path)):e.path,rc(e.type)])]}async readFile(e){let{path:t,ref:i,repoPath:r}=rl(e);if(i===H.Ii)return ra;let s=await this.container.git.getRevisionContent(r,t,i);return null!=s?s:ra}rename(e,t,i){throw b.FileSystemError.NoPermissions(e)}async stat(e){let t;let{path:i,ref:r,repoPath:s}=rl(e);if(r===H.Ii)return{type:b.FileType.File,size:0,ctime:0,mtime:0};let n=this._searchTreeMap.get(r);if(null!=n)t=(await n).get(`/~/${i}`);else{if(null==i||0===i.length){if(null==await this.getTree(i,r,s))throw b.FileSystemError.FileNotFound(e);return{type:b.FileType.Directory,size:0,ctime:0,mtime:0}}t=await this.container.git.getTreeEntryForRevision(s,i,r)}if(null==t)throw b.FileSystemError.FileNotFound(e);return{type:rc(t.type),size:t.size,ctime:0,mtime:0}}watch(){return{dispose:()=>{}}}writeFile(e){throw b.FileSystemError.NoPermissions(e)}async createSearchTree(e,t){let i=rr.forPaths(),r=await this.container.git.getTreeForRevision(t,e);for(let e of(i.set("~",{commitSha:"",path:"~",size:0,type:"tree"}),r))i.set(`~/${e.path}`,e);return i}getOrCreateSearchTree(e,t){let i=this._searchTreeMap.get(e);return void 0===i&&(i=this.createSearchTree(e,t),this._searchTreeMap.set(e,i)),i}async getTree(e,t,i){return(await this.getOrCreateSearchTree(t,i)).findSuperstr(`/~/${e}`,!0)}}function rc(e){switch(e){case"blob":return b.FileType.File;case"tree":return b.FileType.Directory;default:return b.FileType.Unknown}}ro([(0,eW.fF)()],rh.prototype,"readDirectory",1),ro([(0,eW.fF)()],rh.prototype,"readFile",1),ro([(0,eW.fF)()],rh.prototype,"stat",1);var ru=i(4575),rd=i(6516),rp=i(2133),rg=i(9529),rm=Object.defineProperty,rf=Object.getOwnPropertyDescriptor,rw=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?rf(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&rm(t,i,n),n};let rv=Object.freeze([]),ry=Object.freeze({dispose:()=>{}}),rb=new Map([["master",100],["main",15],["default",10],["develop",5],["development",1]]);class rC{constructor(e){this.container=e,this._initializing=(0,t6.PQ)(),this._disposable=b.Disposable.from(e.subscription.onDidChange(this.onSubscriptionChanged,this),b.window.onDidChangeWindowState(this.onWindowStateChanged,this),b.workspace.onDidChangeWorkspaceFolders(this.onWorkspaceFoldersChanged,this),C.D.onDidChange(this.onConfigurationChanged,this),e.integrations.onDidChangeConnectionState(e=>{"connected"===e.reason&&(0,tf.E3)("failed"),this.resetCaches("providers"),this.updateContext()}),b.workspace.isTrusted?ry:b.workspace.onDidGrantWorkspaceTrust(()=>{b.workspace.isTrusted&&b.workspace.workspaceFolders?.length&&this.discoverRepositories(b.workspace.workspaceFolders,{force:!0})}),...this.registerCommands()),this.container.BranchDateFormatting.reset(),this.container.CommitDateFormatting.reset(),this.container.CommitShaFormatting.reset(),this.container.PullRequestDateFormatting.reset(),this.updateContext()}_onDidChangeProviders=new b.EventEmitter;get onDidChangeProviders(){return this._onDidChangeProviders.event}fireProvidersChanged(e,t){this.container.telemetry.enabled&&(this.container.telemetry.setGlobalAttributes({"providers.count":this._providers.size,"providers.ids":(0,eM.v_)(this._providers.keys(),",")}),this.container.telemetry.sendEvent("providers/changed",{"providers.added":e?.length??0,"providers.removed":t?.length??0})),this._etag=Date.now(),this._onDidChangeProviders.fire({added:e??[],removed:t??[],etag:this._etag})}_onDidChangeRepositories=new b.EventEmitter;get onDidChangeRepositories(){return this._onDidChangeRepositories.event}fireRepositoriesChanged(e,t){if(this.container.telemetry.enabled){let i=this.openRepositories.map(e=>e.uri.scheme);this.container.telemetry.setGlobalAttributes({"repositories.count":i.length,"repositories.schemes":(0,W.h8)(i,",")}),this.container.telemetry.sendEvent("repositories/changed",{"repositories.added":e?.length??0,"repositories.removed":t?.length??0})}this._etag=Date.now(),this._accessCache.clear(),this._reposVisibilityCache=void 0,this._onDidChangeRepositories.fire({added:e??[],removed:t??[],etag:this._etag}),e?.length&&this.container.telemetry.enabled&&setTimeout(async()=>{for(let t of e){let e=new Set;for(let i of(await t.getRemotes()))e.add(i.provider?.id??"unknown");this.container.telemetry.sendEvent("repository/opened",{"repository.id":t.idHash,"repository.scheme":t.uri.scheme,"repository.closed":t.closed,"repository.folder.scheme":t.folder?.uri.scheme,"repository.provider.id":t.provider.id,"repository.remoteProviders":(0,eM.v_)(e,",")})}},0)}_onDidChangeRepository=new b.EventEmitter;get onDidChangeRepository(){return this._onDidChangeRepository.event}supportedSchemes=new Set;_bestRemotesCache=new Map;_disposable;_initializing;_pendingRepositories=new Map;_providers=new Map;_repositories=new rp.x8;_visitedPaths=new t3.u$;dispose(){this._disposable.dispose(),this._providers.clear(),this._repositories.forEach(e=>e.dispose()),this._repositories.clear()}_etag=0;get etag(){return this._etag}onConfigurationChanged(e){(C.D.changed(e,"defaultDateFormat")||C.D.changed(e,"defaultDateSource")||C.D.changed(e,"defaultDateStyle"))&&(this.container.BranchDateFormatting.reset(),this.container.CommitDateFormatting.reset(),this.container.PullRequestDateFormatting.reset()),C.D.changed(e,"advanced.abbreviatedShaLength")&&this.container.CommitShaFormatting.reset(),C.D.changed(e,"views.contributors.showAllBranches")&&this.resetCaches("contributors"),null!=e&&C.D.changed(e,"integrations.enabled")&&this.updateContext()}registerCommands(){return[(0,rg.xR)("gitlens.plus.resetRepositoryAccess",()=>this.clearAllRepoVisibilityCaches()),(0,rg.xR)("gitlens.plus.refreshRepositoryAccess",()=>this.clearAllOpenRepoVisibilityCaches())]}onSubscriptionChanged(e){this._accessCache.clear(),this._subscription=e.current}onWindowStateChanged(e){e.focused?this._repositories.forEach(e=>e.resume()):this._repositories.forEach(e=>e.suspend())}onWorkspaceFoldersChanged(e){if(this.container.telemetry.enabled){let e=b.workspace.workspaceFolders?.map(e=>e.uri.scheme);this.container.telemetry.setGlobalAttributes({"folders.count":e?.length??0,"folders.schemes":null!=e?(0,W.h8)(e,", "):""})}if(e.added.length&&this.discoverRepositories(e.added),e.removed.length){let t=[];for(let i of e.removed){let e=this._repositories.getClosest(i.uri);null!=e&&(this._repositories.remove(e.uri,!1),t.push(e))}t.length&&(this.updateContext(),queueMicrotask(()=>{this.fireRepositoriesChanged([],t),t.forEach(e=>e.dispose())}))}}get hasProviders(){return 0!==this._providers.size}get registeredProviders(){return[...(0,eM.UI)(this._providers.values(),e=>({...e.descriptor}))]}get openRepositories(){if(0===this.repositoryCount)return rv;let e=[...(0,eM.hX)(this.repositories,e=>!e.closed)];return 0===e.length?e:tP._j.sort(e)}get openRepositoryCount(){return 0===this.repositoryCount?0:(0,eM.QX)(this.repositories,e=>!e.closed)}get repositories(){return this._repositories.values()}get repositoryCount(){return this._repositories.count}get highlander(){return 1===this.repositoryCount?(0,eM.Ps)(this._repositories.values()):void 0}register(e,t){if(e!==t.descriptor.id)throw Error(`Id '${e}' must match provider id '${t.descriptor.id}'`);if(this._providers.has(e))throw Error(`Provider '${e}' has already been registered`);for(let i of(this._providers.set(e,t),t.supportedSchemes))this.supportedSchemes.add(i);let i=[],r=t.openRepositoryInitWatcher?.();null!=r&&i.push(r,r.onDidCreate(e=>{let t=b.workspace.getWorkspaceFolder(e);null!=t&&this.discoverRepositories([t],{force:!0})}));let s=b.Disposable.from(t,...i,t.onDidChange(()=>{eL.Yd.debug(`GitProvider(${e}).onDidChange()`);let{workspaceFolders:t}=b.workspace;t?.length&&this.discoverRepositories(t,{force:!0})}),t.onDidChangeRepository(async i=>{if(eL.Yd.debug(`GitProvider(${e}).onDidChangeRepository(e=${i.repository.toString()})`),i.changed(tP.I6.Remotes,tP.I6.RemoteProviders,tP.du.Any)&&this._bestRemotesCache.clear(),i.changed(tP.I6.Closed,tP.du.Any)?(this.updateContext(),queueMicrotask(()=>this.fireRepositoriesChanged([],[i.repository]))):i.changed(tP.I6.Opened,tP.du.Any)&&(this.updateContext(),queueMicrotask(()=>this.fireRepositoriesChanged([i.repository],[]))),i.changed(tP.I6.Remotes,tP.du.Any)){let e=await t.getRemotes(i.repository.path),r=this.getVisibilityInfoFromCache(i.repository.path);null!=r&&this.checkVisibilityCachedRemotes(i.repository.path,r,e)}this._onDidChangeRepository.fire(i)}),t.onDidCloseRepository(t=>{let i=this._repositories.get(t.uri);eL.Yd.debug(`GitProvider(${e}).onDidCloseRepository(e=${i?.toString()??t.uri.toString()})`),null!=i&&(i.closed=!0)}),t.onDidOpenRepository(t=>{let i=this._repositories.get(t.uri);eL.Yd.debug(`GitProvider(${e}).onDidOpenRepository(e=${i?.toString()??t.uri.toString()})`),null!=i?i.closed=!1:this.getOrOpenRepository(t.uri)}));return this.fireProvidersChanged([t]),null!=this._initializing&&this.onWorkspaceFoldersChanged({added:b.workspace.workspaceFolders??[],removed:[]}),{dispose:()=>{s.dispose(),this._providers.delete(e);let i=[];for(let t of[...this._repositories.values()])t?.provider.id===e&&(this._repositories.remove(t.uri,!1),i.push(t));let{deactivating:r}=this.container;r||this.updateContext(),i.length&&queueMicrotask(()=>{r||this.fireRepositoriesChanged([],i),i.forEach(e=>e.dispose())}),r||this.fireProvidersChanged([],[t])}}}async registrationComplete(){let e=(0,eH.UH)(),{workspaceFolders:t}=b.workspace;t?.length?(await this.discoverRepositories(t),0===this.repositoryCount&&tm.$L&&setTimeout(()=>{({workspaceFolders:t}=b.workspace),t?.length&&this.discoverRepositories(t,{force:!0})},1e3)):(this._initializing?.fulfill(this._etag),this._initializing=void 0,this.updateContext());let i=C.D.getAny("git.autoRepositoryDetection");this.container.telemetry.enabled&&setTimeout(()=>this.container.telemetry.sendEvent("providers/registrationComplete",{"config.git.autoRepositoryDetection":i}),0),(0,eH.lH)(e,` ${$.NE.Dot} workspaceFolders=${t?.length}, git.autoRepositoryDetection=${i}`)}getOpenProviders(){return[...this.getOpenRepositoriesByProvider().keys()].map(e=>this._providers.get(e))}getOpenRepositories(e){return(0,eM.hX)(this.repositories,t=>!t.closed&&(null==e||e===t.provider.id))}getOpenRepositoriesByProvider(){let e=[...(0,eM.hX)(this.repositories,e=>!e.closed)];return 0===e.length?new Map:(0,W.XI)(e,e=>e.provider.id)}hasOpenRepositories(e){return(0,eM.G)(this.repositories,t=>!t.closed&&(null==e||e===t.provider.id))}_discoveredWorkspaceFolders=new Map;_discoveringRepositories;get isDiscoveringRepositories(){return(0,t6.xy)(this._discoveringRepositories)??(0,t6.xy)(this._initializing)}async discoverRepositories(e,t){this._discoveringRepositories?.pending&&(await this._discoveringRepositories.promise,this._discoveringRepositories=void 0);let i=this._initializing??(0,t6.PQ)();this._discoveringRepositories=i,this._initializing=void 0;try{let i=[];for(let r of e){if(!t?.force&&this._discoveredWorkspaceFolders.has(r))continue;let e=this.discoverRepositoriesCore(r);i.push(e),this._discoveredWorkspaceFolders.set(r,e)}if(0===i.length)return;let r=await Promise.allSettled(i),s=(0,eM.VS)((0,eM.hX)(r,e=>"fulfilled"===e.status),e=>e.value),n=[];for(let e of s)this._repositories.add(e),e.closed||n.push(e);this.updateContext(),n.length&&queueMicrotask(()=>this.fireRepositoriesChanged(n))}finally{queueMicrotask(()=>{i.fulfill(this._etag)})}}async discoverRepositoriesCore(e){let{provider:t}=this.getProvider(e.uri);try{return await t.discoverRepositories(e.uri)}catch(i){return this._discoveredWorkspaceFolders.delete(e),eL.Yd.error(i,`${t.descriptor.name} Provider(${t.descriptor.id}) failed discovering repositories in ${e.uri.toString(!0)}`),[]}}async findRepositories(e,t){let{provider:i}=this.getProvider(e);return i.discoverRepositories(e,t)}_subscription;async getSubscription(){return this._subscription??(this._subscription=await this.container.subscription.getSubscription())}_accessCache=new Map;async access(e,t){if(null==t){let i=this._accessCache.get(void 0);return null==i&&(i=this.accessCore(e,t),this._accessCache.set(void 0,i)),i}let{path:i}=this.getProvider(t),r=this._accessCache.get(i);return null==r&&(r=this.accessCore(e,t),this._accessCache.set(i,r)),r}async accessCore(e,t){let i=await this.getSubscription();this.container.telemetry.enabled&&queueMicrotask(()=>void this.visibility());let r=i.plan.effective.id;if((0,rd.aG)(r))return{allowed:i.account?.verified!==!1,subscription:{current:i}};function s(e,t=!1){let{path:r}=this.getProvider(e),s=t?void 0:this._accessCache.get(r);return null==s&&(s=this.visibility(e).then(e=>"private"===e?{allowed:!1,subscription:{current:i,required:rd.Cx.Pro},visibility:e}:{allowed:!0,subscription:{current:i},visibility:e},()=>({allowed:!0,subscription:{current:i}})),this._accessCache.set(r,s)),s}if(null==t){let e=this.openRepositories;if(0===e.length)return{allowed:!1,subscription:{current:i}};if(1===e.length)return s.call(this,e[0].path);switch(await this.visibility()){case"private":return{allowed:!1,subscription:{current:i,required:rd.Cx.Pro},visibility:"private"};case"mixed":return{allowed:"mixed",subscription:{current:i,required:rd.Cx.Pro}};default:return{allowed:!0,subscription:{current:i},visibility:"public"}}}return s.call(this,t,!0)}async ensureAccess(e,t){let{allowed:i,subscription:r}=await this.access(e,t);if(!1===i)throw new ru.$y(r.current,r.required)}supports(e,t){let{provider:i}=this.getProvider(e);return i.supports(t)}_reposVisibilityCache;_repoVisibilityCache;ensureRepoVisibilityCache(){if(null==this._repoVisibilityCache){let e=this.container.storage.get("repoVisibility")?.map(([e,t])=>[e,{visibility:t.visibility,timestamp:t.timestamp,remotesHash:t.remotesHash}]);this._repoVisibilityCache=new Map(e)}}clearRepoVisibilityCache(e){if(null==e)this._repoVisibilityCache=void 0,this.container.storage.delete("repoVisibility");else{e?.forEach(e=>this._repoVisibilityCache?.delete(e));let t=Array.from(this._repoVisibilityCache?.entries()??[]);0===t.length?this.container.storage.delete("repoVisibility"):this.container.storage.store("repoVisibility",t)}}getVisibilityInfoFromCache(e){this.ensureRepoVisibilityCache();let t=this._repoVisibilityCache?.get(e);if(null!=t){if(Date.now()-t.timestamp>2592e6){this.clearRepoVisibilityCache([e]);return}return t}}checkVisibilityCachedRemotes(e,t,i){if(null==t)return!0;if("public"===t.visibility){if(0==i.length||!i.some(e=>e.remoteKey===t.remotesHash))return this.clearRepoVisibilityCache([e]),!1}else if("private"===t.visibility&&(0,tC.Ym)(i)!==t.remotesHash)return this.clearRepoVisibilityCache([e]),!1;return!0}updateVisibilityCache(e,t){this.ensureRepoVisibilityCache(),this._repoVisibilityCache?.set(e,t),this.container.storage.store("repoVisibility",Array.from(this._repoVisibilityCache.entries()))}clearAllRepoVisibilityCaches(){this.clearRepoVisibilityCache()}clearAllOpenRepoVisibilityCaches(){let e=this.openRepositories.map(e=>this.getProvider(e.path).path);this.clearRepoVisibilityCache(e)}async visibility(e){if(null==e){let e=this._reposVisibilityCache;return null==e&&(e=await this.visibilityCore(),this.container.telemetry.enabled&&(this.container.telemetry.setGlobalAttribute("repositories.visibility",e),this.container.telemetry.sendEvent("repositories/visibility")),this._reposVisibilityCache=e),e}let{path:t}=this.getProvider(e),i=this.getVisibilityInfoFromCache(t)?.visibility;return null==i&&(i=await this.visibilityCore(e),this.container.telemetry.enabled&&setTimeout(()=>{let t=this.getRepository(e);this.container.telemetry.sendEvent("repository/visibility",{"repository.visibility":i,"repository.id":t?.idHash,"repository.scheme":t?.uri.scheme,"repository.closed":t?.closed,"repository.folder.scheme":t?.folder?.uri.scheme,"repository.provider.id":t?.provider.id})},0)),i}async visibilityCore(e){async function t(e){let{provider:t,path:i}=this.getProvider(e),r=await t.getRemotes(i,{sort:!0}),s=this.getVisibilityInfoFromCache(i);if(null==s||!this.checkVisibilityCachedRemotes(i,s,r)){let[e,r]=await t.visibility(i);return"local"!==e&&this.updateVisibilityCache(i,{visibility:e,timestamp:Date.now(),remotesHash:r}),e}return s.visibility}if(null==e){let e=this.openRepositories;if(0===e.length)return"private";if(1===e.length)return t.call(this,e[0].path);let i=!1,r=!1,s=!1;for await(let n of(0,t6.rX)(e.map(e=>t.call(this,e.path))))if("fulfilled"===n.status){if("public"===n.value){if(s||r)return"mixed";i=!0}else if("local"===n.value){if(i||r)return"mixed";s=!0}else if("private"===n.value){if(i||s)return"mixed";r=!0}}return i?"public":s?"local":"private"}return t.call(this,e)}_context={enabled:!1,disabled:!1};async setEnabledContext(e){let t=!e;if(e||null==this._initializing||(t=!this.container.storage.getWorkspace("assumeRepositoriesOnStartup")),this.container.telemetry.setGlobalAttribute("enabled",e),this._context.enabled===e&&this._context.disabled===t)return;let i=[];this._context.enabled!==e&&(this._context.enabled=e,i.push((0,i4.v)("gitlens:enabled",e))),this._context.disabled!==t&&(this._context.disabled=t,i.push((0,i4.v)("gitlens:disabled",t))),await Promise.allSettled(i),null==this._initializing&&this.container.storage.storeWorkspace("assumeRepositoriesOnStartup",e).catch()}_sendProviderContextTelemetryDebounced;updateContext(){if(this.container.deactivating)return;let e=this.openRepositoryCount,t=0!==e;async function i(){let e=C.D.get("integrations.enabled"),i=this.container.telemetry.enabled,r=new Set,s=!1,n=!1,o=!1;if(t)for(let t of this._repositories.values()){if(i)for(let e of(await t.getRemotes()))r.add(e.provider?.id??"unknown");if(!o&&e&&(o=await t.hasRichRemote(!0))&&(n=!0,s=!0),!n&&e&&(n=await t.hasRichRemote())&&(s=!0),s||(s=await t.hasRemotes()),s&&(n&&o||!e))break}i&&(this.container.telemetry.setGlobalAttributes({"repositories.hasRemotes":s,"repositories.hasRichRemotes":n,"repositories.hasConnectedRemotes":o,"repositories.remoteProviders":(0,eM.v_)(r,",")}),null==this._sendProviderContextTelemetryDebounced&&(this._sendProviderContextTelemetryDebounced=(0,t5.Ds)(()=>this.container.telemetry.sendEvent("providers/context"),2500)),this._sendProviderContextTelemetryDebounced()),await Promise.allSettled([(0,i4.v)("gitlens:hasRemotes",s),(0,i4.v)("gitlens:hasRichRemotes",n),(0,i4.v)("gitlens:hasConnectedRemotes",o)])}this.setEnabledContext(t),null==this._initializing&&(this.container.telemetry.setGlobalAttributes({enabled:t,"repositories.count":e}),t&&(i.call(this),this._providers.forEach(e=>e.updateContext?.())))}getProvider(e){let t;if(null==e||"string"!=typeof e&&!this.supportedSchemes.has(e.scheme))throw new ru.MO(e);"string"==typeof e?t=(0,M.UG)(e)??$.sN.File:{scheme:t}=e;let i=new Set;for(let r of this._providers.values()){let s=r.canHandlePathOrUri(t,e);null!=s&&i.add({provider:r,path:s})}if(0===i.size)throw new ru.MO(e);if(i.size>1){for(let e of i)if(this.hasOpenRepositories(e.provider.descriptor.id))return e}return(0,eM.Ps)(i)}getAbsoluteUri(e,t){if(null==t)return"string"==typeof e?(0,M.tE)(e)?b.Uri.parse(e,!0):b.Uri.file(e):e;if("string"!=typeof t&&"string"==typeof e){let i=(0,M.AH)(e);if(!(0,M.YP)(i))return b.Uri.joinPath(t,i)}let{provider:i}=this.getProvider(t);return i.getAbsoluteUri(e,t)}async getBestRevisionUri(e,t,i){if(null==e||i===H.Ii)return;let{provider:r,path:s}=this.getProvider(e);return r.getBestRevisionUri(s,r.getRelativePath(t,s),i)}getRelativePath(e,t){let{provider:i}=this.getProvider(e instanceof b.Uri?e:t);return i.getRelativePath(e,t)}getRevisionUri(e,t,i){let r,s;"string"==typeof e?(s=e,r="string"==typeof t?t:t?.originalPath??t?.path??""):(s=e.sha,i=e.repoPath,r=(0,M.M)(e));let{provider:n,path:o}=this.getProvider(i);return n.getRevisionUri(o,n.getRelativePath(r,o),s)}getWorkingUri(e,t){let{provider:i,path:r}=this.getProvider(e);return i.getWorkingUri(r,t)}addRemote(e,t,i,r){let{provider:s,path:n}=this.getProvider(e);return s.addRemote(n,t,i,r)}pruneRemote(e,t){let{provider:i,path:r}=this.getProvider(e);return i.pruneRemote(r,t)}removeRemote(e,t){let{provider:i,path:r}=this.getProvider(e);return i.removeRemote(r,t)}applyChangesToWorkingFile(e,t,i){let{provider:r}=this.getProvider(e);return r.applyChangesToWorkingFile(e,t,i)}async applyUnreachableCommitForPatch(e,t,i){let{provider:r,path:s}=this.getProvider(e);return r.applyUnreachableCommitForPatch?.(s,t,i)}checkout(e,t,i){let{provider:r,path:s}=this.getProvider(e);return r.checkout(s,t,i)}async clone(e,t){let{provider:i}=this.getProvider(t);return i.clone?.(e,t)}async createUnreachableCommitForPatch(e,t,i,r){let{provider:s,path:n}=this.getProvider(e);return s.createUnreachableCommitForPatch?.(n,t,i,r)}resetCaches(...e){(0===e.length||e.includes("providers"))&&this._bestRemotesCache.clear(),this.container.events.fire("git:cache:reset",{caches:e})}excludeIgnoredUris(e,t){let{provider:i,path:r}=this.getProvider(e);return i.excludeIgnoredUris(r,t)}fetch(e,t){let{provider:i,path:r}=this.getProvider(e);return i.fetch(r,t)}async fetchAll(e,t){if(null==e&&(e=this.openRepositories),0!==e.length){if(1===e.length){await e[0].fetch(t);return}await b.window.withProgress({location:b.ProgressLocation.Notification,title:`Fetching ${e.length} repositories`},()=>Promise.all(e.map(e=>e.fetch({progress:!1,...t}))))}}pull(e,t){let{provider:i,path:r}=this.getProvider(e);return i.pull(r,t)}async pullAll(e,t){if(null==e&&(e=this.openRepositories),0!==e.length){if(1===e.length){await e[0].pull(t);return}await b.window.withProgress({location:b.ProgressLocation.Notification,title:`Pulling ${e.length} repositories`},()=>Promise.all(e.map(e=>e.pull({progress:!1,...t}))))}}push(e,t){let{provider:i,path:r}=this.getProvider(e);return i.push(r,t)}async pushAll(e,t){if(null==e&&(e=this.openRepositories),0!==e.length){if(1===e.length){await e[0].push(t);return}await b.window.withProgress({location:b.ProgressLocation.Notification,title:`Pushing ${e.length} repositories`},()=>Promise.all(e.map(e=>e.push({progress:!1,...t}))))}}getAheadBehindCommitCount(e,t,i){let{provider:r,path:s}=this.getProvider(e);return r.getAheadBehindCommitCount(s,t,i)}async getBlame(e,t){let{provider:i}=this.getProvider(e);return i.getBlame(e,t)}async getBlameContents(e,t){let{provider:i}=this.getProvider(e);return i.getBlameContents(e,t)}async getBlameForLine(e,t,i,r){let{provider:s}=this.getProvider(e);return s.getBlameForLine(e,t,i,r)}async getBlameForLineContents(e,t,i,r){let{provider:s}=this.getProvider(e);return s.getBlameForLineContents(e,t,i,r)}async getBlameForRange(e,t){let{provider:i}=this.getProvider(e);return i.getBlameForRange(e,t)}async getBlameForRangeContents(e,t,i){let{provider:r}=this.getProvider(e);return r.getBlameForRangeContents(e,t,i)}getBlameRange(e,t,i){let{provider:r}=this.getProvider(t);return r.getBlameRange(e,t,i)}async getBranch(e){if(null==e)return;let{provider:t,path:i}=this.getProvider(e);return t.getBranch(i)}async getBranchAheadRange(e){if(e.state.ahead>0)return(0,F.oI)(e.upstream?.name,e.ref);if(null==e.upstream){let{values:t}=await this.getBranches(e.repoPath,{filter:e=>rb.has(e.name)});if(t.length>0){let i;for(let e of t){let t=rb.get(e.name);if((null==i||i.weight<t)&&(i={weight:t,branch:e}),100===i.weight)break}let r=i.branch.upstream?.name??i.branch.ref;if(r!==e.ref)return(0,F.oI)(r,e.ref)}}}async getBranches(e,t){if(null==e)return{values:[]};let{provider:i,path:r}=this.getProvider(e);return i.getBranches(r,t)}async getBranchesAndTagsTipsFn(e,t){let[i,r]=await Promise.allSettled([this.getBranches(e),this.getTags(e)]),s=t6.Sb(i)?.values??[],n=t6.Sb(r)?.values??[],o=(0,W.Qy)(s.concat(n),e=>e.sha,e=>{if(t){if(e.name===t)return;if("branch"===e.refType&&e.getNameWithoutRemote()===t)return{name:e.name,compactName:e.getRemoteName(),type:e.refType}}return{name:e.name,compactName:void 0,type:e.refType}});return(e,t)=>{let i=o.get(e);if(null!=i&&0!==i.length){if(!t?.compact)return i.map(e=>`${t?.icons?`${"tag"===e.type?"$(tag)":"$(git-branch)"} `:""}${e.name}`).join(", ");if(i.length>1){let[e]=i;return`${t?.icons?`${"tag"===e.type?"$(tag)":"$(git-branch)"} `:""}${e.compactName??e.name}, ${$.NE.Ellipsis}`}return i.map(e=>`${t?.icons?`${"tag"===e.type?"$(tag)":"$(git-branch)"} `:""}${e.compactName??e.name}`).join(", ")}}}getChangedFilesCount(e,t){let{provider:i,path:r}=this.getProvider(e);return i.getChangedFilesCount(r,t)}async getCommit(e,t){let{provider:i,path:r}=this.getProvider(e);if(t===H.CL||t===H.pw){let i=new Date,s=await this.getCurrentUser(e);return new N.aM(this.container,r,t,new N._j("You",s?.email??void 0,i),new N._j("You",s?.email??void 0,i),"Uncommitted changes",[],"Uncommitted changes",void 0,void 0,[])}return i.getCommit(r,t)}getCommitBranches(e,t,i,r){let{provider:s,path:n}=this.getProvider(e);return s.getCommitBranches(n,t,i,r)}getCommitCount(e,t){let{provider:i,path:r}=this.getProvider(e);return i.getCommitCount(r,t)}async getCommitForFile(e,t,i){if(null==e)return;let{provider:r,path:s}=this.getProvider(e);return r.getCommitForFile(s,t,i)}getCommitsForGraph(e,t,i){let{provider:r,path:s}=this.getProvider(e);return r.getCommitsForGraph(s,t,i)}getCommitTags(e,t,i){let{provider:r,path:s}=this.getProvider(e);return r.getCommitTags(s,t,i)}async getConfig(e,t){let{provider:i,path:r}=this.getProvider(e);return i.getConfig?.(r,t)}async setConfig(e,t,i){let{provider:r,path:s}=this.getProvider(e);return r.setConfig?.(s,t,i)}async getContributors(e,t){if(null==e)return[];let{provider:i,path:r}=this.getProvider(e);return i.getContributors(r,t)}getCurrentUser(e){let{provider:t,path:i}=this.getProvider(e);return t.getCurrentUser(i)}async getDefaultBranchName(e,t){if(null==e)return;let{provider:i,path:r}=this.getProvider(e);return i.getDefaultBranchName(r,t)}async getDiff(e,t,i,r){let{provider:s,path:n}=this.getProvider(e);return s.getDiff?.(n,t,i,r)}async getDiffFiles(e,t){let{provider:i,path:r}=this.getProvider(e);return i.getDiffFiles?.(r,t)}getDiffForFile(e,t,i){let{provider:r}=this.getProvider(e);return r.getDiffForFile(e,t,i)}getDiffForFileContents(e,t,i){let{provider:r}=this.getProvider(e);return r.getDiffForFileContents(e,t,i)}getDiffForLine(e,t,i,r){let{provider:s}=this.getProvider(e);return s.getDiffForLine(e,t,i,r)}getDiffStatus(e,t,i,r){let{provider:s,path:n}=this.getProvider(e);return s.getDiffStatus(n,t,i,r)}async getFileStatusForCommit(e,t,i){if(i===H.Ii||(0,F.l3)(i))return;let{provider:r,path:s}=this.getProvider(e);return r.getFileStatusForCommit(s,t,i)}getGitDir(e){let{provider:t,path:i}=this.getProvider(e);return Promise.resolve(t.getGitDir?.(i))}getLastFetchedTimestamp(e){let{provider:t,path:i}=this.getProvider(e);return t.getLastFetchedTimestamp(i)}async getLog(e,t){let{provider:i,path:r}=this.getProvider(e);return i.getLog(r,t)}async getLogRefsOnly(e,t){let{provider:i,path:r}=this.getProvider(e);return i.getLogRefsOnly(r,t)}async getLogForFile(e,t,i){if(null==e)return;let{provider:r,path:s}=this.getProvider(e);return r.getLogForFile(s,t,i)}async getMergeBase(e,t,i,r){let{provider:s,path:n}=this.getProvider(e);return s.getMergeBase(n,t,i,r)}async getMergeStatus(e){let{provider:t,path:i}=this.getProvider(e);return t.getMergeStatus(i)}async getRebaseStatus(e){let{provider:t,path:i}=this.getProvider(e);return t.getRebaseStatus(i)}getNextComparisonUris(e,t,i,r=0){if(!i)return Promise.resolve(void 0);let{provider:s,path:n}=this.getProvider(e);return s.getNextComparisonUris(n,t,i,r)}async getOldestUnpushedRefForFile(e,t){let{provider:i,path:r}=this.getProvider(e);return i.getOldestUnpushedRefForFile(r,t)}getPreviousComparisonUris(e,t,i,r=0){if(i===H.Ii)return Promise.resolve(void 0);let{provider:s,path:n}=this.getProvider(e);return s.getPreviousComparisonUris(n,t,i,r)}getPreviousComparisonUrisForLine(e,t,i,r,s=0){if(r===H.Ii)return Promise.resolve(void 0);let{provider:n,path:o}=this.getProvider(e);return n.getPreviousComparisonUrisForLine(o,t,i,r,s)}async getIncomingActivity(e,t){let{provider:i,path:r}=this.getProvider(e);return i.getIncomingActivity(r,t)}async getBestRemoteWithProvider(e,t){return(await this.getBestRemotesWithProviders(e,t))[0]}async getBestRemotesWithProviders(e,t){if(null==e)return[];"string"==typeof e&&(e=this.getAbsoluteUri(e));let i=(0,rp.YW)(e),r=this._bestRemotesCache.get(i);return null==r&&(r=(async function(){let i=await this.getRemotesWithProviders(e,{sort:!0},t);if(0===i.length)return[];if(1===i.length)return[...i];if(t?.isCancellationRequested)throw new ru.FU;let r=i.find(e=>e.default)?.name,s=(await this.getBranch(i[0].repoPath))?.getRemoteName(),n=[],o=!1;for(let e of i){let i;switch(e.name){case r:i=1e3;break;case s:i=6;break;case"upstream":i=5;break;case"origin":i=4;break;default:i=0}if(i>0&&i<1e3&&!o){let r=e.getIntegration();if(null!=r&&(r.maybeConnected||void 0===r.maybeConnected&&await r.isConnected())){if(t?.isCancellationRequested)throw new ru.FU;let s=await r.getRepositoryMetadata(e.provider.repoDesc,t);if(t?.isCancellationRequested)throw new ru.FU;null!=s&&(i+=s.isFork?-3:3,o=!s.isFork)}}n.push([i,e])}return n.sort(([e,t],[i,r])=>0===i&&0===e?(0,L.dm)(t.name,r.name):i-e),n.map(e=>e[1])}).call(this),this._bestRemotesCache.set(i,r)),[...await r]}async getBestRemoteWithIntegration(e,t,i){let r=await this.getBestRemotesWithProviders(e,i),s=t?.includeDisconnected??!1;for(let e of r)if(e.hasIntegration()){let t=this.container.integrations.getByRemote(e);if(null!=t&&(s||!0===t.maybeConnected||void 0===t.maybeConnected&&e.default&&await t.isConnected()))return e}}async getRemotes(e,t,i){if(null==e)return[];let{provider:r,path:s}=this.getProvider(e);return r.getRemotes(s,t)}async getRemotesWithProviders(e,t,i){return(await this.getRemotes(e,t,i)).filter(e=>null!=e.provider)}async getRemotesWithIntegrations(e,t,i){return(await this.getRemotes(e,t,i)).filter(e=>e.hasIntegration())}getBestRepository(e,t){let i=this.repositoryCount;if(0!==i){if(1===i)return this.highlander;if(null!=e&&e instanceof b.Uri){let t=this.getRepository(e);if(null!=t)return t;e=void 0}return(null!=(t=e??t??b.window.activeTextEditor)?this.getRepository(t.document.uri):void 0)??this.highlander}}getBestRepositoryOrFirst(e,t){let i=this.repositoryCount;if(0!==i){if(1===i)return(0,eM.Ps)(this._repositories.values());if(null!=e&&e instanceof b.Uri){let t=this.getRepository(e);if(null!=t)return t;e=void 0}return(null!=(t=e??t??b.window.activeTextEditor)?this.getRepository(t.document.uri):void 0)??(0,eM.Ps)(this._repositories.values())}}async getOrOpenRepository(e,t){let i,r,s;if(null==e)return;let n=(0,eH.UH)();if("string"==typeof e){if(!e)return;i=this.getAbsoluteUri(e)}else i=e;let o=(0,M.M)(i);if(null==(r=this.getRepository(i))&&this._discoveringRepositories?.pending&&(await this._discoveringRepositories.promise,r=this.getRepository(i)),t?.detectNested??C.D.get("detectNestedRepositories",i)){if(!t?.force&&this._visitedPaths.has(o))return r;{let e=await b.workspace.fs.stat(i),o=(0,M.M)(i);if(eL.Yd.debug(n,`Ensuring URI is a folder; repository=${r?.toString()}, uri=${i.toString(!0)} stats.type=${e.type}, bestPath=${o}, visitedPaths.has=${this._visitedPaths.has(o)}`),(e.type&b.FileType.Directory)!==b.FileType.Directory&&(i=b.Uri.joinPath(i,".."),!t?.force&&this._visitedPaths.has(o)))return r;s=!0}}else if(null!=r)return r;let a=(0,rp.YW)(i),l=this._pendingRepositories.get(a);return null==l&&(l=(async function(){let e;let{provider:l}=this.getProvider(i),h=await l.findRepositoryUri(i,s);if(this._visitedPaths.set(o),null==h)return;if(0!==this._repositories.count){if(null!=(r=this._repositories.get(h)))return r;e=this._repositories.getClosest(l.getAbsoluteUri(i,h))}let c=C.D.getAny("git.autoRepositoryDetection")??!0,u=t?.closeOnOpen??(!0!==c&&"openEditors"!==c);eL.Yd.log(n,`Repository found in '${h.toString(!0)}'`);let d=l.openRepository(e?.folder,h,!1,void 0,u),p=[];for(let e of d)this._repositories.add(e),e.closed||p.push(e);return this._pendingRepositories.delete(a),this.updateContext(),p.length&&queueMicrotask(()=>this.fireRepositoriesChanged(p)),r=1===d.length?d[0]:this.getRepository(i)}).call(this),this._pendingRepositories.set(a,l)),l}async getOrOpenRepositoryForEditor(e){return null==(e=e??b.window.activeTextEditor)?this.highlander:this.getOrOpenRepository(e.document.uri)}getRepository(e){if(0!==this.repositoryCount&&null!=e){if("string"==typeof e){if(!e)return;return this._repositories.getClosest(this.getAbsoluteUri(e))}return this._repositories.getClosest(e)}}async getLocalInfoFromRemoteUri(e,t){for(let i of this.openRepositories)for(let r of(await i.getRemotes())){let s=await r?.provider?.getLocalInfoFromRemoteUri(i,e,t);if(null!=s)return s}}async getStash(e){if(null==e)return;let{provider:t,path:i}=this.getProvider(e);return t.getStash(i)}async getStatusForFile(e,t){let{provider:i,path:r}=this.getProvider(e);return i.getStatusForFile(r,t)}async getStatusForFiles(e,t){let{provider:i,path:r}=this.getProvider(e);return i.getStatusForFiles(r,t)}async getStatusForRepo(e){if(null==e)return;let{provider:t,path:i}=this.getProvider(e);return t.getStatusForRepo(i)}async getTags(e,t){if(null==e)return{values:[]};let{provider:i,path:r}=this.getProvider(e);return i.getTags(r,t)}async getTreeEntryForRevision(e,t,i){if(null==e||!t)return;let{provider:r,path:s}=this.getProvider(e);return r.getTreeEntryForRevision(s,r.getRelativePath(t,s),i)}async getTreeForRevision(e,t){if(null==e)return[];let{provider:i,path:r}=this.getProvider(e);return i.getTreeForRevision(r,t)}getRevisionContent(e,t,i){let{provider:r,path:s}=this.getProvider(e);return r.getRevisionContent(s,t,i)}async getFirstCommitSha(e){let{provider:t,path:i}=this.getProvider(e);try{return await t.getFirstCommitSha?.(i)}catch{return}}getUniqueRepositoryId(e){return this.getFirstCommitSha(e)}async hasBranchOrTag(e,t){if(null==e)return!1;let{provider:i,path:r}=this.getProvider(e);return i.hasBranchOrTag(r,t)}async hasCommitBeenPushed(e,t){if(null==e)return!1;let{provider:i,path:r}=this.getProvider(e);return i.hasCommitBeenPushed(r,t)}async hasRemotes(e){if(null==e)return!1;let t=this.getRepository(e);return null!=t&&t.hasRemotes()}async hasTrackingBranch(e){if(null==e)return!1;let t=this.getRepository(e);return null!=t&&t.hasUpstreamBranch()}hasUnsafeRepositories(){for(let e of this._providers.values())if(e.hasUnsafeRepositories?.())return!0;return!1}isRepositoryForEditor(e,t){return null!=(t=t??b.window.activeTextEditor)&&e===this.getRepository(t.document.uri)}isTrackable(e){if(!this.supportedSchemes.has(e.scheme))return!1;let{provider:t}=this.getProvider(e);return t.isTrackable(e)}async isTracked(e){if(!this.supportedSchemes.has(e.scheme))return!1;let{provider:t}=this.getProvider(e);return t.isTracked(e)}async getDiffTool(e){if(null==e)return;let{provider:t,path:i}=this.getProvider(e);return t.getDiffTool(i)}async openDiffTool(e,t,i){let{provider:r,path:s}=this.getProvider(e);return r.openDiffTool(s,t,i)}async openDirectoryCompare(e,t,i,r){let{provider:s,path:n}=this.getProvider(e);return s.openDirectoryCompare(n,t,i,r)}async resolveReference(e,t,i,r){if(null!=i&&(0,F.j$)(t)&&(t="HEAD"),!t||t===H.Ii||null==i&&(0,F.D3)(t)||null!=i&&(0,F.l3)(t))return t;let{provider:s,path:n}=this.getProvider(e);return s.resolveReference(n,t,i,r)}async richSearchCommits(e,t,i){let{provider:r,path:s}=this.getProvider(e);return r.richSearchCommits(s,t,i)}searchCommits(e,t,i){let{provider:r,path:s}=this.getProvider(e);return r.searchCommits(s,t,i)}async runGitCommandViaTerminal(e,t,i,r){let{provider:s,path:n}=this.getProvider(e);return s.runGitCommandViaTerminal?.(n,t,i,r)}validateBranchOrTagName(e,t){let{provider:i,path:r}=this.getProvider(e);return i.validateBranchOrTagName(r,t)}async validateReference(e,t){if(null==t||0===t.length)return!1;if(t===H.Ii||(0,F.l3)(t))return!0;let{provider:i,path:r}=this.getProvider(e);return i.validateReference(r,t)}stageFile(e,t){let{provider:i,path:r}=this.getProvider(e);return i.stageFile(r,t)}stageDirectory(e,t){let{provider:i,path:r}=this.getProvider(e);return i.stageDirectory(r,t)}unstageFile(e,t){let{provider:i,path:r}=this.getProvider(e);return i.unstageFile(r,t)}unstageDirectory(e,t){let{provider:i,path:r}=this.getProvider(e);return i.unstageDirectory(r,t)}async stashApply(e,t,i){let{provider:r,path:s}=this.getProvider(e);return r.stashApply?.(s,t,i)}async stashDelete(e,t,i){let{provider:r,path:s}=this.getProvider(e);return r.stashDelete?.(s,t,i)}async stashRename(e,t,i,r,s){let{provider:n,path:o}=this.getProvider(e);return n.stashRename?.(o,t,i,r,s)}async stashSave(e,t,i,r){let{provider:s,path:n}=this.getProvider(e);return s.stashSave?.(n,t,i,r)}createWorktree(e,t,i){let{provider:r,path:s}=this.getProvider(e);return Promise.resolve(r.createWorktree?.(s,t,i))}async getWorktree(e,t){let{provider:i,path:r}=this.getProvider(e);return(await i.getWorktrees?.(r)??[]).find(t)}async getWorktrees(e){let{provider:t,path:i}=this.getProvider(e);return await t.getWorktrees?.(i)??[]}async getWorktreesDefaultUri(e){let{provider:t,path:i}=this.getProvider(e),r=await t.getWorktreesDefaultUri?.(i);return null!=r||null!=(r=this.getRepository(i)?.uri)&&(r=b.Uri.joinPath(r,"..")),r}deleteWorktree(e,t,i){let{provider:r,path:s}=this.getProvider(e);return Promise.resolve(r.deleteWorktree?.(s,t,i))}async getOpenScmRepositories(){let e=await Promise.allSettled([...this._providers.values()].map(e=>e.getOpenScmRepositories()));return[...(0,eM.VS)((0,eM.hX)(e,e=>"fulfilled"===e.status),e=>e.value)]}getScmRepository(e){let{provider:t,path:i}=this.getProvider(e);return t.getScmRepository(i)}getOrOpenScmRepository(e){let{provider:t,path:i}=this.getProvider(e);return t.getOrOpenScmRepository(i)}}rw([(0,eW.fF)({args:{0:e=>`(${e?.length??0}) ${e?.map(e=>e.descriptor.id).join(", ")}`,1:e=>`(${e?.length??0}) ${e?.map(e=>e.descriptor.id).join(", ")}`}})],rC.prototype,"fireProvidersChanged",1),rw([(0,eW.fF)({args:{0:e=>`(${e?.length??0}) ${e?.map(e=>e.id).join(", ")}`,1:e=>`(${e?.length??0}) ${e?.map(e=>e.id).join(", ")}`}})],rC.prototype,"fireRepositoriesChanged",1),rw([(0,eW.fF)()],rC.prototype,"onSubscriptionChanged",1),rw([(0,eW.fF)({args:{0:e=>`focused=${e.focused}`}})],rC.prototype,"onWindowStateChanged",1),rw([(0,eW.fF)({args:{0:e=>`added=${e.added.length}, removed=${e.removed.length}`},singleLine:!0})],rC.prototype,"onWorkspaceFoldersChanged",1),rw([(0,eW.cM)({args:{1:!1},singleLine:!0})],rC.prototype,"register",1),rw([(0,eW.cM)({singleLine:!0})],rC.prototype,"registrationComplete",1),rw([(0,eW.cM)({args:{0:e=>e.length}})],rC.prototype,"discoverRepositories",1),rw([(0,eW.fF)({exit:!0})],rC.prototype,"discoverRepositoriesCore",1),rw([(0,eW.cM)()],rC.prototype,"findRepositories",1),rw([(0,eW.fF)({exit:!0})],rC.prototype,"access",1),rw([(0,eW.fF)({exit:!0})],rC.prototype,"accessCore",1),rw([(0,eW.fF)({exit:!0})],rC.prototype,"supports",1),rw([(0,eW.fF)({exit:e=>`returned ${e?.visibility}`})],rC.prototype,"getVisibilityInfoFromCache",1),rw([(0,eW.fF)()],rC.prototype,"clearAllRepoVisibilityCaches",1),rw([(0,eW.fF)()],rC.prototype,"clearAllOpenRepoVisibilityCaches",1),rw([(0,eW.fF)({exit:!0})],rC.prototype,"visibility",1),rw([(0,eW.fF)({exit:!0})],rC.prototype,"visibilityCore",1),rw([(0,eW.fF)()],rC.prototype,"setEnabledContext",1),rw([(0,eW.cM)()],rC.prototype,"getBestRevisionUri",1),rw([(0,eW.cM)()],rC.prototype,"getRevisionUri",1),rw([(0,eW.cM)()],rC.prototype,"getWorkingUri",1),rw([(0,eW.cM)()],rC.prototype,"addRemote",1),rw([(0,eW.cM)()],rC.prototype,"pruneRemote",1),rw([(0,eW.cM)()],rC.prototype,"removeRemote",1),rw([(0,eW.cM)()],rC.prototype,"applyChangesToWorkingFile",1),rw([(0,eW.cM)()],rC.prototype,"applyUnreachableCommitForPatch",1),rw([(0,eW.cM)()],rC.prototype,"checkout",1),rw([(0,eW.cM)()],rC.prototype,"clone",1),rw([(0,eW.cM)({args:{1:"<contents>",3:"<message>"}})],rC.prototype,"createUnreachableCommitForPatch",1),rw([(0,eW.cM)({singleLine:!0})],rC.prototype,"resetCaches",1),rw([(0,eW.cM)({args:{1:e=>e.length}})],rC.prototype,"excludeIgnoredUris",1),rw([(0,t4.H)(),(0,eW.cM)()],rC.prototype,"fetch",1),rw([(0,t4.H)((e,t)=>`${null==e?"":e.map(e=>e.id).join(",")}|${JSON.stringify(t)}`),(0,eW.cM)({args:{0:e=>e?.map(e=>e.name).join(", ")}})],rC.prototype,"fetchAll",1),rw([(0,t4.H)(),(0,eW.cM)()],rC.prototype,"pull",1),rw([(0,t4.H)((e,t)=>`${null==e?"":e.map(e=>e.id).join(",")}|${JSON.stringify(t)}`),(0,eW.cM)({args:{0:e=>e?.map(e=>e.name).join(", ")}})],rC.prototype,"pullAll",1),rw([(0,t4.H)(),(0,eW.cM)()],rC.prototype,"push",1),rw([(0,t4.H)(e=>`${null==e?"":e.map(e=>e.id).join(",")}`),(0,eW.cM)({args:{0:e=>e?.map(e=>e.name).join(", ")}})],rC.prototype,"pushAll",1),rw([(0,eW.cM)({args:{1:e=>e.join(",")}})],rC.prototype,"getAheadBehindCommitCount",1),rw([(0,eW.cM)({args:{1:e=>e?.isDirty}})],rC.prototype,"getBlame",1),rw([(0,eW.cM)({args:{1:"<contents>"}})],rC.prototype,"getBlameContents",1),rw([(0,eW.cM)({args:{2:e=>e?.isDirty}})],rC.prototype,"getBlameForLine",1),rw([(0,eW.cM)({args:{2:"<contents>"}})],rC.prototype,"getBlameForLineContents",1),rw([(0,eW.cM)()],rC.prototype,"getBlameForRange",1),rw([(0,eW.cM)({args:{2:"<contents>"}})],rC.prototype,"getBlameForRangeContents",1),rw([(0,eW.cM)({args:{0:"<blame>"}})],rC.prototype,"getBlameRange",1),rw([(0,eW.cM)()],rC.prototype,"getBranch",1),rw([(0,eW.cM)({args:{0:e=>e.name}})],rC.prototype,"getBranchAheadRange",1),rw([(0,eW.cM)({args:{1:!1}})],rC.prototype,"getBranches",1),rw([(0,eW.cM)()],rC.prototype,"getBranchesAndTagsTipsFn",1),rw([(0,eW.cM)()],rC.prototype,"getChangedFilesCount",1),rw([(0,eW.cM)()],rC.prototype,"getCommit",1),rw([(0,eW.cM)()],rC.prototype,"getCommitBranches",1),rw([(0,eW.cM)()],rC.prototype,"getCommitCount",1),rw([(0,eW.cM)()],rC.prototype,"getCommitForFile",1),rw([(0,eW.cM)()],rC.prototype,"getCommitsForGraph",1),rw([(0,eW.cM)()],rC.prototype,"getCommitTags",1),rw([(0,eW.cM)()],rC.prototype,"getConfig",1),rw([(0,eW.cM)()],rC.prototype,"setConfig",1),rw([(0,eW.cM)()],rC.prototype,"getContributors",1),rw([(0,t4.H)(),(0,eW.cM)()],rC.prototype,"getCurrentUser",1),rw([(0,eW.cM)()],rC.prototype,"getDefaultBranchName",1),rw([(0,eW.cM)()],rC.prototype,"getDiff",1),rw([(0,eW.cM)({args:{1:!1}})],rC.prototype,"getDiffFiles",1),rw([(0,eW.cM)()],rC.prototype,"getDiffForFile",1),rw([(0,eW.cM)({args:{1:"<contents>"}})],rC.prototype,"getDiffForFileContents",1),rw([(0,eW.cM)()],rC.prototype,"getDiffForLine",1),rw([(0,eW.cM)()],rC.prototype,"getDiffStatus",1),rw([(0,eW.cM)()],rC.prototype,"getFileStatusForCommit",1),rw([(0,eW.fF)()],rC.prototype,"getGitDir",1),rw([(0,eW.fF)()],rC.prototype,"getLastFetchedTimestamp",1),rw([(0,eW.cM)()],rC.prototype,"getLog",1),rw([(0,eW.cM)()],rC.prototype,"getLogRefsOnly",1),rw([(0,eW.cM)()],rC.prototype,"getLogForFile",1),rw([(0,eW.cM)()],rC.prototype,"getMergeBase",1),rw([(0,t4.H)(),(0,eW.cM)()],rC.prototype,"getMergeStatus",1),rw([(0,t4.H)(),(0,eW.cM)()],rC.prototype,"getRebaseStatus",1),rw([(0,eW.cM)()],rC.prototype,"getNextComparisonUris",1),rw([(0,eW.cM)()],rC.prototype,"getOldestUnpushedRefForFile",1),rw([(0,eW.cM)()],rC.prototype,"getPreviousComparisonUris",1),rw([(0,eW.cM)()],rC.prototype,"getPreviousComparisonUrisForLine",1),rw([(0,eW.cM)()],rC.prototype,"getIncomingActivity",1),rw([(0,eW.cM)()],rC.prototype,"getBestRemoteWithProvider",1),rw([(0,eW.cM)()],rC.prototype,"getBestRemotesWithProviders",1),rw([(0,eW.cM)()],rC.prototype,"getBestRemoteWithIntegration",1),rw([(0,eW.cM)()],rC.prototype,"getRemotes",1),rw([(0,eW.cM)()],rC.prototype,"getRemotesWithProviders",1),rw([(0,eW.cM)()],rC.prototype,"getRemotesWithIntegrations",1),rw([(0,eW.cM)({exit:!0})],rC.prototype,"getBestRepository",1),rw([(0,eW.cM)({exit:!0})],rC.prototype,"getBestRepositoryOrFirst",1),rw([(0,eW.cM)({exit:!0})],rC.prototype,"getOrOpenRepository",1),rw([(0,eW.cM)({args:{0:e=>null!=e?`TextEditor(${eL.Yd.toLoggable(e.document.uri)})`:void 0}})],rC.prototype,"getOrOpenRepositoryForEditor",1),rw([(0,eW.cM)({exit:!0})],rC.prototype,"getRepository",1),rw([(0,t4.H)(),(0,eW.cM)()],rC.prototype,"getStash",1),rw([(0,eW.cM)()],rC.prototype,"getStatusForFile",1),rw([(0,eW.cM)()],rC.prototype,"getStatusForFiles",1),rw([(0,eW.cM)()],rC.prototype,"getStatusForRepo",1),rw([(0,eW.cM)({args:{1:!1}})],rC.prototype,"getTags",1),rw([(0,eW.cM)()],rC.prototype,"getTreeEntryForRevision",1),rw([(0,eW.cM)()],rC.prototype,"getTreeForRevision",1),rw([(0,t4.H)(),(0,eW.cM)()],rC.prototype,"getRevisionContent",1),rw([(0,eW.cM)({exit:!0})],rC.prototype,"getFirstCommitSha",1),rw([(0,eW.cM)({exit:!0})],rC.prototype,"getUniqueRepositoryId",1),rw([(0,eW.cM)({args:{1:!1},exit:!0})],rC.prototype,"hasBranchOrTag",1),rw([(0,eW.cM)({args:{1:!1},exit:!0})],rC.prototype,"hasCommitBeenPushed",1),rw([(0,eW.cM)({exit:!0})],rC.prototype,"hasRemotes",1),rw([(0,eW.cM)({exit:!0})],rC.prototype,"hasTrackingBranch",1),rw([(0,eW.cM)({exit:!0})],rC.prototype,"hasUnsafeRepositories",1),rw([(0,eW.cM)({args:{0:e=>e.uri.toString(!0),1:e=>null!=e?`TextEditor(${eL.Yd.toLoggable(e.document.uri)})`:void 0},exit:!0})],rC.prototype,"isRepositoryForEditor",1),rw([(0,eW.cM)()],rC.prototype,"getDiffTool",1),rw([(0,eW.cM)()],rC.prototype,"openDiffTool",1),rw([(0,eW.cM)()],rC.prototype,"openDirectoryCompare",1),rw([(0,t4.H)(),(0,eW.cM)()],rC.prototype,"resolveReference",1),rw([(0,eW.cM)({args:{1:e=>`[${e.matchAll?"A":""}${e.matchCase?"C":""}${e.matchRegex?"R":""}]: ${e.query.length>500?`${e.query.substring(0,500)}...`:e.query}`}})],rC.prototype,"richSearchCommits",1),rw([(0,eW.cM)()],rC.prototype,"searchCommits",1),rw([(0,eW.cM)({args:!1})],rC.prototype,"runGitCommandViaTerminal",1),rw([(0,eW.cM)({exit:!0})],rC.prototype,"validateBranchOrTagName",1),rw([(0,eW.cM)({exit:!0})],rC.prototype,"validateReference",1),rw([(0,eW.cM)()],rC.prototype,"stageFile",1),rw([(0,eW.cM)()],rC.prototype,"stageDirectory",1),rw([(0,eW.cM)()],rC.prototype,"unstageFile",1),rw([(0,eW.cM)()],rC.prototype,"unstageDirectory",1),rw([(0,eW.cM)()],rC.prototype,"stashApply",1),rw([(0,eW.cM)()],rC.prototype,"stashDelete",1),rw([(0,eW.cM)()],rC.prototype,"stashRename",1),rw([(0,eW.cM)({args:{2:e=>e?.length}})],rC.prototype,"stashSave",1),rw([(0,eW.cM)()],rC.prototype,"createWorktree",1),rw([(0,eW.cM)()],rC.prototype,"getWorktree",1),rw([(0,eW.cM)()],rC.prototype,"getWorktrees",1),rw([(0,eW.cM)({exit:!0})],rC.prototype,"getWorktreesDefaultUri",1),rw([(0,eW.cM)()],rC.prototype,"deleteWorktree",1),rw([(0,eW.cM)()],rC.prototype,"getOpenScmRepositories",1),rw([(0,eW.cM)()],rC.prototype,"getScmRepository",1),rw([(0,eW.cM)()],rC.prototype,"getOrOpenScmRepository",1);var rA=i(4298),rP=Object.defineProperty,rD=Object.getOwnPropertyDescriptor,rk=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?rD(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&rP(t,i,n),n};class rS{constructor(e){this.container=e,this._disposable=b.Disposable.from((0,iV.IH)(e.onReady)(this.onReady,this),C.D.onDidChange(this.onConfigurationChanged,this))}_disposable;_hoverProviderDisposable;_uri;dispose(){this.unregister(),this.container.lineTracker.unsubscribe(this),this._disposable.dispose()}onReady(){this.onConfigurationChanged()}onConfigurationChanged(e){if(!C.D.changed(e,"hovers.enabled")&&!C.D.changed(e,"hovers.currentLine.enabled"))return;let t=C.D.get("hovers");t.enabled&&t.currentLine.enabled?(this.container.lineTracker.subscribe(this,this.container.lineTracker.onDidChangeActiveLines(this.onActiveLinesChanged,this)),this.register(b.window.activeTextEditor)):(this.container.lineTracker.unsubscribe(this),this.unregister())}onActiveLinesChanged(e){if(!e.pending){if(null==e.editor||null==e.selections){this.unregister();return}this.isRegistered(e.editor?.document.uri)||this.register(e.editor)}}async provideDetailsHover(e,t,i){if(!this.container.lineTracker.includes(t.line))return;let r=this.container.lineTracker.getState(t.line),s=r?.commit;if(null==s)return;let n=C.D.get("hovers");if(n.annotations.details&&"blame"===await this.container.fileAnnotations.getAnnotationType(b.window.activeTextEditor))return;let o="line"===n.currentLine.over;if(!o&&this.container.lineAnnotations.suspended)return;let a=e.validateRange(new b.Range(t.line,o?t.character:1073741824,t.line,1073741824));if(!o&&a.start.character!==t.character)return;let l=t.line,h=l+1;l=(s.lines.find(e=>e.line===h)??s.lines[0]).originalLine-1;let c=await this.container.tracker.get(e);if(null==c||i.isCancellationRequested)return;let u=await (0,ij.nN)(this.container,s,c.uri,l,{autolinks:n.autolinks.enabled,cancellation:i,dateFormat:C.D.get("defaultDateFormat"),format:n.detailsMarkdownFormat,pullRequests:n.pullRequests.enabled,timeout:250})??"Cancelled";return new b.Hover(u,a)}async provideChangesHover(e,t,i){if(!this.container.lineTracker.includes(t.line))return;let r=this.container.lineTracker.getState(t.line),s=r?.commit;if(null==s)return;let n=C.D.get("hovers");if(n.annotations.changes&&"blame"===await this.container.fileAnnotations.getAnnotationType(b.window.activeTextEditor))return;let o="line"===n.currentLine.over;if(!o&&this.container.lineAnnotations.suspended)return;let a=e.validateRange(new b.Range(t.line,o?t.character:1073741824,t.line,1073741824));if(!o&&a.start.character!==t.character)return;let l=await this.container.tracker.get(e);if(null==l)return;let h=await (0,ij.jw)(this.container,s,l.uri,t.line,l.document);if(null!=h)return new b.Hover(h,a)}isRegistered(e){return null!=this._hoverProviderDisposable&&rA.n.equals(this._uri,e)}register(e){if(this.unregister(),null==e)return;let t=C.D.get("hovers");if(!t.enabled||!t.currentLine.enabled||!t.currentLine.details&&!t.currentLine.changes)return;this._uri=e.document.uri;let i=[];t.currentLine.changes&&i.push(b.languages.registerHoverProvider({pattern:this._uri.fsPath},{provideHover:this.provideChangesHover.bind(this)})),t.currentLine.details&&i.push(b.languages.registerHoverProvider({pattern:this._uri.fsPath},{provideHover:this.provideDetailsHover.bind(this)})),this._hoverProviderDisposable=b.Disposable.from(...i)}unregister(){this._uri=void 0,null!=this._hoverProviderDisposable&&(this._hoverProviderDisposable.dispose(),this._hoverProviderDisposable=void 0)}}rk([(0,eW.fF)({args:{0:e=>`editor=${e.editor?.document.uri.toString(!0)}, selections=${e.selections?.map(e=>`[${e.anchor}-${e.active}]`).join(",")}, pending=${!!e.pending}, reason=${e.reason}`}})],rS.prototype,"onActiveLinesChanged",1),rk([(0,eW.fF)({args:{0:e=>eL.Yd.toLoggable(e.uri),1:e=>`${e.line}:${e.character}`,2:!1}})],rS.prototype,"provideDetailsHover",1),rk([(0,eW.fF)({args:{0:e=>eL.Yd.toLoggable(e.uri),1:e=>`${e.line}:${e.character}`,2:!1}})],rS.prototype,"provideChangesHover",1);var rR=Object.defineProperty,r$=Object.getOwnPropertyDescriptor,r_=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?r$(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&rR(t,i,n),n};class rI{constructor(e,t){this.container=e,this.connection=t}dispose(){}async createDraft(e,t,i,r){let s=(0,eH.UH)();try{let s;let n=await Promise.allSettled(i.map(e=>this.getCreateDraftPatchRequestFromChange(e)));if(!n.length)throw Error("No changes found");let o=[],a=[];for(let e of n)"fulfilled"===e.status?e.value.contents&&(o.push(e.value),null==s&&(s=e.value.user)):a.push(e.reason);if(a.length)throw AggregateError(a,"Unable to create draft");let l=await this.connection.fetchGkDevApi("v1/drafts",{method:"POST",body:JSON.stringify({type:e,title:t,description:r?.description,isPublic:!0})});if(!l.ok){let e=await l.json();throw Error(e?.error?.message??l.statusText)}let h=(await l.json()).data,c=h.id,u=await this.connection.fetchGkDevApi(`v1/drafts/${c}/changesets`,{method:"POST",body:JSON.stringify({gitUserName:s?.name,gitUserEmail:s?.email,patches:o.map(e=>e.patch)})}),d=(await u.json()).data,p=[],g=0;for(let e of d.patches){let{url:t,method:i,headers:r}=e.secureUploadData,{contents:s,repository:n}=o[g++];if(null==s)throw Error(`No contents found for ${e.baseCommitSha}`);let a=await this.container.git.getDiffFiles(n.path,s),l=a?.files.map(t=>({...t,gkRepositoryId:e.gitRepositoryId}))??[];await this.connection.fetch(t,{method:i,headers:{"Content-Type":"text/plain",Host:r?.Host?.["0"]??""},body:s}),p.push({type:"cloud",id:e.id,createdAt:new Date(e.createdAt),updatedAt:new Date(e.updatedAt??e.createdAt),draftId:e.draftId,changesetId:e.changesetId,userId:d.userId,baseBranchName:e.baseBranchName,baseRef:e.baseCommitSha,gkRepositoryId:e.gitRepositoryId,secureLink:void 0,contents:s,files:l,repository:n})}let m=await this.connection.fetchGkDevApi(`v1/drafts/${c}/publish`,{method:"POST"});if(!m.ok)throw Error(`Failed to publish draft: ${m.statusText}`);let f=await this.connection.fetchGkDevApi(`v1/drafts/${c}`,{method:"GET"}),w=(await f.json()).data,v={id:w.createdBy,name:void 0,email:void 0},{account:y}=await this.container.subscription.getSubscription();return w.createdBy===y?.id&&(v.name=`${y.name} (you)`,v.email=y.email),{draftType:"cloud",type:w.type,id:c,createdAt:new Date(w.createdAt),updatedAt:new Date(w.updatedAt??w.createdAt),author:v,organizationId:w.organizationId||void 0,isPublished:w.isPublished,title:w.title,description:w.description,deepLinkUrl:h.deepLink,deepLinkAccess:w.isPublic?"public":"private",latestChangesetId:w.latestChangesetId,changesets:[{id:d.id,createdAt:new Date(d.createdAt),updatedAt:new Date(d.updatedAt??d.createdAt),draftId:d.draftId,parentChangesetId:d.parentChangesetId,userId:d.userId,gitUserName:d.gitUserName,gitUserEmail:d.gitUserEmail,deepLinkUrl:d.deepLink,patches:p}]}}catch(e){throw eL.Yd.error(e,s),e}}async getCreateDraftPatchRequestFromChange(e){let t;let i=(0,F.l3)(e.revision.to),[r,s,n,o,a]=await Promise.allSettled([i?this.container.git.getBranch(e.repository.uri).then(e=>null!=e?[e.name]:void 0):this.container.git.getCommitBranches(e.repository.uri,e.revision.to).then(t=>t.length?t:this.container.git.getCommitBranches(e.repository.uri,e.revision.from)),null==e.contents?this.container.git.getDiff(e.repository.path,e.revision.to,e.revision.from):void 0,this.container.git.getFirstCommitSha(e.repository.uri),this.container.git.getBestRemoteWithProvider(e.repository.uri),this.container.git.getCurrentUser(e.repository.uri)]),l=(0,t6.Sb)(n),h=(0,t6.Sb)(o);if(null==h){if(null==l)throw Error("No remote or initial commit found");t={initialCommitSha:l}}else t={initialCommitSha:l,remote:{url:h.url,domain:h.domain,path:h.path},provider:null!=h.provider.gkProviderId?{id:h.provider.gkProviderId,repoDomain:h.provider.domain,repoName:h.provider.path}:void 0};let c=(0,t6.Sb)(s),u=e.contents??c?.contents;if(null==u)throw Error(`Unable to diff ${e.revision.from} and ${e.revision.to}`);let d=(0,t6.Sb)(a),p=(0,t6.Sb)(r),g=p?.[0]??"",m=e.revision.from;if(!(0,F.D3)(m)){let t=await this.container.git.getCommit(e.repository.uri,m);null!=t&&(m=t.sha)}return{patch:{baseCommitSha:m,baseBranchName:g,gitRepoData:t},contents:u,repository:e.repository,user:d}}async deleteDraft(e){await this.connection.fetchGkDevApi(`v1/drafts/${e}`,{method:"DELETE"})}async getDraft(e){let[t,i]=await Promise.allSettled([this.connection.fetchGkDevApi(`v1/drafts/${e}`,{method:"GET"}),this.getChangesets(e)]),r=(0,t6.Sb)(t);if(r?.ok===!1)throw eL.Yd.error(void 0,`Getting draft failed: (${r.status}) ${r.statusText}`),Error(r.statusText);let s=(await r.json()).data,n=(0,t6.Sb)(i)??[],o={id:s.createdBy,name:void 0,email:void 0},{account:a}=await this.container.subscription.getSubscription();return s.createdBy===a?.id&&(o.name=`${a.name} (you)`,o.email=a.email),{draftType:"cloud",type:s.type,id:s.id,createdAt:new Date(s.createdAt),updatedAt:new Date(s.updatedAt??s.createdAt),author:o,organizationId:s.organizationId||void 0,isPublished:s.isPublished,title:s.title,description:s.description,deepLinkUrl:s.deepLink,deepLinkAccess:s.isPublic?"public":"private",latestChangesetId:s.latestChangesetId,changesets:n}}async getDrafts(){let e=await this.connection.fetchGkDevApi("/v1/drafts",{method:"GET"}),t=(await e.json()).data,{account:i}=await this.container.subscription.getSubscription();return t.map(e=>({draftType:"cloud",type:e.type,id:e.id,author:e.createdBy===i?.id?{id:e.createdBy,name:`${i.name} (you)`,email:i.email}:{id:e.createdBy,name:"Unknown",email:void 0},organizationId:e.organizationId||void 0,isPublished:e.isPublished,title:e.title,description:e.description,deepLinkUrl:e.deepLink,deepLinkAccess:e.isPublic?"public":"private",createdAt:new Date(e.createdAt),updatedAt:new Date(e.updatedAt??e.createdAt),latestChangesetId:e.latestChangesetId}))}async getChangesets(e){let t=await this.connection.fetchGkDevApi(`/v1/drafts/${e}/changesets`,{method:"GET"}),i=(await t.json()).data,r=[];for(let e of i){let t=[];for(let i of e.patches)t.push({type:"cloud",id:i.id,createdAt:new Date(i.createdAt),updatedAt:new Date(i.updatedAt??i.createdAt),draftId:i.draftId,changesetId:i.changesetId,userId:e.userId,baseBranchName:i.baseBranchName,baseRef:i.baseCommitSha,gkRepositoryId:i.gitRepositoryId,secureLink:i.secureDownloadData});r.push({id:e.id,createdAt:new Date(e.createdAt),updatedAt:new Date(e.updatedAt??e.createdAt),draftId:e.draftId,parentChangesetId:e.parentChangesetId,userId:e.userId,gitUserName:e.gitUserName,gitUserEmail:e.gitUserEmail,deepLinkUrl:e.deepLink,patches:t})}return r}async getPatch(e){let t=await this.getPatchCore(e),i=await this.getPatchDetails(t);return t.contents=i.contents,t.files=i.files,t.repository=i.repository,t}async getPatchCore(e){let t=await this.connection.fetchGkDevApi(`/v1/patches/${e}`,{method:"GET"}),i=(await t.json()).data;return{type:"cloud",id:i.id,createdAt:new Date(i.createdAt),updatedAt:new Date(i.updatedAt??i.createdAt),draftId:i.draftId,changesetId:i.changesetId,userId:i.userId,baseBranchName:i.baseBranchName,baseRef:i.baseCommitSha,gkRepositoryId:i.gitRepositoryId,secureLink:i.secureDownloadData}}async getPatchDetails(e){let t="string"==typeof e?await this.getPatchCore(e):e,[i,r]=await Promise.allSettled([this.getPatchContentsCore(t.secureLink),this.container.repositoryIdentity.getRepositoryOrIdentity(t.gkRepositoryId,{openIfNeeded:!0,skipRefValidation:!0})]),s=(0,t6.Sb)(i),n=(0,t6.Sb)(r),o="";(0,tP.uC)(n)&&(o=n.path);let a=await this.container.git.getDiffFiles(o,s),l=a?.files.map(e=>({...e,gkRepositoryId:t.gkRepositoryId}))??[];return{id:t.id,contents:s,files:l,repository:n}}async getPatchContentsCore(e){let{url:t,method:i,headers:r}=e;return(await this.connection.fetch(t,{method:i,headers:{Accept:"text/plain",Host:r?.Host?.["0"]??""}})).text()}}r_([(0,eW.cM)({args:{2:!1}})],rI.prototype,"createDraft",1),r_([(0,eW.cM)()],rI.prototype,"deleteDraft",1),r_([(0,eW.cM)()],rI.prototype,"getDraft",1),r_([(0,eW.cM)()],rI.prototype,"getDrafts",1),r_([(0,eW.cM)()],rI.prototype,"getChangesets",1),r_([(0,eW.cM)()],rI.prototype,"getPatch",1),r_([(0,eW.cM)({args:{0:e=>"string"==typeof e?e:e.id}})],rI.prototype,"getPatchDetails",1);var rF=i(4435),rx=Object.defineProperty,rT=Object.getOwnPropertyDescriptor,rO=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?rT(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&rx(t,i,n),n};class rE{constructor(e,t){this.container=e,this.connection=t}dispose(){}async delete(e,t){let i=(0,eH.UH)();try{let i=await this.connection.fetchGkDevApi(`v1/enrich-items/${e}`,{method:"DELETE"});if(!i.ok)throw Error(`Unable to ${t} item '${e}':  (${i.status}) ${i.statusText}`)}catch(e){throw eL.Yd.error(e,i),e}}async get(e){let t=(0,eH.UH)();try{let t=await this.connection.fetchGkDevApi("v1/enrich-items",{method:"GET"}),i=await t.json();return null==e?i.data:i.data.filter(t=>t.type===e)}catch(e){if(e instanceof ru.TZ)return[];throw eL.Yd.error(e,t),e}}getPins(){return this.get("pin")}getSnoozed(){return this.get("snooze")}async pinItem(e){let t=(0,eH.UH)();try{if(!await (0,rF.wz)("Pinning requires a GitKraken account.",this.container))throw Error("Unable to pin item: account required");let t={provider:e.remote.provider.id,entityType:e.type,entityId:e.id,entityUrl:e.url},i=await this.connection.fetchGkDevApi("v1/enrich-items/pin",{method:"POST",body:JSON.stringify(t)});if(!i.ok)throw Error(`Unable to pin item '${t.provider}|${t.entityUrl}#${e.id}':  (${i.status}) ${i.statusText}`);return(await i.json()).data}catch(e){throw eL.Yd.error(e,t),e}}unpinItem(e){return this.delete(e,"unpin")}async snoozeItem(e){let t=(0,eH.UH)();try{if(!await (0,rF.eb)("Snoozing requires a trial or paid plan",this.container))throw Error("Unable to snooze item: subscription required");let t={provider:e.remote.provider.id,entityType:e.type,entityId:e.id,entityUrl:e.url},i=await this.connection.fetchGkDevApi("v1/enrich-items/snooze",{method:"POST",body:JSON.stringify(t)});if(!i.ok)throw Error(`Unable to snooze item '${t.provider}|${t.entityUrl}#${e.id}':  (${i.status}) ${i.statusText}`);return(await i.json()).data}catch(e){throw eL.Yd.error(e,t),e}}unsnoozeItem(e){return this.delete(e,"unsnooze")}}rO([(0,eW.cM)()],rE.prototype,"get",1),rO([(0,eW.cM)()],rE.prototype,"getPins",1),rO([(0,eW.cM)()],rE.prototype,"getSnoozed",1),rO([(0,eW.cM)({args:{0:e=>`${e.id} (${e.remote.provider.name} ${e.type})`}})],rE.prototype,"pinItem",1),rO([(0,eW.cM)()],rE.prototype,"unpinItem",1),rO([(0,eW.cM)({args:{0:e=>`${e.id} (${e.remote.provider.name} ${e.type})`}})],rE.prototype,"snoozeItem",1),rO([(0,eW.cM)()],rE.prototype,"unsnoozeItem",1);var rB=Object.defineProperty,rU=Object.getOwnPropertyDescriptor,rW=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?rU(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&rB(t,i,n),n};let rM="did-authenticate";class rL{constructor(e,t){this.container=e,this.connection=t}_cancellationSource;_deferredCodeExchanges=new Map;_pendingStates=new Map;_statusBarItem;dispose(){}abort(){return null==this._cancellationSource?Promise.resolve():(this._cancellationSource.cancel(),new Promise(e=>setTimeout(e,50)))}async getAccountInfo(e){let t;let i=(0,eH.UH)();try{t=await this.connection.fetchApi("user",void 0,{token:e})}catch(e){throw eL.Yd.error(e,i),e}if(!t.ok)throw eL.Yd.error(void 0,`Getting account info failed: (${t.status}) ${t.statusText}`),Error(t.statusText);let r=await t.json();return{id:r.id,accountName:r.username}}async login(e,t){this.updateStatusBarItem(!0);let i=(0,tp.Vj)(),r=this._pendingStates.get(t)??[];this._pendingStates.set(t,[...r,i]);let s=await b.env.asExternalUri(b.Uri.parse(`${b.env.uriScheme}://${this.container.context.extension.id}/${rM}?gkstate=${i}`)),n=this.connection.getAccountsUri("register",`${e.includes("gitlens")?"referrer=gitlens&":""}pass-token=true&return-url=${encodeURIComponent(s.toString())}`);await b.env.openExternal(n);let o=this._deferredCodeExchanges.get(t);return null==o&&(o=(0,iV.ue)(this.container.uri.onDidReceiveAuthenticationUri,this.getUriHandlerDeferredExecutor(t)),this._deferredCodeExchanges.set(t,o)),null!=this._cancellationSource&&(this._cancellationSource.cancel(),this._cancellationSource=void 0),this._cancellationSource=new b.CancellationTokenSource,this.openCompletionInputFallback(this._cancellationSource.token),Promise.race([o.promise,new Promise((e,t)=>this._cancellationSource?.token.onCancellationRequested(()=>t("Cancelled"))),new Promise((e,t)=>setTimeout(t,12e4,"Cancelled"))]).finally(()=>{this._cancellationSource?.cancel(),this._cancellationSource=void 0,this._pendingStates.delete(t),o?.cancel(),this._deferredCodeExchanges.delete(t),this.updateStatusBarItem(!1)})}async openCompletionInputFallback(e){let t=b.window.createInputBox();t.ignoreFocusOut=!0;let i=[];try{if(e.isCancellationRequested)return;let r=await new Promise(r=>{i.push(e.onCancellationRequested(()=>t.hide()),t.onDidHide(()=>r(void 0)),t.onDidChangeValue(e=>{if(!e){t.validationMessage=void 0;return}try{let i=b.Uri.parse(e.trim());if(i.scheme&&"file"!==i.scheme){t.validationMessage=void 0;return}}catch{}t.validationMessage="Please enter a valid authorization URL"}),t.onDidAccept(()=>r(b.Uri.parse(t.value.trim())))),t.title="GitKraken Sign In",t.placeholder="Please enter the provided authorization URL",t.prompt="If the auto-redirect fails, paste the authorization URL",t.show()});null!=r&&this.container.uri.handleUri(r)}finally{t.dispose(),i.forEach(e=>void e.dispose())}}getUriHandlerDeferredExecutor(e){return(t,i,r)=>{let s=new URLSearchParams(t.query),n=this._pendingStates.get(e),o=s.get("gkstate");if(null==n||!o||!n.includes(o)){eL.Yd.log("State not found in accepted state. Skipping this execution...");return}let a=s.get("access-token"),l=s.get("code"),h=a??l;null==h?r("Token not returned"):i(h)}}updateStatusBarItem(e){e&&null==this._statusBarItem&&(this._statusBarItem=b.window.createStatusBarItem("gitlens.plus.signIn",b.StatusBarAlignment.Left),this._statusBarItem.name="GitKraken Sign in",this._statusBarItem.text="Signing in to GitKraken...",this._statusBarItem.show()),e||null==this._statusBarItem||(this._statusBarItem.dispose(),this._statusBarItem=void 0)}}rW([(0,eW.fF)({args:!1,exit:e=>`returned ${e.id}`})],rL.prototype,"getAccountInfo",1),rW([(0,eW.fF)()],rL.prototype,"login",1);var rN=Object.defineProperty,rH=Object.getOwnPropertyDescriptor,rG=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?rH(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&rN(t,i,n),n};let rq="gitlens+",rY=["gitlens"];class rj{constructor(e,t){this.container=e,this._authConnection=new rL(e,t),this._sessionsPromise=this.getSessionsFromStorage(),this._disposable=b.Disposable.from(this._authConnection,b.authentication.registerAuthenticationProvider(rq,"GitKraken: GitLens",this,{supportsMultipleAccounts:!1}),this.container.storage.onDidChangeSecrets(()=>this.checkForUpdates()))}_onDidChangeSessions=new b.EventEmitter;get onDidChangeSessions(){return this._onDidChangeSessions.event}_disposable;_authConnection;_sessionsPromise;dispose(){this._disposable.dispose()}get secretStorageKey(){return`gitlens.plus.auth:${this.container.env}`}abort(){return this._authConnection.abort()}async createSession(e){let t=(0,eH.UH)(),i=rV(e=e.sort());try{let t=await this._authConnection.login(e,i),r=await this.createSessionForToken(t,e),s=await this._sessionsPromise,n=s.findIndex(e=>e.id===r.id||rV(e.scopes)===i);return n>-1?s.splice(n,1,r):s.push(r),await this.storeSessions(s),this._onDidChangeSessions.fire({added:[r],removed:[],changed:[]}),r}catch(e){if("Cancelled"===e)throw e;throw eL.Yd.error(e,t),b.window.showErrorMessage(`Unable to sign in to GitKraken: ${e instanceof ru.FU?"request timed out":e}. Please try again. If this issue persists, please contact support.`),e}}async getSessions(e){let t=(0,eH.UH)(),i=rV(e=e?.sort()),r=await this._sessionsPromise,s=null!=e?r.filter(e=>rV(e.scopes)===i):r;return(0,eH.lH)(t,` \u2022 Found ${s.length} sessions`),s}async removeSession(e){let t=(0,eH.UH)();try{let t=await this._sessionsPromise,i=t.findIndex(t=>t.id===e);if(-1===i){eL.Yd.log(`Unable to remove session ${e}; Not found`);return}let r=t[i];t.splice(i,1),await this.storeSessions(t),this._onDidChangeSessions.fire({added:[],removed:[r],changed:[]})}catch(e){throw eL.Yd.error(e,t),b.window.showErrorMessage(`Unable to sign out of GitKraken: ${e}`),e}}async removeSessionsByScopes(e){let t=(0,eH.UH)();try{e=e?.sort();let t=rV(e),i=[],r=0,s=await this._sessionsPromise;for(let e of s){if(rV(e.scopes)!==t){r++;continue}s.splice(r,1),i.push(e)}if(0===i.length)return;await this.storeSessions(s),this._onDidChangeSessions.fire({added:[],removed:i,changed:[]})}catch(e){throw eL.Yd.error(e,t),b.window.showErrorMessage(`Unable to sign out of GitKraken: ${e}`),e}}async checkForUpdates(){let e=await this._sessionsPromise;this._sessionsPromise=this.getSessionsFromStorage();let t=await this._sessionsPromise,i=[],r=[];for(let r of t)e.some(e=>e.id===r.id)||i.push(r);for(let i of e)t.some(e=>e.id===i.id)||r.push(i);(i.length||r.length)&&(eL.Yd.debug(`Firing sessions changed event; added=${i.length}, removed=${r.length}`),this._onDidChangeSessions.fire({added:i,removed:r,changed:[]}))}async createSessionForToken(e,t){let i=await this._authConnection.getAccountInfo(e);return{id:(0,tp.Vj)(),accessToken:e,account:{label:i.accountName,id:i.id},scopes:t}}async getSessionsFromStorage(){let e;try{let t=await this.container.storage.getSecret(this.secretStorageKey);if(!t||"[]"===t)return[];try{e=JSON.parse(t)}catch(e){try{await this.container.storage.deleteSecret(this.secretStorageKey)}catch{}throw e}}catch(e){return eL.Yd.error(e,"Unable to read sessions from storage"),[]}let t=e.map(async e=>{let t;let i=rV(e.scopes);if(eL.Yd.debug(`Read session from storage with scopes=${i}`),null==e.account)try{t=await this._authConnection.getAccountInfo(e.accessToken),eL.Yd.debug(`Verified session with scopes=${i}`)}catch(e){if("Unauthorized"===e.message)return}return{id:e.id,account:{label:null!=e.account?e.account.label??e.account.displayName??"<unknown>":t?.accountName??"<unknown>",id:e.account?.id??t?.id??"<unknown>"},scopes:e.scopes,accessToken:e.accessToken}}),i=(await Promise.allSettled(t)).filter(e=>"fulfilled"===e.status).map(e=>e.value).filter(e=>!!e);return eL.Yd.debug(`Found ${i.length} verified sessions`),i.length!==e.length&&await this.storeSessions(i),i}async storeSessions(e){try{this._sessionsPromise=Promise.resolve(e),await this.container.storage.storeSecret(this.secretStorageKey,JSON.stringify(e))}catch(t){eL.Yd.error(t,`Unable to store ${e.length} sessions`)}}}function rV(e){return e?.join("|")}rG([(0,eW.fF)()],rj.prototype,"createSession",1),rG([(0,eW.fF)()],rj.prototype,"getSessions",1),rG([(0,eW.fF)()],rj.prototype,"removeSession",1),rG([(0,eW.fF)()],rj.prototype,"removeSessionsByScopes",1);var rQ=i(9967);function rz(e){switch(e){case"gitlens-pro":case"bundle-pro":case"gitkraken_v1-pro":return rd.Cx.Pro;case"gitlens-teams":case"bundle-teams":case"gitkraken_v1-teams":return rd.Cx.Teams;case"gitlens-hosted-enterprise":case"gitlens-self-hosted-enterprise":case"gitlens-standalone-enterprise":case"bundle-hosted-enterprise":case"bundle-self-hosted-enterprise":case"bundle-standalone-enterprise":case"gitkraken_v1-hosted-enterprise":case"gitkraken_v1-self-hosted-enterprise":case"gitkraken_v1-standalone-enterprise":return rd.Cx.Enterprise;default:return rd.Cx.FreePlus}}function rK(e){switch(e){case"bundle-pro":case"bundle-teams":case"bundle-hosted-enterprise":case"bundle-self-hosted-enterprise":case"bundle-standalone-enterprise":return!0;default:return!1}}function rJ(e){switch(e){case"active":return 100;case"expired":case"cancelled":return -100;case"in_trial":case"trial":return 1;case"canceled":case"non_renewing":return 0;default:return -200}}var rZ=i(718),rX=Object.defineProperty,r0=Object.getOwnPropertyDescriptor,r1=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?r0(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&rX(t,i,n),n};class r2{constructor(e,t,i){this.container=e,this.connection=t,this._disposable=b.Disposable.from((0,t5.IH)(e.onReady)(this.onReady,this),this.container.accountAuthentication.onDidChangeSessions(e=>setTimeout(()=>this.onAuthenticationChanged(e),0),this),C.D.onDidChange(e=>{C.D.changed(e,"plusFeatures")&&this.updateContext()}));let r=this.getStoredSubscription();null!=r&&(0,eq.L5)(i,"< 14.0")&&(r.previewTrial=void 0),this.changeSubscription(r,{silent:!0}),setTimeout(()=>void this.ensureSession(!1),1e4)}_onDidChange=new b.EventEmitter;get onDidChange(){return this._onDidChange.event}_disposable;_subscription;_statusBarSubscription;_validationTimer;dispose(){this._statusBarSubscription?.dispose(),this._disposable.dispose()}async onAuthenticationChanged(e){let t=this._session;if(null==t&&null!=this._sessionPromise&&(t=await this._sessionPromise),null!=t&&e.removed?.some(e=>e.id===t.id)){this._session=void 0,this._sessionPromise=void 0,this.logout();return}let i=e.added?.[0]??e.changed?.[0];if(null!=i){if(i.id===t?.id&&i.accessToken===t?.accessToken)return;this._session=t,this.validate({force:!0})}}_etag=0;get etag(){return this._etag}onReady(){this._disposable=b.Disposable.from(this._disposable,this.container.git.onDidChangeRepositories(this.onRepositoriesChanged,this),...this.registerCommands()),this.updateContext()}onRepositoriesChanged(e){this.updateContext()}registerCommands(){return this.container.viewCommands,[(0,rg.xR)($.Gh.PlusLoginOrSignUp,()=>this.loginOrSignUp()),(0,rg.xR)($.Gh.PlusLogout,()=>this.logout()),(0,rg.xR)($.Gh.PlusStartPreviewTrial,()=>this.startPreviewTrial()),(0,rg.xR)($.Gh.PlusManage,()=>this.manage()),(0,rg.xR)($.Gh.PlusPurchase,()=>this.purchase()),(0,rg.xR)($.Gh.PlusResendVerification,()=>this.resendVerification()),(0,rg.xR)($.Gh.PlusValidate,()=>this.validate({force:!0})),(0,rg.xR)($.Gh.PlusShowPlans,()=>this.showPlans()),(0,rg.xR)($.Gh.PlusHide,()=>C.D.updateEffective("plusFeatures.enabled",!1)),(0,rg.xR)($.Gh.PlusRestore,()=>C.D.updateEffective("plusFeatures.enabled",!0)),(0,rg.xR)("gitlens.plus.reset",()=>this.logout(!0))]}async getAuthenticationSession(e=!1){return this.ensureSession(e)}async getSubscription(e=!1){let t=this.ensureSession(!1);return e||await t,this._subscription}async learnAboutPreviewOrTrial(){let e=await this.getSubscription();e.state===rd.jc.FreeInPreviewTrial?(0,eG.lN)(this.container.context.extension.id,"gitlens.welcome","gitlens.welcome.preview",!1):e.state===rd.jc.FreePlusInTrial&&(0,eG.lN)(this.container.context.extension.id,"gitlens.welcome","gitlens.welcome.trial",!1)}async loginOrSignUp(){if(!await (0,rZ.C)())return!1;await this.container.accountAuthentication.abort(),this.showAccountView();let e=!!await this.ensureSession(!0);if(e){let{account:e,plan:{actual:t,effective:i}}=this._subscription;if(e?.verified===!1){let e={title:"Resend Verification",isCloseAffordance:!0};await b.window.showInformationMessage(`You must verify your email before you can access ${i.name}.`,e,{title:"Cancel"})===e&&this.resendVerification()}else if((0,rd.dz)(this._subscription)){let e=(0,rd.PY)(this._subscription,"days"),t={title:"Learn More"};await b.window.showInformationMessage(`Welcome to ${i.name} (Trial). You can now try Pro features on privately hosted repos for ${(0,L._6)("more day",e??0)}.`,{modal:!0},{title:"OK",isCloseAffordance:!0},t)===t&&this.learnAboutPreviewOrTrial()}else(0,rd.ww)(this._subscription)?b.window.showInformationMessage(`Welcome to ${t.name}. You can now use Pro features on privately hosted repos.`,"OK"):b.window.showInformationMessage(`Welcome to ${t.name}. You can use Pro features on local & publicly hosted repos.`,"OK")}return e}async logout(e=!1){return this.logoutCore(e)}async logoutCore(e=!1){if(this._lastValidatedDate=void 0,null!=this._validationTimer&&(clearInterval(this._validationTimer),this._validationTimer=void 0),await this.container.accountAuthentication.abort(),this._sessionPromise=void 0,null!=this._session?(this.container.accountAuthentication.removeSession(this._session.id),this._session=void 0):this.container.accountAuthentication.removeSessionsByScopes(rY),e&&this.container.debugging){this.changeSubscription(void 0);return}this.changeSubscription({...this._subscription,plan:{actual:(0,rd.fV)(rd.Cx.Free,!1,0,void 0,this._subscription.plan?.actual?.startedOn!=null?new Date(this._subscription.plan.actual.startedOn):void 0),effective:(0,rd.fV)(rd.Cx.Free,!1,0,void 0,this._subscription.plan?.effective?.startedOn!=null?new Date(this._subscription.plan.actual.startedOn):void 0)},account:void 0})}manage(){b.env.openExternal(this.connection.getAccountsUri())}async purchase(){await (0,rZ.C)()&&(null==this._subscription.account?this.showPlans():b.env.openExternal(this.connection.getAccountsUri("subscription","product=gitlens&license=PRO")),await this.showAccountView())}async resendVerification(){if(this._subscription.account?.verified)return!0;let e=(0,eH.UH)();this.showAccountView(!0);let t=await this.ensureSession(!1);if(null==t)return!1;try{let i=await this.connection.fetchApi("resend-email",{method:"POST",body:JSON.stringify({id:t.account.id})},{token:t.accessToken});if(!i.ok)return eL.Yd.error("",e,`Unable to resend verification email; status=(${i.status}): ${i.statusText}`),b.window.showErrorMessage(`Unable to resend verification email; Status: ${i.statusText}`,"OK"),!1;let r={title:"Recheck"};if(await b.window.showInformationMessage("Once you have verified your email address, click 'Recheck'.",r,{title:"Cancel"})===r)return await this.validate({force:!0}),!0}catch(t){eL.Yd.error(t,e),b.window.showErrorMessage("Unable to resend verification email","OK")}return!1}async showAccountView(e=!1){(!e||C.D.get("plusFeatures.enabled",void 0,!0))&&!this.container.accountView.visible&&await (0,rg.P0)($.Gh.ShowAccountView)}showPlans(){b.env.openExternal(this.connection.getSiteUri("gitlens/pricing"))}async startPreviewTrial(e){let t;if(!await (0,rZ.C)())return;let{plan:i,previewTrial:r}=this._subscription;if(null!=r){if(this.showAccountView(),!e&&i.effective.id===rd.Cx.Free){let e={title:"Start Free GitKraken Trial",isCloseAffordance:!0};await b.window.showInformationMessage("Your 3-day Pro preview has ended, start a free GitKraken trial to get an additional 7 days.\n\n✨ A trial or paid plan is required to use Pro features on privately hosted repos.",{modal:!0},e,{title:"Cancel"})===e&&this.loginOrSignUp()}return}if((0,rd._n)(this._subscription))return;let s=new Date,n=new Date(s);this.container.debugging?(n=(0,ev.IH)(n,{minutes:1}),t=0):(n.setHours(23,59,59,999),n=(0,ev.IH)(n,{days:3}),t=3),r={startedOn:s.toISOString(),expiresOn:n.toISOString()},this.changeSubscription({...this._subscription,plan:{...this._subscription.plan,effective:(0,rd.fV)(rd.Cx.Pro,!1,0,void 0,s,n)},previewTrial:r}),e||setTimeout(async()=>{let e={title:"Learn More"};await b.window.showInformationMessage(`You can now preview Pro features for ${(0,L._6)("day",t)}. After which, you can start a free GitKraken trial for an additional 7 days.`,{title:"OK",isCloseAffordance:!0},e)===e&&this.learnAboutPreviewOrTrial()},1)}async validate(e){let t=(0,eH.UH)(),i=await this.ensureSession(!1);if(null==i){this.changeSubscription(this._subscription);return}try{await this.checkInAndValidate(i,e)}catch(e){eL.Yd.error(e,t)}}_lastValidatedDate;async checkInAndValidate(e,t){let i=(0,eH.UH)();if(!t?.force&&null!=this._lastValidatedDate&&Date.now()-this._lastValidatedDate.getTime()<432e5&&!(0,rd.Z1)(this._subscription)){(0,eH.lH)(i,` (${(0,ev.Zh)(this._lastValidatedDate.getTime(),!0)})...`,"skipped");return}let r=this.checkInAndValidateCore(e);if(!t?.showSlowProgress)return r;let s=await (0,t2.Zo)(r,void 0,3e3);s.paused&&await b.window.withProgress({location:b.ProgressLocation.Notification,title:"Validating your GitKraken account..."},()=>s.value)}async checkInAndValidateCore(e){let t=(0,eH.UH)();this._lastValidatedDate=void 0;try{let t={id:e.account.id,platform:(0,tm.Xf)(),gitlensVersion:this.container.version,machineId:b.env.machineId,sessionId:b.env.sessionId,vscodeEdition:b.env.appName,vscodeHost:b.env.appHost,vscodeVersion:b.version,previewStartedOn:this._subscription.previewTrial?.startedOn,previewExpiresOn:this._subscription.previewTrial?.expiresOn},i=await this.connection.fetchApi("gitlens/checkin",{method:"POST",body:JSON.stringify(t)},{token:e.accessToken});if(!i.ok)throw new ru.dt("Unable to validate account",void 0,i.status,i.statusText);let r=await i.json();this.validateAndUpdateSubscription(r)}catch(e){if(eL.Yd.error(e,t),e instanceof ru.dt)throw e;throw new ru.dt("Unable to validate account",e)}finally{this.startDailyValidationTimer()}}startDailyValidationTimer(){null!=this._validationTimer&&clearInterval(this._validationTimer),this._validationTimer=setInterval(()=>{(null==this._lastValidatedDate||this._lastValidatedDate.getDate()!==new Date().getDate())&&this.ensureSession(!1,!0)},216e5)}validateAndUpdateSubscription(e){let t=function(e){let t,i;let r={id:e.user.id,name:e.user.name,email:e.user.email,verified:"activated"===e.user.status,createdOn:e.user.createdDate,organizationIds:e.orgIds??[]},s=Object.entries(e.licenses.effectiveLicenses),n=Object.entries(e.licenses.paidLicenses);if(n.length>0){n.length>1&&n.sort((e,t)=>(0,rd.kU)(rz(t[0]))+rJ(t[1].latestStatus)-((0,rd.kU)(rz(e[0]))+rJ(e[1].latestStatus)));let[e,i]=n[0];t=(0,rd.fV)(rz(e),rK(e),i.reactivationCount??0,i.organizationId,new Date(i.latestStartDate),new Date(i.latestEndDate),"cancelled"===i.latestStatus)}if(null==t&&(t=(0,rd.fV)(rd.Cx.FreePlus,!1,0,void 0,null!=e.user.firstGitLensCheckIn?new Date(e.user.firstGitLensCheckIn):null!=e.user.createdDate?new Date(e.user.createdDate):void 0)),s.length>0){s.length>1&&s.sort((e,t)=>(0,rd.kU)(rz(t[0]))+rJ(t[1].latestStatus)-((0,rd.kU)(rz(e[0]))+rJ(e[1].latestStatus)));let[e,t]=s[0];i=(0,rd.fV)(rz(e),rK(e),t.reactivationCount??0,t.organizationId,new Date(t.latestStartDate),new Date(t.latestEndDate),"cancelled"===t.latestStatus)}return(null==i||(0,rd.kU)(t.id)>=(0,rd.kU)(i.id))&&(i={...t}),{plan:{actual:t,effective:i},account:r}}(e);this._lastValidatedDate=new Date,this.changeSubscription({...this._subscription,...t},{store:!0})}_sessionPromise;_session;async ensureSession(e,t){return(null!=this._sessionPromise&&void 0===this._session&&await this._sessionPromise,t||null==this._session)?null!==this._session||e?(void 0===this._sessionPromise&&(this._sessionPromise=this.getOrCreateSession(e).then(e=>(this._session=e,this._sessionPromise=void 0,this._session),()=>(this._session=null,this._sessionPromise=void 0,this._session))),await this._sessionPromise??void 0):void 0:this._session}async getOrCreateSession(e){let t;let i=(0,eH.UH)();try{t=await b.authentication.getSession(rq,rY,{createIfNone:e,silent:!e})}catch(e){if(t=null,e instanceof Error&&e.message.includes("User did not consent"))return(0,eH.lH)(i," • User declined authentication"),await this.logoutCore(),null;eL.Yd.error(e,i)}if(null==t)return(0,eH.lH)(i," • No valid session was found"),await this.logoutCore(),t??null;try{await this.checkInAndValidate(t,{showSlowProgress:e,force:e})}catch(r){if(eL.Yd.error(r,i),this.container.telemetry.sendEvent("account/validation/failed",{"account.id":t.account.id,exception:String(r),code:r.original?.code,statusCode:r.statusCode}),(0,eH.lH)(i,` \u2022 Account validation failed (${r.statusCode??r.original?.code})`,"FAILED"),r instanceof ru.dt){let i=t.account.label;if(r.original?.code!=="ENOTFOUND"&&null!=r.statusCode&&r.statusCode<500&&r.statusCode>=400){if(t=null,await this.logoutCore(),e){let e=401===r.statusCode;queueMicrotask(async()=>{let t={title:"Retry Sign In"};await b.window.showErrorMessage(`Unable to sign in to your (${i}) GitKraken account. Please try again. If this issue persists, please contact support.${e?"":` Error=${r.message}`}`,t)===t&&this.loginOrSignUp()})}}else t=t??null}}return t}changeSubscription(e,t){null==e&&(e={plan:{actual:(0,rd.fV)(rd.Cx.Free,!1,0,void 0),effective:(0,rd.fV)(rd.Cx.Free,!1,0,void 0)},account:void 0,state:rd.jc.Free}),(0,rd.Z1)(e)&&(e={...e,plan:{...e.plan,effective:e.plan.actual}}),!(0,rd.ww)(e)&&null!=e.previewTrial&&((0,rd.EE)(e.previewTrial.expiresOn)??0)>0&&(e={...e,plan:{...e.plan,effective:(0,rd.fV)(rd.Cx.Pro,!1,0,void 0,new Date(e.previewTrial.startedOn),new Date(e.previewTrial.expiresOn))}}),e.state=(0,rd.RE)(e),(0,rd.cF)(e);let i=this._subscription,r=null!=i&&JSON.stringify(i)===JSON.stringify(e);if(r){t?.store&&this.storeSubscription(e);return}queueMicrotask(()=>{let t=r4(e);this.container.telemetry.setGlobalAttributes(t),t={...t,...r?{}:r4(i,"previous")},this.container.telemetry.sendEvent(null==i?"subscription":"subscription/changed",t)}),this.storeSubscription(e),this._subscription=e,this._etag=Date.now(),t?.silent||(this.updateContext(),null!=i&&this._onDidChange.fire({current:e,previous:i,etag:this._etag}))}getStoredSubscription(){let e,t;let i=this.container.storage.get("premium:subscription");return i?.data!=null?({lastValidatedAt:e,...t}=i.data,this._lastValidatedDate=null!=e?new Date(e):void 0):t=void 0,null!=t&&(t.plan.actual.name=(0,rd.tL)(t.plan.actual.id),t.plan.effective.name=(0,rd.tL)(t.plan.effective.id)),t}async storeSubscription(e){return this.container.storage.store("premium:subscription",{v:1,data:{...e,lastValidatedAt:this._lastValidatedDate?.getTime()}})}_cancellationSource;_updateAccessContextDebounced;updateContext(){this._updateAccessContextDebounced?.cancel(),null==this._updateAccessContextDebounced&&(this._updateAccessContextDebounced=(0,t5.Ds)(this.updateAccessContext.bind(this),500)),null!=this._cancellationSource&&this._cancellationSource.cancel(),this._cancellationSource=new b.CancellationTokenSource,this._updateAccessContextDebounced(this._cancellationSource.token),this.updateStatusBar();let{plan:{actual:e},state:t}=this._subscription;(0,i4.v)("gitlens:plus",e.id!=rd.Cx.Free?e.id:void 0),(0,i4.v)("gitlens:plus:state",t)}async updateAccessContext(e){let t,i=!1;if(0!==this.container.git.repositoryCount&&({allowed:i}=await this.container.git.access(),e.isCancellationRequested))return;let r=C.D.get("plusFeatures.enabled")??!0;if(!r&&"mixed"===i)for(let i of(t=[],this.container.git.repositories)){if(i.closed)continue;let r=await this.container.git.access(void 0,i.uri);if(e.isCancellationRequested)return;r.allowed||t.push(i.uri.toString())}(0,i4.v)("gitlens:plus:enabled",!!i||r),(0,i4.v)("gitlens:plus:required",!1===i),(0,i4.v)("gitlens:plus:disallowedRepos",t)}updateStatusBar(){let{account:e,plan:{effective:t},state:i}=this._subscription;if(t.id===rd.Cx.Free){this._statusBarSubscription?.dispose(),this._statusBarSubscription=void 0;return}let r=(0,rd.dz)(this._subscription);if(!r&&e?.verified!==!1){this._statusBarSubscription?.dispose(),this._statusBarSubscription=void 0;return}if(null==this._statusBarSubscription&&(this._statusBarSubscription=b.window.createStatusBarItem("gitlens.plus.subscription",b.StatusBarAlignment.Left,1)),this._statusBarSubscription.name="GitKraken Subscription",this._statusBarSubscription.command=$.Gh.ShowAccountView,e?.verified===!1)this._statusBarSubscription.text=`$(warning) ${t.name} (Unverified)`,this._statusBarSubscription.backgroundColor=new b.ThemeColor("statusBarItem.warningBackground"),this._statusBarSubscription.tooltip=new b.MarkdownString(r?`**Please verify your email**

You must verify your email before you can start your **${t.name}** trial.

Click for details`:`**Please verify your email**

You must verify your email before you can use Pro features on privately hosted repos.

Click for details`,!0);else{let e=(0,rd.PY)(this._subscription,"days"),r=i===rd.jc.FreePlusInTrial&&t.trialReactivationCount>0;this._statusBarSubscription.text=`${t.name} (Trial)`,this._statusBarSubscription.tooltip=new b.MarkdownString(`${r?`[See what's new](https://help.gitkraken.com/gitlens/gitlens-release-notes-current/) with
			${(0,L._6)("day",e??0,{infix:" more "})}
			in your **${t.name}** trial.`:`You have ${(0,L._6)("day",e??0)} remaining in your **${t.name}** trial.`} Once your trial ends, you'll need a paid plan to continue using \u2728 features.

Try our
			[other developer tools](https://www.gitkraken.com/suite) also included in your trial.`,!0)}this._statusBarSubscription.show()}}function r4(e,t){return null==e?{}:{...(0,rQ.xH)(e.account,{arrays:"join",prefix:`${t?`${t}.`:""}account`,skipPaths:["name","email"],skipNulls:!0,stringify:!0}),...(0,rQ.xH)(e.plan,{prefix:`${t?`${t}.`:""}subscription`,skipPaths:["actual.name","effective.name"],skipNulls:!0,stringify:!0}),...(0,rQ.xH)(e.previewTrial,{prefix:`${t?`${t}.`:""}subscription.previewTrial`,skipPaths:["actual.name","effective.name"],skipNulls:!0,stringify:!0}),"subscription.state":e.state}}r1([(0,eW.fF)()],r2.prototype,"learnAboutPreviewOrTrial",1),r1([(0,eW.cM)()],r2.prototype,"loginOrSignUp",1),r1([(0,eW.cM)()],r2.prototype,"logout",1),r1([(0,eW.cM)()],r2.prototype,"manage",1),r1([(0,eW.cM)()],r2.prototype,"purchase",1),r1([(0,t4.H)(),(0,eW.cM)()],r2.prototype,"resendVerification",1),r1([(0,eW.cM)()],r2.prototype,"showAccountView",1),r1([(0,t4.H)(),(0,eW.cM)()],r2.prototype,"startPreviewTrial",1),r1([(0,t4.H)(e=>`${e?.force??!1}`),(0,eW.cM)()],r2.prototype,"validate",1),r1([(0,eW.fF)({args:{0:e=>e?.account?.label}})],r2.prototype,"checkInAndValidate",1),r1([(0,t4.H)(e=>e.account.id),(0,eW.fF)({args:{0:e=>e?.account?.label}})],r2.prototype,"checkInAndValidateCore",1),r1([(0,eW.fF)()],r2.prototype,"validateAndUpdateSubscription",1),r1([(0,t4.H)(),(0,eW.fF)()],r2.prototype,"ensureSession",1),r1([(0,eW.fF)()],r2.prototype,"getOrCreateSession",1),r1([(0,eW.fF)()],r2.prototype,"changeSubscription",1);var r5=Object.defineProperty,r6=Object.getOwnPropertyDescriptor,r3=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?r6(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&r5(t,i,n),n};class r8{constructor(e){this.container=e}dispose(){}get accountsUri(){return"staging"===this.container.env?b.Uri.parse("https://stagingapp.gitkraken.com"):"dev"===this.container.env?b.Uri.parse("https://devapp.gitkraken.com"):b.Uri.parse("https://app.gitkraken.com")}getAccountsUri(e,t){let i=null!=e?b.Uri.joinPath(this.accountsUri,e):this.accountsUri;return null!=t&&(i=i.with({query:t})),i}get baseApiUri(){return"staging"===this.container.env?b.Uri.parse("https://stagingapi.gitkraken.com"):"dev"===this.container.env?b.Uri.parse("https://devapi.gitkraken.com"):b.Uri.parse("https://api.gitkraken.com")}getApiUrl(...e){return b.Uri.joinPath(this.baseApiUri,...e).toString()}get baseGkDevApiUri(){return"staging"===this.container.env?b.Uri.parse("https://staging-api.gitkraken.dev"):"dev"===this.container.env?b.Uri.parse("https://dev-api.gitkraken.dev"):b.Uri.parse("https://api.gitkraken.dev")}getGkDevApiUrl(...e){return b.Uri.joinPath(this.baseGkDevApiUri,...e).toString()}get siteUri(){let{env:e}=this.container;return"staging"===e?b.Uri.parse("https://staging.gitkraken.com"):"dev"===e?b.Uri.parse("https://dev.gitkraken.com"):b.Uri.parse("https://gitkraken.com")}getSiteUri(e,t){let i=null!=e?b.Uri.joinPath(this.siteUri,e):this.siteUri;return null!=t&&(i=i.with({query:t})),i}get userAgent(){return"Visual-Studio-Code-GitLens"}async fetch(e,t,i){let r;let s=(0,eH.UH)();if(i?.cancellation?.isCancellationRequested)throw new ru.FU;let n=new AbortController;i?.cancellation!=null?(r=i.timeout,i.cancellation.onCancellationRequested(()=>n.abort())):r=i?.timeout??6e4;let o=null!=r?setTimeout(()=>n.abort(),r):void 0;try{let i=(0,tg.he)(e,{agent:(0,tg.Nx)(),...t,headers:{"User-Agent":this.userAgent,...t?.headers},signal:n?.signal});return i.finally(()=>clearTimeout(o)),await i}catch(e){if(eL.Yd.error(e,s),"AbortError"===e.name)throw new ru.FU(e);throw e}}async fetchApi(e,t,i){return this.gkFetch(this.getApiUrl(e),t,i)}async fetchApiGraphQL(e,t,i,r){return this.fetchApi(e,{method:"POST",...i,body:JSON.stringify(t)},r)}async fetchGkDevApi(e,t,i){return this.gkFetch(this.getGkDevApiUrl(e),t,i)}async gkFetch(e,t,i){let r=(0,eH.UH)();try{let r;return{token:r,...i}=i??{},r??=await this.getAccessToken(),this.fetch(e,{...t,headers:{Authorization:`Bearer ${r}`,"Content-Type":"application/json",...t?.headers}},i)}catch(e){throw eL.Yd.error(e,r),e}}async getAccessToken(){let e=await this.container.subscription.getAuthenticationSession();if(null!=e)return e.accessToken;throw new ru.TZ}}r3([(0,ey.H)()],r8.prototype,"accountsUri",1),r3([(0,ey.H)()],r8.prototype,"baseApiUri",1),r3([(0,ey.H)()],r8.prototype,"baseGkDevApiUri",1),r3([(0,ey.H)()],r8.prototype,"siteUri",1),r3([(0,ey.H)()],r8.prototype,"userAgent",1);var r9=((m=r9||{}).GitHub="github",m.GitHubEnterprise="github-enterprise",m.GitLab="gitlab",m.GitLabSelfHosted="gitlab-self-hosted",m.Bitbucket="bitbucket",m.Jira="jira",m.Trello="trello",m.AzureDevOps="azureDevOps",m),r7=((f=r7||{}).Author="author",f.Assignee="assignee",f.ReviewRequested="review-requested",f.Mention="mention",f),se=((w=se||{}).Author="author",w.Assignee="assignee",w.Mention="mention",w),st=((v=st||{}).Project="project",v.Repo="repo",v.Repos="repos",v);let si={github:{domain:"github.com",id:"github",issuesPagingMode:"repos",pullRequestsPagingMode:"repos",supportedPullRequestFilters:["author","assignee","review-requested","mention"],supportedIssueFilters:["author","assignee","mention"],scopes:["repo","read:user","user:email"]},"github-enterprise":{domain:"",id:"github-enterprise",issuesPagingMode:"repos",pullRequestsPagingMode:"repos",supportedPullRequestFilters:["author","assignee","review-requested","mention"],supportedIssueFilters:["author","assignee","mention"],scopes:["repo","read:user","user:email"]},gitlab:{domain:"gitlab.com",id:"gitlab",issuesPagingMode:"repo",pullRequestsPagingMode:"repo",supportedPullRequestFilters:["author","assignee","review-requested"],supportedIssueFilters:["author","assignee"],scopes:["read_api","read_user","read_repository"]},"gitlab-self-hosted":{domain:"",id:"gitlab-self-hosted",issuesPagingMode:"repo",pullRequestsPagingMode:"repo",supportedPullRequestFilters:["author","assignee","review-requested"],supportedIssueFilters:["author","assignee"],scopes:["read_api","read_user","read_repository"]},bitbucket:{domain:"bitbucket.org",id:"bitbucket",pullRequestsPagingMode:"repo",supportedPullRequestFilters:["author"],scopes:["account:read","repository:read","pullrequest:read","issue:read"]},azureDevOps:{domain:"dev.azure.com",id:"azureDevOps",issuesPagingMode:"project",pullRequestsPagingMode:"repo",supportedPullRequestFilters:["author","assignee"],supportedIssueFilters:["author","assignee","mention"],scopes:["vso.code","vso.identity","vso.project","vso.profile","vso.work"]},jira:{domain:"atlassian.net",id:"jira",scopes:[]},trello:{domain:"trello.com",id:"trello",scopes:[]}};class sr{getSessionId(e){return e?.domain??""}async createSession(e){let t,i=e?.organization;if(!i){let t=b.window.createInputBox();t.ignoreFocusOut=!0;let r=[];try{i=await new Promise(i=>{r.push(t.onDidHide(()=>i(void 0)),t.onDidChangeValue(()=>t.validationMessage=void 0),t.onDidAccept(()=>{let e=t.value.trim();if(!e){t.validationMessage="An organization is required";return}i(e)})),t.title=`Azure DevOps Authentication${e?.domain?`  \u2022 ${e.domain}`:""}`,t.placeholder="Organization",t.prompt="Enter your Azure DevOps organization",t.show()})}finally{t.dispose(),r.forEach(e=>void e.dispose())}}if(!i)return;let r=b.window.createInputBox();r.ignoreFocusOut=!0;let s=[];try{let n={iconPath:new b.ThemeIcon("link-external"),tooltip:"Open the Azure DevOps Access Tokens Page"};t=await new Promise(t=>{s.push(r.onDidHide(()=>t(void 0)),r.onDidChangeValue(()=>r.validationMessage=void 0),r.onDidAccept(()=>{let e=r.value.trim();if(!e){r.validationMessage="A personal access token is required";return}t(e)}),r.onDidTriggerButton(t=>{t===n&&b.env.openExternal(b.Uri.parse(`https://${e?.domain??"dev.azure.com"}/${i}/_usersSettings/tokens`))})),r.password=!0,r.title=`Azure DevOps Authentication${e?.domain?`  \u2022 ${e.domain}`:""}`,r.placeholder=`Requires ${e?.scopes.join(", ")??"all"} scopes`,r.prompt=(0,eG.gn)("input-prompt-links")?`Paste your [Azure DevOps Personal Access Token](https://${e?.domain??"dev.azure.com"}/${i}/_usersSettings/tokens "Get your Azure DevOps Access Token")`:"Paste your Azure DevOps Personal Access Token",r.buttons=[n],r.show()})}finally{r.dispose(),s.forEach(e=>void e.dispose())}if(t)return{id:this.getSessionId(e),accessToken:(0,L.US)(`:${t}`),scopes:e?.scopes??[],account:{id:"",label:""}}}}class ss{getSessionId(e){return e?.domain??""}async createSession(e){let t,i=e?.username;if(!i){let t={iconPath:new b.ThemeIcon("link-external"),tooltip:"Open the Bitbucket Settings Page"},r=b.window.createInputBox();r.ignoreFocusOut=!0;let s=[];try{i=await new Promise(i=>{s.push(r.onDidHide(()=>i(void 0)),r.onDidChangeValue(()=>r.validationMessage=void 0),r.onDidAccept(()=>{let e=r.value.trim();if(!e){r.validationMessage="A Bitbucket username is required";return}i(e)}),r.onDidTriggerButton(i=>{i===t&&b.env.openExternal(b.Uri.parse(`https://${e?.domain??"bitbucket.org"}/account/settings/`))})),r.title=`Bitbucket Authentication${e?.domain?`  \u2022 ${e.domain}`:""}`,r.placeholder="Username",r.prompt=(0,eG.gn)("input-prompt-links")?`Enter your [Bitbucket Username](https://${e?.domain??"bitbucket.org"}/account/settings/ "Get your Bitbucket App Password")`:"Enter your Bitbucket Username",r.show()})}finally{r.dispose(),s.forEach(e=>void e.dispose())}}if(!i)return;let r=b.window.createInputBox();r.ignoreFocusOut=!0;let s=[];try{let i={iconPath:new b.ThemeIcon("link-external"),tooltip:"Open the Bitbucket App Passwords Page"};t=await new Promise(t=>{s.push(r.onDidHide(()=>t(void 0)),r.onDidChangeValue(()=>r.validationMessage=void 0),r.onDidAccept(()=>{let e=r.value.trim();if(!e){r.validationMessage="An app password is required";return}t(e)}),r.onDidTriggerButton(t=>{t===i&&b.env.openExternal(b.Uri.parse(`https://${e?.domain??"bitbucket.org"}/account/settings/app-passwords/`))})),r.password=!0,r.title=`Bitbucket Authentication${e?.domain?`  \u2022 ${e.domain}`:""}`,r.placeholder=`Requires ${e?.scopes.join(", ")??"all"} scopes`,r.prompt=(0,eG.gn)("input-prompt-links")?`Paste your [Bitbucket App Password](https://${e?.domain??"bitbucket.org"}/account/settings/app-passwords/ "Get your Bitbucket App Password")`:"Paste your Bitbucket App Password",r.buttons=[i],r.show()})}finally{r.dispose(),s.forEach(e=>void e.dispose())}if(t)return{id:this.getSessionId(e),accessToken:(0,L.US)(`${i}:${t}`),scopes:e?.scopes??[],account:{id:"",label:""}}}}class sn{getSessionId(e){return e?.domain??""}async createSession(e){let t;let i=b.window.createInputBox();i.ignoreFocusOut=!0;let r=[];try{let s={iconPath:new b.ThemeIcon("link-external"),tooltip:"Open the GitHub Access Tokens Page"};t=await new Promise(t=>{r.push(i.onDidHide(()=>t(void 0)),i.onDidChangeValue(()=>i.validationMessage=void 0),i.onDidAccept(()=>{let e=i.value.trim();if(!e){i.validationMessage="A personal access token is required";return}t(e)}),i.onDidTriggerButton(t=>{t===s&&b.env.openExternal(b.Uri.parse(`https://${e?.domain??"github.com"}/settings/tokens`))})),i.password=!0,i.title=`GitHub Authentication${e?.domain?`  \u2022 ${e.domain}`:""}`,i.placeholder=`Requires ${e?.scopes.join(", ")??"all"} scopes`,i.prompt=(0,eG.gn)("input-prompt-links")?`Paste your [GitHub Personal Access Token](https://${e?.domain??"github.com"}/settings/tokens "Get your GitHub Access Token")`:"Paste your GitHub Personal Access Token",i.buttons=[s],i.show()})}finally{i.dispose(),r.forEach(e=>void e.dispose())}if(t)return{id:this.getSessionId(e),accessToken:t,scopes:e?.scopes??[],account:{id:"",label:""}}}}class so{getSessionId(e){return e?.domain??""}async createSession(e){let t;let i=b.window.createInputBox();i.ignoreFocusOut=!0;let r=[];try{let s={iconPath:new b.ThemeIcon("link-external"),tooltip:"Open the GitLab Access Tokens Page"};t=await new Promise(t=>{r.push(i.onDidHide(()=>t(void 0)),i.onDidChangeValue(()=>i.validationMessage=void 0),i.onDidAccept(()=>{let e=i.value.trim();if(!e){i.validationMessage="A personal access token is required";return}t(e)}),i.onDidTriggerButton(t=>{t===s&&b.env.openExternal(b.Uri.parse(`https://${e?.domain??"gitlab.com"}/-/profile/personal_access_tokens`))})),i.password=!0,i.title=`GitLab Authentication${e?.domain?`  \u2022 ${e.domain}`:""}`,i.placeholder=`Requires ${e?.scopes.join(", ")??"all"} scopes`,i.prompt=(0,eG.gn)("input-prompt-links")?`Paste your [GitLab Personal Access Token](https://${e?.domain??"gitlab.com"}/-/profile/personal_access_tokens "Get your GitLab Access Token")`:"Paste your GitLab Personal Access Token",i.buttons=[s],i.show()})}finally{i.dispose(),r.forEach(e=>void e.dispose())}if(t)return{id:this.getSessionId(e),accessToken:t,scopes:e?.scopes??[],account:{id:"",label:""}}}}var sa=Object.defineProperty,sl=Object.getOwnPropertyDescriptor,sh=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?sl(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&sa(t,i,n),n};class sc{constructor(e){this.container=e}providers=new Map;dispose(){this.providers.clear()}async createSession(e,t){let i=this.ensureProvider(e),r=await i.createSession(t);if(null==r)return;let s=this.getSecretKey(e,i.getSessionId(t));return await this.container.storage.storeSecret(s,JSON.stringify(r)),r}async getSession(e,t,i){if(this.supports(e)){let r;let s=this.ensureProvider(e),n=this.getSecretKey(e,s.getSessionId(t));i?.forceNewSession&&await this.container.storage.deleteSecret(n);try{let e=await this.container.storage.getSecret(n);e&&(r=JSON.parse(e))}catch(e){try{await this.container.storage.deleteSecret(n)}catch{}if(!i?.createIfNeeded)throw e}return i?.createIfNeeded&&null==r?this.createSession(e,t):r}if(null==t)return;let{createIfNeeded:r,forceNewSession:s}=i??{};return(0,tg.a_)(this.container.integrations.ignoreSSLErrors({id:e,domain:t?.domain}),()=>b.authentication.getSession(e,t.scopes,{createIfNone:s?void 0:r,silent:!r&&!s||void 0,forceNewSession:!!s||void 0}))}async deleteSession(e,t){let i=this.ensureProvider(e),r=this.getSecretKey(e,i.getSessionId(t));await this.container.storage.deleteSecret(r)}supports(e){switch(e){case r9.AzureDevOps:case r9.Bitbucket:case r9.GitHubEnterprise:case r9.GitLab:case r9.GitLabSelfHosted:return!0;default:return!1}}getSecretKey(e,t){return`gitlens.integration.auth:${e}|${t}`}ensureProvider(e){let t=this.providers.get(e);if(null==t){switch(e){case r9.AzureDevOps:t=new sr;break;case r9.Bitbucket:t=new ss;break;case r9.GitHubEnterprise:t=new sn;break;case r9.GitLab:case r9.GitLabSelfHosted:t=new so;break;default:throw Error(`Provider '${e}' is not supported`)}this.providers.set(e,t)}return t}}sh([(0,eW.fF)()],sc.prototype,"createSession",1),sh([(0,eW.fF)()],sc.prototype,"getSession",1),sh([(0,eW.fF)()],sc.prototype,"deleteSession",1);var su=Object.defineProperty,sd=Object.getOwnPropertyDescriptor,sp=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?sd(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&su(t,i,n),n};class sg{constructor(e,t){this.container=e,this.api=t}_onDidChange=new b.EventEmitter;get onDidChange(){return this._onDidChange.event}get authProviderDescriptor(){return{domain:this.domain,scopes:this.authProvider.scopes}}get icon(){return this.id}get key(){return this.id}get connectedKey(){return`connected:${this.key}`}get maybeConnected(){return void 0===this._session?void 0:null!==this._session}_session;session(){return void 0===this._session?this.ensureSession(!1):this._session??void 0}async connect(){try{return!!await this.ensureSession(!0)}catch(e){return!1}}async disconnect(e){if(e?.currentSessionOnly&&null===this._session)return;let t=null!=this._session;if(t&&!e?.silent){if(e?.currentSessionOnly)(0,t1.mm)(this.name);else{let e;let t={title:"Disable"},i={title:"Disable & Sign Out"},r={title:"Cancel",isCloseAffordance:!0};if(null==(e=this.container.integrationAuthentication.supports(this.authProvider.id)?await b.window.showWarningMessage(`Are you sure you want to disable the rich integration with ${this.name}?

Note: signing out clears the saved authentication.`,{modal:!0},t,i,r):await b.window.showWarningMessage(`Are you sure you want to disable the rich integration with ${this.name}?`,{modal:!0},t,r))||e===r)return;e===i&&this.container.integrationAuthentication.deleteSession(this.authProvider.id,this.authProviderDescriptor)}}this.resetRequestExceptionCount(),this._session=null,!t||(e?.currentSessionOnly||this.container.storage.storeWorkspace(this.connectedKey,!1),this._onDidChange.fire(),e?.silent||e?.currentSessionOnly||this.container.integrations.disconnected(this.key))}async reauthenticate(){void 0!==this._session&&(this._session=void 0,await this.ensureSession(!0,!0))}refresh(){this.ensureSession(!1)}requestExceptionCount=0;resetRequestExceptionCount(){this.requestExceptionCount=0}handleProviderException(e,t,i){return e instanceof ru.FU||(eL.Yd.error(e,t),(e instanceof ru._7||e instanceof ru.Bn)&&this.trackRequestException()),i}trackRequestException(){this.requestExceptionCount++,this.requestExceptionCount>=5&&null!==this._session&&this.disconnect({currentSessionOnly:!0})}async isConnected(){return await this.session()!=null}async getAccountForCommit(e,t,i){let r=(0,eH.UH)();if(this.maybeConnected??await this.isConnected())try{let r=await this.getProviderAccountForCommit(this._session,e,t,i);return this.resetRequestExceptionCount(),r}catch(e){return this.handleProviderException(e,r,void 0)}}async getAccountForEmail(e,t,i){let r=(0,eH.UH)();if(this.maybeConnected??await this.isConnected())try{let r=await this.getProviderAccountForEmail(this._session,e,t,i);return this.resetRequestExceptionCount(),r}catch(e){return this.handleProviderException(e,r,void 0)}}async getDefaultBranch(e){let t=(0,eH.UH)();if(this.maybeConnected??await this.isConnected())return this.container.cache.getRepositoryDefaultBranch(e,this,()=>({value:(async()=>{try{let t=await this.getProviderDefaultBranch(this._session,e);return this.resetRequestExceptionCount(),t}catch(e){return this.handleProviderException(e,t,void 0)}})()}))}async getRepositoryMetadata(e,t){let i=(0,eH.UH)();if(this.maybeConnected??await this.isConnected())return this.container.cache.getRepositoryMetadata(e,this,()=>({value:(async()=>{try{let t=await this.getProviderRepositoryMetadata(this._session,e);return this.resetRequestExceptionCount(),t}catch(e){return this.handleProviderException(e,i,void 0)}})()}))}async getIssueOrPullRequest(e,t){let i=(0,eH.UH)();if(this.maybeConnected??await this.isConnected())return this.container.cache.getIssueOrPullRequest(t,e,this,()=>({value:(async()=>{try{let i=await this.getProviderIssueOrPullRequest(this._session,e,t);return this.resetRequestExceptionCount(),i}catch(e){return this.handleProviderException(e,i,void 0)}})()}))}async getPullRequestForBranch(e,t,i){let r=(0,eH.UH)();if(this.maybeConnected??await this.isConnected())return this.container.cache.getPullRequestForBranch(t,e,this,()=>({value:(async()=>{try{let r=await this.getProviderPullRequestForBranch(this._session,e,t,i);return this.resetRequestExceptionCount(),r}catch(e){return this.handleProviderException(e,r,void 0)}})()}))}async getPullRequestForCommit(e,t){let i=(0,eH.UH)();if(this.maybeConnected??await this.isConnected())return this.container.cache.getPullRequestForSha(t,e,this,()=>({value:(async()=>{try{let i=await this.getProviderPullRequestForCommit(this._session,e,t);return this.resetRequestExceptionCount(),i}catch(e){return this.handleProviderException(e,i,void 0)}})()}))}async getMyIssuesForRepos(e,t){let i;let r=this.authProvider.id;if(this.maybeConnected??await this.isConnected()){if(r!==r9.GitLab&&(this.api.isRepoIdsInput(e)||r===r9.AzureDevOps&&!e.every(e=>null!=e.project&&null!=e.namespace))){eL.Yd.warn(`Unsupported input for provider ${r}`,"getIssuesForRepos");return}if(r===r9.AzureDevOps){let s=new Set,n=new Set;for(let t of e)s.add(t.namespace),n.add(t.project);if(s.size>1){eL.Yd.warn(`Multiple organizations not supported for provider ${r}`,"getIssuesForRepos");return}if(0===s.size){eL.Yd.warn(`No organizations found for provider ${r}`,"getIssuesForRepos");return}let o=s.values().next().value;if(t?.filters!=null){let e;if(!this.api.providerSupportsIssueFilters(r,t.filters)){eL.Yd.warn(`Unsupported filters for provider ${r}`,"getIssuesForRepos");return}try{e=await this.api.getCurrentUserForInstance(r,o)}catch(e){eL.Yd.error(e,"getIssuesForRepos");return}if(null==e){eL.Yd.warn(`Unable to get current user for ${r}`,"getIssuesForRepos");return}let s=e.name;if(null==s){eL.Yd.warn(`Unable to get user property for filter for ${r}`,"getIssuesForRepos");return}i={authorLogin:t.filters.includes(se.Author)?s:void 0,assigneeLogins:t.filters.includes(se.Assignee)?[s]:void 0,mentionLogin:t.filters.includes(se.Mention)?s:void 0}}let a=JSON.parse(t?.cursor??"{}").cursors??[],l=Array.from(n.values()).map(e=>({namespace:o,project:e,cursor:void 0}));a.length>0&&(l=a);try{let e={cursors:[]},t=!1,r=[];return await Promise.all(l.map(async s=>{let n=await this.api.getIssuesForAzureProject(s.namespace,s.project,{...i,cursor:s.cursor});r.push(...n.values),n.paging?.more&&(t=!0,e.cursors.push({namespace:s.namespace,project:s.project,cursor:n.paging.cursor}))})),{values:r,paging:{more:t,cursor:JSON.stringify(e)}}}catch(e){eL.Yd.error(e,"getIssuesForRepos");return}}if(t?.filters!=null){let e;try{e=await this.api.getCurrentUser(r)}catch(e){eL.Yd.error(e,"getIssuesForRepos");return}if(null==e){eL.Yd.warn(`Unable to get current user for ${r}`,"getIssuesForRepos");return}let s=e.username;if(null==s){eL.Yd.warn(`Unable to get user property for filter for ${r}`,"getIssuesForRepos");return}i={authorLogin:t.filters.includes(se.Author)?s:void 0,assigneeLogins:t.filters.includes(se.Assignee)?[s]:void 0,mentionLogin:t.filters.includes(se.Mention)?s:void 0}}if(this.api.getProviderIssuesPagingMode(r)===st.Repo&&!this.api.isRepoIdsInput(e)){let s=JSON.parse(t?.cursor??"{}").cursors??[],n=e.map(e=>({repo:e,cursor:void 0}));s.length>0&&(n=s);try{let e={cursors:[]},s=!1,o=[];return await Promise.all(n.map(async n=>{let a=await this.api.getIssuesForRepo(r,n.repo,{...i,cursor:n.cursor,baseUrl:t?.customUrl});o.push(...a.values),a.paging?.more&&(s=!0,e.cursors.push({repo:n.repo,cursor:a.paging.cursor}))})),{values:o,paging:{more:s,cursor:JSON.stringify(e)}}}catch(e){eL.Yd.error(e,"getIssuesForRepos");return}}try{return await this.api.getIssuesForRepos(r,e,{...i,cursor:t?.cursor,baseUrl:t?.customUrl})}catch(e){eL.Yd.error(e,"getIssuesForRepos");return}}}async getMyPullRequestsForRepos(e,t){let i;let r=this.authProvider.id;if(this.maybeConnected??await this.isConnected()){if(r!==r9.GitLab&&(this.api.isRepoIdsInput(e)||r===r9.AzureDevOps&&!e.every(e=>null!=e.project&&null!=e.namespace))){eL.Yd.warn(`Unsupported input for provider ${r}`);return}if(t?.filters!=null){let s,n;if(!this.api.providerSupportsPullRequestFilters(r,t.filters)){eL.Yd.warn(`Unsupported filters for provider ${r}`,"getPullRequestsForRepos");return}if(r===r9.AzureDevOps){let t=new Set;for(let i of e)t.add(i.namespace);if(t.size>1){eL.Yd.warn(`Multiple organizations not supported for provider ${r}`,"getPullRequestsForRepos");return}if(0===t.size){eL.Yd.warn(`No organizations found for provider ${r}`,"getPullRequestsForRepos");return}let i=t.values().next().value;try{s=await this.api.getCurrentUserForInstance(r,i)}catch(e){eL.Yd.error(e,"getPullRequestsForRepos");return}}else try{s=await this.api.getCurrentUser(r)}catch(e){eL.Yd.error(e,"getPullRequestsForRepos");return}if(null==s){eL.Yd.warn(`Unable to get current user for ${r}`,"getPullRequestsForRepos");return}switch(r){case r9.Bitbucket:case r9.AzureDevOps:n=s.id;break;default:n=s.username}if(null==n){eL.Yd.warn(`Unable to get user property for filter for ${r}`,"getPullRequestsForRepos");return}i={authorLogin:t.filters.includes(r7.Author)?n:void 0,assigneeLogins:t.filters.includes(r7.Assignee)?[n]:void 0,reviewRequestedLogin:t.filters.includes(r7.ReviewRequested)?n:void 0,mentionLogin:t.filters.includes(r7.Mention)?n:void 0}}if(this.api.getProviderPullRequestsPagingMode(r)===st.Repo&&!this.api.isRepoIdsInput(e)){let s=JSON.parse(t?.cursor??"{}").cursors??[],n=e.map(e=>({repo:e,cursor:void 0}));s.length>0&&(n=s);try{let e={cursors:[]},s=!1,o=[];return await Promise.all(n.map(async n=>{let a=await this.api.getPullRequestsForRepo(r,n.repo,{...i,cursor:n.cursor,baseUrl:t?.customUrl});o.push(...a.values),a.paging?.more&&(s=!0,e.cursors.push({repo:n.repo,cursor:a.paging.cursor}))})),{values:o,paging:{more:s,cursor:JSON.stringify(e)}}}catch(e){eL.Yd.error(e,"getPullRequestsForRepos");return}}try{return this.api.getPullRequestsForRepos(r,e,{...i,cursor:t?.cursor,baseUrl:t?.customUrl})}catch(e){eL.Yd.error(e,"getPullRequestsForRepos");return}}}async searchMyIssues(){let e=(0,eH.UH)();try{let e=await this.searchProviderMyIssues(this._session);return this.resetRequestExceptionCount(),e}catch(t){return this.handleProviderException(t,e,void 0)}}async searchMyPullRequests(){let e=(0,eH.UH)();try{let e=await this.searchProviderMyPullRequests(this._session);return this.resetRequestExceptionCount(),e}catch(t){return this.handleProviderException(t,e,void 0)}}async ensureSession(e,t=!1){let i;if(null!=this._session)return this._session;if(C.D.get("integrations.enabled")){if(e)await this.container.storage.deleteWorkspace(this.connectedKey);else if(!1===this.container.storage.getWorkspace(this.connectedKey))return;try{i=await this.container.integrationAuthentication.getSession(this.authProvider.id,this.authProviderDescriptor,{createIfNeeded:e,forceNewSession:t})}catch(e){if(await this.container.storage.deleteWorkspace(this.connectedKey),e instanceof Error&&e.message.includes("User did not consent"))return;i=null}return void 0!==i||e||await this.container.storage.deleteWorkspace(this.connectedKey),this._session=i??null,this.resetRequestExceptionCount(),null!=i&&(await this.container.storage.storeWorkspace(this.connectedKey,!0),queueMicrotask(()=>{this._onDidChange.fire(),this.container.integrations.connected(this.key)})),i??void 0}}getIgnoreSSLErrors(){return this.container.integrations.ignoreSSLErrors(this)}}async function sm(e,t){let i=`Connecting to a ${e} instance for rich integration features requires a trial or paid plan.`;for(;;){let e=await t.subscription.getSubscription();if(e.account?.verified===!1){let e={title:"Resend Verification"},r={title:"Cancel",isCloseAffordance:!0};if(await b.window.showWarningMessage(`${i}

You must verify your email before you can continue.`,{modal:!0},e,r)===e&&await t.subscription.resendVerification())continue;return!1}let r=e.plan.effective.id;if((0,rd.aG)(r))break;if(null!=e.account||(0,rd.gA)(e)){if(null==e.account){let e={title:"Start Free GitKraken Trial"},r={title:"Cancel",isCloseAffordance:!0};if(await b.window.showWarningMessage(`${i}

Do you want to continue to use \u2728 features on privately hosted repos, free for an additional 7 days?`,{modal:!0},e,r)===e&&await t.subscription.loginOrSignUp())continue}else{let e={title:"Upgrade to Pro"},r={title:"Cancel",isCloseAffordance:!0};await b.window.showWarningMessage(`${i}

Do you want to continue to use \u2728 features on privately hosted repos?`,{modal:!0},e,r)===e&&t.subscription.purchase()}}else{let e={title:"Preview Pro"},r={title:"Cancel",isCloseAffordance:!0};if(await b.window.showWarningMessage(`${i}

Do you want to preview \u2728 features for 3 days?`,{modal:!0},e,r)!==e)return!1;t.subscription.startPreviewTrial();break}return!1}return!0}sp([(0,eW.cM)()],sg.prototype,"connect",1),sp([(0,t4.H)(),(0,eW.cM)()],sg.prototype,"disconnect",1),sp([(0,eW.cM)()],sg.prototype,"reauthenticate",1),sp([(0,eW.fF)()],sg.prototype,"trackRequestException",1),sp([(0,t4.H)(),(0,eW.fF)({exit:!0})],sg.prototype,"isConnected",1),sp([(0,t4.H)(),(0,eW.fF)()],sg.prototype,"getAccountForCommit",1),sp([(0,t4.H)(),(0,eW.fF)()],sg.prototype,"getAccountForEmail",1),sp([(0,eW.fF)()],sg.prototype,"getDefaultBranch",1),sp([(0,eW.fF)()],sg.prototype,"getRepositoryMetadata",1),sp([(0,eW.fF)()],sg.prototype,"getIssueOrPullRequest",1),sp([(0,eW.fF)()],sg.prototype,"getPullRequestForBranch",1),sp([(0,eW.fF)()],sg.prototype,"getPullRequestForCommit",1),sp([(0,eW.fF)()],sg.prototype,"searchMyIssues",1),sp([(0,eW.fF)()],sg.prototype,"searchMyPullRequests",1),sp([(0,t4.H)()],sg.prototype,"ensureSession",1);let sf=si[r9.AzureDevOps],sw=Object.freeze({id:sf.id,scopes:sf.scopes});class sv extends sg{authProvider=sw;id=r9.AzureDevOps;name="Azure DevOps";get domain(){return sf.domain}get apiBaseUrl(){return"https://dev.azure.com"}async getReposForAzureProject(e,t,i){if(this.maybeConnected??await this.isConnected())try{return await this.api.getReposForAzureProject(e,t,{cursor:i?.cursor})}catch(e){eL.Yd.error(e,"getReposForAzureProject");return}}async getProviderAccountForCommit(e,t,i,r){return Promise.resolve(void 0)}async getProviderAccountForEmail(e,t,i,r){return Promise.resolve(void 0)}async getProviderDefaultBranch(e,t){return Promise.resolve(void 0)}async getProviderIssueOrPullRequest(e,t,i){return Promise.resolve(void 0)}async getProviderPullRequestForBranch(e,t,i,r){return Promise.resolve(void 0)}async getProviderPullRequestForCommit(e,t,i){return Promise.resolve(void 0)}async getProviderRepositoryMetadata(e,t){return Promise.resolve(void 0)}async searchProviderMyPullRequests(e,t){return Promise.resolve(void 0)}async searchProviderMyIssues(e,t){return Promise.resolve(void 0)}}let sy=si[r9.Bitbucket],sb=Object.freeze({id:sy.id,scopes:sy.scopes});class sC extends sg{authProvider=sb;id=r9.Bitbucket;name="Bitbucket";get domain(){return sy.domain}get apiBaseUrl(){return"https://api.bitbucket.org/2.0"}async getProviderAccountForCommit(e,t,i,r){return Promise.resolve(void 0)}async getProviderAccountForEmail(e,t,i,r){return Promise.resolve(void 0)}async getProviderDefaultBranch(e,t){return Promise.resolve(void 0)}async getProviderIssueOrPullRequest(e,t,i){return Promise.resolve(void 0)}async getProviderPullRequestForBranch(e,t,i,r){return Promise.resolve(void 0)}async getProviderPullRequestForCommit(e,t,i){return Promise.resolve(void 0)}async getProviderRepositoryMetadata(e,t){return Promise.resolve(void 0)}async searchProviderMyPullRequests(e,t){return Promise.resolve(void 0)}async searchProviderMyIssues(e,t){return Promise.resolve(void 0)}}var sA=Object.defineProperty,sP=Object.getOwnPropertyDescriptor;let sD=si[r9.GitHub],sk=Object.freeze({id:sD.id,scopes:sD.scopes}),sS=si[r9.GitHubEnterprise],sR=Object.freeze({id:sS.id,scopes:sS.scopes});class s$ extends sg{authProvider=sk;id=r9.GitHub;name="GitHub";get domain(){return sD.domain}get apiBaseUrl(){return"https://api.github.com"}async getProviderAccountForCommit({accessToken:e},t,i,r){return(await this.container.github)?.getAccountForCommit(this,e,t.owner,t.name,i,{...r,baseUrl:this.apiBaseUrl})}async getProviderAccountForEmail({accessToken:e},t,i,r){return(await this.container.github)?.getAccountForEmail(this,e,t.owner,t.name,i,{...r,baseUrl:this.apiBaseUrl})}async getProviderDefaultBranch({accessToken:e},t){return(await this.container.github)?.getDefaultBranch(this,e,t.owner,t.name,{baseUrl:this.apiBaseUrl})}async getProviderIssueOrPullRequest({accessToken:e},t,i){return(await this.container.github)?.getIssueOrPullRequest(this,e,t.owner,t.name,Number(i),{baseUrl:this.apiBaseUrl})}async getProviderPullRequestForBranch({accessToken:e},t,r,s){let{include:n,...o}=s??{},a=(await i.e(457).then(i.bind(i,998))).toGitHubPullRequestState;return(await this.container.github)?.getPullRequestForBranch(this,e,t.owner,t.name,r,{...o,include:n?.map(e=>a(e)),baseUrl:this.apiBaseUrl})}async getProviderPullRequestForCommit({accessToken:e},t,i){return(await this.container.github)?.getPullRequestForCommit(this,e,t.owner,t.name,i,{baseUrl:this.apiBaseUrl})}async getProviderRepositoryMetadata({accessToken:e},t){return(await this.container.github)?.getRepositoryMetadata(this,e,t.owner,t.name,{baseUrl:this.apiBaseUrl})}async searchProviderMyPullRequests({accessToken:e},t){return(await this.container.github)?.searchMyPullRequests(this,e,{repos:null!=t?[`${t.owner}/${t.name}`]:void 0,baseUrl:this.apiBaseUrl})}async searchProviderMyIssues({accessToken:e},t){return(await this.container.github)?.searchMyIssues(this,e,{repos:null!=t?[`${t.owner}/${t.name}`]:void 0,baseUrl:this.apiBaseUrl})}}class s_ extends s${constructor(e,t,i){super(e,t),this.api=t,this._domain=i}authProvider=sR;id=r9.GitHubEnterprise;name="GitHub Enterprise";get domain(){return this._domain}get apiBaseUrl(){return`https://${this._domain}/api/v3`}get key(){return`${this.id}:${this.domain}`}async connect(){return!!await sm(`${this.name} instance`,this.container)&&super.connect()}}((e,t,i,r)=>{for(var s,n=r>1?void 0:r?sP(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&sA(t,i,n)})([(0,eW.cM)()],s_.prototype,"connect",1);var sI=Object.defineProperty,sF=Object.getOwnPropertyDescriptor;let sx=si[r9.GitLab],sT=Object.freeze({id:sx.id,scopes:sx.scopes}),sO=si[r9.GitLabSelfHosted],sE=Object.freeze({id:sO.id,scopes:sO.scopes});class sB extends sg{authProvider=sT;id=r9.GitLab;name="GitLab";get domain(){return sx.domain}get apiBaseUrl(){return"https://gitlab.com/api"}async getProviderAccountForCommit({accessToken:e},t,i,r){return(await this.container.gitlab)?.getAccountForCommit(this,e,t.owner,t.name,i,{...r,baseUrl:this.apiBaseUrl})}async getProviderAccountForEmail({accessToken:e},t,i,r){return(await this.container.gitlab)?.getAccountForEmail(this,e,t.owner,t.name,i,{...r,baseUrl:this.apiBaseUrl})}async getProviderDefaultBranch({accessToken:e},t){return(await this.container.gitlab)?.getDefaultBranch(this,e,t.owner,t.name,{baseUrl:this.apiBaseUrl})}async getProviderIssueOrPullRequest({accessToken:e},t,i){return(await this.container.gitlab)?.getIssueOrPullRequest(this,e,t.owner,t.name,Number(i),{baseUrl:this.apiBaseUrl})}async getProviderPullRequestForBranch({accessToken:e},t,r,s){let{include:n,...o}=s??{},a=(await i.e(449).then(i.bind(i,6259))).toGitLabMergeRequestState;return(await this.container.gitlab)?.getPullRequestForBranch(this,e,t.owner,t.name,r,{...o,include:n?.map(e=>a(e)),baseUrl:this.apiBaseUrl})}async getProviderPullRequestForCommit({accessToken:e},t,i){return(await this.container.gitlab)?.getPullRequestForCommit(this,e,t.owner,t.name,i,{baseUrl:this.apiBaseUrl})}async getProviderRepositoryMetadata({accessToken:e},t){return(await this.container.gitlab)?.getRepositoryMetadata(this,e,t.owner,t.name,{baseUrl:this.apiBaseUrl})}searchProviderMyPullRequests(e,t){return Promise.resolve(void 0)}searchProviderMyIssues(e,t){return Promise.resolve(void 0)}}class sU extends sB{constructor(e,t,i){super(e,t),this.api=t,this._domain=i}authProvider=sE;id=r9.GitHubEnterprise;name="GitLab Self-Hosted";get domain(){return this._domain}get apiBaseUrl(){return`https://${this._domain}/api`}get key(){return`${this.id}:${this.domain}`}async connect(){return!!await sm(`${this.name} instance`,this.container)&&super.connect()}}((e,t,i,r)=>{for(var s,n=r>1?void 0:r?sF(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&sI(t,i,n)})([(0,eW.cM)()],sU.prototype,"connect",1);var sW=i(5871),sM=i.n(sW);class sL{constructor(e){this.container=e;let t=sM()();this.providers={[r9.GitHub]:{...si[r9.GitHub],provider:t.github,getCurrentUserFn:t.github.getCurrentUser.bind(t.github),getPullRequestsForReposFn:t.github.getPullRequestsForRepos.bind(t.github),getIssuesForReposFn:t.github.getIssuesForRepos.bind(t.github)},[r9.GitHubEnterprise]:{...si[r9.GitHubEnterprise],provider:t.github,getCurrentUserFn:t.github.getCurrentUser.bind(t.github),getPullRequestsForReposFn:t.github.getPullRequestsForRepos.bind(t.github),getIssuesForReposFn:t.github.getIssuesForRepos.bind(t.github)},[r9.GitLab]:{...si[r9.GitLab],provider:t.gitlab,getCurrentUserFn:t.gitlab.getCurrentUser.bind(t.gitlab),getPullRequestsForReposFn:t.gitlab.getPullRequestsForRepos.bind(t.gitlab),getPullRequestsForRepoFn:t.gitlab.getPullRequestsForRepo.bind(t.gitlab),getIssuesForReposFn:t.gitlab.getIssuesForRepos.bind(t.gitlab),getIssuesForRepoFn:t.gitlab.getIssuesForRepo.bind(t.gitlab)},[r9.GitLabSelfHosted]:{...si[r9.GitLabSelfHosted],provider:t.gitlab,getCurrentUserFn:t.gitlab.getCurrentUser.bind(t.gitlab),getPullRequestsForReposFn:t.gitlab.getPullRequestsForRepos.bind(t.gitlab),getPullRequestsForRepoFn:t.gitlab.getPullRequestsForRepo.bind(t.gitlab),getIssuesForReposFn:t.gitlab.getIssuesForRepos.bind(t.gitlab),getIssuesForRepoFn:t.gitlab.getIssuesForRepo.bind(t.gitlab)},[r9.Bitbucket]:{...si[r9.Bitbucket],provider:t.bitbucket,getCurrentUserFn:t.bitbucket.getCurrentUser.bind(t.bitbucket),getPullRequestsForReposFn:t.bitbucket.getPullRequestsForRepos.bind(t.bitbucket),getPullRequestsForRepoFn:t.bitbucket.getPullRequestsForRepo.bind(t.bitbucket)},[r9.AzureDevOps]:{...si[r9.AzureDevOps],provider:t.azureDevOps,getCurrentUserForInstanceFn:t.azureDevOps.getCurrentUserForInstance.bind(t.azureDevOps),getPullRequestsForReposFn:t.azureDevOps.getPullRequestsForRepos.bind(t.azureDevOps),getPullRequestsForRepoFn:t.azureDevOps.getPullRequestsForRepo.bind(t.azureDevOps),getIssuesForAzureProjectFn:t.azureDevOps.getIssuesForAzureProject.bind(t.azureDevOps),getReposForAzureProjectFn:t.azureDevOps.getReposForAzureProject.bind(t.azureDevOps)},[r9.Jira]:{...si[r9.Jira],provider:t.jira},[r9.Trello]:{...si[r9.Trello],provider:t.trello}}}providers;getScopesForProvider(e){return this.providers[e]?.scopes}getProviderDomain(e){return this.providers[e]?.domain}getProviderPullRequestsPagingMode(e){return this.providers[e]?.pullRequestsPagingMode}getProviderIssuesPagingMode(e){return this.providers[e]?.issuesPagingMode}providerSupportsPullRequestFilters(e,t){return this.providers[e]?.supportedPullRequestFilters!=null&&t.every(t=>this.providers[e]?.supportedPullRequestFilters?.includes(t))}providerSupportsIssueFilters(e,t){return this.providers[e]?.supportedIssueFilters!=null&&t.every(t=>this.providers[e]?.supportedIssueFilters?.includes(t))}isRepoIdsInput(e){return null!=e&&Array.isArray(e)&&e.every(e=>"string"==typeof e||"number"==typeof e)}async getProviderToken(e,t){let i=null==e.domain||null==e.scopes?void 0:{domain:e.domain,scopes:e.scopes};try{return(await this.container.integrationAuthentication.getSession(e.id,i,{createIfNeeded:t?.createSessionIfNeeded}))?.accessToken}catch{return}}async getPullRequestsForRepos(e,t,i){let r;let s=this.providers[e];if(null==s)throw Error(`Provider with id ${e} not registered`);let n=await this.getProviderToken(s);if(null==n)throw Error(`Not connected to provider ${e}`);if(null==s.getPullRequestsForReposFn)throw Error(`Provider with id ${e} does not support getting pull requests for repositories`);try{r=JSON.parse(i?.cursor??"{}")}catch{r={}}let o=r.value,a=r.type,l={};"page"===a?l={page:o}:"cursor"===a&&(l={cursor:o});let h={...this.isRepoIdsInput(t)?{repoIds:t}:{repos:t},...i,...l},c=await s.getPullRequestsForReposFn(h,{token:n,isPAT:!0}),u=c.pageInfo?.hasNextPage??!1,d="{}";return c.pageInfo?.endCursor!=null?d=JSON.stringify({value:c.pageInfo?.endCursor,type:"cursor"}):c.pageInfo?.nextPage!=null&&(d=JSON.stringify({value:c.pageInfo?.nextPage,type:"page"})),{values:c.data,paging:{cursor:d,more:u}}}async getPullRequestsForRepo(e,t,i){let r;let s=this.providers[e];if(null==s)throw Error(`Provider with id ${e} not registered`);let n=await this.getProviderToken(s);if(null==n)throw Error(`Not connected to provider ${e}`);if(null==s.getPullRequestsForRepoFn)throw Error(`Provider with id ${e} does not support getting pull requests for a repository`);try{r=JSON.parse(i?.cursor??"{}")}catch{r={}}let o=r.value,a=r.type,l={};"page"===a?l={page:o}:"cursor"===a&&(l={cursor:o});let h=await s.getPullRequestsForRepoFn({repo:t,...i,...l},{token:n,isPAT:!0}),c=h.pageInfo?.hasNextPage??!1,u="{}";return h.pageInfo?.endCursor!=null?u=JSON.stringify({value:h.pageInfo?.endCursor,type:"cursor"}):h.pageInfo?.nextPage!=null&&(u=JSON.stringify({value:h.pageInfo?.nextPage,type:"page"})),{values:h.data,paging:{cursor:u,more:c}}}async getIssuesForRepos(e,t,i){let r;let s=this.providers[e];if(null==s)throw Error(`Provider with id ${e} not registered`);let n=await this.getProviderToken(s);if(null==n)throw Error(`Not connected to provider ${e}`);if(null==s.getIssuesForReposFn)throw Error(`Provider with id ${e} does not support getting issues for repositories`);if(s.id===r9.AzureDevOps)throw Error(`Provider with id ${e} does not support getting issues for repositories; use getIssuesForAzureProject instead`);try{r=JSON.parse(i?.cursor??"{}")}catch{r={}}let o=r.value,a=r.type,l={};"page"===a?l={page:o}:"cursor"===a&&(l={cursor:o});let h={...this.isRepoIdsInput(t)?{repoIds:t}:{repos:t},...i,...l},c=await s.getIssuesForReposFn(h,{token:n,isPAT:!0}),u=c.pageInfo?.hasNextPage??!1,d="{}";return c.pageInfo?.endCursor!=null?d=JSON.stringify({value:c.pageInfo?.endCursor,type:"cursor"}):c.pageInfo?.nextPage!=null&&(d=JSON.stringify({value:c.pageInfo?.nextPage,type:"page"})),{values:c.data,paging:{cursor:d,more:u}}}async getIssuesForRepo(e,t,i){let r;let s=this.providers[e];if(null==s)throw Error(`Provider with id ${e} not registered`);let n=await this.getProviderToken(s);if(null==n)throw Error(`Not connected to provider ${e}`);if(null==s.getIssuesForRepoFn)throw Error(`Provider with id ${e} does not support getting issues for a repository`);if(s.id===r9.AzureDevOps)throw Error(`Provider with id ${e} does not support getting issues for a repository; use getIssuesForAzureProject instead`);try{r=JSON.parse(i?.cursor??"{}")}catch{r={}}let o=r.value,a=r.type,l={};"page"===a?l={page:o}:"cursor"===a&&(l={cursor:o});let h=await s.getIssuesForRepoFn({repo:t,...i,...l},{token:n,isPAT:!0}),c=h.pageInfo?.hasNextPage??!1,u="{}";return h.pageInfo?.endCursor!=null?u=JSON.stringify({value:h.pageInfo?.endCursor,type:"cursor"}):h.pageInfo?.nextPage!=null&&(u=JSON.stringify({value:h.pageInfo?.nextPage,type:"page"})),{values:h.data,paging:{cursor:u,more:c}}}async getIssuesForAzureProject(e,t,i){let r;let s=this.providers[r9.AzureDevOps];if(null==s)throw Error(`Provider with id ${r9.AzureDevOps} not registered`);let n=await this.getProviderToken(s);if(null==n)throw Error(`Not connected to provider ${r9.AzureDevOps}`);if(null==s.getIssuesForAzureProjectFn)throw Error(`Provider with id ${r9.AzureDevOps} does not support getting issues for an Azure project`);try{r=JSON.parse(i?.cursor??"{}")}catch{r={}}let o=r.value,a=r.type,l={};"page"===a?l={page:o}:"cursor"===a&&(l={cursor:o});let h=await s.getIssuesForAzureProjectFn({namespace:e,project:t,...i,...l},{token:n,isPAT:!0}),c=h.pageInfo?.hasNextPage??!1,u="{}";return h.pageInfo?.endCursor!=null?u=JSON.stringify({value:h.pageInfo?.endCursor,type:"cursor"}):h.pageInfo?.nextPage!=null&&(u=JSON.stringify({value:h.pageInfo?.nextPage,type:"page"})),{values:h.data,paging:{cursor:u,more:c}}}async getReposForAzureProject(e,t,i){let r;let s=this.providers[r9.AzureDevOps];if(null==s)throw Error(`Provider with id ${r9.AzureDevOps} not registered`);let n=await this.getProviderToken(s);if(null==n)throw Error(`Not connected to provider ${r9.AzureDevOps}`);if(null==s.getReposForAzureProjectFn)throw Error(`Provider with id ${r9.AzureDevOps} does not support getting repositories for Azure projects`);try{r=JSON.parse(i?.cursor??"{}")}catch{r={}}let o=r.value,a=r.type,l={};"page"===a?l={page:o}:"cursor"===a&&(l={cursor:o});let h=await s.getReposForAzureProjectFn({namespace:e,project:t,...l},{token:n,isPAT:!0}),c=h.pageInfo?.hasNextPage??!1,u="{}";return h.pageInfo?.endCursor!=null?u=JSON.stringify({value:h.pageInfo?.endCursor,type:"cursor"}):h.pageInfo?.nextPage!=null&&(u=JSON.stringify({value:h.pageInfo?.nextPage,type:"page"})),{values:h.data,paging:{cursor:u,more:c}}}async getCurrentUser(e){let t=this.providers[e];if(null==t)throw Error(`Provider with id ${e} not registered`);let i=await this.getProviderToken(t);if(null==i)throw Error(`Not connected to provider ${e}`);if(null==t.getCurrentUserFn)throw Error(`Provider with id ${e} does not support getting current user`);let{data:r}=await t.getCurrentUserFn({token:i,isPAT:!0});return r}async getCurrentUserForInstance(e,t){let i=this.providers[e];if(null==i)throw Error(`Provider with id ${e} not registered`);let r=await this.getProviderToken(i);if(null==r)throw Error(`Not connected to provider ${e}`);if(null==i.getCurrentUserForInstanceFn)throw Error(`Provider with id ${e} does not support getting current user for an instance`);let{data:s}=await i.getCurrentUserForInstanceFn({namespace:t},{token:r,isPAT:!0});return s}}var sN=Object.defineProperty,sH=Object.getOwnPropertyDescriptor,sG=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?sH(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&sN(t,i,n),n};class sq{constructor(e){this.container=e,this._providersApi=new sL(e),this._disposable=b.Disposable.from(C.D.onDidChange(e=>{C.D.changed(e,"remotes")&&this._ignoreSSLErrors.clear()}),b.authentication.onDidChangeSessions(this.onAuthenticationSessionsChanged,this))}_onDidChangeConnectionState=new b.EventEmitter;get onDidChangeConnectionState(){return this._onDidChangeConnectionState.event}_connectedCache=new Set;_disposable;_integrations=new Map;_providersApi;dispose(){this._disposable?.dispose()}onAuthenticationSessionsChanged(e){for(let t of this._integrations.values())e.provider.id===t.authProvider.id&&t.refresh()}connected(e){this._connectedCache.has(e)||(this._connectedCache.add(e),this.container.telemetry.sendEvent("remoteProviders/connected",{"remoteProviders.key":e}),setTimeout(()=>this._onDidChangeConnectionState.fire({key:e,reason:"connected"}),250))}disconnected(e){this._connectedCache.delete(e),this.container.telemetry.sendEvent("remoteProviders/disconnected",{"remoteProviders.key":e}),setTimeout(()=>this._onDidChangeConnectionState.fire({key:e,reason:"disconnected"}),250)}isConnected(e){return null==e?0!==this._connectedCache.size:this._connectedCache.has(e)}get(e,t){let i=`${e}|${t}`,r=this._integrations.get(i);if(null==r){switch(e){case r9.GitHub:r=new s$(this.container,this._providersApi);break;case r9.GitHubEnterprise:if(null==t)throw Error(`Domain is required for '${e}' integration`);r=new s_(this.container,this._providersApi,t);break;case r9.GitLab:r=new sB(this.container,this._providersApi);break;case r9.GitLabSelfHosted:if(null==t)throw Error(`Domain is required for '${e}' integration`);r=new sU(this.container,this._providersApi,t);break;case r9.Bitbucket:r=new sC(this.container,this._providersApi);break;case r9.AzureDevOps:r=new sv(this.container,this._providersApi);break;default:throw Error(`Provider '${e}' is not supported`)}this._integrations.set(i,r)}return r}getByRemote(e){if(e?.provider==null)return;let t=sY(e.provider.id);return null!=t?this.get(t,e.domain):void 0}async getMyIssues(e){if(e?.provider==null)return;let t=this.getByRemote(e);return t?.searchMyIssues()}async getMyPullRequests(e){if(e?.provider==null)return;let t=this.getByRemote(e);return t?.searchMyPullRequests()}supports(e){return null!=sY(e)}_ignoreSSLErrors=new Map;ignoreSSLErrors(e){if(tm.$L)return!1;let t=this._ignoreSSLErrors.get(e.id);if(void 0===t){let i=C.D.get("remotes")?.find(t=>t.type.toLowerCase()===e.id&&t.domain===e.domain);t=i?.ignoreSSLErrors??!1,this._ignoreSSLErrors.set(e.id,t)}return t}}function sY(e){switch(e){case"azure-devops":return r9.AzureDevOps;case"bitbucket":case"bitbucket-server":return r9.Bitbucket;case"github":return r9.GitHub;case"gitlab":return r9.GitLab;default:return}}sG([(0,eW.fF)({args:{0:e=>e.name}})],sq.prototype,"getMyIssues",1),sG([(0,eW.fF)({args:{0:e=>e.name}})],sq.prototype,"getMyPullRequests",1);var sj=Object.defineProperty,sV=Object.getOwnPropertyDescriptor,sQ=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?sV(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&sj(t,i,n),n};class sz{constructor(e,t){this.container=e,this.connection=t}dispose(){}getRepository(e,t){return this.locateRepository(e,t)}async getRepositoryOrIdentity(e,t){let i=await this.getRepositoryIdentity(e);return await this.locateRepository(i,t)??i}async locateRepository(e,t){let i;let r="string"==typeof e?await this.getRepositoryIdentity(e):e,s=await this.container.repositoryPathMapping.getLocalRepoPaths({remoteUrl:r.remote?.url,repoInfo:null!=r.provider?{provider:r.provider.id,owner:r.provider.repoDomain,repoName:r.provider.repoName}:void 0});if(s.length){for(let e of s){let t=this.container.git.getRepository(b.Uri.file(e));if(null!=t){i=t;break}}null==i&&t?.openIfNeeded&&(i=await this.container.git.getOrOpenRepository(b.Uri.file(s[0]),{closeOnOpen:!0}))}else{let[,e,s]=r.remote?.url!=null?(0,ex.Sk)(r.remote.url):[];for(let n of this.container.git.repositories)if(null!=e&&null!=s&&(await n.getRemotes({filter:t=>t.matches(e,s)})).length>0||!t?.skipRefValidation&&null!=r.initialCommitSha&&"-"!==r.initialCommitSha&&await this.container.git.validateReference(n.uri,r.initialCommitSha)){i=n;break}}if(null==i&&t?.prompt){let e={title:"Locate Repository"};if(await b.window.showInformationMessage(`Unable to locate a repository for ${r.name}`,{modal:!0},e,{title:"Cancel",isCloseAffordance:!0})!==e)return;let t=(await b.window.showOpenDialog({title:`Choose a location for ${r.name}`,canSelectFiles:!1,canSelectFolders:!0,canSelectMany:!1}))?.[0];if(null==t)return;let s=await this.container.git.getOrOpenRepository(t,{closeOnOpen:!0,detectNested:!1});if(null==s)return;(null==r.initialCommitSha||await this.container.git.validateReference(s.uri,r.initialCommitSha))&&(i=s,await this.addFoundRepositoryToMap(i,r))}return i}async getRepositoryIdentity(e){let t;let i=await this.connection.fetchGkDevApi(`/v1/git-repositories/${e}`,{method:"GET"}),r=(await i.json()).data;if("name"in r&&"string"==typeof r.name)t=r.name;else if(r.provider?.repoName!=null)t=r.provider.repoName;else if(r.remote?.url!=null&&r.remote?.domain!=null&&r.remote?.path!=null){let e=(0,tX.B)(this.container)(r.remote.url,r.remote.domain,r.remote.path);t=e?.repoName??r.remote.path}else t=r.remote?.path??`Unknown ${r.initialCommitSha?` (${(0,F.zL)(r.initialCommitSha)})`:""}`;return{id:r.id,createdAt:new Date(r.createdAt),updatedAt:new Date(r.updatedAt),name:t,initialCommitSha:r.initialCommitSha,remote:r.remote,provider:r.provider}}async addFoundRepositoryToMap(e,t){let i=e.uri.fsPath;for(let t of(await e.getRemotes())){let e=t.provider?.url({type:tA.J.Repo});null!=e&&await this.container.repositoryPathMapping.writeLocalRepoPath({remoteUrl:e},i)}t?.provider?.id!=null&&t?.provider?.repoDomain!=null&&t?.provider?.repoName!=null&&await this.container.repositoryPathMapping.writeLocalRepoPath({repoInfo:{provider:t.provider.id,owner:t.provider.repoDomain,repoName:t.provider.repoName}},i)}}sQ([(0,eW.cM)()],sz.prototype,"getRepository",1),sQ([(0,eW.cM)()],sz.prototype,"getRepositoryOrIdentity",1),sQ([(0,eW.cM)()],sz.prototype,"locateRepository",1),sQ([(0,eW.cM)()],sz.prototype,"getRepositoryIdentity",1);var sK=i(7139),sJ=i(7707);class sZ{_disposable;_statusBarItem;constructor(e){this._disposable=b.Disposable.from(C.D.onDidChange(this.onConfigurationChanged,this),e.subscription.onDidChange(this.onSubscriptionChanged,this),(0,t5.IH)(e.onReady)(()=>queueMicrotask(()=>this.updateStatusBar())),(0,i4.ve)(e=>{("gitlens:enabled"===e||"gitlens:plus:enabled"===e)&&this.updateStatusBar()}),{dispose:()=>this._statusBarItem?.dispose()})}dispose(){this._disposable.dispose()}onConfigurationChanged(e){(C.D.changed(e,"graph.statusBar.enabled")||C.D.changed(e,"plusFeatures.enabled"))&&this.updateStatusBar()}onSubscriptionChanged(e){this.updateStatusBar()}updateStatusBar(){C.D.get("graph.statusBar.enabled")&&(0,i4.fw)("gitlens:enabled")&&(0,rZ.L)()?(null==this._statusBarItem&&(this._statusBarItem=b.window.createStatusBarItem("gitlens.graph",b.StatusBarAlignment.Left,9997),this._statusBarItem.name="GitLens Commit Graph",this._statusBarItem.command=$.Gh.ShowGraph,this._statusBarItem.text="$(gitlens-graph)",this._statusBarItem.tooltip=new b.MarkdownString("Visualize commits on the Commit Graph ✨"),this._statusBarItem.accessibilityInformation={label:"Show the GitLens Commit Graph"}),this._statusBarItem.show()):(this._statusBarItem?.dispose(),this._statusBarItem=void 0)}}var sX=i(635),s0=i(1907),s1=Object.defineProperty,s2=Object.getOwnPropertyDescriptor,s4=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?s2(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&s1(t,i,n),n};class s5{constructor(e,t){this.container=e,this.connection=t}async getWorkspace(e,t){let i;if(t?.includeRepositories){let e=`(first: ${t?.repoCount??s0.CL}`;t?.repoPage&&(e+=`, page: ${t.repoPage}`),e+=")",i=`
				provider_data {
					repositories ${e} {
						total_count
						page_info {
							end_cursor
							has_next_page
						}
						nodes {
							id
							name
							repository_id
							provider
							provider_project_name
							provider_organization_id
							provider_organization_name
							url
						}
					}
				}
			`}let r=`
			id
			description
			name
			organization {
				id
			}
			provider
			azure_organization_id
			azure_project
			repo_relation
			${i??""}
		`,s=`
			query getWorkspace {
				project(id: "${e}") { ${r} }
			}
		`,n=await this.fetch({query:s});if(!n.ok)throw eL.Yd.error(void 0,`Getting workspace failed: (${n.status}) ${n.statusText}`),Error(n.statusText);return await n.json()}async getWorkspaces(e){let t,i;if(e?.includeRepositories){let i=`(first: ${e?.repoCount??s0.CL}`;e?.repoPage&&(i+=`, page: ${e.repoPage}`),i+=")",t=`
				provider_data {
					repositories ${i} {
						total_count
						page_info {
							end_cursor
							has_next_page
						}
						nodes {
							id
							name
							repository_id
							provider
							provider_project_name
							provider_organization_id
							provider_organization_name
							url
						}
					}
				}
			`}let r=`
			total_count
			page_info {
				end_cursor
				has_next_page
			}
			nodes {
				id
				description
				name
				organization {
					id
				}
				provider
				azure_organization_id
				azure_project
				repo_relation
				${t??""}
			}
		`,s=`(first: ${e?.count??s0.U1}`;e?.cursor?s+=`, after: "${e.cursor}"`:e?.page&&(s+=`, page: ${e.page}`),s+=")";let n="query getWorkpaces {";if(n+=`memberProjects: projects ${s} { ${r} }`,e?.cursor==null&&e?.includeOrganizations)for(let t of(await this.container.subscription.getSubscription())?.account?.organizationIds??[]){let i=`(first: ${e?.count??s0.U1}`;e?.page&&(i+=`, page: ${e.page}`),i+=`, organization_id: "${t}")`,n+=`organizationProjects_${t}: projects ${i} { ${r} }`}n+="}";let o=await this.fetch({query:n});if(!o.ok)throw eL.Yd.error(void 0,`Getting workspaces failed: (${o.status}) ${o.statusText}`),Error(o.statusText);let a=new Set,l=await o.json();if(l?.data!=null){for(let e of Object.values(l.data))if(null!=e){if(null==i)for(let t of(i={data:{projects:e}},e.nodes))a.add(t.id);else for(let t of e.nodes)a.has(t.id)||(a.add(t.id),i.data.projects.nodes.push(t))}return null!=i&&(i.data.projects.total_count=a.size),i}}async getWorkspaceRepositories(e,t){let i=`(first: ${t?.count??s0.CL}`;t?.cursor?i+=`, after: "${t.cursor}"`:t?.page&&(i+=`, page: ${t.page}`),i+=")";let r=await this.fetch({query:`
					query getWorkspaceRepos {
						project (id: "${e}") {
							provider_data {
								repositories ${i} {
									total_count
									page_info {
										end_cursor
										has_next_page
									}
									nodes {
										id
										name
										repository_id
										provider
										provider_project_name
										provider_organization_id
										provider_organization_name
										url
									}
								}
							}
						}
					}
				`});if(!r.ok)throw eL.Yd.error(void 0,`Getting workspace repos failed: (${r.status}) ${r.statusText}`),Error(r.statusText);return await r.json()}async createWorkspace(e){if(!e.name||!e.description||!e.provider||e.provider===s0.Xu.Azure&&(!e.azureOrganizationName||!e.azureProjectName)||(e.provider===s0.Xu.GitHubEnterprise||e.provider===s0.Xu.GitLabSelfHosted)&&!e.hostUrl)return;let t=await this.fetch({query:`
					mutation createWorkspace {
						create_project(
							input: {
						  		type: GK_PROJECT
						  		name: "${e.name}"
						  		description: "${e.description}"
						  		provider: ${e.provider}
								${e.hostUrl?`host_url: "${e.hostUrl}"`:""}
								${e.azureOrganizationName?`azure_organization_id: "${e.azureOrganizationName}"`:""}
								${e.azureProjectName?`azure_project: "${e.azureProjectName}"`:""}
						  		profile_id: "shared-services"
							}
						) {
							id,
							name,
							description,
							organization {
								id
							}
							provider
							azure_organization_id
							azure_project
							repo_relation
						}
					}
				`});if(!t.ok)throw eL.Yd.error(void 0,`Creating workspace failed: (${t.status}) ${t.statusText}`),Error(t.statusText);return await t.json()}async deleteWorkspace(e){let t=await this.fetch({query:`
					mutation deleteWorkspace {
						delete_project(
							id: "${e}"
						) {
							id
						}
					}
				`});if(!t.ok)throw eL.Yd.error(void 0,`Deleting workspace failed: (${t.status}) ${t.statusText}`),Error(t.statusText);let i=await t.json();if(i?.errors?.some(e=>e.message.includes("permission"))){let e="Adding repositories to workspace failed: you do not have permission to delete this workspace";throw eL.Yd.error(void 0,e),Error(e)}return i}async addReposToWorkspace(e,t){if(0===t.length)return;let i="[";i+=t.map(e=>`{ provider_organization_id: "${e.owner}", name: "${e.repoName}" }`).join(",")+"]";let r=1,s=t.map(e=>`Repository${r++}: repository(provider_organization_id: "${e.owner}", name: "${e.repoName}") {
			id
			name
			repository_id
			provider
			provider_project_name
			provider_organization_id
			provider_organization_name
			url
		}`).join(","),n=await this.fetch({query:`
					mutation addReposToWorkspace {
						add_repositories_to_project(
							input: {
								project_id: "${e}",
								repositories: ${i}
							}
						) {
							id
							provider_data {
								${s}
							}
						}
					}
				`});if(!n.ok)throw eL.Yd.error(void 0,`Adding repositories to workspace failed: (${n.status}) ${n.statusText}`),Error(n.statusText);let o=await n.json();if(o?.errors?.some(e=>e.message.includes("permission"))){let e="Adding repositories to workspace failed: you do not have permission to add repositories to this workspace";throw eL.Yd.error(void 0,e),Error(e)}return o}async removeReposFromWorkspace(e,t){if(0===t.length)return;let i="[";i+=t.map(e=>`{ provider_organization_id: "${e.owner}", name: "${e.repoName}" }`).join(",")+"]";let r=await this.fetch({query:`
					mutation removeReposFromWorkspace {
						remove_repositories_from_project(
							input: {
								project_id: "${e}",
								repositories: ${i}
							}
						) {
							id
						}
					}
				`});if(!r.ok)throw eL.Yd.error(void 0,`Removing repositories from workspace failed: (${r.status}) ${r.statusText}`),Error(r.statusText);let s=await r.json();if(s?.errors?.some(e=>e.message.includes("permission"))){let e="Adding repositories to workspace failed: you do not have permission to remove repositories from this workspace";throw eL.Yd.error(void 0,e),Error(e)}return s}async fetch(e,t){return this.connection.fetchApiGraphQL("api/projects/graphql",e,t)}}s4([(0,eW.cM)()],s5.prototype,"getWorkspace",1),s4([(0,eW.cM)()],s5.prototype,"getWorkspaces",1),s4([(0,eW.cM)()],s5.prototype,"getWorkspaceRepositories",1),s4([(0,eW.cM)()],s5.prototype,"createWorkspace",1),s4([(0,eW.cM)()],s5.prototype,"deleteWorkspace",1),s4([(0,eW.cM)()],s5.prototype,"addReposToWorkspace",1),s4([(0,eW.cM)()],s5.prototype,"removeReposFromWorkspace",1);var s6=Object.defineProperty,s3=Object.getOwnPropertyDescriptor,s8=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?s3(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&s6(t,i,n),n};class s9{constructor(e,t){this.container=e,this.connection=t,this._workspacesApi=new s5(this.container,this.connection),this._workspacesPathProvider=new ix,this._currentWorkspaceId=ne(),this._currentWorkspaceAutoAddSetting=b.workspace.getConfiguration("gitkraken")?.get("workspaceAutoAddSetting")??"disabled",this._disposable=b.Disposable.from(e.subscription.onDidChange(this.onSubscriptionChanged,this))}_onDidResetWorkspaces=new b.EventEmitter;get onDidResetWorkspaces(){return this._onDidResetWorkspaces.event}_cloudWorkspaces;_disposable;_localWorkspaces;_workspacesApi;_workspacesPathProvider;_currentWorkspaceId;_currentWorkspaceAutoAddSetting="disabled";_currentWorkspace;dispose(){this._disposable.dispose()}get currentWorkspaceId(){return this._currentWorkspaceId}get currentWorkspace(){return this._currentWorkspace}onSubscriptionChanged(e){(null==e.current.account||e.current.account.id!==e.previous?.account?.id||e.current.state!==e.previous?.state)&&this.resetWorkspaces({cloud:!0})}async loadCloudWorkspaces(e=!1){let t;let i=await this.container.subscription.getSubscription();if(i?.account==null)return{cloudWorkspaces:void 0,cloudWorkspaceInfo:"Please sign in to use cloud workspaces."};let r=[];try{let i=await this._workspacesApi.getWorkspaces({includeRepositories:!e,includeOrganizations:!0});t=i?.data?.projects?.nodes}catch{return{cloudWorkspaces:void 0,cloudWorkspaceInfo:"Failed to load cloud workspaces."}}let s=0,n=i.state===rd.jc.FreeInPreviewTrial||i.state===rd.jc.FreePlusInTrial||i.state===rd.jc.Paid;if(t?.length)for(let i of t){let t=await this._workspacesPathProvider.getCloudWorkspaceCodeWorkspacePath(i.id);if(!n&&i.organization?.id){s+=1;continue}let o=i.provider_data?.repositories?.nodes,a=null!=o?o.map(e=>({...e,workspaceId:i.id})):o;null!=a||e||(a=[]),r.push(new s0.CH(this.container,i.id,i.name,i.organization?.id,i.provider,i.repo_relation,null!=this._currentWorkspaceId&&this._currentWorkspaceId===i.id,i.provider===s0._N.Azure?{organizationId:i.azure_organization_id??void 0,project:i.azure_project??void 0}:void 0,a,t))}return{cloudWorkspaces:r,cloudWorkspaceInfo:s>0?`${s} shared workspaces hidden - upgrade to GitKraken Pro to access.`:void 0}}async loadLocalWorkspaces(){let e=[];for(let t of Object.values((await this._workspacesPathProvider.getLocalWorkspaceData())?.workspaces||{}))e.push(new s0.qP(this.container,t.localId,t.name,t.repositories.map(e=>({localPath:e.localPath,name:e.localPath.split(/[\\/]/).pop()??"unknown",workspaceId:t.localId})),null!=this._currentWorkspaceId&&this._currentWorkspaceId===t.localId));return{localWorkspaces:e,localWorkspaceInfo:void 0}}getCloudWorkspace(e){return this._cloudWorkspaces?.find(t=>t.id===e)}getLocalWorkspace(e){return this._localWorkspaces?.find(t=>t.id===e)}async getWorkspaces(e){let t={cloudWorkspaces:[],localWorkspaces:[],cloudWorkspaceInfo:void 0,localWorkspaceInfo:void 0};if(null==this._cloudWorkspaces||e?.force){let i=await this.loadCloudWorkspaces(e?.excludeRepositories);this._cloudWorkspaces=i.cloudWorkspaces,t.cloudWorkspaceInfo=i.cloudWorkspaceInfo}if(null==this._localWorkspaces||e?.force){let e=await this.loadLocalWorkspaces();this._localWorkspaces=e.localWorkspaces,t.localWorkspaceInfo=e.localWorkspaceInfo}let i=[...this._cloudWorkspaces??[],...this._localWorkspaces??[]].find(e=>e.current);return null!=i&&(this._currentWorkspaceId=i.id,this._currentWorkspace=i),t.cloudWorkspaces=this._cloudWorkspaces??[],t.localWorkspaces=this._localWorkspaces??[],t}async getCloudWorkspaceRepositories(e){let t=await this._workspacesApi.getWorkspaceRepositories(e),i=t?.data?.project?.provider_data?.repositories?.nodes;return i?.map(t=>({...t,workspaceId:e}))??[]}async addMissingCurrentWorkspaceRepos(e){if(null==this._currentWorkspaceId)return;let t=[...this._cloudWorkspaces??[],...this._localWorkspaces??[]].find(e=>e.current);if(null==t)try{let e=await this._workspacesApi.getWorkspace(this._currentWorkspaceId,{includeRepositories:!0});if(e?.data?.project==null)return;let i=e.data.project.provider_data?.repositories?.nodes,r=null!=i?i.map(t=>({...t,workspaceId:e.data.project.id})):[];t=new s0.CH(this.container,e.data.project.id,e.data.project.name,e.data.project.organization?.id,e.data.project.provider,e.data.project.repo_relation,!0,e.data.project.provider===s0._N.Azure?{organizationId:e.data.project.azure_organization_id??void 0,project:e.data.project.azure_project??void 0}:void 0,r,b.workspace.workspaceFile?.fsPath)}catch{return}if(!e?.force&&"disabled"===this._currentWorkspaceAutoAddSetting||!t?.current||(this._currentWorkspace=t,!(await t.getRepositoryDescriptors())?.length))return;let i=[...(await this.resolveWorkspaceRepositoriesByName(t,{resolveFromPath:!0,usePathMapping:!0})).values()].map(e=>e.repository),r=new Map;for(let e of this.container.git.openRepositories)r.set(e.id,e);let s=i.filter(e=>!r.has(e.id));if(0===s.length){e?.force&&b.window.showInformationMessage("No new repositories found to add.",{modal:!0});return}let n=[];if(!e?.force&&"prompt"===this._currentWorkspaceAutoAddSetting){let e={title:"Change Auto-Add Behavior..."},t={title:"Cancel",isCloseAffordance:!0},i=await b.window.showInformationMessage("New repositories found in the linked GitKraken workspace. Would you like to add them to the current VS Code workspace?",{title:"Add..."},e,t);if(null==i||i===t)return;if(i===e){this.chooseCodeWorkspaceAutoAddSetting({current:!0});return}}if(e?.force||"prompt"===this._currentWorkspaceAutoAddSetting){let e=await (0,sX.rf)("Add Repositories to Workspace","Choose which repositories to add to the current workspace",s);if(0===e.length)return;n=e.map(e=>e.repoPath)}else n=s.map(e=>e.path);if(0===n.length)return;let o=b.workspace.workspaceFolders?.length??0;b.window.withProgress({location:b.ProgressLocation.Notification,title:"Adding new repositories from linked cloud workspace...",cancellable:!1},()=>new Promise(e=>{b.workspace.updateWorkspaceFolders(o,0,...n.map(e=>({uri:b.Uri.file(e)}))),e(!0)}))}resetWorkspaces(e){(e?.cloud??!0)&&(this._cloudWorkspaces=void 0),(e?.local??!0)&&(this._localWorkspaces=void 0),this._onDidResetWorkspaces.fire()}async getCloudWorkspaceRepoPath(e,t){return this._workspacesPathProvider.getCloudWorkspaceRepoPath(e,t)}async updateCloudWorkspaceRepoLocalPath(e,t,i){await this._workspacesPathProvider.writeCloudWorkspaceRepoDiskPathToMap(e,t,i)}async getRepositoriesInParentFolder(e){let t=(await b.window.showOpenDialog({title:"Choose a folder containing repositories for this workspace",canSelectFiles:!1,canSelectFolders:!0,canSelectMany:!1}))?.[0];if(!(null==t||e?.isCancellationRequested))try{return this.container.git.findRepositories(t,{cancellation:e,depth:1,silent:!0})}catch(e){return}}async locateAllCloudWorkspaceRepos(e,t){let i=this.getCloudWorkspace(e);if(null==i)return;let r=await i.getRepositoryDescriptors();if(null==r||0===r.length)return;let s=await this.getRepositoriesInParentFolder(t);if(!(null==s||0===s.length||t?.isCancellationRequested)){for(let i of(await this.resolveWorkspaceRepositoriesByName(e,{cancellation:t,repositories:s})).values())if(await this.locateWorkspaceRepo(e,i.descriptor,i.repository),t?.isCancellationRequested)return}}async locateWorkspaceRepo(e,t,i){let r,s;if(null==i||i instanceof b.Uri){let e=i;if(null==e&&(e=(await b.window.showOpenDialog({title:`Choose a location for ${t.name}`,canSelectFiles:!1,canSelectFolders:!0,canSelectMany:!1}))?.[0]),null==e||null==(r=await this.container.git.getOrOpenRepository(e,{closeOnOpen:!0,detectNested:!1})))return}else r=i;let n=r.uri.fsPath,o=await r.getRemotes(),a=[];for(let e of o){let t=e.provider?.url({type:tA.J.Repo});null!=t&&a.push(t)}for(let e of a)await this.container.repositoryPathMapping.writeLocalRepoPath({remoteUrl:e},n);let l=this.getCloudWorkspace(e)??this.getLocalWorkspace(e);null==s&&l?.type==="cloud"&&(s=l.provider),null!=t.id&&null!=t.url&&null!=s&&(await this.container.repositoryPathMapping.writeLocalRepoPath({remoteUrl:t.url,repoInfo:{provider:s,owner:t.provider_organization_id,repoName:t.name}},n),await this.updateCloudWorkspaceRepoLocalPath(e,t.id,n))}async createCloudWorkspace(e){let t,i,r,s,n,o,a;let l=b.window.createInputBox();l.title="Create Cloud Workspace";let h=b.window.createQuickPick();h.title="Create Cloud Workspace";let c={GitHub:s0.Xu.GitHub,"GitHub Enterprise":s0.Xu.GitHubEnterprise};l.ignoreFocusOut=!0;let u=[];if(e?.repos!=null&&e.repos.length>0){for(let t of e.repos)if(0===(await t.getRemotes({filter:e=>"github.com"===e.domain})).length){await b.window.showErrorMessage("Only GitHub is supported for this operation. Please ensure all open repositories are hosted on GitHub.",{modal:!0});return}o=s0.Xu.GitHub}try{if(!(t=await new Promise(e=>{u.push(l.onDidHide(()=>e(void 0)),l.onDidAccept(()=>{let t=l.value.trim();if(!t){l.validationMessage="Please enter a non-empty name for the workspace";return}e(t)})),l.placeholder="Please enter a name for the new workspace",l.prompt="Enter your workspace name",l.show()}))||!(i=await new Promise(e=>{u.push(l.onDidHide(()=>e(void 0)),l.onDidAccept(()=>{let t=l.value.trim();if(!t){l.validationMessage="Please enter a non-empty description for the workspace";return}e(t)})),l.value="",l.title="Create Workspace",l.placeholder="Please enter a description for the new workspace",l.prompt="Enter your workspace description",l.show()}))||(null==o&&(o=await new Promise(e=>{u.push(h.onDidHide(()=>e(void 0)),h.onDidAccept(()=>{0!==h.activeItems.length&&e(c[h.activeItems[0].label])})),h.placeholder="Please select a provider for the new workspace",h.items=Object.keys(c).map(e=>({label:e})),h.canSelectMany=!1,h.show()})),!o||(o==s0.Xu.GitHubEnterprise||o==s0.Xu.GitLabSelfHosted)&&!(r=await new Promise(e=>{u.push(l.onDidHide(()=>e(void 0)),l.onDidAccept(()=>{let t=l.value.trim();if(!t){l.validationMessage="Please enter a non-empty host URL for the workspace";return}e(t)})),l.value="",l.placeholder="Please enter a host URL for the new workspace",l.prompt="Enter your workspace host URL",l.show()}))||o==s0.Xu.Azure&&(!(s=await new Promise(e=>{u.push(l.onDidHide(()=>e(void 0)),l.onDidAccept(()=>{let t=l.value.trim();if(!t){l.validationMessage="Please enter a non-empty organization name for the workspace";return}e(t)})),l.value="",l.placeholder="Please enter an organization name for the new workspace",l.prompt="Enter your workspace organization name",l.show()}))||!(n=await new Promise(e=>{u.push(l.onDidHide(()=>e(void 0)),l.onDidAccept(()=>{let t=l.value.trim();if(!t){l.validationMessage="Please enter a non-empty project name for the workspace";return}e(t)})),l.value="",l.placeholder="Please enter a project name for the new workspace",l.prompt="Enter your workspace project name",l.show()})))))return}finally{l.dispose(),h.dispose(),u.forEach(e=>void e.dispose())}let d={name:t,description:i,provider:o,hostUrl:r,azureOrganizationName:s,azureProjectName:n};try{let e=await this._workspacesApi.createWorkspace(d);a=e?.data?.create_project}catch{return}if(null!=a){null==this._cloudWorkspaces&&(this._cloudWorkspaces=[]);let t=await this._workspacesPathProvider.getCloudWorkspaceCodeWorkspacePath(a.id);this._cloudWorkspaces?.push(new s0.CH(this.container,a.id,a.name,a.organization?.id,a.provider,a.repo_relation,null!=this._currentWorkspaceId&&this._currentWorkspaceId===a.id,a.provider===s0._N.Azure?{organizationId:a.azure_organization_id??void 0,project:a.azure_project??void 0}:void 0,[],t));let i=this.getCloudWorkspace(a.id);null!=i&&await this.addCloudWorkspaceRepos(i.id,{repos:e?.repos,suppressNotifications:!0})}}async deleteCloudWorkspace(e){let t=await b.window.showWarningMessage("Are you sure you want to delete this workspace? This cannot be undone.",{modal:!0},{title:"Confirm"},{title:"Cancel",isCloseAffordance:!0});if(null!=t&&"Cancel"!=t.title)try{let t=await this._workspacesApi.deleteWorkspace(e);t?.data?.delete_project?.id===e&&(this._cloudWorkspaces=this._cloudWorkspaces?.filter(t=>t.id!==e))}catch(e){b.window.showErrorMessage(e.message)}}async filterReposForProvider(e,t){let i=[];for(let r of e)(await r.getRemotes({filter:e=>e.provider?.id===s0.Jv[t]})).length&&i.push(r);return i}async filterReposForCloudWorkspace(e,t){let i=this.getCloudWorkspace(t)??this.getLocalWorkspace(t);if(null==i)return e;let r=[...(await i.getRepositoriesByName()).values()].map(e=>e.repository);return e.filter(e=>!r.find(t=>t.id===e.id))}async addCloudWorkspaceRepos(e,t){let i=this.getCloudWorkspace(e);if(null==i)return;let r=[],s=t?.repos;if(!t?.repos){let r=await this.filterReposForProvider(this.container.git.openRepositories,i.provider);r=await this.filterReposForCloudWorkspace(r,e);let n=[{label:"Choose repositories from a folder",description:void 0,choice:s0.Pv.ParentFolder}];r.length>0&&n.unshift({label:"Choose repositories from the current window",description:void 0,choice:s0.Pv.CurrentWindow}),n[0].picked=!0;let o=await b.window.showQuickPick(n,{placeHolder:"Choose repositories from the current window or a folder",ignoreFocusOut:!0});if(null==o)return;o.choice===s0.Pv.ParentFolder&&await b.window.withProgress({location:b.ProgressLocation.Notification,title:"Finding repositories to add to the workspace...",cancellable:!0},async(s,n)=>{let o=await this.getRepositoriesInParentFolder(n);if(null!=o){if(0===o.length){t?.suppressNotifications||b.window.showInformationMessage("No repositories found in the chosen folder.",{modal:!0});return}if(!n.isCancellationRequested){if(0===(r=await this.filterReposForProvider(o,i.provider)).length){t?.suppressNotifications||b.window.showInformationMessage(`No matching repositories found for provider ${i.provider}.`,{modal:!0});return}n.isCancellationRequested||0!==(r=await this.filterReposForCloudWorkspace(r,e)).length||t?.suppressNotifications||b.window.showInformationMessage("All possible repositories are already in this workspace.",{modal:!0})}}});let a=await (0,sX.rf)("Add Repositories to Workspace","Choose which repositories to add to the workspace",r);if(0===a.length)return;s=a.map(e=>e.repoPath)}if(null==s)return;for(let e of s){let t=e instanceof tP._j?e:await this.container.git.getOrOpenRepository(b.Uri.file(e),{closeOnOpen:!0});if(null==t)continue;let i=s7(await t.getRemote("origin")||(await t.getRemotes())?.[0]);null!=i&&r.push({owner:i.owner,repoName:i.repoName,repo:t,url:i.url})}if(0===r.length)return;let n=[],o=new Set((await i.getRepositoryDescriptors()).map(e=>e.id));await b.window.withProgress({location:b.ProgressLocation.Notification,title:`Adding repositories to workspace ${i.name}...`,cancellable:!1},async()=>{try{let t=await this._workspacesApi.addReposToWorkspace(e,r.map(e=>({owner:e.owner,repoName:e.repoName})));if(t?.data.add_repositories_to_project==null)return;n=Object.values(t.data.add_repositories_to_project.provider_data).filter(e=>null!=e).map(t=>({...t,workspaceId:e}))}catch(e){b.window.showErrorMessage(e.message);return}for(let{repo:t,repoName:s,url:a}of(n.length>0&&i.addRepositories(n),n.length<r.length&&(n=(await i.getRepositoryDescriptors({force:!0})).filter(e=>!o.has(e.id))),r)){let i=n.find(e=>e.name.toLowerCase()===s||e.url===a);null!=i&&await this.locateWorkspaceRepo(e,i,t)}})}async removeCloudWorkspaceRepo(e,t){let i=this.getCloudWorkspace(e);if(null==i)return;let r=await b.window.showWarningMessage(`Are you sure you want to remove ${t.name} from this workspace? This cannot be undone.`,{modal:!0},{title:"Confirm"},{title:"Cancel",isCloseAffordance:!0});if(null!=r&&"Cancel"!=r.title)try{let r=await this._workspacesApi.removeReposFromWorkspace(e,[{owner:t.provider_organization_id,repoName:t.name}]);if(r?.data.remove_repositories_from_project==null)return;i.removeRepositories([t.name])}catch(e){b.window.showErrorMessage(e.message)}}async resolveWorkspaceRepositoriesByName(e,t){let i=new Map,r=e instanceof s0.CH||e instanceof s0.qP?e:this.getLocalWorkspace(e)??this.getCloudWorkspace(e);if(null==r)return i;let s=await r.getRepositoryDescriptors();if(null==s||0===s.length)return i;let n=t?.repositories??this.container.git.repositories,o=new Map,a=new Map;for(let e of n){if(t?.cancellation?.isCancellationRequested)break;if(a.set((0,M.AH)(e.uri.fsPath.toLowerCase()),e),r instanceof s0.CH)for(let t of(await e.getRemotes())){let i=s7(t);null!=i&&o.set(`${i.provider}/${i.owner}/${i.repoName}`,e)}}for(let e of s){let r=null,s=null;null==e.id?r=e.localPath:t?.usePathMapping===!0&&(r=await this.getMappedPathForCloudWorkspaceRepoDescriptor(e)),null!=r&&(s=a.get((0,M.AH)(r.toLowerCase()))),null==s&&null!=e.id&&null!=e.provider&&(s=o.get(`${e.provider.toLowerCase()}/${e.provider_organization_id.toLowerCase()}/${e.name.toLowerCase()}`)),null!=r&&null==s&&t?.resolveFromPath===!0&&(s=await this.container.git.getOrOpenRepository(b.Uri.file(r),{closeOnOpen:!0,force:!0})),null!=s&&i.set(e.name,{descriptor:e,repository:s})}return i}async saveAsCodeWorkspaceFile(e){let t=this.getCloudWorkspace(e)??this.getLocalWorkspace(e);if(null==t)return;let i=await t.getRepositoryDescriptors();if(null==i)return;let r=await t.getRepositoriesByName();if(0===r.size){b.window.showErrorMessage("No repositories in this workspace could be found locally. Please locate at least one repository.",{modal:!0});return}let s=[];for(let e of r.values()){let t=e.repository;t.virtual||s.push(t.uri.fsPath)}if(s.length<i.length){let e=await b.window.showWarningMessage("Some repositories in this workspace could not be located locally. Do you want to continue?",{modal:!0},{title:"Continue"},{title:"Cancel",isCloseAffordance:!0});if(null==e||"Cancel"==e.title)return}let n=await b.window.showSaveDialog({defaultUri:b.Uri.file(`${t.name}.code-workspace`),filters:{"Code Workspace":["code-workspace"]},title:"Choose a location for the new code workspace file"});if(null==n)return;let o=await this.chooseCodeWorkspaceAutoAddSetting();if(!await this._workspacesPathProvider.writeCodeWorkspaceFile(n,s,{workspaceId:e,workspaceAutoAddSetting:o})){b.window.showErrorMessage("Could not create the new workspace file. Check logs for details");return}t.setLocalPath(n.fsPath);let a={title:"Cancel",isCloseAffordance:!0},l=await b.window.showInformationMessage(`Workspace file created for ${t.name}. Would you like to open it now?`,{modal:!0},{title:"Open in New Window",location:"newWindow"},{title:"Open in Current Window",location:"currentWindow"},a);null!=l&&l!==a&&this.openCodeWorkspaceFile(e,{location:l.location})}async chooseCodeWorkspaceAutoAddSetting(e){if(e?.current&&(null==b.workspace.workspaceFile||null==this._currentWorkspaceId||null==this._currentWorkspaceAutoAddSetting))return"disabled";let t=e?.current?this._currentWorkspaceAutoAddSetting:"disabled",i=[{label:"Add on Workspace (Window) Open",description:"enabled"===this._currentWorkspaceAutoAddSetting?"current":void 0,option:"enabled"},{label:"Prompt on Workspace (Window) Open",description:"prompt"===this._currentWorkspaceAutoAddSetting?"current":void 0,option:"prompt"},{label:"Never",description:"disabled"===this._currentWorkspaceAutoAddSetting?"current":void 0,option:"disabled"}],r=await b.window.showQuickPick(i,{placeHolder:"Choose the behavior of automatically adding missing repositories to the current VS Code workspace",title:"Linked Workspace: Automatically Add Repositories"});if(r?.option==null)return t;let s=r.option;if(e?.current&&null!=b.workspace.workspaceFile){if(!await this._workspacesPathProvider.updateCodeWorkspaceFileSettings(b.workspace.workspaceFile,{workspaceAutoAddSetting:s}))return this._currentWorkspaceAutoAddSetting;this._currentWorkspaceAutoAddSetting=s}return s}async openCodeWorkspaceFile(e,t){let i=this.getCloudWorkspace(e)??this.getLocalWorkspace(e);if(null==i)return;if(null==i.localPath){let t=await b.window.showInformationMessage(`The workspace file for ${i.name} has not been created. Would you like to create it now?`,{modal:!0},{title:"Create"},{title:"Cancel",isCloseAffordance:!0});if(null==t||"Cancel"==t.title)return;return void this.saveAsCodeWorkspaceFile(e)}let r=t?.location==="currentWindow"?"currentWindow":"newWindow";if(!t?.location){let e=await b.window.showInformationMessage(`How would you like to open the workspace file for ${i.name}?`,{modal:!0},{title:"Open in New Window",location:"newWindow"},{title:"Open in Current Window",location:"currentWindow"},{title:"Cancel",isCloseAffordance:!0});if(null==e||"Cancel"==e.title)return;r=e.location??"newWindow"}if(!await this._workspacesPathProvider.confirmCloudWorkspaceCodeWorkspaceFilePath(i.id)){await this._workspacesPathProvider.removeCloudWorkspaceCodeWorkspaceFilePath(i.id),i.setLocalPath(void 0);let e=await b.window.showInformationMessage(`The workspace file for ${i.name} could not be found. Would you like to locate it now?`,{modal:!0},{title:"Locate"},{title:"Cancel",isCloseAffordance:!0});if(e?.title!=="Locate")return;let t=(await b.window.showOpenDialog({defaultUri:b.Uri.file(i.localPath),canSelectFiles:!0,canSelectFolders:!1,canSelectMany:!1,filters:{"Code Workspace":["code-workspace"]},title:"Locate the workspace file"}))?.[0]?.fsPath;if(null==t)return;await this._workspacesPathProvider.writeCloudWorkspaceCodeWorkspaceFilePathToMap(i.id,t),i.setLocalPath(t)}(0,eG.ic)(b.Uri.file(i.localPath),{location:r})}async getMappedPathForCloudWorkspaceRepoDescriptor(e){let t=await this.getCloudWorkspaceRepoPath(e.workspaceId,e.id);return null==t&&(t=(await this.container.repositoryPathMapping.getLocalRepoPaths({remoteUrl:e.url??void 0,repoInfo:{repoName:e.name,provider:e.provider??void 0,owner:e.provider_organization_id}}))?.[0]),t}}function s7(e){if(e.provider?.owner==null)return;let t=e.provider.path.split("/").pop();if(null!=t)return{provider:e.provider.id.toLowerCase(),owner:e.provider.owner.toLowerCase(),repoName:t.toLowerCase(),url:e.provider.url({type:tA.J.Repo})}}function ne(){return b.workspace.getConfiguration("gitkraken")?.get("workspaceId")}s8([(0,eW.cM)()],s9.prototype,"getWorkspaces",1),s8([(0,eW.cM)()],s9.prototype,"addMissingCurrentWorkspaceRepos",1),s8([(0,eW.cM)()],s9.prototype,"resetWorkspaces",1),s8([(0,eW.cM)({args:{1:!1,2:!1}})],s9.prototype,"locateWorkspaceRepo",1),s8([(0,eW.cM)({args:!1})],s9.prototype,"createCloudWorkspace",1),s8([(0,eW.cM)()],s9.prototype,"deleteCloudWorkspace",1),s8([(0,eW.cM)({args:{1:!1}})],s9.prototype,"addCloudWorkspaceRepos",1),s8([(0,eW.cM)({args:{1:!1}})],s9.prototype,"removeCloudWorkspaceRepo",1),s8([(0,eW.cM)({args:{1:!1}})],s9.prototype,"resolveWorkspaceRepositoriesByName",1),s8([(0,eW.cM)()],s9.prototype,"saveAsCodeWorkspaceFile",1),s8([(0,eW.cM)()],s9.prototype,"chooseCodeWorkspaceAutoAddSetting",1),s8([(0,eW.cM)()],s9.prototype,"openCodeWorkspaceFile",1);var nt=Object.defineProperty,ni=Object.getOwnPropertyDescriptor,nr=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?ni(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&nt(t,i,n),n};class ns{constructor(e){this.container=e,this._disposable=b.Disposable.from((0,iV.IH)(e.onReady)(this.onReady,this),C.D.onDidChange(this.onConfigurationChanged,this))}_cancellation;_disposable;_selectedSha;_statusBarBlame;_statusBarMode;dispose(){this.clearBlame(),this._statusBarBlame?.dispose(),this._statusBarMode?.dispose(),this.container.lineTracker.unsubscribe(this),this._disposable.dispose()}onReady(){this.onConfigurationChanged()}onConfigurationChanged(e){if(C.D.changed(e,"mode")){let t=C.D.get("mode.statusBar.enabled")?this.container.mode:void 0;if(t?.statusBarItemName){let i="left"!==C.D.get("mode.statusBar.alignment")?b.StatusBarAlignment.Right:b.StatusBarAlignment.Left;C.D.changed(e,"mode.statusBar.alignment")&&this._statusBarMode?.alignment!==i&&(this._statusBarMode?.dispose(),this._statusBarMode=void 0),this._statusBarMode=this._statusBarMode??b.window.createStatusBarItem("gitlens.mode",i,i===b.StatusBarAlignment.Right?999:1),this._statusBarMode.name="GitLens Modes",this._statusBarMode.command=$.Gh.SwitchMode,this._statusBarMode.text=t.statusBarItemName,this._statusBarMode.tooltip=new b.MarkdownString(`**${t.statusBarItemName}** ${$.NE.Dash} ${t.description}

---

Click to Switch GitLens Modes`,!0),this._statusBarMode.accessibilityInformation={label:`GitLens Mode: ${t.statusBarItemName}
Click to Switch GitLens Modes`},this._statusBarMode.show()}else this._statusBarMode?.dispose(),this._statusBarMode=void 0}if(C.D.changed(e,"statusBar")){if(C.D.get("statusBar.enabled")){let t="left"!==C.D.get("statusBar.alignment")?b.StatusBarAlignment.Right:b.StatusBarAlignment.Left;C.D.changed(e,"statusBar.alignment")&&this._statusBarBlame?.alignment!==t&&(this._statusBarBlame?.dispose(),this._statusBarBlame=void 0),this._statusBarBlame=this._statusBarBlame??b.window.createStatusBarItem("gitlens.blame",t,t===b.StatusBarAlignment.Right?1e3:0),this._statusBarBlame.name="GitLens Current Line Blame",this._statusBarBlame.command=C.D.get("statusBar.command"),C.D.changed(e,"statusBar.enabled")&&this.container.lineTracker.subscribe(this,this.container.lineTracker.onDidChangeActiveLines(this.onActiveLinesChanged,this))}else C.D.changed(e,"statusBar.enabled")&&(this.container.lineTracker.unsubscribe(this),this._statusBarBlame?.dispose(),this._statusBarBlame=void 0)}}onActiveLinesChanged(e){let t=!(C.D.get("statusBar.reduceFlicker")&&"selection"===e.reason&&(e.pending||null!=e.selections));if(!e.pending&&null!=e.selections){let i=this.container.lineTracker.getState(e.selections[0].active);if(i?.commit!=null){this.updateBlame(e.editor,i);return}t=!0}t?this.clearBlame():this._statusBarBlame?.text.startsWith("$(git-commit)")&&(this._statusBarBlame.text=`$(watch)${this._statusBarBlame.text.substring(13)}`)}clearBlame(){this._selectedSha=void 0,this._cancellation?.cancel(),this._statusBarBlame?.hide()}async updateBlame(e,t){let i,r;let s=C.D.get("statusBar");if(!s.enabled||null==this._statusBarBlame||!(0,eG.PH)(e)){this._cancellation?.cancel(),this._selectedSha=void 0;return}let{commit:n}=t;if(null==n){this._cancellation?.cancel();return}if(this._selectedSha===n.sha&&!n.isUncommitted){this._statusBarBlame?.text.startsWith("$(watch)")&&(this._statusBarBlame.text=`$(git-commit)${this._statusBarBlame.text.substring(8)}`);return}let o=(0,eH.UH)();this._selectedSha=n.sha,this._cancellation?.cancel(),this._cancellation=new b.CancellationTokenSource;let a=this._cancellation.token;switch(s.command){case i6.ef.CopyRemoteCommitUrl:i="Click to Copy Remote Commit URL";break;case i6.ef.CopyRemoteFileUrl:this._statusBarBlame.command=$.Gh.CopyRemoteFileUrl,i="Click to Copy Remote File Revision URL";break;case i6.ef.DiffWithPrevious:this._statusBarBlame.command=$.Gh.DiffLineWithPrevious,i="Click to Open Line Changes with Previous Revision";break;case i6.ef.DiffWithWorking:this._statusBarBlame.command=$.Gh.DiffLineWithWorking,i="Click to Open Line Changes with Working File";break;case i6.ef.OpenCommitOnRemote:i="Click to Open Commit on Remote";break;case i6.ef.OpenFileOnRemote:i="Click to Open Revision on Remote";break;case i6.ef.RevealCommitInView:i="Click to Reveal Commit in the Side Bar";break;case i6.ef.ShowCommitsInView:i="Click to Search for Commit";break;case i6.ef.ShowQuickCommitDetails:i="Click to Show Commit";break;case i6.ef.ShowQuickCommitFileDetails:i="Click to Show Commit (file)";break;case i6.ef.ShowQuickCurrentBranchHistory:i="Click to Show Branch History";break;case i6.ef.ShowQuickFileHistory:i="Click to Show File History";break;case i6.ef.ToggleCodeLens:i="Click to Toggle Git CodeLens";break;case i6.ef.ToggleFileBlame:i="Click to Toggle File Blame";break;case i6.ef.ToggleFileChanges:null!=n.file&&(this._statusBarBlame.command=(0,rg._N)({title:"Toggle File Changes",command:$.Gh.ToggleFileChanges,arguments:[n.file.uri,{type:"changes",context:{sha:n.sha,only:!1,selection:!1}}]})),i="Click to Toggle File Changes";break;case i6.ef.ToggleFileChangesOnly:null!=n.file&&(this._statusBarBlame.command=(0,rg._N)({title:"Toggle File Changes",command:$.Gh.ToggleFileChanges,arguments:[n.file.uri,{type:"changes",context:{sha:n.sha,only:!0,selection:!1}}]})),i="Click to Toggle File Changes";break;case i6.ef.ToggleFileHeatmap:i="Click to Toggle File Heatmap"}this._statusBarBlame.tooltip=new b.MarkdownString(`Loading... 

---

${i}`),this._statusBarBlame.accessibilityInformation={label:`${this._statusBarBlame.text}
${i}`};let l=await this.container.git.getBestRemotesWithProviders(n.repoPath),[h]=l,c=C.D.get("defaultDateFormat"),u=iY.i.has(s.format,"tips")||iY.i.has(s.tooltipFormat,"tips")?this.container.git.getBranchesAndTagsTipsFn(n.repoPath):void 0,d=!n.isUncommitted&&h?.hasIntegration()&&s.pullRequests.enabled&&(iY.i.has(s.format,"pullRequest","pullRequestAgo","pullRequestAgoOrDate","pullRequestDate","pullRequestState")||iY.i.has(s.tooltipFormat,"pullRequest","pullRequestAgo","pullRequestAgoOrDate","pullRequestDate","pullRequestState"));function p(e,t,r){e.text=`$(git-commit) ${iY.i.fromTemplate(s.format,n,{dateFormat:null===s.dateFormat?c:s.dateFormat,getBranchAndTagTips:t,messageTruncateAtNewLine:!0,pullRequest:r,pullRequestPendingMessage:"PR $(watch)",remotes:l})}`,e.accessibilityInformation={label:`${e.text}
${i}`}}async function g(e,t,i,r){return(0,ij.nN)(e,n,n.getGitUri(),n.lines[0].line-1,{autolinks:!0,cancellation:a,dateFormat:c,format:s.tooltipFormat,getBranchAndTagTips:t,pullRequest:i,pullRequests:d&&null!=i,remotes:l,timeout:r})}d&&(r=await (0,t2.Zo)(n.getAssociatedPullRequest(h),a,100,async e=>{if("timedout"!==e.reason||null==this._statusBarBlame)return;eL.Yd.debug(o,`${$.NE.Dot} pull request query took too long (over 100 ms)`);let[t,r]=await Promise.allSettled([u,e.value]);if(a.isCancellationRequested||null==this._statusBarBlame)return;let s=(0,t6.Sb)(r),n=(0,t6.Sb)(t);eL.Yd.debug(o,`${$.NE.Dot} pull request query completed; updating...`),p(this._statusBarBlame,n,s);let l=await g(this.container,n,s);null!=l&&(this._statusBarBlame.tooltip=l.appendMarkdown(`

---

${i}`))}));let m=null!=u?await u:void 0;if(a.isCancellationRequested)return;p(this._statusBarBlame,m,r?.value),this._statusBarBlame.show();let f=await (0,t2.Zo)(g(this.container,m,r?.value,20),a,100,async e=>{if("timedout"!==e.reason||null==this._statusBarBlame)return;let t=await e.value;null!=t&&(this._statusBarBlame.tooltip=t.appendMarkdown(`

---

${i}`))});a.isCancellationRequested||f.paused||null==f.value||(this._statusBarBlame.tooltip=f.value.appendMarkdown(`

---

${i}`))}}nr([(0,eW.fF)({args:{0:e=>`editor=${e.editor?.document.uri.toString(!0)}, selections=${e.selections?.map(e=>`[${e.anchor}-${e.active}]`).join(",")}, pending=${!!e.pending}, reason=${e.reason}`}})],ns.prototype,"onActiveLinesChanged",1),nr([(0,eW.fF)({args:{0:!1,1:e=>e.commit?.sha}})],ns.prototype,"updateBlame",1);var nn=Object.defineProperty,no=Object.getOwnPropertyDescriptor,na=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?no(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&nn(t,i,n),n};let nl=Object.create(null),nh=[];class nc{_mapping;constructor(e){for(let t in this._mapping=e,this._mapping)this._mapping[t]=this._mapping[t]??nl;nh.push(this._mapping)}async dispose(){let e=nh.indexOf(this._mapping),t=(0,eH.UH)();(0,eH.lH)(t,` \u2022 index=${e}`),e===nh.length-1?(nh.pop(),await this.updateKeyCommandsContext(nh[nh.length-1])):nh.splice(e,1)}_paused=!0;get paused(){return this._paused}async clearKeyCommand(e){let t=(0,eH.UH)(),i=nh[nh.length-1];if(i!==this._mapping||null==i[e]){(0,eH.lH)(t," • skipped");return}i[e]=void 0,await (0,i4.v)(`${$.m1}:key:${e}`,!1)}async pause(e){if(this._paused)return;this._paused=!0;let t=Object.keys(this._mapping).reduce((t,i)=>(t[i]=null==e||e.includes(i)?void 0:this._mapping[i],t),Object.create(null));await this.updateKeyCommandsContext(t)}async resume(){this._paused&&(this._paused=!1,await this.updateKeyCommandsContext(this._mapping))}async start(){await this.resume()}async setKeyCommand(e,t){let i=(0,eH.UH)(),r=nh[nh.length-1];if(r!==this._mapping){(0,eH.lH)(i," • skipped");return}let s=!!r[e];r[e]=t,s||await (0,i4.v)(`${$.m1}:key:${e}`,!0)}async updateKeyCommandsContext(e){await Promise.all($.XP.map(t=>(0,i4.v)(`${$.m1}:key:${t}`,!!e?.[t])))}}na([(0,eW.cM)({args:!1,prefix:e=>`${e.prefix}[${nh.length}]`})],nc.prototype,"dispose",1),na([(0,eW.cM)({args:!1,prefix:(e,t)=>`${e.prefix}[${nh.length}](${t})`})],nc.prototype,"clearKeyCommand",1),na([(0,eW.cM)({args:!1,prefix:e=>`${e.prefix}(paused=${e.instance._paused})`})],nc.prototype,"pause",1),na([(0,eW.cM)({args:!1,prefix:e=>`${e.prefix}(paused=${e.instance._paused})`})],nc.prototype,"resume",1),na([(0,eW.cM)({args:!1,prefix:(e,t)=>`${e.prefix}[${nh.length}](${t})`})],nc.prototype,"setKeyCommand",1);class nu{_disposable;constructor(){let e=$.XP.map(e=>(0,rg.xR)(`${$.m1}.key.${e}`,()=>this.execute(e),this));this._disposable=b.Disposable.from(...e)}dispose(){this._disposable.dispose()}createScope(e){return new nc({...e})}async beginScope(e){let t=this.createScope(e);return await t.start(),t}async execute(e){let t=(0,eH.UH)();if(!nh.length){(0,eH.lH)(t," • skipped, no mappings");return}try{let i=nh[nh.length-1][e];if("function"==typeof i&&(i=await i()),"function"!=typeof i?.onDidPressKey){(0,eH.lH)(t," • skipped, no callback");return}await i.onDidPressKey(e)}catch(e){eL.Yd.error(e,t)}}}na([(0,eW.cM)({args:!1,prefix:(e,t)=>`${e.prefix}[${nh.length}](${void 0===t?"":Object.keys(t).join(",")})`})],nu.prototype,"createScope",1),na([(0,eW.cM)({args:!1,prefix:(e,t)=>`${e.prefix}[${nh.length}](${void 0===t?"":Object.keys(t).join(",")})`})],nu.prototype,"beginScope",1),na([(0,eW.cM)()],nu.prototype,"execute",1);class nd{constructor(e){this.container=e,e.context.subscriptions.push(C.D.onDidChange(t=>{C.D.changed(t,"telemetry.enabled")&&this.ensureTelemetry(e)}),b.env.onDidChangeTelemetryEnabled(()=>this.ensureTelemetry(e))),this.ensureTelemetry(e)}_enabled=!1;get enabled(){return this._enabled}provider;globalAttributes=new Map;eventQueue=[];dispose(){this.provider?.dispose(),this.provider=void 0}_initializationTimer;ensureTelemetry(e){if(this._enabled=b.env.isTelemetryEnabled&&C.D.get("telemetry.enabled",void 0,!0),!this._enabled){null!=this._initializationTimer&&(clearTimeout(this._initializationTimer),this._initializationTimer=void 0),this.eventQueue.length=0,this.provider?.dispose(),this.provider=void 0;return}null==this._initializationTimer&&(this._initializationTimer=setTimeout(()=>this.initializeTelemetry(e),7500))}async initializeTelemetry(e){if(null!=this._initializationTimer&&(clearTimeout(this._initializationTimer),this._initializationTimer=void 0),this.provider=new(await i.e(913).then(i.bind(i,47))).OpenTelemetryProvider({env:e.env,extensionId:e.id,extensionVersion:e.version,machineId:b.env.machineId,sessionId:b.env.sessionId,language:b.env.language,platform:(0,tm.Xf)(),vscodeEdition:b.env.appName,vscodeHost:b.env.appHost,vscodeRemoteName:b.env.remoteName??"",vscodeShell:b.env.shell,vscodeUIKind:String(b.env.uiKind),vscodeVersion:b.version},(0,tg.Nx)(),e.debugging),this.eventQueue.length){let e=[...this.eventQueue];for(let{type:t,name:i,data:r,global:s}of(this.eventQueue.length=0,e))"sendEvent"===t&&(this.provider.setGlobalAttributes(s),this.provider.sendEvent(i,np(r)))}this.provider.setGlobalAttributes(this.globalAttributes)}sendEvent(e,t,i,r){if(this._enabled){if(null==this.provider){this.eventQueue.push({type:"sendEvent",name:e,data:t,global:new Map([...this.globalAttributes]),startTime:i??Date.now(),endTime:r??Date.now()});return}this.provider.sendEvent(e,np(t),i,r)}}startEvent(e,t,i){if(this._enabled){if(null!=this.provider){let r=this.provider.startEvent(e,np(t),i);return{dispose:()=>r?.end()}}return i=i??Date.now(),{dispose:()=>this.sendEvent(e,t,i,Date.now())}}}setGlobalAttribute(e,t){null==t?this.globalAttributes.delete(e):this.globalAttributes.set(e,t),this.provider?.setGlobalAttributes(this.globalAttributes)}setGlobalAttributes(e){for(let[t,i]of Object.entries(e))null==i?this.globalAttributes.delete(t):this.globalAttributes.set(t,i);this.provider?.setGlobalAttributes(this.globalAttributes)}deleteGlobalAttribute(e){this.globalAttributes.delete(e),this.provider?.setGlobalAttributes(this.globalAttributes)}}function np(e){if(null==e)return;let t=Object.create(null);for(let[i,r]of Object.entries(e))null!=r&&(t[i]=r);return t}class ng{constructor(e,t){this.container=e,this.storage=t}_onDidChange=new b.EventEmitter;get onDidChange(){return this._onDidChange.event}dispose(){}get(e){return this.storage.get("usages")?.[e]}async reset(e){let t=this.storage.get("usages");if(null!=t){if(null==e){await this.storage.delete("usages"),this._onDidChange.fire(void 0);return}t=(0,rQ.iC)(t,e,void 0),await this.storage.store("usages",t),this._onDidChange.fire({key:e,usage:void 0})}}async track(e){let t=this.storage.get("usages");null==t&&(t=Object.create(null));let i=Date.now(),r=t[e];null==r?(r={count:0,firstUsedAt:i,lastUsedAt:i},t[e]=r):(r.count!==Number.MAX_SAFE_INTEGER&&r.count++,r.lastUsedAt=i),this.container.telemetry.sendEvent("usage/track",{"usage.key":e,"usage.count":r.count}),await this.storage.store("usages",t),this._onDidChange.fire({key:e,usage:r})}}let nm=/\b(g(?:it)?\b\s*)\b(branch|checkout|cherry-pick|fetch|grep|log|merge|pull|push|rebase|reset|revert|show|stash|status|tag)\b/gi,nf=/\b((?!.*\/\.)(?!.*\.\.)(?!.*\/\/)(?!.*@\{)[^\000-\037\177 ,~^:?*[\\]+[^ ./])\b/gi,nw=/^[0-9a-f]{7,40}\.\.\.?[0-9a-f]{7,40}$/,nv=/^[0-9a-f]{7,40}$/;class ny{constructor(e){this.container=e,this.disposable=b.window.registerTerminalLinkProvider(this)}disposable;dispose(){this.disposable.dispose()}async provideTerminalLinks(e){let t,i,r;if(0===e.line.trim().length)return[];let s=this.container.git.highlander?.path;if(!s)return[];let n=C.D.get("terminalLinks.showDetailsView"),o=[],a=new RegExp(nf,nf.flags),l=new RegExp(nm,nm.flags);for(;;){if(null!=(r=l.exec(e.line))){let[e,t,i]=r,s={startIndex:r.index+t.length,length:i.length,tooltip:"Open in Git Command Palette",command:{command:$.Gh.GitCommands,args:{command:i}}};o.push(s)}if(null==(r=a.exec(e.line)))break;let[h,c]=r;if("HEAD"===c.toUpperCase()){let e={startIndex:r.index,length:c.length,tooltip:"Show HEAD",command:{command:$.Gh.ShowQuickBranchHistory,args:{branch:"HEAD",repoPath:s}}};o.push(e);continue}void 0===t&&(t=await this.container.git.getBranches(s));let u=t.values.find(e=>e.name===c);if(null==u&&(u=t.values.find(e=>(0,T.S3)(e.name)===c)),null!=u){let e={startIndex:r.index,length:c.length,tooltip:"Show Branch",command:{command:$.Gh.ShowQuickBranchHistory,args:{repoPath:s,branch:u.name}}};o.push(e);continue}void 0===i&&(i=await this.container.git.getTags(s));let d=i.values.find(e=>e.name===c);if(null!=d){let e={startIndex:r.index,length:c.length,tooltip:"Show Tag",command:{command:$.Gh.ShowQuickBranchHistory,args:{repoPath:s,tag:d.name}}};o.push(e);continue}if(!nv.test(c)){if(nw.test(c)){let e={startIndex:r.index,length:c.length,tooltip:"Show Commits",command:{command:$.Gh.GitCommands,args:{command:"log",state:{repo:s,reference:(0,F.xB)(c,s,{refType:"revision"})}}}};o.push(e)}continue}if(await this.container.git.validateReference(s,c)){let e={startIndex:r.index,length:c.length,tooltip:"Show Commit",command:n?{command:$.Gh.ShowInDetailsView,args:{repoPath:s,refs:[c]}}:{command:$.Gh.ShowQuickCommit,args:{repoPath:s,sha:c}}};o.push(e)}}return o}handleTerminalLink(e){b.commands.executeCommand(e.command.command,e.command.args)}}var nb=Object.defineProperty,nC=Object.getOwnPropertyDescriptor,nA=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?nC(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&nb(t,i,n),n};class nP{_onDidChangeActiveLines=new b.EventEmitter;get onDidChangeActiveLines(){return this._onDidChangeActiveLines.event}_disposable;_editor;_state=new Map;dispose(){for(let e of this._subscriptions.keys())this.unsubscribe(e)}onActiveTextEditorChanged(e){e!==this._editor&&(null==e||(0,eG.PH)(e))&&(this._editor=e,this._selections=nk(e?.selections),this.notifyLinesChanged("editor"))}onTextEditorSelectionChanged(e){if(this._editor!==e.textEditor&&!(0,eG.PH)(e.textEditor))return;let t=nk(e.selections);this._editor===e.textEditor&&this.includes(t)||(this._editor=e.textEditor,this._selections=t,this.notifyLinesChanged(this._editor===e.textEditor?"selection":"editor"))}getState(e){return this._state.get(e)}resetState(e){if(null!=e){this._state.delete(e);return}this._state.clear()}setState(e,t){this._state.set(e,t)}_selections;get selections(){return this._selections}includes(e,t){if("number"!=typeof e)return nD(e,this._selections);if(null==this._selections||0===this._selections.length)return!1;let i=t?.activeOnly??!0;for(let t of this._selections)if(e===t.active||!i&&(t.anchor>=e&&e>=t.active||t.active>=e&&e>=t.anchor))return!0;return!1}refresh(){this.notifyLinesChanged("editor")}_subscriptions=new Map;subscribed(e){return this._subscriptions.has(e)}subscribe(e,t){let i=(0,eH.UH)(),r=0===this._subscriptions.size,s=this._subscriptions.get(e);return null==s?(s=[t],this._subscriptions.set(e,s)):s.push(t),r?((0,eH.lH)(i," • starting line tracker..."),this._disposable=b.Disposable.from(b.window.onDidChangeActiveTextEditor((0,t5.Ds)(this.onActiveTextEditorChanged,0),this),b.window.onDidChangeTextEditorSelection(this.onTextEditorSelectionChanged,this),this.onStart?.()??{dispose:()=>{}}),queueMicrotask(()=>this.onActiveTextEditorChanged(b.window.activeTextEditor))):(0,eH.lH)(i," • already started..."),{dispose:()=>this.unsubscribe(e)}}unsubscribe(e){let t=this._subscriptions.get(e);if(null!=t){for(let i of(this._subscriptions.delete(e),t))i.dispose();0===this._subscriptions.size&&(this._fireLinesChangedDebounced?.cancel(),this._disposable?.dispose(),this._disposable=void 0)}}_suspended=!1;get suspended(){return this._suspended}resume(e){(e?.force||this._suspended)&&(this._suspended=!1,this.onResume?.(),this.notifyLinesChanged("editor"))}suspend(e){(e?.force||!this._suspended)&&(this._suspended=!0,this.onSuspend?.(),this.notifyLinesChanged("editor"))}fireLinesChanged(e){this._onDidChangeActiveLines.fire(e)}_fireLinesChangedDebounced;notifyLinesChanged(e){"editor"===e&&this.resetState();let t={editor:this._editor,selections:this.selections,reason:e};if(null==t.selections){queueMicrotask(()=>{t.editor===b.window.activeTextEditor&&(this._fireLinesChangedDebounced?.cancel(),this.fireLinesChanged(t))});return}null==this._fireLinesChangedDebounced&&(this._fireLinesChangedDebounced=(0,t5.Ds)(e=>{e.editor===b.window.activeTextEditor&&nD(e.selections,nk(e.editor?.selections))&&this.fireLinesChanged(e)},250)),this._fireLinesChangedDebounced.pending?.()||this.fireLinesChanged({...t,pending:!0}),this._fireLinesChangedDebounced(t)}}function nD(e,t){let i;return null==e&&null==t||null!=e&&null!=t&&e.length===t.length&&e.every((e,r)=>(i=t[r],e.active===i.active&&e.anchor===i.anchor))}function nk(e){return e?.map(e=>({active:e.active.line,anchor:e.anchor.line}))}nA([(0,eW.fF)({args:!1,singleLine:!0})],nP.prototype,"subscribe",1),nA([(0,eW.fF)({args:!1,singleLine:!0})],nP.prototype,"unsubscribe",1),nA([(0,eW.fF)()],nP.prototype,"resume",1),nA([(0,eW.fF)()],nP.prototype,"suspend",1);var nS=Object.defineProperty,nR=Object.getOwnPropertyDescriptor,n$=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?nR(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&nS(t,i,n),n};class n_ extends nP{constructor(e){super(),this.container=e}async fireLinesChanged(e){let t=!1;this.suspended||e.pending||null==e.selections||null==e.editor||(t=await this.updateState(e.selections,e.editor)),super.fireLinesChanged(t?e:{...e,selections:void 0,suspended:this.suspended})}_subscriptionOnlyWhenActive;onStart(){return this.onResume(),b.Disposable.from({dispose:()=>this.onSuspend()},this.container.tracker.onDidChangeBlameState(this.onBlameStateChanged,this),this.container.tracker.onDidChangeDirtyState(this.onDirtyStateChanged,this),this.container.tracker.onDidTriggerDirtyIdle(this.onDirtyIdleTriggered,this))}onResume(){null==this._subscriptionOnlyWhenActive&&(this._subscriptionOnlyWhenActive=this.container.tracker.onDidChangeContent(this.onContentChanged,this))}onSuspend(){this._subscriptionOnlyWhenActive?.dispose(),this._subscriptionOnlyWhenActive=void 0}onBlameStateChanged(e){this.notifyLinesChanged("editor")}onContentChanged(e){e.contentChanges.some(e=>this.selections?.some(t=>e.range.end.line>=t.active&&t.active>=e.range.start.line||e.range.start.line>=t.active&&t.active>=e.range.end.line))&&this.notifyLinesChanged("editor")}onDirtyIdleTriggered(e){let t=C.D.get("advanced.blame.sizeThresholdAfterEdit");t>0&&e.document.lineCount>t||this.resume()}onDirtyStateChanged(e){e.dirty?this.suspend():this.resume({force:!0})}async updateState(e,t){let i=(0,eH.UH)();if(!this.includes(e))return(0,eH.lH)(i,` ${$.NE.Dot} lines no longer match`),!1;let r=await this.container.tracker.getOrAdd(t.document);if(!r.isBlameable)return(0,eH.lH)(i,` ${$.NE.Dot} document is not blameable`),!1;if(1===e.length){let s=await this.container.git.getBlameForLine(r.uri,e[0].active,t?.document);if(null==s)return(0,eH.lH)(i,` ${$.NE.Dot} blame failed`),!1;null!=s.commit&&s.commit.file,this.setState(s.line.line-1,{commit:s.commit})}else{let s=await this.container.git.getBlame(r.uri,t.document);if(null==s)return(0,eH.lH)(i,` ${$.NE.Dot} blame failed`),!1;for(let t of e){let e=s.lines[t.active],i=s.commits.get(e.sha);null!=i&&i.file,null==i?this.resetState(t.active):this.setState(t.active,{commit:i})}}return this.includes(e)?r.isBlameable?(t.document.isDirty&&r.setForceDirtyStateChangeOnNextDocumentChange(),!0):((0,eH.lH)(i,` ${$.NE.Dot} document is not blameable`),!1):((0,eH.lH)(i,` ${$.NE.Dot} lines no longer match`),!1)}}n$([(0,eW.fF)({args:{0:e=>`editor/doc=${e.editor.document.uri.toString(!0)}, blameable=${e.blameable}`}})],n_.prototype,"onBlameStateChanged",1),n$([(0,eW.fF)({args:{0:e=>`editor/doc=${e.editor.document.uri.toString(!0)}`}})],n_.prototype,"onContentChanged",1),n$([(0,eW.fF)({args:{0:e=>`editor/doc=${e.editor.document.uri.toString(!0)}`}})],n_.prototype,"onDirtyIdleTriggered",1),n$([(0,eW.fF)({args:{0:e=>`editor/doc=${e.editor.document.uri.toString(!0)}, dirty=${e.dirty}`}})],n_.prototype,"onDirtyStateChanged",1),n$([(0,eW.fF)({args:{0:e=>e?.map(e=>e.active).join(","),1:e=>e.document.uri.toString(!0)},exit:!0})],n_.prototype,"updateState",1);var nI=i(4043);class nF{constructor(e){this.container=e,this._context={state:nI.mg.Idle},this._disposables.push(e.uri.onDidReceiveUri(async e=>{let t=(0,nI.lX)(e);if(null!=t&&this._context.state===nI.mg.Idle){if(this.container.git.isDiscoveringRepositories&&await this.container.git.isDiscoveringRepositories,!t.type||!t.mainId&&!t.remoteUrl&&!t.repoPath&&!t.targetId){b.window.showErrorMessage("Unable to resolve link"),eL.Yd.warn(`Unable to resolve link - missing basic properties: ${e.toString()}`);return}if(!Object.values(nI._n).includes(t.type)){b.window.showErrorMessage("Unable to resolve link"),eL.Yd.warn(`Unable to resolve link - unknown link type: ${e.toString()}`);return}if(t.type!==nI._n.Repository&&null==t.targetId&&null==t.mainId){b.window.showErrorMessage("Unable to resolve link"),eL.Yd.warn(`Unable to resolve link - no main/target id provided: ${e.toString()}`);return}if(t.type===nI._n.Comparison&&null==t.secondaryTargetId){b.window.showErrorMessage("Unable to resolve link"),eL.Yd.warn(`Unable to resolve link - no secondary target id provided: ${e.toString()}`);return}this.setContextFromDeepLink(t,e.toString()),await this.processDeepLink()}}));let t=this.container.storage.get("deepLinks:pending");null!=t&&(this.container.storage.delete("deepLinks:pending"),this.processPendingDeepLink(t))}_disposables=[];_context;_onDeepLinkProgressUpdated=new b.EventEmitter;dispose(){b.Disposable.from(...this._disposables).dispose()}resetContext(){this._context={state:nI.mg.Idle,url:void 0,mainId:void 0,repo:void 0,remoteUrl:void 0,remote:void 0,secondaryRemote:void 0,repoPath:void 0,targetId:void 0,secondaryTargetId:void 0,secondaryRemoteUrl:void 0,targetType:void 0,targetSha:void 0}}setContextFromDeepLink(e,t){this._context={...this._context,mainId:e.mainId,targetType:e.type,url:t,remoteUrl:e.remoteUrl,repoPath:e.repoPath,targetId:e.targetId,secondaryTargetId:e.secondaryTargetId,secondaryRemoteUrl:e.secondaryRemoteUrl}}async processPendingDeepLink(e){if(null==e.url)return;let t=(0,nI.lX)(b.Uri.parse(e.url));if(null==t)return;this._context={state:nI.mg.CloneOrAddRepo},this.setContextFromDeepLink(t,e.url);let i=nI.WA.OpenRepo;if(this.container.git.isDiscoveringRepositories&&await this.container.git.isDiscoveringRepositories,null!=e.repoPath){let t=b.Uri.parse(e.repoPath);try{let e=await this.container.git.getOrOpenRepository(t,{detectNested:!1});null!=e&&(this._context.repo=e,i=nI.WA.RepoOpened)}catch{}}queueMicrotask(()=>{this.processDeepLink(i)})}async getShaForBranch(e){let{repo:t,remote:i,secondaryRemote:r}=this._context;if(!t)return;let s=e;null==i||s.startsWith(`${i.name}/`)?null==r||s.startsWith(`${r.name}/`)||(s=`${r.name}/${s}`):s=`${i.name}/${s}`;let n=await t.getBranch(s);if(n?.sha!=null)return n.sha;if(e.includes(":")){let[i,r]=e.split(":");if(null!=i&&null!=s){let[e,o]=i.split("/");if(null!=e&&null!=o){for(let i of(await t.getRemotes()))if(i.provider?.owner===e&&(s=`${i.name}/${r}`,n=await t.getBranch(s),n?.sha!=null))return n.sha}}}if(n=await t.getBranch(e),n?.sha!=null)return n.sha}async getShaForTag(e){let{repo:t}=this._context;if(!t)return;let i=await t.getTag(e);if(i?.sha!=null)return i.sha}async getShaForCommit(e){let{repo:t}=this._context;if(t&&await this.container.git.validateReference(t.path,e))return e}async getShasForComparison(e,t){let i=await this.getComparisonRefSha(e);if(null==i)return;let r=await this.getComparisonRefSha(t);if(null!=r)return[i,r]}async getComparisonRefSha(e){if(""===e)return e;if((0,F.D3)(e))return this.getShaForCommit(e);let t=e.toLocaleLowerCase();if(!t.startsWith("refs/tags/")&&!t.startsWith("tags/")){let t=await this.getShaForBranch(e);if(null!=t)return t}let i=await this.getShaForTag(e);return null!=i?i:this.getShaForCommit(e)}async getShasForTargets(){let{repo:e,targetType:t,targetId:i,secondaryTargetId:r}=this._context;if(null!=e&&t!==nI._n.Repository&&null!=i){if(t===nI._n.Branch)return this.getShaForBranch(i);if(t===nI._n.Tag)return this.getShaForTag(i);if(t===nI._n.Commit)return this.getShaForCommit(i);if(t===nI._n.Comparison){if(null==r)return;return this.getShasForComparison(i,r)}}}async showOpenTypePrompt(e){let t=[{title:"Open Folder",action:"folder"},{title:"Open Workspace",action:"workspace"}];null!=this._context.remoteUrl&&t.push({title:"Clone",action:"clone"}),e?.includeCurrent&&t.push({title:"Use Current Window",action:"current"}),t.push({title:"Cancel",isCloseAffordance:!0});let i=await b.window.showInformationMessage(e?.customMessage??"No matching repository found. Please choose an option.",{modal:!0},...t);return i?.action}async showOpenLocationPrompt(e){let t=[{title:"Open",action:"currentWindow"},{title:"Open in New Window",action:"newWindow"}];"workspace"!==e&&t.push({title:"Add to Workspace",action:"addToWorkspace"}),t.push({title:"Cancel",isCloseAffordance:!0});let i=await b.window.showInformationMessage(`Please choose an option to open the repository ${"clone"===e?"after cloning":e}.`,{modal:!0},...t);return i?.action}async showFetchPrompt(){let e=await b.window.showInformationMessage("The link target(s) couldn't be found. Would you like to fetch from the remote?",{modal:!0},{title:"Fetch",action:!0},{title:"Cancel",isCloseAffordance:!0});return e?.action||!1}async showAddRemotePrompt(e,t){let i;let r=await b.window.showInformationMessage(`Unable to find a remote for '${e}'. Would you like to add a new remote?`,{modal:!0},{title:"Yes"},{title:"No",isCloseAffordance:!0});return r?.title!=="Yes"?i:i=await b.window.showInputBox({prompt:"Enter a name for the remote",validateInput:e=>e?t.includes(e)?"A remote with that name already exists":void 0:"A name is required"})}async processDeepLink(e=nI.WA.DeepLinkEventFired){let t="",i=e;if(i===nI.WA.DeepLinkCancelled&&this._context.state===nI.mg.Idle)return;let r=[],{targetType:s}=this._context;for(queueMicrotask(()=>void b.window.withProgress({cancellable:!0,location:b.ProgressLocation.Notification,title:`Opening ${(0,nI.$k)(s??nI._n.Repository)} link...`},(e,t)=>(e.report({increment:0}),new Promise(i=>{t.onCancellationRequested(()=>{queueMicrotask(()=>this.processDeepLink(nI.WA.DeepLinkCancelled)),i()}),this._onDeepLinkProgressUpdated.event(({message:t,increment:r})=>{e.report({message:t,increment:r}),100===r&&i()})}))));;){this._context.state=nI.eT[this._context.state][i];let{state:e,mainId:s,repo:n,url:o,remoteUrl:a,secondaryRemoteUrl:l,remote:h,secondaryRemote:c,repoPath:u,targetId:d,secondaryTargetId:p,targetSha:g,secondaryTargetSha:m,targetType:f}=this._context;switch(this._onDeepLinkProgressUpdated.fire(nI.gn[e]),e){case nI.mg.Idle:i===nI.WA.DeepLinkErrored&&(b.window.showErrorMessage("Unable to resolve link"),eL.Yd.warn(`Unable to resolve link - ${t}: ${o}`)),this.resetContext();return;case nI.mg.AccountCheck:if(null==f){i=nI.WA.DeepLinkErrored,t="No link type provided.";break}if(!nI.l5.includes(f)){i=nI.WA.AccountCheckPassed;break}if(!await (0,rF.wz)(`Opening ${(0,nI.$k)(f)} links requires a GitKraken account.`,this.container)){i=nI.WA.DeepLinkErrored,t="Account required to open link";break}i=nI.WA.AccountCheckPassed;break;case nI.mg.PlanCheck:if(null==f){i=nI.WA.DeepLinkErrored,t="No link type provided.";break}if(!nI.VE.includes(f)){i=nI.WA.PlanCheckPassed;break}if(!await (0,rF.eb)(`A paid plan is required to open ${(0,nI.$k)(f)} links.`,this.container)){i=nI.WA.DeepLinkErrored,t="Paid plan required to open link";break}i=nI.WA.PlanCheckPassed;break;case nI.mg.TypeMatch:switch(f){case nI._n.Draft:i=nI.WA.LinkIsDraftType;break;case nI._n.Workspace:i=nI.WA.LinkIsWorkspaceType;break;default:i=nI.WA.LinkIsRepoType}break;case nI.mg.RepoMatch:case nI.mg.AddedRepoMatch:{let n;if(!s&&!a&&!u){i=nI.WA.DeepLinkErrored,t="No repository id, remote url or path was provided.";break}let o=s,l=a;null!=n&&(this._context.remoteUrl=n.remote?.url??void 0,l=n.remote?.url,this._context.mainId=n.initialCommitSha??void 0,o=n.initialCommitSha);let h="",c="";for(let e of(null!=l&&([,h,c]=(0,ex.Sk)(l)),this.container.git.repositories)){if(null!=u&&(0,M.AH)(e.path.toLowerCase())===(0,M.AH)(u.toLowerCase())){this._context.repo=e,i=nI.WA.RepoMatched;break}if(null!=h&&null!=c){let t=await e.getRemotes({filter:e=>e.matches(h,c)});if(t.length>0){this._context.repo=e,this._context.remote=t[0],i=nI.WA.RepoMatched;break}}if(null!=o&&"-"!==o&&await this.container.git.validateReference(e.path,o)){this._context.repo=e,i=nI.WA.RepoMatched;break}}if(!this._context.repo&&e===nI.mg.RepoMatch&&(r=await this.container.repositoryPathMapping.getLocalRepoPaths({remoteUrl:l})).length>0){for(let e of this.container.git.repositories)if(r.some(t=>(0,M.AH)(e.path.toLowerCase())===(0,M.AH)(t.toLowerCase()))){this._context.repo=e,i=nI.WA.RepoMatched;break}if(null==this._context.repo){i=nI.WA.RepoMatchedInLocalMapping;break}}this._context.repo||(e===nI.mg.RepoMatch?i=nI.WA.RepoMatchFailed:(i=nI.WA.DeepLinkErrored,t="No matching repository found."));break}case nI.mg.CloneOrAddRepo:{let e,n,o;if(!s&&!a&&!u){i=nI.WA.DeepLinkErrored,t="Missing repository id, remote url and path.";break}if(r.length>0){if(null==(e=await b.window.showQuickPick([...r,"Choose a different location"],{placeHolder:"Matching repository found. Choose a location to open it."}))){i=nI.WA.DeepLinkCancelled;break}"Choose a different location"!==e&&(o=b.Uri.file(e),n="folder")}if(null==n&&(n=await this.showOpenTypePrompt({customMessage:"Choose a different location"===e?"Please choose an option to open the repository":void 0})),!n){i=nI.WA.DeepLinkCancelled;break}let l=await this.showOpenLocationPrompt(n);if(!l||(null==o&&(o=(await b.window.showOpenDialog({title:`Choose a ${"workspace"===n?"workspace":"folder"} to ${"clone"===n?"clone the repository to":"open the repository"}`,canSelectFiles:"workspace"===n,canSelectFolders:"workspace"!==n,canSelectMany:!1,..."workspace"===n&&{filters:{Workspaces:["code-workspace"]}}}))?.[0]),!o)){i=nI.WA.DeepLinkCancelled;break}if(null!=o&&null!=a&&"clone"===n){let e;try{e=await b.window.withProgress({location:b.ProgressLocation.Notification,title:`Cloning repository for link: ${this._context.url}}`},async()=>this.container.git.clone(a,o?.fsPath??""))}catch{i=nI.WA.DeepLinkErrored,t="Unable to clone repository";break}if(!e){i=nI.WA.DeepLinkErrored,t="Unable to clone repository";break}o=b.Uri.file(e)}if("current"!==n&&"workspace"!==n&&!r.includes(o.fsPath)){let e=await this.container.git.getOrOpenRepository(o,{closeOnOpen:!0,detectNested:!1});null!=e&&await this.container.repositoryPathMapping.writeLocalRepoPath({remoteUrl:a},e.uri.fsPath)}"addToWorkspace"===l&&(b.workspace.workspaceFolders?.length||0)>1?i=nI.WA.OpenRepo:(await this.container.storage.store("deepLinks:pending",{url:this._context.url,repoPath:o.toString()}),i=nI.WA.DeepLinkStored),(0,eG.ic)(o,{location:l});break}case nI.mg.OpeningRepo:this._disposables.push((0,iV.IH)(this.container.git.onDidChangeRepositories)(()=>{queueMicrotask(()=>this.processDeepLink(nI.WA.RepoAdded))}));return;case nI.mg.RemoteMatch:if(u&&n&&!a&&!l){i=nI.WA.RemoteMatchUnneeded;break}if(!n||!a&&!l){i=nI.WA.DeepLinkErrored,t="Missing repository or remote url.";break}if(a&&!h){let e=await n.getRemotes({filter:e=>e.url===a});e.length>0&&(this._context.remote=e[0])}if(l&&!c){let e=await n.getRemotes({filter:e=>e.url===l});e.length>0&&(this._context.secondaryRemote=e[0])}i=a&&!this._context.remote||l&&!this._context.secondaryRemote?nI.WA.RemoteMatchFailed:nI.WA.RemoteMatched;break;case nI.mg.AddRemote:{let e,r;if(!n||!a&&!l){i=nI.WA.DeepLinkErrored,t="Missing repository or remote url.";break}if(a&&!h&&(e=await this.showAddRemotePrompt(a,(await n.getRemotes()).map(e=>e.name)))){try{await n.addRemote(e,a,{fetch:!0})}catch{i=nI.WA.DeepLinkErrored,t="Failed to add remote.";break}if([this._context.remote]=await n.getRemotes({filter:e=>e.url===a}),!this._context.remote){i=nI.WA.DeepLinkErrored,t="Failed to add remote.";break}}if(l&&!c&&(r=await this.showAddRemotePrompt(l,(await n.getRemotes()).map(e=>e.name)))){try{await n.addRemote(r,l,{fetch:!0})}catch{i=nI.WA.DeepLinkErrored,t="Failed to add remote.";break}if([this._context.secondaryRemote]=await n.getRemotes({filter:e=>e.url===l}),!this._context.secondaryRemote){i=nI.WA.DeepLinkErrored,t="Failed to add remote.";break}}this._context.secondaryRemote&&!this._context.remote&&(this._context.remote=this._context.secondaryRemote),e||r?this._context.remote||(i=nI.WA.DeepLinkErrored,t="Failed to add remote."):i=nI.WA.DeepLinkCancelled,i=nI.WA.RemoteAdded;break}case nI.mg.TargetMatch:case nI.mg.FetchedTargetMatch:if(!n||!f){i=nI.WA.DeepLinkErrored,t="Missing repository or target type.";break}if(f===nI._n.Repository){i=nI.WA.TargetMatched;break}if(f===nI._n.Comparison?[this._context.targetSha,this._context.secondaryTargetSha]=await this.getShasForTargets()??[]:this._context.targetSha=await this.getShasForTargets(),null==this._context.targetSha||null==this._context.secondaryTargetSha&&f===nI._n.Comparison){e===nI.mg.TargetMatch&&null!=h?i=nI.WA.TargetMatchFailed:(i=nI.WA.DeepLinkErrored,t=`No matching ${null==g?"target":"secondary target"} found.`);break}i=f===nI._n.Comparison?nI.WA.TargetsMatched:nI.WA.TargetMatched;break;case nI.mg.Fetch:if(!n||!h){i=nI.WA.DeepLinkErrored,t="Missing repository or remote.";break}if(!await this.showFetchPrompt()){i=nI.WA.DeepLinkCancelled;break}try{await n.fetch({remote:h.name,progress:!0})}catch{i=nI.WA.DeepLinkErrored,t="Error fetching remote.";break}if(c&&c.name!==h.name)try{await n.fetch({remote:c.name,progress:!0})}catch{}i=nI.WA.TargetFetched;break;case nI.mg.OpenGraph:if(!n||!f){i=nI.WA.DeepLinkErrored,t="Missing repository or target type.";break}if(f===nI._n.Repository){await (0,rg.P0)($.Gh.ShowInCommitGraph,n),i=nI.WA.DeepLinkResolved;break}if(!g){i=nI.WA.DeepLinkErrored,t=`Cannot find target ${f} in repo.`;break}await (0,rg.P0)($.Gh.ShowInCommitGraph,{ref:(0,F.xB)(g,n.path)}),i=nI.WA.DeepLinkResolved;break;case nI.mg.OpenComparison:if(!n){i=nI.WA.DeepLinkErrored,t="Missing repository.";break}if(null==d||null==p||null==g||null==m){i=nI.WA.DeepLinkErrored,t="Missing target or secondary target.";break}await this.container.searchAndCompareView.compare(n.path,""===p||(0,F.D3)(p)?p:{label:p,ref:m},""===d||(0,F.D3)(d)?d:{label:d,ref:g}),i=nI.WA.DeepLinkResolved;break;case nI.mg.OpenDraft:if(!d){i=nI.WA.DeepLinkErrored,t="Missing cloud patch id.";break}await (0,rg.P0)($.Gh.OpenCloudPatch,{id:d,patchId:p}),i=nI.WA.DeepLinkResolved;break;case nI.mg.OpenWorkspace:if(!s){i=nI.WA.DeepLinkErrored,t="Missing workspace id.";break}await this.container.workspacesView.revealWorkspaceNode(s,{select:!0,focus:!0,expand:!0}),i=nI.WA.DeepLinkResolved;break;default:i=nI.WA.DeepLinkErrored,t="Unknown state."}}}async copyDeepLinkUrl(e,t,i,r){let s=await ("string"==typeof e?null!=t?this.generateDeepLinkUrl(e,t,i,r):this.generateDeepLinkUrl(e):this.generateDeepLinkUrl(e,t));await b.env.clipboard.writeText(s.toString())}async generateDeepLinkUrl(e,t,i,r){let s,n,o,a;let l=C.D.get("deepLinks.schemeOverride"),h=l?!0===l?b.env.uriScheme:l:"vscode",c="";if("dev"===this.container.env?c="dev.":"staging"===this.container.env&&(c="staging."),null==t&&"string"==typeof e)return new URL(`https://${c}gitkraken.dev/link/workspaces/${e}`);let u="string"!=typeof e?e.repoPath:e,d=await this.container.git.getUniqueRepositoryId(u)??"-";if("string"!=typeof e)switch(e.refType){case"branch":s=nI._n.Branch,n=e.remote?(0,T.S3)(e.name):e.name;break;case"revision":s=nI._n.Commit,n=e.ref;break;case"tag":s=nI._n.Tag,n=e.name}null!=i&&null!=r&&(s=nI._n.Comparison,n=i.label??i.ref,o=r.label??r.ref),a=s===nI._n.Comparison?`/${s}/${o}...${n}`:null!=s&&s!==nI._n.Repository?`/${s}/${n}`:"";let p=new URL(`${h}://${this.container.context.extension.id}/link/${nI._n.Repository}/${d}${a}`);return null!=t&&p.searchParams.set("url",t),new URL(`https://${c}gitkraken.dev/link/${encodeURIComponent(Buffer.from(p.href).toString("base64"))}`)}}var nx=Object.defineProperty,nT=Object.getOwnPropertyDescriptor;class nO{constructor(e){this.container=e,this._disposable=b.window.registerUriHandler(this)}_disposable;_onDidReceiveAuthenticationUri=new b.EventEmitter;get onDidReceiveAuthenticationUri(){return this._onDidReceiveAuthenticationUri.event}_onDidReceiveUri=new b.EventEmitter;get onDidReceiveUri(){return this._onDidReceiveUri.event}dispose(){this._disposable.dispose()}handleUri(e){let[,t]=e.path.split("/");if(t===rM){this._onDidReceiveAuthenticationUri.fire(e);return}this._onDidReceiveUri.fire(e)}}((e,t,i,r)=>{for(var s,n=r>1?void 0:r?nT(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&nx(t,i,n)})([(0,eW.cM)({args:{0:e=>e.with({query:""}).toString(!0)}})],nO.prototype,"handleUri",1);var nE=i(8583),nB=Object.defineProperty,nU=Object.getOwnPropertyDescriptor;class nW extends nE.C{splatted=!0;constructor(e){super("repositories",ty.Wj,e)}async getSplattedChild(){return null==this.children&&await this.getChildren(),this.children?.length===1?this.children[0]:void 0}etag(){return(0,t5.NX)(this.view.container.git.etag,this.view.container.subscription.etag)}subscribe(){return b.Disposable.from((0,iV.D$)(this.view.container.git.onDidChangeRepositories,this.onRepositoriesChanged,this),(0,iV.D$)(this.view.container.subscription.onDidChange,this.onSubscriptionChanged,this))}onRepositoriesChanged(e){this.triggerChange(!0)}onSubscriptionChanged(e){e.current.plan!==e.previous.plan&&this.triggerChange(!0)}}((e,t,i,r)=>{for(var s,n=r>1?void 0:r?nU(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&nB(t,i,n)})([(0,eW.fF)()],nW.prototype,"subscribe",1);var nM=i(5010),nL=i(9165),nN=i(5517),nH=i(2610),nG=i(4481),nq=i(6586);class nY extends sJ.Re{constructor(e,t,i,r,s){super("tracking-status-files",ty.YY.fromRepoPath(r.repoPath),e,t),this.parent=t,this.branch=i,this.status=r,this.direction=s,this.updateContext({branch:i,branchStatus:r,branchStatusUpstreamType:s}),this._uniqueId=(0,sJ.tO)(this.type,this.context)}get repoPath(){return this.status.repoPath}async getChildren(){let e;let t=await this.view.container.git.getLog(this.repoPath,{limit:0,ref:(0,F.oI)(this.status.upstream,this.branch.ref,"behind"===this.direction?"...":"..")});null!=t?(await Promise.allSettled((0,eM.UI)((0,eM.hX)(t.commits.values(),e=>null==e.files),e=>e.ensureFullDetails())),e=[...(0,eM.VS)(t.commits.values(),e=>e.files?.map(t=>({...t,commit:e}))??[])]):e=[],e.sort((e,t)=>t.commit.date.getTime()-e.commit.date.getTime());let i=Object.values((0,W.vM)(e,e=>e.path)).map(e=>new nq.q(this.view,this,e[e.length-1],this.repoPath,e.map(e=>e.commit),this.direction));if("list"!==this.view.config.files.layout){let e=(0,W.Mo)(i,e=>e.uri.relativePath.split("/"),(...e)=>(0,M.AH)((0,M.RQ)(...e)),this.view.config.files.compact);i=new nG.Y(this.view,this,e,this.repoPath,"",void 0,!1).getChildren()}else i.sort((e,t)=>e.priority-t.priority||(0,L.dm)(e.label,t.label));return i}async getTreeItem(){let e=await this.view.container.git.getChangedFilesCount(this.repoPath,`${this.status.upstream}${"behind"===this.direction?"..":"..."}`),t=e?.changedFiles??0,i=`${(0,L._6)("file",t)} changed`,r=new b.TreeItem(i,b.TreeItemCollapsibleState.Collapsed);return r.id=this.id,r.contextValue=sJ.Td.BranchStatusFiles,r}}var nj=i(2925),nV=i(21),nQ=i(4741),nz=Object.defineProperty,nK=Object.getOwnPropertyDescriptor,nJ=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?nK(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&nz(t,i,n),n};class nZ extends sJ.Re{constructor(e,t,i,r,s,n=!1,o){super("tracking-status",ty.YY.fromRepoPath(r.repoPath),e,t),this.parent=t,this.branch=i,this.status=r,this.upstreamType=s,this.root=n,this.options=o,this.updateContext({branch:i,branchStatus:r,branchStatusUpstreamType:s,root:n}),this._uniqueId=(0,sJ.tO)(this.type,this.context),this.limit=this.view.getNodeLastKnownLimit(this)}limit;get id(){return this._uniqueId}get repoPath(){return this.uri.repoPath}async getChildren(){let e;if("same"===this.upstreamType||"missing"===this.upstreamType||"none"===this.upstreamType)return[];let t=await this.getLog();if(null==t)return[];if("ahead"===this.upstreamType){let i=(e=[...t.commits.values()])[e.length-1];if(null==await i.getPreviousSha()){let t=await this.view.container.git.getLog(this.uri.repoPath,{limit:2,ref:i.sha});null!=t&&(e[e.length-1]=(0,eM.Ps)(t.commits.values()))}}else e=t.commits.values();let i=[],r=!0;return!this.options?.showAheadCommits&&"ahead"===this.upstreamType&&this.status.upstream&&this.status.state.ahead>0?(r=!1,i.push(...await new nY(this.view,this,this.branch,this.status,this.upstreamType).getChildren())):(i.push(...(0,nQ.E)((0,eM.UI)(e,e=>new nj.D(this.view,this,e,"ahead"===this.upstreamType,this.branch)),this,1)),t.hasMore&&i.push(new nV.Gd(this.view,this,i[i.length-1]))),r&&i.unshift(new nY(this.view,this,this.branch,this.status,this.upstreamType)),i}async getTreeItem(){let e,t,i,r,s,n,o=0;if("missing"!==this.upstreamType&&"none"!==this.upstreamType){let e=this.view.container.git.getRepository(this.repoPath);o=await e?.getLastFetched()??0}switch(this.upstreamType){case"ahead":{let o=await this.branch.getRemote();e=`Changes to push to ${o?.name??(0,T.Lo)(this.status.upstream)}${o?.provider?.name?` on ${o?.provider.name}`:""}`,t=(0,L._6)("commit",this.status.state.ahead),n=`Branch $(git-branch) ${this.branch.name} is ${(0,L._6)("commit",this.status.state.ahead,{infix:"$(arrow-up) "})} ahead of $(git-branch) ${this.status.upstream}${o?.provider?.name?` on ${o.provider.name}`:""}`,i=b.TreeItemCollapsibleState.Collapsed,r=this.root?sJ.Td.StatusAheadOfUpstream:sJ.Td.BranchStatusAheadOfUpstream,s=new b.ThemeIcon("cloud-upload",new b.ThemeColor("gitlens.unpublishedChangesIconColor"));break}case"behind":{let o=await this.branch.getRemote();e=`Changes to pull from ${o?.name??(0,T.Lo)(this.status.upstream)}${o?.provider?.name?` on ${o.provider.name}`:""}`,t=(0,L._6)("commit",this.status.state.behind),n=`Branch $(git-branch) ${this.branch.name} is ${(0,L._6)("commit",this.status.state.behind,{infix:"$(arrow-down) "})} behind $(git-branch) ${this.status.upstream}${o?.provider?.name?` on ${o.provider.name}`:""}`,i=b.TreeItemCollapsibleState.Collapsed,r=this.root?sJ.Td.StatusBehindUpstream:sJ.Td.BranchStatusBehindUpstream,s=new b.ThemeIcon("cloud-download",new b.ThemeColor("gitlens.unpulledChangesIconColor"));break}case"same":{let a=await this.branch.getRemote();e=`Up to date with ${a?.name??(0,T.Lo)(this.status.upstream)}${a?.provider?.name?` on ${a.provider.name}`:""}`,t=o?`Last fetched ${(0,ev.Zh)(new Date(o))}`:"",n=`Branch $(git-branch) ${this.branch.name} is up to date with $(git-branch) ${this.status.upstream}${a?.provider?.name?` on ${a.provider.name}`:""}`,i=b.TreeItemCollapsibleState.None,r=this.root?sJ.Td.StatusSameAsUpstream:sJ.Td.BranchStatusSameAsUpstream,s=new b.ThemeIcon("cloud");break}case"missing":{let o=await this.branch.getRemote();e=`Missing upstream branch${o?.provider?.name?` on ${o.provider.name}`:""}`,t=this.status.upstream,n=`Branch $(git-branch) ${this.branch.name} is missing upstream $(git-branch) ${this.status.upstream}${o?.provider?.name?` on ${o.provider.name}`:""}`,i=b.TreeItemCollapsibleState.None,r=this.root?sJ.Td.StatusMissingUpstream:sJ.Td.BranchStatusSameAsUpstream,s=new b.ThemeIcon("warning",new b.ThemeColor("gitlens.decorations.branchMissingUpstreamForegroundColor"));break}case"none":{let t=await this.view.container.git.getRemotesWithProviders(this.branch.repoPath),o=tC.ss.getHighlanderProviders(t),a=o?.length?o[0].name:void 0;e=`Publish ${this.branch.name} to ${a??"a remote"}`,n=`Branch $(git-branch) ${this.branch.name} hasn't been published to ${a??"a remote"}`,i=b.TreeItemCollapsibleState.None,r=this.root?sJ.Td.StatusNoUpstream:sJ.Td.BranchStatusNoUpstream,s=new b.ThemeIcon("cloud-upload",t.length?new b.ThemeColor("gitlens.unpublishedChangesIconColor"):void 0)}}let a=new b.TreeItem(e,i);a.id=this.id,a.contextValue=r,a.description=t,o&&(n+=`

Last fetched ${(0,ev.Zh)(new Date(o))}`),a.iconPath=s;let l=new b.MarkdownString(n,!0);return l.supportHtml=!0,l.isTrusted=!0,a.tooltip=l,a}refresh(e){e&&(this._log=void 0)}_log;async getLog(){if("same"!==this.upstreamType&&"none"!==this.upstreamType){if(null==this._log){let e="ahead"===this.upstreamType?(0,F.oI)(this.status.upstream,this.status.ref):(0,F.oI)(this.status.ref,this.status.upstream);this._log=await this.view.container.git.getLog(this.uri.repoPath,{limit:this.limit??this.view.config.defaultItemLimit,ref:e})}return this._log}}get hasMore(){return this._log?.hasMore??!0}async loadMore(e){let t=await b.window.withProgress({location:{viewId:this.view.id}},()=>this.getLog());null!=t&&t.hasMore&&(t=await t.more?.(e??this.view.config.pageItemLimit),this._log!==t&&(this._log=t,this.limit=t?.count,this.triggerChange(!1)))}}nJ([(0,t4.H)(),(0,eW.fF)()],nZ.prototype,"refresh",1),nJ([(0,t4.H)()],nZ.prototype,"loadMore",1);var nX=i(9729),n0=i(3636),n1=i(5538),n2=i(5988),n4=i(812),n5=Object.defineProperty,n6=Object.getOwnPropertyDescriptor,n3=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?n6(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&n5(t,i,n),n};class n8 extends nE.C{constructor(e,t,i,r,s,n=!1){super("compare-branch",e,t,i),this.parent=i,this.branch=r,this.showComparison=s,this.root=n,this.updateContext({branch:r,root:n,storedComparisonId:this.getStorageId()}),this._uniqueId=(0,sJ.tO)(this.type,this.context),this.loadCompareWith()}_compareWith;etag(){return 0}get ahead(){return{ref1:this._compareWith?.ref||"HEAD",ref2:this.branch.ref}}get behind(){return{ref1:this.branch.ref,ref2:this._compareWith?.ref||"HEAD"}}_isFiltered;get filterByAuthors(){let e=this.getState("filterCommits"),t=!!e?.length;return null!=this._isFiltered&&this._isFiltered!==t&&this.updateContext({comparisonFiltered:t}),this._isFiltered=t,e}get repoPath(){return this.branch.repoPath}subscribe(){return(0,iV.D$)(this.view.onDidChangeNodesCheckedState,this.onNodesCheckedStateChanged,this)}onNodesCheckedStateChanged(e){let t=(0,n1.iS)(this.getStorageId());e.items.some(([e])=>e.id?.startsWith(t))&&this.storeCompareWith(!1)}async getChildren(){if(null==this._compareWith)return[];if(null==this.children){let e=this.ahead,t=this.behind,i=await this.view.container.git.getAheadBehindCommitCount(this.branch.repoPath,[(0,F.oI)(t.ref1,t.ref2,"...")],{authors:this.filterByAuthors}),r=await this.view.container.git.getMergeBase(this.repoPath,t.ref1,t.ref2,{forkPoint:!0})??await this.view.container.git.getMergeBase(this.repoPath,t.ref1,t.ref2),s=[new n2.J(this.view,this,this.repoPath,"Behind",{query:this.getCommitsQuery((0,F.oI)(t.ref1,t.ref2,"..")),comparison:t,direction:"behind",files:{ref1:this.compareWithWorkingTree?"":r??t.ref1,ref2:t.ref2,query:this.getBehindFilesQuery.bind(this)}},{description:(0,L._6)("commit",i?.behind??0),expand:!1}),new n2.J(this.view,this,this.repoPath,"Ahead",{query:this.getCommitsQuery((0,F.oI)(e.ref1,this.compareWithWorkingTree?"":e.ref2,"..")),comparison:e,direction:"ahead",files:{ref1:r??e.ref1,ref2:this.compareWithWorkingTree?"":e.ref2,query:this.getAheadFilesQuery.bind(this)}},{description:(0,L._6)("commit",i?.ahead??0),expand:!1})];this.filterByAuthors?.length||s.push(new n4.V(this.view,this,this.repoPath,this._compareWith.ref||"HEAD",this.compareWithWorkingTree?"":this.branch.ref,this.getFilesQuery.bind(this),void 0,{expand:!1})),this.children=s}return this.children}getTreeItem(){let e,t,i;null==this._compareWith?(t=`Compare ${this.compareWithWorkingTree?"Working Tree":this.branch.name} with <branch, tag, or ref>`,e=b.TreeItemCollapsibleState.None,i=`Click to compare ${this.compareWithWorkingTree?"Working Tree":this.branch.name} with a branch, tag, or ref`):(t=`Compare ${this.compareWithWorkingTree?"Working Tree":this.branch.name} with ${(0,F.zL)(this._compareWith.ref,{strings:{working:"Working Tree"}})}`,e=b.TreeItemCollapsibleState.Collapsed);let r=new b.TreeItem(t,e);return r.id=this.id,r.contextValue=`${sJ.Td.CompareBranch}${this.branch.current?"+current":""}+${this.comparisonType}${null==this._compareWith?"":"+comparing"}${this.root?"+root":""}${this.filterByAuthors?.length?"+filtered":""}`,null==this._compareWith&&(r.command={title:`Compare ${this.branch.name}${this.compareWithWorkingTree?" (working)":""} with${$.NE.Ellipsis}`,command:"gitlens.views.editNode",arguments:[this]}),r.iconPath=new b.ThemeIcon("git-compare"),r.tooltip=i,r}async clear(){this._compareWith=void 0,await this.updateCompareWith(void 0),this.children=void 0,this.view.triggerNodeChange(this)}clearReviewed(){this.storeCompareWith(!0),this.triggerChange()}async edit(){await this.compareWith()}refresh(e){super.refresh(e),this.loadCompareWith()}async setComparisonType(e){null!=this._compareWith?await this.updateCompareWith({...this._compareWith,type:e,checkedFiles:void 0}):this.showComparison=e,this.children=void 0,this.view.triggerNodeChange(this)}get comparisonType(){return this._compareWith?.type??this.showComparison}get compareWithWorkingTree(){return"working"===this.comparisonType}async compareWith(){let e=await (0,n0.V)(this.branch.repoPath,`Compare ${this.branch.name}${this.compareWithWorkingTree?" (working)":""} with`,"Choose a reference to compare with",{allowEnteringRefs:!0,picked:this.branch.ref,sort:{branches:{current:!0},tags:{}}});null==e||e instanceof nX.$w||(await this.updateCompareWith({ref:e.ref,notation:void 0,type:this.comparisonType}),this.children=void 0,this.view.triggerNodeChange(this))}async getAheadFilesQuery(){let e=(0,F.oI)(this._compareWith?.ref||"HEAD",this.branch.ref||"HEAD","..."),[t,i,r,s]=await Promise.allSettled([this.view.container.git.getDiffStatus(this.repoPath,e),this.compareWithWorkingTree?this.view.container.git.getDiffStatus(this.repoPath,"HEAD"):void 0,this.view.container.git.getChangedFilesCount(this.repoPath,e),this.compareWithWorkingTree?this.view.container.git.getChangedFilesCount(this.repoPath,"HEAD"):void 0]),n=(0,t6.Sb)(t)??[],o=(0,t6.Sb)(r);if(this.compareWithWorkingTree){let e=(0,t6.Sb)(i);if(null!=e){if(0===n.length)n=e;else for(let t of e){let e=n.findIndex(e=>e.path===t.path);-1!==e?n.splice(e,1,t):n.push(t)}}let t=(0,t6.Sb)(s);null!=t&&(o=null==o?t:{additions:o.additions+t.additions,deletions:o.deletions+t.deletions,changedFiles:n.length,approximated:!0})}return{label:`${(0,L._6)("file",n.length,{zero:"No"})} changed`,files:n,stats:o}}async getBehindFilesQuery(){let e=(0,F.oI)(this.branch.ref,this._compareWith?.ref||"HEAD","..."),[t,i]=await Promise.allSettled([this.view.container.git.getDiffStatus(this.repoPath,e),this.view.container.git.getChangedFilesCount(this.repoPath,e)]),r=(0,t6.Sb)(t)??[];return{label:`${(0,L._6)("file",r.length,{zero:"No"})} changed`,files:r,stats:(0,t6.Sb)(i)}}getCommitsQuery(e){let t=this.repoPath;return async i=>{let r=await this.view.container.git.getLog(t,{limit:i,ref:e,authors:this.filterByAuthors}),s={log:r,hasMore:r?.hasMore??!0};return s.hasMore&&(s.more=async e=>{s.log=await s.log?.more?.(e)??s.log,s.hasMore=s.log?.hasMore??!0}),s}}async getFilesQuery(){let e;e=this._compareWith?.ref?this.compareWithWorkingTree?this._compareWith.ref:`${this._compareWith.ref}..${this.branch.ref}`:this.branch.ref;let[t,i]=await Promise.allSettled([this.view.container.git.getDiffStatus(this.repoPath,e),this.view.container.git.getChangedFilesCount(this.repoPath,e)]),r=(0,t6.Sb)(t)??[];return{label:`${(0,L._6)("file",r.length,{zero:"No"})} changed`,files:r,stats:(0,t6.Sb)(i)}}getStorageId(){return`${this.branch.id}${this.branch.current?"+current":""}`}loadCompareWith(){let e=this.view.container.storage.getWorkspace("branch:comparisons"),t=this.getStorageId(),i=e?.[t];null!=i&&"string"==typeof i?this._compareWith={ref:i,notation:void 0,type:this.showComparison}:(this._compareWith=i,null!=i&&(0,n1.k7)(this.view,i.checkedFiles))}async storeCompareWith(e){let t=this.getStorageId();e&&(0,n1.vK)(this.view,t);let i=this.view.container.storage.getWorkspace("branch:comparisons");if(null==i){if(null==this._compareWith)return;i=Object.create(null)}if(null!=this._compareWith){let e=(0,n1.uL)(this.view,t);this._compareWith.checkedFiles=e,i[t]={...this._compareWith}}else{if(null==i[t])return;let{[t]:e,...r}=i;i=r}await this.view.container.storage.storeWorkspace("branch:comparisons",i)}async updateCompareWith(e){this._compareWith=e,await this.storeCompareWith(!0)}}n3([(0,eW.cM)()],n8.prototype,"clear",1),n3([(0,eW.cM)()],n8.prototype,"clearReviewed",1),n3([(0,eW.cM)()],n8.prototype,"edit",1),n3([(0,eW.fF)()],n8.prototype,"refresh",1),n3([(0,eW.cM)()],n8.prototype,"setComparisonType",1);var n9=i(6373),n7=i(5209),oe=i(7692),ot=i(4167);class oi extends n7.T{constructor(e,t,i,r){super("conflict-file",ty.YY.fromFile(i,r.repoPath,r.HEAD.ref),e,t,i),this.status=r}toClipboard(){return this.fileName}get baseUri(){return ty.YY.fromFile(this.file,this.status.repoPath,this.status.mergeBase??"HEAD")}get fileName(){return this.file.path}getChildren(){return[new oe.l(this.view,this,this.status,this.file),new ot.w(this.view,this,this.status,this.file)]}getTreeItem(){let e=new b.TreeItem(this.label,b.TreeItemCollapsibleState.Collapsed);e.description=this.description,e.contextValue=`${sJ.Td.File}+conflicted`;let t=n9.o.fromTemplate(`\${file}\${ \u2022 changesDetail}\${\\\\
directory}\${

status}\${ (originalPath)} in Index (staged)`,this.file),i=new b.MarkdownString(t,!0);return i.isTrusted=!0,i.supportHtml=!0,e.tooltip=i,e.resourceUri=this.view.container.git.getAbsoluteUri(this.file.path,this.repoPath),e.iconPath=b.ThemeIcon.File,e.command=this.getCommand(),this._label=void 0,this._description=void 0,e}_description;get description(){return null==this._description&&(this._description=n9.o.fromTemplate(this.view.config.formats.files.description,this.file,{relativePath:this.relativePath})),this._description}_folderName;get folderName(){return null==this._folderName&&(this._folderName=(0,M.Fd)(this.uri.relativePath)),this._folderName}_label;get label(){return null==this._label&&(this._label=n9.o.fromTemplate(this.view.config.formats.files.label,this.file,{relativePath:this.relativePath})),this._label}get priority(){return 0}_relativePath;get relativePath(){return this._relativePath}set relativePath(e){this._relativePath=e,this._label=void 0,this._description=void 0}getCommand(){return(0,rg.j$)("vscode.open","Open File",this.view.container.git.getAbsoluteUri(this.file.path,this.repoPath),{preserveFocus:!0,preview:!0})}}class or extends sJ.Re{constructor(e,t,i,r){super("conflict-files",ty.YY.fromRepoPath(i.repoPath),e,t),this.parent=t,this.status=i,this.conflicts=r}get repoPath(){return this.uri.repoPath}getChildren(){let e=this.conflicts.map(e=>new oi(this.view,this,e,this.status));if("list"!==this.view.config.files.layout){let t=(0,W.Mo)(e,e=>e.uri.relativePath.split("/"),(...e)=>(0,M.AH)((0,M.RQ)(...e)),this.view.config.files.compact);e=new nG.Y(this.view,this,t,this.repoPath,"",void 0).getChildren()}else e.sort((e,t)=>(0,L.dm)(e.label,t.label));return e}getTreeItem(){return new b.TreeItem((0,L._6)("conflict",this.conflicts.length),b.TreeItemCollapsibleState.Expanded)}}class os extends sJ.Re{constructor(e,t,i,r,s,n){super("merge-status",ty.YY.fromRepoPath(r.repoPath),e,t),this.parent=t,this.branch=i,this.mergeStatus=r,this.status=s,this.root=n,this.updateContext({branch:i,root:n,status:"merging"}),this._uniqueId=(0,sJ.tO)(this.type,this.context)}get repoPath(){return this.uri.repoPath}getChildren(){return this.status?.hasConflicts?[new or(this.view,this,this.mergeStatus,this.status.conflicts)]:[]}getTreeItem(){let e=this.status?.hasConflicts===!0,t=new b.TreeItem(`${e?"Resolve conflicts before merging":"Merging"} ${null!=this.mergeStatus.incoming?`${(0,F.Wh)(this.mergeStatus.incoming,{expand:!1,icon:!1})} `:""}into ${(0,F.Wh)(this.mergeStatus.current,{expand:!1,icon:!1})}`,e?b.TreeItemCollapsibleState.Expanded:b.TreeItemCollapsibleState.None);t.id=this.id,t.contextValue=sJ.Td.Merge,t.description=e?(0,L._6)("conflict",this.status.conflicts.length):void 0,t.iconPath=e?new b.ThemeIcon("warning",new b.ThemeColor("gitlens.decorations.statusMergingOrRebasingConflictForegroundColor")):new b.ThemeIcon("warning",new b.ThemeColor("gitlens.decorations.statusMergingOrRebasingForegroundColor"));let i=new b.MarkdownString(`Merging ${null!=this.mergeStatus.incoming?(0,F.Wh)(this.mergeStatus.incoming,{label:!1}):""}into ${(0,F.Wh)(this.mergeStatus.current,{label:!1})}${e?`

Resolve ${(0,L._6)("conflict",this.status.conflicts.length)} before continuing`:""}`,!0);return i.supportHtml=!0,i.isTrusted=!0,t.tooltip=i,t.resourceUri=b.Uri.parse(`gitlens-view://status/merging${e?"/conflicts":""}`),t}}var on=i(2060);class oo extends nj.D{async getTreeItem(){let e=new b.TreeItem(`Paused at commit ${this.commit.shortSha}`,this._options.expand?b.TreeItemCollapsibleState.Expanded:b.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.contextValue=`${sJ.Td.Commit}+rebase`,e.description=iY.i.fromTemplate("${message}",this.commit,{messageTruncateAtNewLine:!0}),e.iconPath=new b.ThemeIcon("debug-pause"),e}getTooltipTemplate(){return`Rebase paused at ${super.getTooltipTemplate()}`}}class oa extends sJ.Re{constructor(e,t,i,r,s,n){super("rebase-status",ty.YY.fromRepoPath(r.repoPath),e,t),this.parent=t,this.branch=i,this.rebaseStatus=r,this.status=s,this.root=n,this.updateContext({branch:i,root:n,status:"rebasing"}),this._uniqueId=(0,sJ.tO)(this.type,this.context)}get repoPath(){return this.uri.repoPath}async getChildren(){let e=[],t=this.rebaseStatus.steps.current.commit;if(null!=t){let i=null!=t?await this.view.container.git.getCommit(this.rebaseStatus.repoPath,t.ref):void 0;null!=i&&e.push(new oo(this.view,this,i))}return this.status?.hasConflicts&&e.push(new or(this.view,this,this.rebaseStatus,this.status.conflicts)),e}getTreeItem(){let e=this.rebaseStatus.steps.total>0,t=e&&null!=this.rebaseStatus.steps.current.commit,i=this.status?.hasConflicts===!0,r=new b.TreeItem(`${i?"Resolve conflicts to continue rebasing":e?"Rebasing":"Pending rebase of"} ${null!=this.rebaseStatus.incoming?`${(0,F.Wh)(this.rebaseStatus.incoming,{expand:!1,icon:!1})}`:""} onto ${(0,F.Wh)(this.rebaseStatus.current??this.rebaseStatus.onto,{expand:!1,icon:!1})}${e?` (${this.rebaseStatus.steps.current.number}/${this.rebaseStatus.steps.total})`:""}`,t?b.TreeItemCollapsibleState.Expanded:b.TreeItemCollapsibleState.None);r.id=this.id,r.contextValue=sJ.Td.Rebase,r.description=i?(0,L._6)("conflict",this.status.conflicts.length):void 0,r.iconPath=i?new b.ThemeIcon("warning",new b.ThemeColor("gitlens.decorations.statusMergingOrRebasingConflictForegroundColor")):new b.ThemeIcon("warning",new b.ThemeColor("gitlens.decorations.statusMergingOrRebasingForegroundColor"));let s=new b.MarkdownString(`${e?"Rebasing":"Pending rebase of"} ${null!=this.rebaseStatus.incoming?(0,F.Wh)(this.rebaseStatus.incoming,{label:!1}):""} onto ${(0,F.Wh)(this.rebaseStatus.current??this.rebaseStatus.onto,{label:!1})}${e?`

Paused at step ${this.rebaseStatus.steps.current.number} of ${this.rebaseStatus.steps.total}${i?`\\
Resolve ${(0,L._6)("conflict",this.status.conflicts.length)} before continuing`:""}`:""}`,!0);return s.supportHtml=!0,s.isTrusted=!0,r.tooltip=s,r.resourceUri=b.Uri.parse(`gitlens-view://status/rebasing${i?"/conflicts":""}`),r}async openEditor(){let e=b.Uri.joinPath(this.uri,".git","rebase-merge","git-rebase-todo");await (0,rg.dO)("vscode.openWith",e,"gitlens.rebase",{preview:!1})}}var ol=Object.defineProperty,oh=Object.getOwnPropertyDescriptor,oc=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?oh(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&ol(t,i,n),n};class ou extends nH.b{constructor(e,t,i,r,s,n,o){super("branch",e,t,i),this.parent=i,this.repo=r,this.branch=s,this.root=n,this.updateContext({repository:r,branch:s,root:n}),this._uniqueId=(0,sJ.tO)(this.type,this.context),this.limit=this.view.getNodeLastKnownLimit(this),this.options={expanded:!1,limitCommits:!1,showAsCommits:!1,showComparison:!1,showCurrent:!this.root,showStatus:!0,showTracking:!this.root,...o}}limit;options;splatted=!0;dispose(){super.dispose(),this.children=void 0}get id(){return this._uniqueId}toClipboard(){return this.branch.name}compacted=!1;get current(){return this.branch.current}get label(){if(this.options.showAsCommits)return"Commits";let e=this.branch.getNameWithoutRemote();return`${this.view.config.branches?.layout!=="tree"||this.compacted||this.root||this.current||this.branch.detached||this.branch.starred?e:this.branch.getBasename()}${this.branch.rebasing?" (Rebasing)":""}`}get ref(){return this.branch}get treeHierarchy(){return this.root||this.current||this.branch.detached||this.branch.starred?[this.branch.name]:this.branch.getNameWithoutRemote().split("/")}_children;get children(){return this._children}set children(e){this._children!==e&&((0,nN.Qu)(this._children,e),this._children=e)}async getChildren(){if(null==this.children){let e,t;let i=this.branch;if(this.view.config.pullRequests.enabled&&this.view.config.pullRequests.showForBranches&&(null!=i.upstream||i.remote)&&(0,i4.fw)("gitlens:hasConnectedRemotes")&&void 0===(t=this.getState("pullRequest"))&&void 0===this.getState("pendingPullRequest")){e=(0,t6.PQ)();let t=this.getAssociatedPullRequest(i,this.root?{include:["opened","merged"]}:void 0);queueMicrotask(async()=>{await e?.promise;let r=!1,s=setTimeout(()=>{r=!0,this.view.triggerNodeChange(this)},250),n=await t;clearTimeout(s),null!=n&&null!=this.children&&this.children.splice(this.children[0]instanceof n8?1:0,0,new on.Z(this.view,this,n,i)),(r||null!=n)&&this.view.triggerNodeChange(this.root?this.parent??this:this)})}let[r,s,n,o,a,l]=await Promise.allSettled([this.getLog(),this.view.container.git.getBranchesAndTagsTipsFn(this.uri.repoPath,i.name),this.options.showStatus&&i.current?this.view.container.git.getStatusForRepo(this.uri.repoPath):void 0,this.options.showStatus&&i.current?this.view.container.git.getMergeStatus(this.uri.repoPath):void 0,this.options.showStatus?this.view.container.git.getRebaseStatus(this.uri.repoPath):void 0,i.remote?void 0:this.view.container.git.getBranchAheadRange(i).then(e=>e?this.view.container.git.getLogRefsOnly(this.uri.repoPath,{limit:0,ref:e,merges:this.options.showMergeCommits}):void 0)]),h=(0,t6.Sb)(r);if(null==h)return[new nV.AE(this.view,this,"No commits could be found.")];let c=[];!1!==this.options.showComparison&&"remotes"!==this.view.type&&c.push(new n8(this.uri,this.view,this,i,this.options.showComparison,this.splatted)),null!=t&&c.push(new on.Z(this.view,this,t,i));let u=(0,t6.Sb)(n),d=(0,t6.Sb)(o),p=(0,t6.Sb)(a);if(this.options.showStatus&&null!=d)c.push(new os(this.view,this,i,d,u??await this.view.container.git.getStatusForRepo(this.uri.repoPath),this.root));else if(this.options.showStatus&&null!=p&&(i.current||i.name===p.incoming.name))c.push(new oa(this.view,this,i,p,u??await this.view.container.git.getStatusForRepo(this.uri.repoPath),this.root));else if(this.options.showTracking){let e={ref:i.ref,repoPath:i.repoPath,state:i.state,upstream:i.upstream?.name};null!=i.upstream?this.root&&i.upstream.missing?c.push(new nZ(this.view,this,i,e,"missing",this.root)):!this.root||e.state.behind||e.state.ahead?(e.state.behind&&c.push(new nZ(this.view,this,i,e,"behind",this.root)),e.state.ahead&&c.push(new nZ(this.view,this,i,e,"ahead",this.root))):c.push(new nZ(this.view,this,i,e,"same",this.root)):c.push(new nZ(this.view,this,i,e,"none",this.root))}0!==c.length&&c.push(new nV.AE(this.view,this,"",$.NE.Dash.repeat(2),""));let g=(0,t6.Sb)(l),m=(0,t6.Sb)(s);c.push(...(0,nQ.E)((0,eM.UI)(h.commits.values(),e=>new nj.D(this.view,this,e,g?.has(e.ref),i,m)),this)),h.hasMore&&c.push(new nV.Gd(this.view,this,c[c.length-1],{getCount:()=>this.view.container.git.getCommitCount(i.repoPath,i.name)})),this.children=c,setTimeout(()=>e?.fulfill(),1)}return this.children}async getTreeItem(){let e,t;this.splatted=!1;let i=`${this.current?"Current branch":"Branch"} $(git-branch) ${this.branch.getNameWithoutRemote()}${this.branch.rebasing?" (Rebasing)":""}`,r=sJ.Td.Branch;this.current&&(r+="+current"),this.branch.remote&&(r+="+remote"),this.branch.starred&&(r+="+starred"),null==this.branch.upstream||this.branch.upstream.missing||(r+="+tracking"),this.options.showAsCommits&&(r+="+commits"),this.repo.closed&&(r+="+closed");let s="";if(!this.branch.remote){if(null!=this.branch.upstream){let n=$.NE.Dash,o=await this.branch.getRemote();if(this.branch.upstream.missing)n=$.NE.Warning;else if(null!=o){let e,t;for(let{type:i}of o.urls)if("fetch"===i){if(e=!0,t)break}else if("push"===i&&(t=!0,e))break;e&&t?n=$.NE.ArrowsRightLeft:t?n=$.NE.ArrowRight:e&&(n=$.NE.ArrowLeft)}t=this.options.showAsCommits?`${this.branch.getTrackingStatus({suffix:(0,L.vk)($.NE.Dot,1,1)})}${this.branch.getNameWithoutRemote()}${this.branch.rebasing?" (Rebasing)":""}${(0,L.vk)(n,2,2)}${this.branch.upstream.name}`:`${this.branch.getTrackingStatus({suffix:`${$.NE.Space} `})}${n}${$.NE.Space} ${this.branch.upstream.name}`,i+=` is ${this.branch.getTrackingStatus({empty:this.branch.upstream.missing?`missing upstream $(git-branch) ${this.branch.upstream.name}`:`up to date with $(git-branch)  ${this.branch.upstream.name}${o?.provider?.name?` on ${o.provider.name}`:""}`,expand:!0,icons:!0,separator:", ",suffix:` $(git-branch) ${this.branch.upstream.name}${o?.provider?.name?` on ${o.provider.name}`:""}`})}`,(this.branch.state.ahead||this.branch.state.behind)&&(this.branch.state.ahead&&(r+="+ahead",e=new b.ThemeColor("gitlens.unpublishedChangesIconColor"),s="-green"),this.branch.state.behind&&(r+="+behind",e=new b.ThemeColor("gitlens.unpulledChangesIconColor"),s=this.branch.state.ahead?"-yellow":"-red"))}else{let e=tC.ss.getHighlanderProviders(await this.view.container.git.getRemotesWithProviders(this.branch.repoPath)),t=e?.length?e[0].name:void 0;i+=` hasn't been published to ${t??"a remote"}`}}null!=this.branch.date&&(t=`${t?`${t}${(0,L.vk)($.NE.Dot,2,2)}`:""}${this.branch.formattedDate}`,i+=`

Last commit ${this.branch.formatDateFromNow()} (${this.branch.formatDate(this.view.container.BranchDateFormatting.dateFormat)})`),(i=new b.MarkdownString(i,!0)).supportHtml=!0,i.isTrusted=!0,this.branch.starred&&i.appendMarkdown("\\\n$(star-full) Favorited");let n=this.getState("pendingPullRequest");null!=n&&i.appendMarkdown(`

$(loading~spin) Loading associated pull request${$.NE.Ellipsis}`);let o=new b.TreeItem(this.label,this.options.expanded?b.TreeItemCollapsibleState.Expanded:b.TreeItemCollapsibleState.Collapsed);return o.id=this.id,o.contextValue=r,o.description=t,o.iconPath=null!=n?new b.ThemeIcon("loading~spin"):this.options.showAsCommits?new b.ThemeIcon("git-commit",e):{dark:this.view.container.context.asAbsolutePath(`images/dark/icon-branch${s}.svg`),light:this.view.container.context.asAbsolutePath(`images/light/icon-branch${s}.svg`)},o.tooltip=i,o.resourceUri=b.Uri.parse(`gitlens-view://branch/status/${await this.branch.getStatus()}${this.options.showCurrent&&this.current?"/current":""}`),o}async star(){await this.branch.star(),this.view.refresh(!0)}async unstar(){await this.branch.unstar(),this.view.refresh(!0)}refresh(e){super.refresh?.(e),this.children=void 0,e&&(this._log=void 0,this.deleteState())}async getAssociatedPullRequest(e,t){let i=this.getState("pullRequest");if(void 0!==i)return Promise.resolve(i??void 0);let r=this.getState("pendingPullRequest");return null==r?(r=e.getAssociatedPullRequest(t),this.storeState("pendingPullRequest",r),i=await r,this.storeState("pullRequest",i??null),this.deleteState("pendingPullRequest"),i):r}_log;async getLog(){if(null==this._log){let e=this.limit??(this.root&&!this.options.limitCommits?this.view.config.pageItemLimit:this.view.config.defaultItemLimit);0!==e&&this.branch.state.ahead>e&&(e=Math.min(this.branch.state.ahead+1,2*e)),this._log=await this.view.container.git.getLog(this.uri.repoPath,{limit:e,ref:this.ref.ref,authors:this.options?.authors,merges:this.options?.showMergeCommits})}return this._log}get hasMore(){return this._log?.hasMore??!0}async loadMore(e){let t=await b.window.withProgress({location:{viewId:this.view.id}},()=>this.getLog());null!=t&&t.hasMore&&(t=await t.more?.(e??this.view.config.pageItemLimit),this._log!==t&&(this._log=t,this.limit=t?.count,this.children=void 0,this.triggerChange(!1)))}}oc([(0,eW.fF)()],ou.prototype,"dispose",1),oc([(0,eW.cM)()],ou.prototype,"star",1),oc([(0,eW.cM)()],ou.prototype,"unstar",1),oc([(0,t4.H)()],ou.prototype,"loadMore",1);class od extends sJ.Re{constructor(e,t,i,r,s,n,o,a=!1){super("branch-tag-folder",ty.YY.fromRepoPath(s),e,t),this.parent=t,this.folderType=i,this.root=r,this.repoPath=s,this.folderName=n,this.relativePath=o,this._expanded=a,this._uniqueId=(0,sJ.tO)(`${this.type}+${i}+${o??n}`,this.context)}get id(){return this._uniqueId}toClipboard(){return this.folderName}getChildren(){if(void 0===this.root.descendants||void 0===this.root.children)return[];let e=[];for(let t of this.root.children.values()){if(void 0===t.value){let i=t.descendants?.some(e=>e.is("branch")&&e.current);e.push(new od(this.view,this.folderName?this:this.parent,this.folderType,t,this.repoPath,t.name,t.relativePath,i));continue}t.value.parent=this.folderName?this:this.parent,e.push(t.value)}return e}getTreeItem(){let e=new b.TreeItem(this.label,this._expanded?b.TreeItemCollapsibleState.Expanded:b.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.contextValue=sJ.Td.Folder,e.iconPath=b.ThemeIcon.Folder,e.tooltip=this.label,e}get label(){return this.folderName}}var op=Object.defineProperty,og=Object.getOwnPropertyDescriptor;class om extends nL.y{constructor(e,t,i,r){super("branches",e,t,i),this.parent=i,this.repo=r,this.updateContext({repository:r}),this._uniqueId=(0,sJ.tO)(this.type,this.context)}get id(){return this._uniqueId}get repoPath(){return this.repo.path}async getChildren(){if(null==this.children){let e=await this.repo.getBranches({filter:e=>!e.remote,sort:{current:!1}});if(0===e.values.length)return[new nV.AE(this.view,this,"No branches could be found.")];let t=e.values.map(e=>new ou(ty.YY.fromRepoPath(this.uri.repoPath,e.ref),this.view,this,this.repo,e,!1,{showComparison:"repositories"===this.view.type?this.view.config.branches.showBranchComparison:this.view.config.showBranchComparison}));if("list"===this.view.config.branches.layout)return t;let i=(0,W.Mo)(t,e=>e.treeHierarchy,(...e)=>e.join("/"),this.view.config.files.compact,e=>(e.compacted=!0,!0)),r=new od(this.view,this,"branch",i,this.repo.path,"",void 0);this.children=r.getChildren()}return this.children}async getTreeItem(){let e=new b.TreeItem("Branches",b.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.contextValue=sJ.Td.Branches,await this.repo.hasRemotes()&&(e.contextValue+="+remotes"),this.repo.closed&&(e.contextValue+="+closed"),e.iconPath=new b.ThemeIcon("git-branch"),e}refresh(){super.refresh(!0)}}((e,t,i,r)=>{for(var s,n=r>1?void 0:r?og(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&op(t,i,n)})([(0,eW.fF)()],om.prototype,"refresh",1);var of=i(9311),ow=i(3401),ov=i(6897),oy=i(7445),ob=i(4155),oC=i(8834),oA=i(252),oP=i(6713),oD=i(5025),ok=i(4731),oS=i(2601),oR=Object.defineProperty,o$=Object.getOwnPropertyDescriptor,o_=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?o$(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&oR(t,i,n),n};class oI extends sJ.Re{constructor(e,t,i,r,s){super("contributor",e,t,i),this.parent=i,this.contributor=r,this._options=s,this.updateContext({contributor:r}),this._uniqueId=(0,sJ.tO)(this.type,this.context),this.limit=this.view.getNodeLastKnownLimit(this)}limit;get id(){return this._uniqueId}toClipboard(){return`${this.contributor.name}${this.contributor.email?` <${this.contributor.email}>`:""}`}get repoPath(){return this.contributor.repoPath}async getChildren(){let e=await this.getLog();if(null==e)return[new nV.AE(this.view,this,"No commits could be found.")];let t=await this.view.container.git.getBranchesAndTagsTipsFn(this.uri.repoPath),i=[...(0,nQ.E)((0,eM.UI)(e.commits.values(),e=>new nj.D(this.view,this,e,void 0,void 0,t)),this)];return e.hasMore&&i.push(new nV.Gd(this.view,this,i[i.length-1])),i}async getTreeItem(){let e,t;let i=this._options?.presence?.get(this.contributor.email),r=new b.TreeItem(this.contributor.current?`${this.contributor.label} (you)`:this.contributor.label,b.TreeItemCollapsibleState.Collapsed);if(r.id=this.id,r.contextValue=this.contributor.current?`${sJ.Td.Contributor}+current`:sJ.Td.Contributor,r.description=`${null!=i&&"offline"!==i.status?`${i.statusText} ${$.NE.Space}${$.NE.Dot}${$.NE.Space} `:""}${null!=this.contributor.date?`${this.contributor.formatDateFromNow()}, `:""}${(0,L._6)("commit",this.contributor.count)}`,this.view.config.avatars){let r=C.D.get("hovers.avatarSize");if(e=await this.contributor.getAvatarUri({defaultStyle:C.D.get("defaultGravatarsStyle"),size:r}),null!=i){let s=`${this.contributor.count?"You are":`${this.contributor.label} is`} ${"dnd"===i.status?"in ":""}${i.statusText.toLocaleLowerCase()}`;t=`![${s}](${e.toString(!0)}|width=${r},height=${r} "${s}")![${s}](${(0,tf.TU)(i.status)} "${s}")`}else t=`![${this.contributor.label}](${e.toString(!0)}|width=${r},height=${r} "${this.contributor.label}")`}let s=new Intl.NumberFormat,n=null!=this.contributor.stats?`\\
${(0,L._6)("file",this.contributor.stats.files,{format:s.format})} changed, ${(0,L._6)("addition",this.contributor.stats.additions,{format:s.format})}, ${(0,L._6)("deletion",this.contributor.stats.deletions,{format:s.format})}`:"",o=this.contributor.email?`__[${this.contributor.name}](mailto:${this.contributor.email} "Email ${this.contributor.label} (${this.contributor.email})")__`:`__${this.contributor.label}__`,a=null!=this.contributor.date?`Last commit ${this.contributor.formatDateFromNow()} (${this.contributor.formatDate()})\\
`:"",l=new b.MarkdownString(`${null!=t?t:""} &nbsp;${o} 

${a}${(0,L._6)("commit",this.contributor.count,{format:s.format})}${n}`);return l.supportHtml=!0,l.isTrusted=!0,r.tooltip=l,r.iconPath=e,r}refresh(e){e&&(this._log=void 0)}_log;async getLog(){return null==this._log&&(this._log=await this.view.container.git.getLog(this.uri.repoPath,{all:this._options?.all,ref:this._options?.ref,limit:this.limit??this.view.config.defaultItemLimit,authors:[{name:this.contributor.name,email:this.contributor.email,username:this.contributor.username,id:this.contributor.id}]})),this._log}get hasMore(){return this._log?.hasMore??!0}async loadMore(e){let t=await b.window.withProgress({location:{viewId:this.view.id}},()=>this.getLog());null!=t&&t.hasMore&&(t=await t.more?.(e??this.view.config.pageItemLimit),this._log!==t&&(this._log=t,this.limit=t?.count,this.triggerChange(!1)))}}o_([(0,t4.H)(),(0,eW.fF)()],oI.prototype,"refresh",1),o_([(0,t4.H)()],oI.prototype,"loadMore",1);var oF=Object.defineProperty,ox=Object.getOwnPropertyDescriptor,oT=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?ox(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&oF(t,i,n),n};class oO extends nE.C{_base;splatted=!0;constructor(e){super("file-history-tracker",ty.Wj,e)}dispose(){super.dispose(),this.child=void 0}_child;get child(){return this._child}set child(e){this._child!==e&&(this._child?.dispose(),this._child=e)}async getChildren(){if(null==this.child){let e;if(!this.hasUri)return this.view.description=void 0,this.view.message="There are no editors open that can provide file history information.",[];this.view.message=void 0;let t={...this.uri,repoPath:this.uri.repoPath,sha:this._base??this.uri.sha},i=new ty.YY(this.uri,t),r=!1;try{((await b.workspace.fs.stat(this.uri)).type&b.FileType.Directory)===b.FileType.Directory&&(r=!0)}catch{}this.view.title=r?"Folder History":"File History",t.sha&&"HEAD"!==t.sha?(0,F.D3)(t.sha)||({values:[e]}=await this.view.container.git.getBranches(this.uri.repoPath,{filter:e=>e.name===t.sha})):e=await this.view.container.git.getBranch(this.uri.repoPath),this.child=new oM(i,this.view,this,r,e)}return this.child.getChildren()}getTreeItem(){this.splatted=!1;let e=new b.TreeItem("File History",b.TreeItemCollapsibleState.Expanded);return e.contextValue=sJ.Td.ActiveFileHistory,e}get followingEditor(){return this.canSubscribe}get hasUri(){return this._uri!=ty.Wj&&null!=this._uri.repoPath}async changeBase(){let e=await (0,n0.V)(this.uri.repoPath,"Change File History Base","Choose a reference to set as the new base",{allowEnteringRefs:!0,picked:this._base,sort:{branches:{current:!0},tags:{}}});if(null!=e){if((0,F.UR)(e)){let t=await this.view.container.git.getBranch(this.uri.repoPath);this._base=t?.name===e.name?void 0:e.ref}else this._base=e.ref;null!=this.child&&(this.setUri(),await this.triggerChange())}}async refresh(e=!1){let t;let i=(0,eH.UH)();if(!this.canSubscribe)return!1;e&&(null!=this._uri&&this._uri!==ty.Wj&&await this.view.container.tracker.resetCache(this._uri,"log"),this.reset());let r=b.window.activeTextEditor;if(null==r||!this.view.container.git.isTrackable(r.document.uri))return!!(!this.hasUri||this.view.container.git.isTrackable(this.uri)&&b.window.visibleTextEditors.some(e=>e.document?.uri.path===this.uri.path))||(this.reset(),(0,eH.lH)(i,`, uri=${eL.Yd.toLoggable(this._uri)}`),!1);if(r.document.uri.path===this.uri.path)return(0,eH.lH)(i,`, uri=${eL.Yd.toLoggable(this._uri)}`),!0;let s=await ty.YY.fromUri(r.document.uri);if(null!=s.sha){let e=await this.view.container.git.getWorkingUri(s.repoPath,s);null!=e&&(t=e)}return!!(this.hasUri&&rA.n.equals(t??s,this.uri))||(null!=t&&(s=await ty.YY.fromUri(t)),null==s.repoPath?this.reset():(this.setUri(s),this.child=void 0),(0,eH.lH)(i,`, uri=${eL.Yd.toLoggable(this._uri)}`),!1)}reset(){this.setUri(),this.child=void 0}setEditorFollowing(e){e&&this.setUri(),this.canSubscribe=e,e||this.triggerChange()}async showHistoryForUri(e){this.setUri(e),await this.triggerChange()}subscribe(){return b.Disposable.from((0,iV.D$)(b.window.onDidChangeActiveTextEditor,(0,t5.Ds)(this.onActiveEditorChanged,250),this))}etag(){return 0}_triggerChangeDebounced;onActiveEditorChanged(e){if(null==e&&(0,eG.pt)(this._uri)){null==this._triggerChangeDebounced&&(this._triggerChangeDebounced=(0,t5.Ds)(()=>this.triggerChange(),1500)),this._triggerChangeDebounced();return}this.triggerChange()}setUri(e){this._uri=e??ty.Wj,(0,i4.v)("gitlens:views:fileHistory:canPin",this.hasUri)}}oT([(0,eW.fF)()],oO.prototype,"dispose",1),oT([(0,t4.H)(),(0,eW.cM)()],oO.prototype,"changeBase",1),oT([(0,t4.H)(),(0,eW.fF)({exit:!0})],oO.prototype,"refresh",1),oT([(0,eW.cM)()],oO.prototype,"setEditorFollowing",1),oT([(0,eW.cM)()],oO.prototype,"showHistoryForUri",1),oT([(0,eW.fF)()],oO.prototype,"subscribe",1),oT([(0,eW.fF)({args:!1})],oO.prototype,"onActiveEditorChanged",1);var oE=i(9719),oB=Object.defineProperty,oU=Object.getOwnPropertyDescriptor,oW=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?oU(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&oB(t,i,n),n};class oM extends nE.C{constructor(e,t,i,r,s){super("file-history",e,t,i),this.parent=i,this.folder=r,this.branch=s,null!=s&&this.updateContext({branch:s}),this._uniqueId=(0,sJ.tO)(`${this.type}+${e.toString()}`,this.context),this.limit=this.view.getNodeLastKnownLimit(this)}limit;splatted=!0;get id(){return this._uniqueId}toClipboard(){return this.uri.fileName}async getChildren(){this.view.description=`${this.label}${this.parent instanceof oO&&!this.parent.followingEditor?" (pinned)":""}`;let e=[];if(null==this.uri.repoPath)return e;let t=null!=this.branch?await this.view.container.git.getBranchAheadRange(this.branch):void 0,[i,r,s,n,o]=await Promise.all([this.getLog(),null==this.uri.sha?this.view.container.git.getStatusForFiles(this.uri.repoPath,this.getPathOrGlob()):void 0,null==this.uri.sha?this.view.container.git.getCurrentUser(this.uri.repoPath):void 0,null!=this.branch?this.view.container.git.getBranchesAndTagsTipsFn(this.uri.repoPath,this.branch.name):void 0,t?this.view.container.git.getLogRefsOnly(this.uri.repoPath,{limit:0,ref:t}):void 0]);if(r?.length){if(this.folder){let t=(0,eM.UI)((0,eM.uw)((0,eM.VS)(r,e=>e.getPseudoCommits(this.view.container,s)),e=>e.sha,(e,t)=>e.with({files:{files:[...e.files??(null!=e.file?[e.file]:[]),...t.files??(null!=t.file?[t.file]:[])]}})),e=>new nj.D(this.view,this,e));e.push(...t)}else{let[t]=r,i=t.getPseudoCommits(this.view.container,s);i.length&&e.push(...i.map(e=>new oE.m(this.view,this,t,e)))}}return(null!=i&&(e.push(...(0,nQ.E)((0,eM.DZ)(i.commits.values(),e=>this.folder?new nj.D(this.view,this,e,o?.has(e.ref),this.branch,void 0,{expand:!1}):null!=e.file?new oE.m(this.view,this,e.file,e,{branch:this.branch,getBranchAndTagTips:n,unpublished:o?.has(e.ref)}):void 0),this)),i.hasMore&&e.push(new nV.Gd(this.view,this,e[e.length-1]))),0===e.length)?[new nV.AE(this.view,this,"No file history could be found.")]:e}getTreeItem(){this.splatted=!1;let e=this.label,t=new b.TreeItem(e,b.TreeItemCollapsibleState.Expanded);return t.contextValue=sJ.Td.FileHistory,t.description=this.uri.directory,t.tooltip=`History of ${this.uri.fileName}
${this.uri.directory}/${null==this.uri.sha?"":`

${this.uri.sha}`}`,this.view.description=`${e}${this.parent instanceof oO&&!this.parent.followingEditor?" (pinned)":""}`,t}get label(){return this.folder&&""===this.uri.fileName?`${(0,M.EZ)(this.uri.path)}${this.uri.sha?` ${this.uri.sha===H.Ii?this.uri.shortSha:`(${this.uri.shortSha})`}`:""}`:`${this.uri.fileName}${this.uri.sha?` ${this.uri.sha===H.Ii?this.uri.shortSha:`(${this.uri.shortSha})`}`:""}`}subscribe(){let e=this.view.container.git.getRepository(this.uri);if(null!=e)return b.Disposable.from((0,iV.D$)(e.onDidChange,this.onRepositoryChanged,this),(0,iV.D$)(e.onDidChangeFileSystem,this.onFileSystemChanged,this,[e.watchFileSystem()]),(0,iV.D$)(C.D.onDidChange,e=>{C.D.changed(e,"advanced.fileHistoryFollowsRenames")&&this.view.resetNodeLastKnownLimit(this)},this))}etag(){return Date.now()}onRepositoryChanged(e){e.changed(tP.I6.Index,tP.I6.Heads,tP.I6.Remotes,tP.I6.RemoteProviders,tP.I6.Status,tP.I6.Unknown,tP.du.Any)&&(eL.Yd.debug(`FileHistoryNode.onRepositoryChanged(${e.toString()}); triggering node refresh`),this.triggerChange(!0))}onFileSystemChanged(e){if(this.folder){if(!e.uris.some(e=>e.fsPath.startsWith(this.uri.fsPath)))return}else if(!e.uris.some(e=>e.toString()===this.uri.toString()))return;eL.Yd.debug(`FileHistoryNode.onFileSystemChanged(${this.uri.toString(!0)}); triggering node refresh`),this.triggerChange(!0)}refresh(e){e&&(this._log=void 0)}_log;async getLog(){return null==this._log&&(this._log=await this.view.container.git.getLogForFile(this.uri.repoPath,this.getPathOrGlob(),{limit:this.limit??this.view.config.pageItemLimit,ref:this.uri.sha})),this._log}getPathOrGlob(){return this.folder?b.Uri.joinPath(this.uri,"*"):this.uri}get hasMore(){return this._log?.hasMore??!0}async loadMore(e){let t=await b.window.withProgress({location:{viewId:this.view.id}},()=>this.getLog());null!=t&&t.hasMore&&(t=await t.more?.(e??this.view.config.pageItemLimit),this._log!==t&&(this._log=t,this.limit=t?.count,this.triggerChange(!1,this.splatted)))}}oW([(0,eW.fF)()],oM.prototype,"subscribe",1),oW([(0,t4.H)(),(0,eW.fF)()],oM.prototype,"refresh",1),oW([(0,ey.H)()],oM.prototype,"getPathOrGlob",1),oW([(0,t4.H)()],oM.prototype,"loadMore",1);var oL=Object.defineProperty,oN=Object.getOwnPropertyDescriptor,oH=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?oN(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&oL(t,i,n),n};class oG extends nE.C{_base;_editorContents;_selection;splatted=!0;constructor(e){super("line-history-tracker",ty.Wj,e)}dispose(){super.dispose(),this.child=void 0}_child;get child(){return this._child}set child(e){this._child!==e&&(this._child?.dispose(),this._child=e)}async getChildren(){if(null==this.child){let e;if(!this.hasUri)return this.view.description=void 0,this.view.message="There are no editors open that can provide line history information.",[];if(null==this._selection)return this.view.description=void 0,this.view.message="There was no selection provided for line history.",this.view.description=`${this.uri.fileName}${this.uri.sha?` ${this.uri.sha===H.Ii?this.uri.shortSha:`(${this.uri.shortSha})`}`:""}${this.followingEditor?"":" (pinned)"}`,[];this.view.message=void 0;let t={...this.uri,repoPath:this.uri.repoPath,sha:this.uri.sha??this._base},i=new ty.YY(this.uri,t);t.sha&&"HEAD"!==t.sha?(0,F.D3)(t.sha)||({values:[e]}=await this.view.container.git.getBranches(this.uri.repoPath,{filter:e=>e.name===t.sha})):e=await this.view.container.git.getBranch(this.uri.repoPath),this.child=new oV(i,this.view,this,e,this._selection,this._editorContents)}return this.child.getChildren()}getTreeItem(){this.splatted=!1;let e=new b.TreeItem("Line History",b.TreeItemCollapsibleState.Expanded);return e.contextValue=sJ.Td.ActiveLineHistory,this.ensureSubscription(),e}get followingEditor(){return this.canSubscribe}get hasUri(){return this._uri!=ty.Wj&&null!=this._uri.repoPath}async changeBase(){let e=await (0,n0.V)(this.uri.repoPath,"Change Line History Base","Choose a reference to set as the new base",{allowEnteringRefs:!0,picked:this._base,sort:{branches:{current:!0},tags:{}}});if(null!=e){if((0,F.UR)(e)){let t=await this.view.container.git.getBranch(this.uri.repoPath);this._base=t?.name===e.name?void 0:e.ref}else this._base=e.ref;null!=this.child&&(this.setUri(),await this.triggerChange())}}async refresh(e=!1){let t=(0,eH.UH)();if(!this.canSubscribe)return!1;e&&(null!=this._uri&&this._uri!==ty.Wj&&await this.view.container.tracker.resetCache(this._uri,"log"),this.reset());let i=b.window.activeTextEditor;if(null==i||!this.view.container.git.isTrackable(i.document.uri))return!!(!this.hasUri||this.view.container.git.isTrackable(this.uri)&&b.window.visibleTextEditors.some(e=>e.document?.uri.path===this.uri.path))||(this.reset(),(0,eH.lH)(t,`, uri=${eL.Yd.toLoggable(this._uri)}`),!1);if(i.document.uri.path===this.uri.path&&null!=this._selection&&i.selection.isEqual(this._selection))return(0,eH.lH)(t,`, uri=${eL.Yd.toLoggable(this._uri)}`),!0;let r=await ty.YY.fromUri(i.document.uri);return!!(this.hasUri&&rA.n.equals(r,this.uri)&&null!=this._selection&&i.selection.isEqual(this._selection))||(null==r.repoPath?this.reset():(this.setUri(r),this._editorContents=i.document.isDirty?i.document.getText():void 0,this._selection=i.selection,this.child=void 0),(0,eH.lH)(t,`, uri=${eL.Yd.toLoggable(this._uri)}`),!1)}reset(){this.setUri(),this._editorContents=void 0,this._selection=void 0,this.child=void 0}setEditorFollowing(e){this.canSubscribe=e}subscribe(){if(this.view.container.lineTracker.subscribed(this))return;let e=(0,t5.Ds)(this.onActiveLinesChanged.bind(this),250);return this.view.container.lineTracker.subscribe(this,(0,iV.D$)(this.view.container.lineTracker.onDidChangeActiveLines,t=>{t.pending||e(t)},this))}etag(){return 0}onActiveLinesChanged(e){this.triggerChange()}setUri(e){this._uri=e??ty.Wj,(0,i4.v)("gitlens:views:fileHistory:canPin",this.hasUri)}}oH([(0,eW.fF)()],oG.prototype,"dispose",1),oH([(0,t4.H)(),(0,eW.cM)()],oG.prototype,"changeBase",1),oH([(0,t4.H)(),(0,eW.fF)({exit:!0})],oG.prototype,"refresh",1),oH([(0,eW.cM)()],oG.prototype,"setEditorFollowing",1),oH([(0,eW.fF)()],oG.prototype,"subscribe",1),oH([(0,eW.fF)({args:{0:e=>`editor=${e.editor?.document.uri.toString(!0)}, selections=${e.selections?.map(e=>`[${e.anchor}-${e.active}]`).join(",")}, pending=${!!e.pending}, reason=${e.reason}`}})],oG.prototype,"onActiveLinesChanged",1);var oq=Object.defineProperty,oY=Object.getOwnPropertyDescriptor,oj=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?oY(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&oq(t,i,n),n};class oV extends nE.C{constructor(e,t,i,r,s,n){super("line-history",e,t,i),this.parent=i,this.branch=r,this.selection=s,this.editorContents=n,null!=r&&this.updateContext({branch:r}),this._uniqueId=(0,sJ.tO)(`${this.type}+${e.toString()}+[${s.start.line},${s.start.character}-${s.end.line},${s.end.character}]`,this.context),this.limit=this.view.getNodeLastKnownLimit(this)}limit;splatted=!0;get id(){return this._uniqueId}toClipboard(){return this.uri.fileName}async getChildren(){this.view.description=`${this.label}${this.parent instanceof oG&&!this.parent.followingEditor?" (pinned)":""}`;let e=[];if(null==this.uri.repoPath)return e;let t=this.selection,i=null!=this.branch?await this.view.container.git.getBranchAheadRange(this.branch):void 0,[r,s,n,o]=await Promise.all([this.getLog(t),null==this.uri.sha||(0,F.l3)(this.uri.sha)?this.editorContents?await this.view.container.git.getBlameForRangeContents(this.uri,t,this.editorContents):await this.view.container.git.getBlameForRange(this.uri,t):void 0,null!=this.branch?this.view.container.git.getBranchesAndTagsTipsFn(this.uri.repoPath,this.branch.name):void 0,i?this.view.container.git.getLogRefsOnly(this.uri.repoPath,{limit:0,ref:i}):void 0]);if(null!=s)for(let i of s.commits.values()){if(!i.isUncommitted)continue;let r=s.lines[0],n=s.lines[s.lines.length-1],o=t.active.line===r.line-1;t=new b.Selection((o?n:r).originalLine-1,t.anchor.character,(o?r:n).originalLine-1,t.active.character);let a=await this.view.container.git.getStatusForFile(this.uri.repoPath,this.uri);if(null!=a){let r={conflictStatus:a?.conflictStatus,path:i.file?.path??"",indexStatus:a?.indexStatus,originalPath:i.file?.originalPath,repoPath:this.uri.repoPath,status:a?.status??G.NV.Modified,workingTreeStatus:a?.workingTreeStatus},s=await this.view.container.git.getCurrentUser(this.uri.repoPath),n=a?.getPseudoCommits(this.view.container,s);if(null!=n)for(let i of n.reverse())e.unshift(new oE.m(this.view,this,r,i,{selection:t}))}break}return(null!=r&&(e.push(...(0,nQ.E)((0,eM.DZ)(r.commits.values(),e=>null!=e.file?new oE.m(this.view,this,e.file,e,{branch:this.branch,getBranchAndTagTips:n,selection:t,unpublished:o?.has(e.ref)}):void 0),this)),r.hasMore&&e.push(new nV.Gd(this.view,this,e[e.length-1]))),0===e.length)?[new nV.AE(this.view,this,"No line history could be found.")]:e}getTreeItem(){this.splatted=!1;let e=this.label,t=new b.TreeItem(e,b.TreeItemCollapsibleState.Expanded);return t.contextValue=sJ.Td.LineHistory,t.description=this.uri.directory,t.tooltip=`History of ${this.uri.fileName}${this.lines}
${this.uri.directory}/${null==this.uri.sha?"":`

${this.uri.sha}`}`,this.view.description=`${e}${this.parent instanceof oG&&!this.parent.followingEditor?" (pinned)":""}`,t}get label(){return`${this.uri.fileName}${this.lines}${this.uri.sha?` ${this.uri.sha===H.Ii?this.uri.shortSha:`(${this.uri.shortSha})`}`:""}`}get lines(){return this.selection.isSingleLine?`:${this.selection.start.line+1}`:`:${this.selection.start.line+1}-${this.selection.end.line+1}`}subscribe(){let e=this.view.container.git.getRepository(this.uri);if(null!=e)return b.Disposable.from((0,iV.D$)(e.onDidChange,this.onRepositoryChanged,this),(0,iV.D$)(e.onDidChangeFileSystem,this.onFileSystemChanged,this,[e.watchFileSystem()]))}etag(){return Date.now()}onRepositoryChanged(e){e.changed(tP.I6.Index,tP.I6.Heads,tP.I6.Remotes,tP.I6.RemoteProviders,tP.I6.Status,tP.I6.Unknown,tP.du.Any)&&(eL.Yd.debug(`LineHistoryNode.onRepositoryChanged(${e.toString()}); triggering node refresh`),this.triggerChange(!0))}onFileSystemChanged(e){e.uris.some(e=>e.toString()===this.uri.toString())&&(eL.Yd.debug(`LineHistoryNode.onFileSystemChanged(${this.uri.toString(!0)}); triggering node refresh`),this.triggerChange(!0))}refresh(e){e&&(this._log=void 0)}_log;async getLog(e){return null==this._log&&(this._log=await this.view.container.git.getLogForFile(this.uri.repoPath,this.uri,{all:!1,limit:this.limit??this.view.config.pageItemLimit,range:e??this.selection,ref:this.uri.sha,renames:!1})),this._log}get hasMore(){return this._log?.hasMore??!0}async loadMore(e){let t=await b.window.withProgress({location:{viewId:this.view.id}},()=>this.getLog());null!=t&&t.hasMore&&(t=await t.more?.(e??this.view.config.pageItemLimit),this._log!==t&&(this._log=t,this.limit=t?.count,this.triggerChange(!1,this.splatted)))}}oj([(0,ey.H)()],oV.prototype,"lines",1),oj([(0,eW.fF)()],oV.prototype,"subscribe",1),oj([(0,t4.H)(),(0,eW.fF)()],oV.prototype,"refresh",1),oj([(0,t4.H)()],oV.prototype,"loadMore",1);var oQ=Object.defineProperty,oz=Object.getOwnPropertyDescriptor;class oK extends sJ.Re{constructor(e,t,i,r,s){super("remote",e,t,i),this.parent=i,this.repo=r,this.remote=s,this.updateContext({repository:r,remote:s}),this._uniqueId=(0,sJ.tO)(this.type,this.context)}get id(){return this._uniqueId}toClipboard(){return this.remote.name}get repoPath(){return this.repo.path}async getChildren(){let e=await this.repo.getBranches({filter:e=>e.remote&&e.name.startsWith(this.remote.name),sort:!0});if(0===e.values.length)return[new nV.AE(this.view,this,"No branches could be found.")];let t=e.values.map(e=>new ou(ty.YY.fromRepoPath(this.uri.repoPath,e.ref),this.view,this,this.repo,e,!1,{showComparison:!1,showTracking:!1}));if("list"===this.view.config.branches.layout)return t;let i=(0,W.Mo)(t,e=>e.treeHierarchy,(...e)=>e.join("/"),this.view.config.files.compact,e=>(e.compacted=!0,!0));return new od(this.view,this,"remote-branch",i,this.repo.path,"",void 0).getChildren()}async getTreeItem(){let e=new b.TreeItem(this.remote.name,b.TreeItemCollapsibleState.Collapsed);if(e.id=this.id,e.description=(0,tC.jv)(this.remote),null!=this.remote.provider){let{provider:t}=this.remote;if(e.iconPath=null!=t.avatarUri&&this.view.config.avatars?t.avatarUri:"remote"===t.icon?new b.ThemeIcon("cloud"):{dark:this.view.container.context.asAbsolutePath(`images/dark/icon-${t.icon}.svg`),light:this.view.container.context.asAbsolutePath(`images/light/icon-${t.icon}.svg`)},this.remote.hasIntegration()){let i=this.view.container.integrations.getByRemote(this.remote),r=i?.maybeConnected??await i?.isConnected();e.contextValue=`${sJ.Td.Remote}${r?"+connected":"+disconnected"}`,e.tooltip=`${this.remote.name} (${t.name} ${$.NE.Dash} ${r?"connected":"not connected"})
${t.displayPath}
`}else e.contextValue=sJ.Td.Remote,e.tooltip=`${this.remote.name} (${t.name})
${t.displayPath}
`}else e.contextValue=sJ.Td.Remote,e.iconPath=new b.ThemeIcon("cloud"),e.tooltip=`${this.remote.name} (${this.remote.domain})
${this.remote.path}
`;for(let{type:t,url:i}of(this.remote.default&&(e.contextValue+="+default",e.resourceUri=b.Uri.parse("gitlens-view://remote/default")),this.remote.urls))e.tooltip+=`
${i} (${t})`;return e}async setAsDefault(e=!0){await this.remote.setAsDefault(e),this.triggerChange()}}((e,t,i,r)=>{for(var s,n=r>1?void 0:r?oz(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&oQ(t,i,n)})([(0,eW.cM)()],oK.prototype,"setAsDefault",1);var oJ=Object.defineProperty,oZ=Object.getOwnPropertyDescriptor,oX=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?oZ(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&oJ(t,i,n),n};class o0 extends nL.y{constructor(e,t,i,r){super("contributors",e,t,i),this.parent=i,this.repo=r,this.updateContext({repository:r}),this._uniqueId=(0,sJ.tO)(this.type,this.context)}splatted=!0;get id(){return this._uniqueId}get repoPath(){return this.repo.path}async getChildren(){if(null==this.children){let e;let t=C.D.get("views.contributors.showAllBranches");if(!t)try{let t=await this.view.container.git.getBranch(this.uri.repoPath);t?.upstream?.name==null||t.upstream.missing||(e="@{u}")}catch{}let i=C.D.get("views.contributors.showStatistics"),r=await this.repo.getContributors({all:t,ref:e,stats:i});if(0===r.length)return[new nV.AE(this.view,this,"No contributors could be found.")];tb.V.sort(r);let s=this.view.container.vsls.enabled?await this.getPresenceMap(r):void 0;this.children=r.map(i=>new oI(this.uri,this.view,this,i,{all:t,ref:e,presence:s}))}return this.children}getTreeItem(){this.splatted=!1;let e=new b.TreeItem("Contributors",b.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.contextValue=sJ.Td.Contributors,e.iconPath=new b.ThemeIcon("organization"),e}updateAvatar(e){if(null!=this.children)for(let t of this.children)t.contributor.email===e&&t.triggerChange()}refresh(){super.refresh(!0)}async getPresenceMap(e){let t=e.find(e=>e.current)?.email;if(null!=t)return this.view.container.vsls.getContactsPresence([t])}}oX([(0,eW.fF)()],o0.prototype,"refresh",1),oX([(0,eW.fF)({args:!1})],o0.prototype,"getPresenceMap",1);var o1=Object.defineProperty,o2=Object.getOwnPropertyDescriptor,o4=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?o2(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&o1(t,i,n),n};class o5 extends sJ.Re{constructor(e,t,i){super("reflog-record",ty.YY.fromRepoPath(i.repoPath),e,t),this.record=i,this.updateContext({reflog:i}),this._uniqueId=(0,sJ.tO)(this.type,this.context),this.limit=this.view.getNodeLastKnownLimit(this)}limit;get id(){return this._uniqueId}async getChildren(){let e=await this.getLog();if(void 0===e)return[new nV.AE(this.view,this,"No commits could be found.")];let t=[...(0,eM.UI)(e.commits.values(),e=>new nj.D(this.view,this,e))];return e.hasMore&&t.push(new nV.Gd(this.view,this,t[t.length-1])),t}getTreeItem(){let e=new b.TreeItem(`${this.record.command}${this.record.commandArgs?` ${this.record.commandArgs}`:""}`,b.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.description=`${0===this.record.HEAD.length?"":`${this.record.HEAD} ${$.NE.Space}${$.NE.Dot}${$.NE.Space} `}${this.record.formattedDate}`,e.contextValue=sJ.Td.ReflogRecord,e.tooltip=`${0===this.record.HEAD.length?"":`${this.record.HEAD}
`}${this.record.command}${this.record.commandArgs?` ${this.record.commandArgs}`:""}${this.record.details?` (${this.record.details})`:""}
${this.record.formatDateFromNow()} (${this.record.formatDate()})
${this.record.previousShortSha} ${$.NE.Space}${$.NE.ArrowRight}${$.NE.Space} ${this.record.shortSha}`,e}refresh(e){e&&(this._log=void 0)}_log;async getLog(){if(void 0===this._log){let e=`${this.record.previousSha}..${this.record.sha}`;this._log=await this.view.container.git.getLog(this.uri.repoPath,{limit:this.limit??this.view.config.defaultItemLimit,ref:e})}return this._log}get hasMore(){return this._log?.hasMore??!0}async loadMore(e){let t=await b.window.withProgress({location:{viewId:this.view.id}},()=>this.getLog());void 0!==t&&t.hasMore&&(t=await t.more?.(e??this.view.config.pageItemLimit),this._log!==t&&(this._log=t,this.limit=t?.count,this.triggerChange(!1)))}}o4([(0,t4.H)(),(0,eW.fF)()],o5.prototype,"refresh",1),o4([(0,t4.H)()],o5.prototype,"loadMore",1);var o6=Object.defineProperty,o3=Object.getOwnPropertyDescriptor;class o8 extends nL.y{constructor(e,t,i,r){super("reflog",e,t,i),this.repo=r,this.updateContext({repository:r}),this._uniqueId=(0,sJ.tO)(this.type,this.context),this.limit=this.view.getNodeLastKnownLimit(this)}limit;get id(){return this._uniqueId}async getChildren(){if(void 0===this.children){let e=[],t=await this.getReflog();if(void 0===t||0===t.records.length)return[new nV.AE(this.view,this,"No activity could be found.")];e.push(...t.records.map(e=>new o5(this.view,this,e))),t.hasMore&&e.push(new nV.Gd(this.view,this,e[e.length-1])),this.children=e}return this.children}getTreeItem(){let e=new b.TreeItem("Incoming Activity",b.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.contextValue=sJ.Td.Reflog,e.description="experimental",e.iconPath={dark:this.view.container.context.asAbsolutePath("images/dark/icon-activity.svg"),light:this.view.container.context.asAbsolutePath("images/light/icon-activity.svg")},e}refresh(e){super.refresh(!0),e&&(this._reflog=void 0)}_reflog;async getReflog(){return void 0===this._reflog&&(this._reflog=await this.view.container.git.getIncomingActivity(this.repo.path,{all:!0,limit:this.limit??this.view.config.defaultItemLimit})),this._reflog}get hasMore(){return this._reflog?.hasMore??!0}async loadMore(e){let t=await this.getReflog();void 0!==t&&t.hasMore&&(t=await t.more?.(e??this.view.config.pageItemLimit),this._reflog!==t&&(this._reflog=t,this.limit=t?.count,this.triggerChange(!1)))}}((e,t,i,r)=>{for(var s,n=r>1?void 0:r?o3(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&o6(t,i,n)})([(0,eW.fF)()],o8.prototype,"refresh",1);var o9=Object.defineProperty,o7=Object.getOwnPropertyDescriptor;class ae extends nL.y{constructor(e,t,i,r){super("remotes",e,t,i),this.parent=i,this.repo=r,this.updateContext({repository:r}),this._uniqueId=(0,sJ.tO)(this.type,this.context)}get id(){return this._uniqueId}get repoPath(){return this.repo.path}async getChildren(){if(null==this.children){let e=await this.repo.getRemotes({sort:!0});if(0===e.length)return[new nV.AE(this.view,this,"No remotes could be found")];this.children=e.map(e=>new oK(this.uri,this.view,this,this.repo,e))}return this.children}getTreeItem(){let e=new b.TreeItem("Remotes",b.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.contextValue=sJ.Td.Remotes,e.iconPath=new b.ThemeIcon("cloud"),e}refresh(){super.refresh(!0)}}((e,t,i,r)=>{for(var s,n=r>1?void 0:r?o7(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&o9(t,i,n)})([(0,eW.fF)()],ae.prototype,"refresh",1);var at=i(1101),ai=Object.defineProperty,ar=Object.getOwnPropertyDescriptor;class as extends nL.y{constructor(e,t,i,r){super("stashes",e,t,i),this.parent=i,this.repo=r,this.updateContext({repository:r}),this._uniqueId=(0,sJ.tO)(this.type,this.context)}get id(){return this._uniqueId}get repoPath(){return this.repo.path}async getChildren(){if(null==this.children){let e=await this.repo.getStash();if(null==e)return[new nV.AE(this.view,this,"No stashes could be found.")];this.children=[...(0,eM.UI)(e.commits.values(),e=>new at.i(this.view,this,e))]}return this.children}getTreeItem(){let e=new b.TreeItem("Stashes",b.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.contextValue=sJ.Td.Stashes,e.iconPath=new b.ThemeIcon("gitlens-stashes"),e}refresh(){super.refresh(!0)}}((e,t,i,r)=>{for(var s,n=r>1?void 0:r?ar(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&ai(t,i,n)})([(0,eW.fF)()],as.prototype,"refresh",1);class an extends sJ.Re{constructor(e,t,i,r){super("status-files",ty.YY.fromRepoPath(i.repoPath),e,t),this.parent=t,this.status=i,this.range=r,this._uniqueId=(0,sJ.tO)(this.type,this.context)}get id(){return this._uniqueId}get repoPath(){return this.status.repoPath}async getChildren(){let e,t=[],i=this.repoPath;null!=this.range&&null!=(e=await this.view.container.git.getLog(i,{limit:0,ref:this.range}))&&(await Promise.allSettled((0,eM.UI)((0,eM.hX)(e.commits.values(),e=>null==e.files),e=>e.ensureFullDetails())),t=[...(0,eM.VS)(e.commits.values(),e=>e.files?.map(t=>({...t,commit:e}))??[])]),("worktrees"===this.view.type||this.view.config.includeWorkingTree)&&0!==this.status.files.length&&t.unshift(...(0,eM.VS)(this.status.files,e=>(0,eM.UI)(e.getPseudoCommits(this.view.container,void 0),t=>this.getFileWithPseudoCommit(e,t)))),t.sort((e,t)=>t.commit.date.getTime()-e.commit.date.getTime());let r=Object.values((0,W.vM)(t,e=>e.path)).map(e=>new nq.q(this.view,this,e[e.length-1],i,e.map(e=>e.commit)));if("list"!==this.view.config.files.layout){let e=(0,W.Mo)(r,e=>e.uri.relativePath.split("/"),(...e)=>(0,M.AH)((0,M.RQ)(...e)),this.view.config.files.compact);r=new nG.Y(this.view,this,e,i,"",void 0,!0).getChildren()}else r.sort((e,t)=>e.priority-t.priority||(0,L.dm)(e.label,t.label));return r}async getTreeItem(){let e="worktrees"===this.view.type||this.view.config.includeWorkingTree?this.status.files.length:0;if(null!=this.range&&null!=this.status.upstream&&this.status.state.ahead>0){if(e>0){let t=await this.view.container.git.getDiffStatus(this.repoPath,`${this.status.upstream}...`);if(null!=t){let i=new Set;for(let e of this.status.files)i.add(e.path);for(let e of t)i.add(e.path);e=i.size}}else{let t=await this.view.container.git.getChangedFilesCount(this.repoPath,`${this.status.upstream}...`);null!=t?e+=t.changedFiles:e=-1}}let t=-1===e?"?? files changed":`${(0,L._6)("file",e)} changed`,i=new b.TreeItem(t,b.TreeItemCollapsibleState.Collapsed);return i.id=this.id,i.contextValue=sJ.Td.StatusFiles,i.iconPath={dark:this.view.container.context.asAbsolutePath("images/dark/icon-diff.svg"),light:this.view.container.context.asAbsolutePath("images/light/icon-diff.svg")},i}getFileWithPseudoCommit(e,t){return{status:e.status,repoPath:e.repoPath,indexStatus:e.indexStatus,workingTreeStatus:e.workingTreeStatus,path:e.path,originalPath:e.originalPath,commit:t}}}var ao=Object.defineProperty,aa=Object.getOwnPropertyDescriptor,al=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?aa(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&ao(t,i,n),n};class ah extends nH.b{constructor(e,t,i,r){super("tag",e,t,i),this.parent=i,this.tag=r,this.updateContext({tag:r}),this._uniqueId=(0,sJ.tO)(this.type,this.context),this.limit=this.view.getNodeLastKnownLimit(this)}limit;get id(){return this._uniqueId}toClipboard(){return this.tag.name}get label(){return"tree"===this.view.config.branches.layout?this.tag.getBasename():this.tag.name}get ref(){return this.tag}async getChildren(){let e=await this.getLog();if(null==e)return[new nV.AE(this.view,this,"No commits could be found.")];let t=await this.view.container.git.getBranchesAndTagsTipsFn(this.uri.repoPath,this.tag.name),i=[...(0,nQ.E)((0,eM.UI)(e.commits.values(),e=>new nj.D(this.view,this,e,void 0,void 0,t)),this)];return e.hasMore&&i.push(new nV.Gd(this.view,this,i[i.length-1],{getCount:()=>this.view.container.git.getCommitCount(this.tag.repoPath,this.tag.name)})),i}getTreeItem(){let e=new b.TreeItem(this.label,b.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.contextValue=sJ.Td.Tag,e.description=(0,tw.X)(this.tag.message),e.tooltip=`${this.tag.name}${(0,L.vk)($.NE.Dash,2,2)}${(0,F.zL)(this.tag.sha,{force:!0})}${null!=this.tag.date?`
${this.tag.formatDateFromNow()} (${this.tag.formatDate(this.view.container.TagDateFormatting.dateFormat)})`:""}

${(0,tw.X)(this.tag.message)}${null!=this.tag.commitDate&&this.tag.date!==this.tag.commitDate?`
${this.tag.formatCommitDateFromNow()} (${this.tag.formatCommitDate(this.view.container.TagDateFormatting.dateFormat)})`:""}`,e}refresh(e){e&&(this._log=void 0)}_log;async getLog(){return null==this._log&&(this._log=await this.view.container.git.getLog(this.uri.repoPath,{limit:this.limit??this.view.config.defaultItemLimit,ref:this.tag.name})),this._log}get hasMore(){return this._log?.hasMore??!0}async loadMore(e){let t=await b.window.withProgress({location:{viewId:this.view.id}},()=>this.getLog());null!=t&&t.hasMore&&(t=await t.more?.(e??this.view.config.pageItemLimit),this._log!==t&&(this._log=t,this.limit=t?.count,this.triggerChange(!1)))}}al([(0,t4.H)(),(0,eW.fF)()],ah.prototype,"refresh",1),al([(0,t4.H)()],ah.prototype,"loadMore",1);var ac=Object.defineProperty,au=Object.getOwnPropertyDescriptor;class ad extends nL.y{constructor(e,t,i,r){super("tags",e,t,i),this.parent=i,this.repo=r,this.updateContext({repository:r}),this._uniqueId=(0,sJ.tO)(this.type,this.context)}get id(){return this._uniqueId}get repoPath(){return this.repo.path}async getChildren(){if(null==this.children){let e=await this.repo.getTags({sort:!0});if(0===e.values.length)return[new nV.AE(this.view,this,"No tags could be found.")];let t=e.values.map(e=>new ah(ty.YY.fromRepoPath(this.uri.repoPath,e.ref),this.view,this,e));if("list"===this.view.config.branches.layout)return t;let i=(0,W.Mo)(t,e=>e.tag.name.split("/"),(...e)=>e.join("/"),this.view.config.files.compact),r=new od(this.view,this,"tag",i,this.repo.path,"",void 0);this.children=r.getChildren()}return this.children}getTreeItem(){let e=new b.TreeItem("Tags",b.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.contextValue=sJ.Td.Tags,e.iconPath=new b.ThemeIcon("tag"),e}refresh(){super.refresh(!0)}}((e,t,i,r)=>{for(var s,n=r>1?void 0:r?au(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&ac(t,i,n)})([(0,eW.fF)()],ad.prototype,"refresh",1);class ap extends n7.T{constructor(e,t,i,r){super("uncommitted-file",ty.YY.fromFile(r,i),e,t,r)}toClipboard(){return this.path}get path(){return this.file.path}getChildren(){return[]}getTreeItem(){let e=new b.TreeItem(this.label,b.TreeItemCollapsibleState.None);e.contextValue=sJ.Td.File,e.description=this.description,e.resourceUri=this.view.container.git.getAbsoluteUri(this.file.path,this.repoPath);let t=(0,G.tK)(this.file.status);return e.iconPath={dark:this.view.container.context.asAbsolutePath((0,M.RQ)("images","dark",t)),light:this.view.container.context.asAbsolutePath((0,M.RQ)("images","light",t))},e.tooltip=n9.o.fromTemplate(`\${file}
\${directory}/

\${status}\${ (originalPath)}`,this.file),e.command=this.getCommand(),this._label=void 0,this._description=void 0,e}_description;get description(){return null==this._description&&(this._description=n9.o.fromTemplate(this.view.config.formats.files.description,{...this.file},{relativePath:this.relativePath})),this._description}_folderName;get folderName(){return null==this._folderName&&(this._folderName=(0,M.XX)(this.uri.relativePath)),this._folderName}_label;get label(){return null==this._label&&(this._label=n9.o.fromTemplate("${file}",{...this.file},{relativePath:this.relativePath})),this._label}get priority(){return 0}_relativePath;get relativePath(){return this._relativePath}set relativePath(e){this._relativePath=e,this._label=void 0,this._description=void 0}getCommand(){let e={uri:ty.YY.fromFile(this.file,this.repoPath),line:0,showOptions:{preserveFocus:!0,preview:!0}};return{title:"Open Changes with Previous Revision",command:$.Gh.DiffWithPrevious,arguments:[void 0,e]}}}class ag extends sJ.Re{constructor(e,t,i,r){super("uncommitted-files",ty.YY.fromRepoPath(i.repoPath),e,t),this.parent=t,this.status=i,this.range=r,this._uniqueId=(0,sJ.tO)(this.type,this.context)}get id(){return this._uniqueId}get repoPath(){return this.status.repoPath}getChildren(){let e=this.repoPath,t=[...(0,eM.VS)(this.status.files,e=>e.getPseudoCommits(this.view.container,void 0).map(t=>({status:e.status,repoPath:e.repoPath,indexStatus:e.indexStatus,workingTreeStatus:e.workingTreeStatus,path:e.path,originalPath:e.originalPath,commit:t})))];t.sort((e,t)=>t.commit.date.getTime()-e.commit.date.getTime());let i=Object.values((0,W.vM)(t,e=>e.path)).map(t=>new ap(this.view,this,e,t[t.length-1]));if("list"!==this.view.config.files.layout){let t=(0,W.Mo)(i,e=>e.uri.relativePath.split("/"),(...e)=>(0,M.AH)((0,M.RQ)(...e)),this.view.config.files.compact);i=new nG.Y(this.view,this,t,e,"",void 0,!0).getChildren()}else i.sort((e,t)=>e.priority-t.priority||e.label.localeCompare(t.label,void 0,{numeric:!0,sensitivity:"base"}));return i}getTreeItem(){let e=new b.TreeItem("Uncommitted changes",b.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.contextValue=sJ.Td.UncommittedFiles,e.iconPath=new b.ThemeIcon("folder"),e}}var am=Object.defineProperty,af=Object.getOwnPropertyDescriptor,aw=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?af(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&am(t,i,n),n};class av extends nL.y{constructor(e,t,i,r){super("worktree",e,t,i),this.parent=i,this.worktree=r,this.updateContext({worktree:r}),this._uniqueId=(0,sJ.tO)(this.type,this.context),this.limit=this.view.getNodeLastKnownLimit(this)}limit;_branch;get id(){return this._uniqueId}toClipboard(){return this.worktree.uri.fsPath}get repoPath(){return this.uri.repoPath}async getChildren(){if(null==this.children){let e,t;let i=this._branch;if(null!=i&&this.view.config.pullRequests.enabled&&this.view.config.pullRequests.showForBranches&&(null!=i.upstream||i.remote)&&(0,i4.fw)("gitlens:hasConnectedRemotes")&&void 0===(t=this.getState("pullRequest"))&&void 0===this.getState("pendingPullRequest")){e=(0,t6.PQ)();let t=this.getAssociatedPullRequest(i,{include:["opened","merged"]});queueMicrotask(async()=>{await e?.promise;let r=!1,s=setTimeout(()=>{r=!0,this.view.triggerNodeChange(this)},250),n=await t;clearTimeout(s),null!=n&&null!=this.children&&this.children.splice("compare-branch"===this.children[0].type?1:0,0,new on.Z(this.view,this,n,i)),(r||null!=n)&&this.view.triggerNodeChange(this)})}let[r,s,n,o]=await Promise.allSettled([this.getLog(),this.view.container.git.getBranchesAndTagsTipsFn(this.uri.repoPath),this.worktree.getStatus(),null==i||i.remote?void 0:this.view.container.git.getBranchAheadRange(i).then(e=>e?this.view.container.git.getLogRefsOnly(this.uri.repoPath,{limit:0,ref:e}):void 0)]),a=(0,t6.Sb)(r);if(null==a)return[new nV.AE(this.view,this,"No commits could be found.")];let l=[];null!=i&&!1!==this.view.config.showBranchComparison&&l.push(new n8(this.uri,this.view,this,i,this.view.config.showBranchComparison,this.splatted)),null!=i&&null!=t&&l.push(new on.Z(this.view,this,t,i));let h=(0,t6.Sb)(o),c=(0,t6.Sb)(s);l.push(...(0,nQ.E)((0,eM.UI)(a.commits.values(),e=>new nj.D(this.view,this,e,h?.has(e.ref),i,c)),this)),a.hasMore&&l.push(new nV.Gd(this.view,this,l[l.length-1]));let u=(0,t6.Sb)(n);u?.hasChanges&&l.unshift(new ag(this.view,this,u,void 0)),this.children=l,e?.fulfill()}return this.children}async getTreeItem(){let e;this.splatted=!1;let t="",i=new b.MarkdownString("",!0),r=!1,s=this.worktree.main||this.worktree.opened?`${(0,L.vk)($.NE.Dash,2,2)} ${this.worktree.main?`_Main${this.worktree.opened?", Active_":"_"}`:this.worktree.opened?"_Active_":""} `:"",n=!1;switch(this.worktree.type){case"bare":e=new b.ThemeIcon("folder"),i.appendMarkdown(`${this.worktree.main?"$(pass) ":""}Bare Worktree${s}\\
\`${this.worktree.friendlyPath}\``);break;case"branch":{let[o,a]=await Promise.allSettled([this.worktree.getBranch(),this.worktree.getStatus()]),l=(0,t6.Sb)(o),h=(0,t6.Sb)(a);if(this._branch=l,i.appendMarkdown(`${this.worktree.main?"$(pass) ":""}Worktree for Branch $(git-branch) ${l?.getNameWithoutRemote()??this.worktree.branch}${s}\\
\`${this.worktree.friendlyPath}\``),e=new b.ThemeIcon("git-branch"),null!=h?(r=h.hasChanges,i.appendMarkdown(`

${h.getFormattedDiffStatus({prefix:"Has Uncommitted Changes\\\n",empty:"No Uncommitted Changes",expand:!0})}`)):"rejected"===a.status&&(eL.Yd.error(a.reason,"Worktree status failed"),n=!0),null!=l&&(i.appendMarkdown(`

Branch $(git-branch) ${l.getNameWithoutRemote()}`),!l.remote)){if(null!=l.upstream){let e=$.NE.Dash,r=await l.getRemote();if(l.upstream.missing)e=$.NE.Warning;else if(null!=r){let t,i;for(let{type:e}of r.urls)if("fetch"===e){if(t=!0,i)break}else if("push"===e&&(i=!0,t))break;t&&i?e=$.NE.ArrowsRightLeft:i?e=$.NE.ArrowRight:t&&(e=$.NE.ArrowLeft)}t=`${l.getTrackingStatus({empty:(0,L.vk)(e,0,2),suffix:(0,L.vk)(e,2,2)})}${l.upstream.name}`,i.appendMarkdown(` is ${l.getTrackingStatus({empty:l.upstream.missing?`missing upstream $(git-branch) ${l.upstream.name}`:`up to date with $(git-branch)  ${l.upstream.name}${r?.provider?.name?` on ${r.provider.name}`:""}`,expand:!0,icons:!0,separator:", ",suffix:` $(git-branch) ${l.upstream.name}${r?.provider?.name?` on ${r.provider.name}`:""}`})}`)}else{let e=tC.ss.getHighlanderProviderName(await this.view.container.git.getRemotesWithProviders(l.repoPath));i.appendMarkdown(` hasn't been published to ${e??"a remote"}`)}}break}case"detached":{let t;e=new b.ThemeIcon("git-commit"),i.appendMarkdown(`${this.worktree.main?"$(pass) ":""}Detached Worktree at $(git-commit) ${(0,F.zL)(this.worktree.sha)}${s}\\
\`${this.worktree.friendlyPath}\``);try{t=await this.worktree.getStatus()}catch(e){eL.Yd.error(e,"Worktree status failed"),n=!0}null!=t&&(r=t.hasChanges,i.appendMarkdown(`

${t.getFormattedDiffStatus({prefix:"Has Uncommitted Changes",empty:"No Uncommitted Changes",expand:!0})}`))}}let o=this.getState("pendingPullRequest");null!=o&&i.appendMarkdown(`

$(loading~spin) Loading associated pull request${$.NE.Ellipsis}`),n&&i.appendMarkdown(`

${$.NE.Warning} Unable to locate worktree path`);let a=new b.TreeItem(this.worktree.name,b.TreeItemCollapsibleState.Collapsed);return a.id=this.id,a.description=t,a.contextValue=`${sJ.Td.Worktree}${this.worktree.main?"+main":""}${this.worktree.opened?"+active":""}`,a.iconPath=null!=o?new b.ThemeIcon("loading~spin"):this.worktree.opened?new b.ThemeIcon("check"):e,a.tooltip=i,a.resourceUri=n?b.Uri.parse("gitlens-view://worktree/missing"):r?b.Uri.parse("gitlens-view://worktree/changes"):void 0,a}refresh(e){super.refresh(!0),e&&(this._log=void 0,this.deleteState())}async getAssociatedPullRequest(e,t){let i=this.getState("pullRequest");if(void 0!==i)return Promise.resolve(i??void 0);let r=this.getState("pendingPullRequest");return null==r?(r=e.getAssociatedPullRequest(t),this.storeState("pendingPullRequest",r),i=await r,this.storeState("pullRequest",i??null),this.deleteState("pendingPullRequest"),i):r}_log;async getLog(){return null==this._log&&(this._log=await this.view.container.git.getLog(this.uri.repoPath,{ref:this.worktree.sha,limit:this.limit??this.view.config.defaultItemLimit})),this._log}get hasMore(){return this._log?.hasMore??!0}async loadMore(e){let t=await b.window.withProgress({location:{viewId:this.view.id}},()=>this.getLog());null!=t&&t.hasMore&&(t=await t.more?.(e??this.view.config.pageItemLimit),this._log!==t&&(this._log=t,this.limit=t?.count,this.children=void 0,this.triggerChange(!1)))}}aw([(0,eW.fF)()],av.prototype,"refresh",1),aw([(0,t4.H)()],av.prototype,"loadMore",1);var ay=Object.defineProperty,ab=Object.getOwnPropertyDescriptor;class aC extends nL.y{constructor(e,t,i,r){super("worktrees",e,t,i),this.parent=i,this.repo=r,this.updateContext({repository:r}),this._uniqueId=(0,sJ.tO)(this.type,this.context)}get id(){return this._uniqueId}get repoPath(){return this.repo.path}async getChildren(){if(null==this.children){if(!(await this.repo.access(tv.x.Worktrees)).allowed)return[];let e=await this.repo.getWorktrees();if(0===e.length)return[new nV.AE(this.view,this,"No worktrees could be found.")];this.children=e.map(e=>new av(this.uri,this.view,this,e))}return this.children}async getTreeItem(){let e=await this.repo.access(tv.x.Worktrees),t=new b.TreeItem("Worktrees",e.allowed?b.TreeItemCollapsibleState.Collapsed:b.TreeItemCollapsibleState.None);return t.id=this.id,t.contextValue=sJ.Td.Worktrees,t.description=e.allowed?void 0:` ${$.NE.Warning}  Requires a trial or paid plan for use on privately hosted repos`,t.iconPath=new b.ThemeIcon("folder-opened"),t}refresh(){super.refresh(!0)}}((e,t,i,r)=>{for(var s,n=r>1?void 0:r?ab(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&ay(t,i,n)})([(0,eW.fF)()],aC.prototype,"refresh",1);var aA=Object.defineProperty,aP=Object.getOwnPropertyDescriptor,aD=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?aP(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&aA(t,i,n),n};class ak extends nE.C{constructor(e,t,i,r,s){super("repository",e,t,i),this.repo=r,this.updateContext({...s,repository:this.repo}),this._uniqueId=(0,sJ.tO)(this.type,this.context),this._status=this.repo.getStatus()}_status;get id(){return this._uniqueId}toClipboard(){return this.repo.path}get repoPath(){return this.repo.path}get workspace(){return this.context.workspace}get wsRepositoryDescriptor(){return this.context.wsRepositoryDescriptor}async getChildren(){if(void 0===this.children){let e=[],t=await this._status;if(null!=t){let i=new T.XI(this.view.container,t.repoPath,t.branch,!1,!0,void 0,t.sha,t.upstream?{name:t.upstream,missing:!1}:void 0,t.state.ahead,t.state.behind,t.detached,t.rebasing);!1!==this.view.config.showBranchComparison&&e.push(new n8(this.uri,this.view,this,i,this.view.config.showBranchComparison,!0));let[r,s]=await Promise.all([this.view.container.git.getMergeStatus(t.repoPath),this.view.container.git.getRebaseStatus(t.repoPath)]);null!=r?e.push(new os(this.view,this,i,r,t,!0)):null!=s?e.push(new oa(this.view,this,i,s,t,!0)):this.view.config.showUpstreamStatus&&(t.upstream?t.state.behind||t.state.ahead?(t.state.behind&&e.push(new nZ(this.view,this,i,t,"behind",!0)),t.state.ahead&&e.push(new nZ(this.view,this,i,t,"ahead",!0,{showAheadCommits:!0}))):e.push(new nZ(this.view,this,i,t,"same",!0)):e.push(new nZ(this.view,this,i,t,"none",!0))),this.view.config.includeWorkingTree&&0!==t.files.length&&e.push(new an(this.view,this,t,void 0)),0===e.length||this.view.config.compact||e.push(new nV.AE(this.view,this,"",$.NE.Dash.repeat(2),"")),this.view.config.showCommits&&e.push(new ou(this.uri,this.view,this,this.repo,i,!0,{showAsCommits:!0,showComparison:!1,showCurrent:!1,showStatus:!1,showTracking:!1}))}this.view.config.showBranches&&e.push(new om(this.uri,this.view,this,this.repo)),this.view.config.showRemotes&&e.push(new ae(this.uri,this.view,this,this.repo)),this.view.config.showStashes&&await this.repo.supports(tv.A.Stashes)&&e.push(new as(this.uri,this.view,this,this.repo)),this.view.config.showTags&&e.push(new ad(this.uri,this.view,this,this.repo)),this.view.config.showWorktrees&&await this.repo.supports(tv.A.Worktrees)&&e.push(new aC(this.uri,this.view,this,this.repo)),this.view.config.showContributors&&e.push(new o0(this.uri,this.view,this,this.repo)),this.view.config.showIncomingActivity&&!this.repo.provider.virtual&&e.push(new o8(this.uri,this.view,this,this.repo)),this.children=e}return this.children}async getTreeItem(){let e,t;let i=this.repo.formattedName??this.uri.repoPath??"",r=await this.repo?.getLastFetched()??0,s=`${this.repo.formattedName??this.uri.repoPath??""}${r?`${(0,L.vk)($.NE.Dash,2,2)}Last fetched ${tP._j.formatLastFetched(r,!1)}`:""}${this.repo.formattedName?`\\
${this.uri.repoPath}`:""}`,n="",{workspace:o}=this.context,a=sJ.Td.Repository;this.repo.starred&&(a+="+starred"),null!=o&&(a+="+workspace","cloud"===o.type?a+="+cloud":"local"===o.type&&(a+="+local")),this.repo.closed?(a+="+closed",t=""):t="-solid",this.repo.virtual&&(a+="+virtual",t="-cloud");let l=await this._status;if(null!=l){let i;s+=`

Current branch $(git-branch) ${l.branch}${l.rebasing?" (Rebasing)":""}`,this.view.config.includeWorkingTree&&0!==l.files.length&&(n=l.getFormattedDiffStatus({compact:!0,prefix:(0,L.vk)($.NE.Dot,1,1)}));let r=l.getUpstreamStatus({suffix:(0,L.vk)($.NE.Dot,1,1)});if(e=`${r}${l.branch}${l.rebasing?" (Rebasing)":""}${n}`,null!=l.upstream){let e=tC.ss.getHighlanderProviders(await this.view.container.git.getRemotesWithProviders(l.repoPath));i=e?.length?e[0].name:void 0}else{let e=await l.getRemote();i=e?.provider?.name}t+=n?"-blue":"",null!=l.upstream&&(s+=` is ${l.getUpstreamStatus({empty:`up to date with $(git-branch) ${l.upstream}${i?` on ${i}`:""}`,expand:!0,icons:!0,separator:", ",suffix:` $(git-branch) ${l.upstream}${i?` on ${i}`:""}`})}`,l.state.behind&&(a+="+behind",t+="-red"),l.state.ahead&&(t+=l.state.behind?"-yellow":"-green",a+="+ahead")),n&&(s+=`

Working tree has uncommitted changes${l.getFormattedDiffStatus({expand:!0,prefix:"\n",separator:"\n"})}`)}null!=o&&(s+=`

Repository is ${this.repo.closed?"not ":""}open in the current window`);let h=new b.TreeItem(i,null!=o||"workspaces"===this.view.type?b.TreeItemCollapsibleState.Collapsed:b.TreeItemCollapsibleState.Expanded);h.id=this.id,h.contextValue=a,h.description=`${e??""}${r?`${(0,L.vk)($.NE.Dot,1,1)}Last fetched ${tP._j.formatLastFetched(r)}`:""}`,h.iconPath={dark:this.view.container.context.asAbsolutePath(`images/dark/icon-repo${t}.svg`),light:this.view.container.context.asAbsolutePath(`images/light/icon-repo${t}.svg`)},null==o||this.repo.closed||(h.resourceUri=b.Uri.parse("gitlens-view://workspaces/repository/open"));let c=new b.MarkdownString(s,!0);return c.supportHtml=!0,c.isTrusted=!0,h.tooltip=c,h}fetch(e={}){return this.repo.fetch(e)}pull(e={}){return this.repo.pull(e)}push(e={}){return this.repo.push(e)}async refresh(e=!1){super.refresh(e),e&&(this._status=this.repo.getStatus()),await this.ensureSubscription()}async star(){await this.repo.star(),this.parent.triggerChange()}async unstar(){await this.repo.unstar(),this.parent.triggerChange()}async subscribe(){let e=await this.repo?.getLastFetched()??0,t=[(0,iV.D$)(this.repo.onDidChange,this.onRepositoryChanged,this)],i=tP._j.getLastFetchedUpdateInterval(e);return 0!==e&&i>0&&t.push((0,t5.DH)(()=>{i!==tP._j.getLastFetchedUpdateInterval(e)&&this.resetSubscription(),this.splatted?this.view.triggerNodeChange(this.parent??this):this.view.triggerNodeChange(this)},i)),this.view.config.includeWorkingTree&&t.push((0,iV.D$)(this.repo.onDidChangeFileSystem,this.onFileSystemChanged,this,[this.repo.watchFileSystem()])),b.Disposable.from(...t)}etag(){return this.repo.etag}async onFileSystemChanged(e){if(this._status=this.repo.getStatus(),void 0!==this.children){let e=await this._status,t=this.children.findIndex(e=>"status-files"===e.type);if(void 0!==e&&(e.state.ahead||0!==e.files.length)){let i=1;-1===t&&(t=(0,W.qr)(this.children,e=>"tracking-status"===e.type||"branch"===e.type),i=0,t++),this.children.splice(t,i,new an(this.view,this,e,void 0))}else -1!==t&&this.children.splice(t,1)}this.triggerChange(!1)}onRepositoryChanged(e){if(e.changed(tP.I6.Closed,tP.du.Any)){this.dispose();return}if(null==this.children||e.changed(tP.I6.Config,tP.I6.Index,tP.I6.Heads,tP.I6.Opened,tP.I6.Status,tP.I6.Unknown,tP.du.Any)){this.triggerChange(!0);return}if(e.changed(tP.I6.Remotes,tP.I6.RemoteProviders,tP.du.Any)){let e=this.children.find(e=>"remotes"===e.type);null!=e&&this.view.triggerNodeChange(e)}if(e.changed(tP.I6.Stash,tP.du.Any)){let e=this.children.find(e=>"stashes"===e.type);null!=e&&this.view.triggerNodeChange(e)}if(e.changed(tP.I6.Tags,tP.du.Any)){let e=this.children.find(e=>"tags"===e.type);null!=e&&this.view.triggerNodeChange(e)}}}aD([(0,eW.cM)()],ak.prototype,"fetch",1),aD([(0,eW.cM)()],ak.prototype,"pull",1),aD([(0,eW.cM)()],ak.prototype,"push",1),aD([(0,t4.H)(),(0,eW.fF)()],ak.prototype,"refresh",1),aD([(0,eW.cM)()],ak.prototype,"star",1),aD([(0,eW.cM)()],ak.prototype,"unstar",1),aD([(0,eW.fF)()],ak.prototype,"subscribe",1),aD([(0,eW.fF)({args:{0:e=>`{ repository: ${e.repository?.name??""}, uris(${e.uris.length}): [${e.uris.slice(0,1).map(e=>e.fsPath).join(", ")}${e.uris.length>1?", ...":""}] }`}})],ak.prototype,"onFileSystemChanged",1),aD([(0,eW.fF)({args:{0:e=>e.toString()}})],ak.prototype,"onRepositoryChanged",1);var aS=i(202),aR=i(2758),a$=Object.defineProperty,a_=Object.getOwnPropertyDescriptor,aI=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?a_(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&a$(t,i,n),n},aF=((y=aF||{})[y.Disallowed=0]="Disallowed",y[y.Allowed=1]="Allowed",y[y.Custom=2]="Custom",y);function ax(e,t,i,r=1){return(0,rg.xR)(e,(...e)=>{if(0!==r){let[s,n,...o]=e;if(s instanceof sJ.Re&&Array.isArray(n)&&n[0]instanceof sJ.Re)return(n=n.filter(e=>e?.constructor===s.constructor),2===r)?t.apply(i,[s,n,...o]):(0,t5.df)(t,n.map(e=>[e,...o]),i)}return t.apply(i,e)},i)}class aT{constructor(e){this.container=e,ax("gitlens.views.clearComparison",e=>this.clearComparison(e),this),ax("gitlens.views.clearReviewed",e=>this.clearReviewed(e),this),(0,rg.xR)($.Gh.ViewsCopy,async(e,t)=>{if(0===(t=Array.isArray(t)?t:null!=e?[e]:[]).length)return;let i=t.map(e=>e.toClipboard?.()).filter(e=>!!e).join("\n");await b.env.clipboard.writeText(i)},this),ax("gitlens.views.collapseNode",()=>(0,rg.dO)("list.collapseAllToFocus"),this),ax("gitlens.views.dismissNode",e=>(0,sJ.kP)(e.view)&&e.view.dismissNode(e),this),ax("gitlens.views.editNode",e=>(0,sJ.LD)(e)&&e.edit(),this),ax("gitlens.views.expandNode",e=>e.view.reveal(e,{select:!1,focus:!1,expand:3}),this),ax("gitlens.views.loadMoreChildren",e=>e.loadMore(),this),ax("gitlens.views.loadAllChildren",e=>e.loadAll(),this),ax("gitlens.views.refreshNode",(e,t)=>(null==t&&(0,sJ.On)(e)&&(e.limit=void 0,e.view.resetNodeLastKnownLimit(e)),e.view.refreshNode(e,null==t||t)),this),ax("gitlens.views.setShowRelativeDateMarkersOn",()=>this.setShowRelativeDateMarkers(!0),this),ax("gitlens.views.setShowRelativeDateMarkersOff",()=>this.setShowRelativeDateMarkers(!1),this),ax("gitlens.views.fetch",this.fetch,this),ax("gitlens.views.publishBranch",this.publishBranch,this),ax("gitlens.views.publishRepository",this.publishRepository,this),ax("gitlens.views.pull",this.pull,this),ax("gitlens.views.push",this.push,this),ax("gitlens.views.pushWithForce",e=>this.push(e,!0),this),ax("gitlens.views.closeRepository",this.closeRepository,this),ax("gitlens.views.setAsDefault",this.setAsDefault,this),ax("gitlens.views.unsetAsDefault",this.unsetAsDefault,this),ax("gitlens.views.openInTerminal",this.openInTerminal,this),ax("gitlens.views.star",this.star,this),ax("gitlens.views.unstar",this.unstar,this),ax("gitlens.views.browseRepoAtRevision",this.browseRepoAtRevision,this),ax("gitlens.views.browseRepoAtRevisionInNewWindow",e=>this.browseRepoAtRevision(e,{openInNewWindow:!0}),this),ax("gitlens.views.browseRepoBeforeRevision",e=>this.browseRepoAtRevision(e,{before:!0}),this),ax("gitlens.views.browseRepoBeforeRevisionInNewWindow",e=>this.browseRepoAtRevision(e,{before:!0,openInNewWindow:!0}),this),ax("gitlens.views.addAuthors",this.addAuthors,this),ax("gitlens.views.addAuthor",this.addAuthor,this),ax("gitlens.views.openChanges",this.openChanges,this),ax("gitlens.views.openChangesWithWorking",this.openChangesWithWorking,this),ax("gitlens.views.openPreviousChangesWithWorking",this.openPreviousChangesWithWorking,this),ax("gitlens.views.openFile",this.openFile,this),ax("gitlens.views.openFileRevision",this.openRevision,this),ax("gitlens.views.openChangedFiles",this.openFiles,this),ax("gitlens.views.openChangedFileDiffs",this.openAllChanges,this),ax("gitlens.views.openChangedFileDiffsWithWorking",this.openAllChangesWithWorking,this),ax("gitlens.views.openChangedFileRevisions",this.openRevisions,this),ax("gitlens.views.applyChanges",this.applyChanges,this),ax("gitlens.views.highlightChanges",this.highlightChanges,this),ax("gitlens.views.highlightRevisionChanges",this.highlightRevisionChanges,this),ax("gitlens.views.restore",this.restore,this),ax("gitlens.views.switchToAnotherBranch",this.switch,this),ax("gitlens.views.switchToBranch",this.switchTo,this),ax("gitlens.views.switchToCommit",this.switchTo,this),ax("gitlens.views.switchToTag",this.switchTo,this),ax("gitlens.views.addRemote",this.addRemote,this),ax("gitlens.views.pruneRemote",this.pruneRemote,this),ax("gitlens.views.removeRemote",this.removeRemote,this),ax("gitlens.views.stageDirectory",this.stageDirectory,this),ax("gitlens.views.stageFile",this.stageFile,this),ax("gitlens.views.unstageDirectory",this.unstageDirectory,this),ax("gitlens.views.unstageFile",this.unstageFile,this),ax("gitlens.views.compareAncestryWithWorking",this.compareAncestryWithWorking,this),ax("gitlens.views.compareWithHead",this.compareHeadWith,this),ax("gitlens.views.compareWithUpstream",this.compareWithUpstream,this),ax("gitlens.views.compareWithSelected",this.compareWithSelected,this),ax("gitlens.views.selectForCompare",this.selectForCompare,this),ax("gitlens.views.compareFileWithSelected",this.compareFileWithSelected,this),ax("gitlens.views.selectFileForCompare",this.selectFileForCompare,this),ax("gitlens.views.compareWithWorking",this.compareWorkingWith,this),ax("gitlens.views.setBranchComparisonToWorking",e=>this.setBranchComparison(e,"working"),this),ax("gitlens.views.setBranchComparisonToBranch",e=>this.setBranchComparison(e,"branch"),this),ax("gitlens.views.cherryPick",this.cherryPick,this,2),ax("gitlens.views.title.createBranch",()=>this.createBranch()),ax("gitlens.views.createBranch",this.createBranch,this),ax("gitlens.views.deleteBranch",this.deleteBranch,this),ax("gitlens.views.renameBranch",this.renameBranch,this),ax("gitlens.views.title.applyStash",()=>this.applyStash()),ax("gitlens.views.stash.delete",this.deleteStash,this,2),ax("gitlens.views.stash.rename",this.renameStash,this),ax("gitlens.views.title.createTag",()=>this.createTag()),ax("gitlens.views.createTag",this.createTag,this),ax("gitlens.views.deleteTag",this.deleteTag,this),ax("gitlens.views.mergeBranchInto",this.merge,this),ax("gitlens.views.pushToCommit",this.pushToCommit,this),ax("gitlens.views.rebaseOntoBranch",this.rebase,this),ax("gitlens.views.rebaseOntoUpstream",this.rebaseToRemote,this),ax("gitlens.views.rebaseOntoCommit",this.rebase,this),ax("gitlens.views.resetCommit",this.resetCommit,this),ax("gitlens.views.resetToCommit",this.resetToCommit,this),ax("gitlens.views.resetToTip",this.resetToTip,this),ax("gitlens.views.revert",this.revert,this),ax("gitlens.views.undoCommit",this.undoCommit,this),ax("gitlens.views.createPullRequest",this.createPullRequest,this),ax("gitlens.views.openPullRequest",this.openPullRequest,this),ax("gitlens.views.title.createWorktree",()=>this.createWorktree()),ax("gitlens.views.createWorktree",this.createWorktree,this),ax("gitlens.views.deleteWorktree",this.deleteWorktree,this),ax("gitlens.views.openWorktree",this.openWorktree,this),ax("gitlens.views.revealRepositoryInExplorer",this.revealRepositoryInExplorer,this),ax("gitlens.views.revealWorktreeInExplorer",this.revealWorktreeInExplorer,this),ax("gitlens.views.openWorktreeInNewWindow",e=>this.openWorktree(e,{location:"newWindow"}),this),ax("gitlens.views.setResultsCommitsFilterAuthors",e=>this.setResultsCommitsFilter(e,!0),this),ax("gitlens.views.setResultsCommitsFilterOff",e=>this.setResultsCommitsFilter(e,!1),this)}addAuthors(e){return oy.q((0,sJ.pp)(e))}addAuthor(e){return e instanceof oI?oy.q(e.repoPath,e.contributor.current?void 0:e.contributor):Promise.resolve()}addRemote(e){return ob.IH((0,sJ.pp)(e))}applyChanges(e){return e instanceof nH.R?e instanceof aS.C?ov.zb(e.file,(0,F.xB)(e.ref1,e.repoPath),(0,F.xB)(e.ref2,e.repoPath)):null==e.ref||"HEAD"===e.ref.ref?Promise.resolve():ov.zb(e.file,e.ref):Promise.resolve()}applyStash(){return oA.nn()}browseRepoAtRevision(e,t){return e instanceof nH.b||e instanceof nH.R?(0,of.g)(e.uri,{before:t?.before,openInNewWindow:t?.openInNewWindow}):Promise.resolve()}cherryPick(e,t){return e instanceof nj.D?null!=t&&0!==t.length?oC.QP(e.repoPath,t.map(e=>e.ref)):oC.QP(e.repoPath,e.ref):Promise.resolve()}clearComparison(e){e.is("compare-branch")&&e.clear()}clearReviewed(e){let t;if(e.is("results-files")){if(null==(t=e.getParent()))return}else t=e;(t.is("compare-branch")||t.is("compare-results"))&&t.clearReviewed()}closeRepository(e){(e instanceof ak||e instanceof nM.v)&&(e.repo.closed=!0)}async createBranch(e){let t=e instanceof nH.b||e instanceof nH.R?e?.ref:e instanceof nZ?e.branch:void 0;return null==t&&(t=await this.container.git.getBranch(e?.repoPath??this.container.git.getBestRepository()?.uri)),ow.Ue(e?.repoPath,t)}async createPullRequest(e){if(!(e instanceof ou)&&!(e instanceof nZ))return Promise.resolve();let t=await e.branch.getRemote();return(0,rg.SI)("createPullRequest",{repoPath:e.repoPath,remote:null!=t?{name:t.name,provider:null!=t.provider?{id:t.provider.id,name:t.provider.name,domain:t.provider.domain}:void 0,url:t.url}:void 0,branch:{name:e.branch.name,upstream:e.branch.upstream?.name,isRemote:e.branch.remote}})}async createTag(e){let t=e instanceof nH.b||e instanceof nH.R?e?.ref:e instanceof nZ?e.branch:void 0;return null==t&&(t=await this.container.git.getBranch(e?.repoPath??this.container.git.getBestRepository()?.uri)),oP.Ue(e?.repoPath,t)}async createWorktree(e){if(e instanceof aC&&(e=void 0),null==e||e instanceof ou)return oD.Ue(e?.repoPath,void 0,e?.ref)}deleteBranch(e){return e instanceof ou?ow.Od(e.repoPath,e.branch):Promise.resolve()}deleteStash(e,t){if(!(e instanceof at.i))return Promise.resolve();if(null!=t&&0!==t.length){let e=t.sort((e,t)=>parseInt(t.commit.number,10)-parseInt(e.commit.number,10));return(0,t5.df)(oA.Cw,e.map(e=>[e.repoPath,e.commit]),this)}return oA.Cw(e.repoPath,e.commit)}renameStash(e){return e instanceof at.i?oA.PQ(e.repoPath,e.commit):Promise.resolve()}deleteTag(e){return e instanceof ah?oP.Od(e.repoPath,e.tag):Promise.resolve()}async deleteWorktree(e){if(e instanceof av)return oD.Od(e.repoPath,e.worktree.uri)}fetch(e){return e instanceof ak||e instanceof nM.v?oC.he(e.repo):e instanceof oK?ob.he(e.remote.repoPath,e.remote.name):e instanceof ou||e instanceof nZ?oC.he(e.repoPath,e.root?void 0:e.branch):Promise.resolve()}async highlightChanges(e){(e instanceof oS.R||e instanceof aR.y||e instanceof oE.m||e instanceof aS.C)&&(await this.openFile(e,{preserveFocus:!0,preview:!0}),await this.container.fileAnnotations.toggle(b.window.activeTextEditor,"changes",{sha:e.ref.ref},!0))}async highlightRevisionChanges(e){(e instanceof oS.R||e instanceof aR.y||e instanceof oE.m||e instanceof aS.C)&&(await this.openFile(e,{preserveFocus:!0,preview:!0}),await this.container.fileAnnotations.toggle(b.window.activeTextEditor,"changes",{sha:e.ref.ref,only:!0},!0))}merge(e){return e instanceof ou||e instanceof ah?oC.TS(e.repoPath,e instanceof ou?e.branch:e.tag):Promise.resolve()}openInTerminal(e){return e instanceof ak||e instanceof nM.v?(0,rg.dO)("openInTerminal",b.Uri.file(e.repo.path)):Promise.resolve()}openPullRequest(e){return e instanceof on.Z?(0,rg.SI)("openPullRequest",{repoPath:e.uri.repoPath,provider:{id:e.pullRequest.provider.id,name:e.pullRequest.provider.name,domain:e.pullRequest.provider.domain},pullRequest:{id:e.pullRequest.id,url:e.pullRequest.url}}):Promise.resolve()}openWorktree(e,t){e instanceof av&&(0,eG.ic)(e.worktree.uri,t)}pruneRemote(e){return e instanceof oK?ob.Qs(e.remote.repoPath,e.remote.name):Promise.resolve()}async removeRemote(e){return e instanceof oK?ob.Od(e.remote.repoPath,e.remote.name):Promise.resolve()}publishBranch(e){return e instanceof ou||e instanceof nZ?oC.VF(e.repoPath,void 0,e.branch):Promise.resolve()}publishRepository(e){return e instanceof ou||e instanceof nZ?(0,rg.Zv)("git.publish",b.Uri.file(e.repoPath)):Promise.resolve()}pull(e){return e instanceof ak||e instanceof nM.v?oC.X4(e.repo):e instanceof ou||e instanceof nZ?oC.X4(e.repoPath,e.root?void 0:e.branch):Promise.resolve()}push(e,t){return e instanceof ak||e instanceof nM.v?oC.VF(e.repo,t):e instanceof ou||e instanceof nZ?oC.VF(e.repoPath,t,e.root?void 0:e.branch):e instanceof nj.D||e instanceof oE.m?e.isTip?oC.VF(e.repoPath,t):this.pushToCommit(e):Promise.resolve()}pushToCommit(e){return e instanceof nj.D||e instanceof oE.m?oC.VF(e.repoPath,!1,e.commit):Promise.resolve()}rebase(e){return e instanceof ou||e instanceof nj.D||e instanceof oE.m||e instanceof ah?oC.DW(e.repoPath,e.ref):Promise.resolve()}rebaseToRemote(e){if(!(e instanceof ou)&&!(e instanceof nZ))return Promise.resolve();let t=e instanceof ou?e.branch.upstream?.name:e.status.upstream;return null==t?Promise.resolve():oC.DW(e.repoPath,(0,F.xB)(t,e.repoPath,{refType:"branch",name:t,remote:!0}))}renameBranch(e){return e instanceof ou?ow.PQ(e.repoPath,e.branch):Promise.resolve()}resetCommit(e){return e instanceof nj.D||e instanceof oE.m?oC.mc(e.repoPath,(0,F.xB)(`${e.ref.ref}^`,e.ref.repoPath,{refType:"revision",name:`${e.ref.name}^`,message:e.ref.message})):Promise.resolve()}resetToCommit(e){return e instanceof nj.D||e instanceof oE.m?oC.mc(e.repoPath,e.ref):Promise.resolve()}resetToTip(e){return e instanceof ou?oC.mc(e.repoPath,(0,F.xB)(e.ref.ref,e.repoPath,{refType:"revision",name:e.ref.name})):Promise.resolve()}restore(e){return e instanceof nH.R?ov.Hl(e.file,e.ref):Promise.resolve()}revealRepositoryInExplorer(e){if(e instanceof ak)return(0,eG.qM)(e.repo.uri)}revealWorktreeInExplorer(e){if(e instanceof av)return(0,eG.qM)(e.worktree.uri)}revert(e){return e instanceof nj.D||e instanceof oE.m?oC.CU(e.repoPath,e.ref):Promise.resolve()}setAsDefault(e){return e instanceof oK?e.setAsDefault():Promise.resolve()}setBranchComparison(e,t){if(e instanceof n8)return e.setComparisonType(t)}setShowRelativeDateMarkers(e){return C.D.updateEffective("views.showRelativeDateMarkers",e)}async stageFile(e){(e instanceof oS.R||e instanceof oE.m||e instanceof nq.q)&&(await this.container.git.stageFile(e.repoPath,e.file.path),e.triggerChange())}async stageDirectory(e){e instanceof nG.Y&&e.relativePath&&(await this.container.git.stageDirectory(e.repoPath,e.relativePath),e.triggerChange())}star(e){return e instanceof ou||e instanceof ak||e instanceof nM.v?e.star():Promise.resolve()}switch(e){return oC.gu((0,sJ.pp)(e))}switchTo(e){return e instanceof nH.b?oC.gu(e.repoPath,e instanceof ou&&e.branch.current?void 0:e.ref):oC.gu((0,sJ.pp)(e))}async undoCommit(e){if(!(e instanceof nj.D)&&!(e instanceof oE.m))return;let t=await this.container.git.getOrOpenScmRepository(e.repoPath),i=await t?.getCommit("HEAD");if(i?.hash!==e.ref.ref){b.window.showWarningMessage(`Commit ${(0,F.Wh)(e.ref,{capitalize:!0,icon:!1})} cannot be undone, because it is no longer the most recent commit.`);return}await (0,rg.Zv)("git.undoCommit",e.repoPath)}unsetAsDefault(e){return e instanceof oK?e.setAsDefault(!1):Promise.resolve()}async unstageFile(e){(e instanceof oS.R||e instanceof oE.m||e instanceof nq.q)&&(await this.container.git.unstageFile(e.repoPath,e.file.path),e.triggerChange())}async unstageDirectory(e){e instanceof nG.Y&&e.relativePath&&(await this.container.git.unstageDirectory(e.repoPath,e.relativePath),e.triggerChange())}unstar(e){return e instanceof ou||e instanceof ak||e instanceof nM.v?e.unstar():Promise.resolve()}compareHeadWith(e){return e instanceof nH.b||e instanceof nH.R?e instanceof nH.R?this.compareFileWith(e.repoPath,e.uri,e.ref.ref,void 0,"HEAD"):this.container.searchAndCompareView.compare(e.repoPath,"HEAD",e.ref):Promise.resolve()}compareWithUpstream(e){return e instanceof ou&&null!=e.branch.upstream?this.container.searchAndCompareView.compare(e.repoPath,e.ref,e.branch.upstream.name):Promise.resolve()}compareWorkingWith(e){return e instanceof nH.b||e instanceof nH.R?e instanceof nH.R?this.compareFileWith(e.repoPath,e.uri,e.ref.ref,void 0,""):this.container.searchAndCompareView.compare(e.repoPath,"",e.ref):Promise.resolve()}async compareAncestryWithWorking(e){if(!(e instanceof ou))return;let t=await this.container.git.getBranch(e.repoPath);if(null==t)return;let i=await this.container.git.getMergeBase(e.repoPath,t.ref,e.ref.ref);if(null!=i)return this.container.searchAndCompareView.compare(e.repoPath,{ref:i,label:`ancestry with ${e.ref.ref} (${(0,F.zL)(i)})`},"")}compareWithSelected(e){(e instanceof nH.b||e instanceof nH.R)&&this.container.searchAndCompareView.compareWithSelected(e.repoPath,e.ref)}selectForCompare(e){(e instanceof nH.b||e instanceof nH.R)&&this.container.searchAndCompareView.selectForCompare(e.repoPath,e.ref)}async compareFileWith(e,t,i,r,s){return null==r&&(r=await this.container.git.getWorkingUri(e,t)),(0,rg.P0)($.Gh.DiffWith,{repoPath:e,lhs:{sha:i,uri:t},rhs:{sha:s,uri:r??t}})}compareFileWithSelected(e){if(null==this._selectedFile||!(e instanceof nH.R)||null==e.ref)return Promise.resolve();if(this._selectedFile.repoPath!==e.repoPath)return this.selectFileForCompare(e),Promise.resolve();let t=this._selectedFile;return this._selectedFile=void 0,(0,i4.v)("gitlens:views:canCompare:file",!1),this.compareFileWith(t.repoPath,t.uri,t.ref,e.uri,e.ref.ref)}_selectedFile;selectFileForCompare(e){e instanceof nH.R&&null!=e.ref&&(this._selectedFile={ref:e.ref.ref,repoPath:e.repoPath,uri:e.uri},(0,i4.v)("gitlens:views:canCompare:file",!0))}async openAllChanges(e,t){if(e instanceof nj.D||e instanceof at.i||e instanceof n4.V){if(e instanceof n4.V){let{files:i}=await e.getFilesQueryResults();if(null==i||0===i.length)return;return ov.Gp(i,{repoPath:e.repoPath,lhs:e.ref1,rhs:e.ref2},t)}return ov.Gp(e.commit,t)}}openChanges(e){if(!(e instanceof nH.R)&&!(e instanceof oi)&&!(e instanceof nq.q))return;if(e instanceof oi){(0,rg.P0)($.Gh.DiffWith,{lhs:{sha:e.status.HEAD.ref,uri:ty.YY.fromFile(e.file,e.repoPath,void 0,!0)},rhs:{sha:"HEAD",uri:ty.YY.fromFile(e.file,e.repoPath)},repoPath:e.repoPath,line:0,showOptions:{preserveFocus:!1,preview:!1}});return}let t=e.getCommand();if(t?.arguments!=null)switch(t.command){case $.Gh.DiffWith:{let[e]=t.arguments;e.showOptions.preview=!1,(0,rg.P0)(t.command,e);break}case $.Gh.DiffWithPrevious:{let[,e]=t.arguments;e.showOptions.preview=!1,(0,rg.b2)(t.command,void 0,e);break}default:throw Error(`Unexpected command: ${t.command}`)}}async openAllChangesWithWorking(e,t){if(e instanceof nj.D||e instanceof at.i||e instanceof n4.V){if(e instanceof n4.V){let{files:i}=await e.getFilesQueryResults();if(null==i||0===i.length)return;return ov.Ou(i,{repoPath:e.repoPath,ref:e.ref1||e.ref2},t)}return ov.Ou(e.commit,t)}}async openChangesWithWorking(e){if(!(e instanceof nH.R)&&!(e instanceof oi)&&!(e instanceof nq.q))return Promise.resolve();if(e instanceof nq.q)return(0,rg.b2)($.Gh.DiffWithWorking,void 0,{uri:e.uri,showOptions:{preserveFocus:!0,preview:!0}});if(e instanceof oi)return(0,rg.b2)($.Gh.DiffWithWorking,void 0,{uri:e.baseUri,showOptions:{preserveFocus:!0,preview:!0}});if(e instanceof oE.m&&e.commit.file?.hasConflicts){let t=await e.getConflictBaseUri();if(null!=t)return(0,rg.b2)($.Gh.DiffWithWorking,void 0,{uri:t,showOptions:{preserveFocus:!0,preview:!0}})}return ov.ce(e.file,{repoPath:e.repoPath,ref:e.ref.ref})}async openPreviousChangesWithWorking(e){return e instanceof nH.R?ov.ce(e.file,{repoPath:e.repoPath,ref:`${e.ref.ref}^`}):Promise.resolve()}openFile(e,t){return e instanceof nH.R||e instanceof oi||e instanceof nq.q||e instanceof oM||e instanceof oV?ov.ZB(e.uri,{preserveFocus:!0,preview:!1,...t}):Promise.resolve()}async openFiles(e){if(e instanceof nj.D||e instanceof at.i||e instanceof n4.V){if(e instanceof n4.V){let{files:t}=await e.getFilesQueryResults();if(null==t||0===t.length)return;return ov.aE(t,e.repoPath,e.ref1||e.ref2)}return ov.aE(e.commit)}}async openRevision(e,t){if(!(e instanceof oS.R)&&!(e instanceof oE.m)&&!(e instanceof aS.C)&&!(e instanceof aR.y)&&!(e instanceof oi)&&!(e instanceof nq.q))return Promise.resolve();let i=(t={showOptions:{preserveFocus:!0,preview:!1},...t}).revisionUri;return null==i&&(i=e instanceof aS.C||e instanceof oi?this.container.git.getRevisionUri(e.uri):e.commit.file?.status==="D"?this.container.git.getRevisionUri(await e.commit.getPreviousSha()??H.Ii,e.commit.file.path,e.commit.repoPath):this.container.git.getRevisionUri(e.uri)),ov.YS(i,t.showOptions??{preserveFocus:!0,preview:!1})}async openRevisions(e,t){if(e instanceof nj.D||e instanceof at.i||e instanceof n4.V){if(e instanceof n4.V){let{files:t}=await e.getFilesQueryResults();if(null==t||0===t.length)return;return ov.Dh(t,e.repoPath,e.ref1,e.ref2)}return ov.Dh(e.commit)}}async setResultsCommitsFilter(e,t){if(!e?.is("compare-results")&&!e?.is("compare-branch"))return;let i=this.container.git.getRepository(e.repoPath);if(null!=i){if(t){let r=e.getState("filterCommits");if(null==r){let e=await this.container.git.getCurrentUser(i.uri);r=null!=e?[e]:void 0}let s=await (0,ok.J)(this.container,i,"Filter Commits",i.virtual?"Choose a contributor to show commits from":"Choose contributors to show commits from",{appendReposToTitle:!0,clearButton:!0,multiselect:!i.virtual,picked:e=>r?.some(t=>tb.v(e,t))??!1});if(null==s)return;0===s.length?(t=!1,e.deleteState("filterCommits")):e.storeState("filterCommits",s)}else e.deleteState("filterCommits");e.triggerChange(!0)}}}aI([(0,eW.cM)()],aT.prototype,"addAuthors",1),aI([(0,eW.cM)()],aT.prototype,"addAuthor",1),aI([(0,eW.cM)()],aT.prototype,"addRemote",1),aI([(0,eW.cM)()],aT.prototype,"applyChanges",1),aI([(0,eW.cM)()],aT.prototype,"applyStash",1),aI([(0,eW.cM)()],aT.prototype,"browseRepoAtRevision",1),aI([(0,eW.cM)()],aT.prototype,"cherryPick",1),aI([(0,eW.cM)()],aT.prototype,"clearComparison",1),aI([(0,eW.cM)()],aT.prototype,"clearReviewed",1),aI([(0,eW.cM)()],aT.prototype,"closeRepository",1),aI([(0,eW.cM)()],aT.prototype,"createBranch",1),aI([(0,eW.cM)()],aT.prototype,"createPullRequest",1),aI([(0,eW.cM)()],aT.prototype,"createTag",1),aI([(0,eW.cM)()],aT.prototype,"createWorktree",1),aI([(0,eW.cM)()],aT.prototype,"deleteBranch",1),aI([(0,eW.cM)()],aT.prototype,"deleteStash",1),aI([(0,eW.cM)()],aT.prototype,"renameStash",1),aI([(0,eW.cM)()],aT.prototype,"deleteTag",1),aI([(0,eW.cM)()],aT.prototype,"deleteWorktree",1),aI([(0,eW.cM)()],aT.prototype,"fetch",1),aI([(0,eW.cM)()],aT.prototype,"highlightChanges",1),aI([(0,eW.cM)()],aT.prototype,"highlightRevisionChanges",1),aI([(0,eW.cM)()],aT.prototype,"merge",1),aI([(0,eW.cM)()],aT.prototype,"openInTerminal",1),aI([(0,eW.cM)()],aT.prototype,"openPullRequest",1),aI([(0,eW.cM)()],aT.prototype,"openWorktree",1),aI([(0,eW.cM)()],aT.prototype,"pruneRemote",1),aI([(0,eW.cM)()],aT.prototype,"removeRemote",1),aI([(0,eW.cM)()],aT.prototype,"publishBranch",1),aI([(0,eW.cM)()],aT.prototype,"publishRepository",1),aI([(0,eW.cM)()],aT.prototype,"pull",1),aI([(0,eW.cM)()],aT.prototype,"push",1),aI([(0,eW.cM)()],aT.prototype,"pushToCommit",1),aI([(0,eW.cM)()],aT.prototype,"rebase",1),aI([(0,eW.cM)()],aT.prototype,"rebaseToRemote",1),aI([(0,eW.cM)()],aT.prototype,"renameBranch",1),aI([(0,eW.cM)()],aT.prototype,"resetCommit",1),aI([(0,eW.cM)()],aT.prototype,"resetToCommit",1),aI([(0,eW.cM)()],aT.prototype,"resetToTip",1),aI([(0,eW.cM)()],aT.prototype,"restore",1),aI([(0,eW.cM)()],aT.prototype,"revealRepositoryInExplorer",1),aI([(0,eW.cM)()],aT.prototype,"revealWorktreeInExplorer",1),aI([(0,eW.cM)()],aT.prototype,"revert",1),aI([(0,eW.cM)()],aT.prototype,"setAsDefault",1),aI([(0,eW.cM)()],aT.prototype,"setBranchComparison",1),aI([(0,eW.cM)()],aT.prototype,"setShowRelativeDateMarkers",1),aI([(0,eW.cM)()],aT.prototype,"stageFile",1),aI([(0,eW.cM)()],aT.prototype,"stageDirectory",1),aI([(0,eW.cM)()],aT.prototype,"star",1),aI([(0,eW.cM)()],aT.prototype,"switch",1),aI([(0,eW.cM)()],aT.prototype,"switchTo",1),aI([(0,eW.cM)()],aT.prototype,"undoCommit",1),aI([(0,eW.cM)()],aT.prototype,"unsetAsDefault",1),aI([(0,eW.cM)()],aT.prototype,"unstageFile",1),aI([(0,eW.cM)()],aT.prototype,"unstageDirectory",1),aI([(0,eW.cM)()],aT.prototype,"unstar",1),aI([(0,eW.cM)()],aT.prototype,"compareHeadWith",1),aI([(0,eW.cM)()],aT.prototype,"compareWithUpstream",1),aI([(0,eW.cM)()],aT.prototype,"compareWorkingWith",1),aI([(0,eW.cM)()],aT.prototype,"compareAncestryWithWorking",1),aI([(0,eW.cM)()],aT.prototype,"compareWithSelected",1),aI([(0,eW.cM)()],aT.prototype,"selectForCompare",1),aI([(0,eW.cM)()],aT.prototype,"compareFileWithSelected",1),aI([(0,eW.cM)()],aT.prototype,"selectFileForCompare",1),aI([(0,eW.cM)()],aT.prototype,"openAllChanges",1),aI([(0,eW.cM)()],aT.prototype,"openChanges",1),aI([(0,eW.cM)()],aT.prototype,"openAllChangesWithWorking",1),aI([(0,eW.cM)()],aT.prototype,"openChangesWithWorking",1),aI([(0,eW.cM)()],aT.prototype,"openPreviousChangesWithWorking",1),aI([(0,eW.cM)()],aT.prototype,"openFile",1),aI([(0,eW.cM)()],aT.prototype,"openFiles",1),aI([(0,eW.cM)()],aT.prototype,"openRevision",1),aI([(0,eW.cM)()],aT.prototype,"openRevisions",1),aI([(0,eW.cM)()],aT.prototype,"setResultsCommitsFilter",1);var aO=Object.defineProperty,aE=Object.getOwnPropertyDescriptor,aB=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?aE(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&aO(t,i,n),n};class aU extends nM.v{async getChildren(){return null==this.child&&(this.child=new om(this.uri,this.view,this,this.repo)),this.child.getChildren()}changed(e){return e.changed(tP.I6.Config,tP.I6.Heads,tP.I6.Index,tP.I6.Remotes,tP.I6.RemoteProviders,tP.I6.Status,tP.I6.Unknown,tP.du.Any)}}class aW extends nW{async getChildren(){if(null==this.children){let e=this.view.container.git.openRepositories;if(0===e.length)return this.view.message=this.view.container.git.isDiscoveringRepositories?"Loading branches...":"No branches could be found.",[];this.view.message=void 0;let t=1===e.length;this.children=e.map(e=>new aU(ty.YY.fromRepoPath(e.path),this.view,this,e,t))}if(1===this.children.length){let[e]=this.children,t=await e.repo.getBranches({filter:e=>!e.remote});return 0===t.values.length?(this.view.message="No branches could be found.",this.view.title="Branches",e.ensureSubscription(),[]):(this.view.message=void 0,this.view.title=`Branches (${t.values.length})`,e.getChildren())}return this.view.title="Branches",this.children}getTreeItem(){return new b.TreeItem("Branches",b.TreeItemCollapsibleState.Expanded)}}class aM extends nN._H{configKey="branches";constructor(e){super(e,"branches","Branches","branchesView")}get canReveal(){return this.config.reveal||!C.D.get("views.repositories.showBranches")}getRoot(){return new aW(this)}registerCommands(){return this.container.viewCommands,[ax(this.getQualifiedCommand("copy"),()=>(0,rg.P0)($.Gh.ViewsCopy,this.activeSelection,this.selection),this),ax(this.getQualifiedCommand("refresh"),()=>(this.container.git.resetCaches("branches"),this.refresh(!0)),this),ax(this.getQualifiedCommand("setLayoutToList"),()=>this.setLayout("list"),this),ax(this.getQualifiedCommand("setLayoutToTree"),()=>this.setLayout("tree"),this),ax(this.getQualifiedCommand("setFilesLayoutToAuto"),()=>this.setFilesLayout("auto"),this),ax(this.getQualifiedCommand("setFilesLayoutToList"),()=>this.setFilesLayout("list"),this),ax(this.getQualifiedCommand("setFilesLayoutToTree"),()=>this.setFilesLayout("tree"),this),ax(this.getQualifiedCommand("setShowAvatarsOn"),()=>this.setShowAvatars(!0),this),ax(this.getQualifiedCommand("setShowAvatarsOff"),()=>this.setShowAvatars(!1),this),ax(this.getQualifiedCommand("setShowBranchComparisonOn"),()=>this.setShowBranchComparison(!0),this),ax(this.getQualifiedCommand("setShowBranchComparisonOff"),()=>this.setShowBranchComparison(!1),this),ax(this.getQualifiedCommand("setShowBranchPullRequestOn"),()=>this.setShowBranchPullRequest(!0),this),ax(this.getQualifiedCommand("setShowBranchPullRequestOff"),()=>this.setShowBranchPullRequest(!1),this)]}filterConfigurationChanged(e){return!!(super.filterConfigurationChanged(e)||C.D.changed(e,"defaultDateFormat")||C.D.changed(e,"defaultDateLocale")||C.D.changed(e,"defaultDateShortFormat")||C.D.changed(e,"defaultDateSource")||C.D.changed(e,"defaultDateStyle")||C.D.changed(e,"defaultGravatarsStyle")||C.D.changed(e,"defaultTimeFormat")||C.D.changed(e,"sortBranchesBy")||C.D.changed(e,"sortRepositoriesBy"))}findBranch(e,t){if(e.remote)return;let{repoPath:i}=e;return this.findNode(t=>t.branch?.ref===e.ref,{allowPaging:!0,maxDepth:4,canTraverse:e=>e instanceof aW||(e instanceof aU||e instanceof od)&&e.repoPath===i,token:t})}async findCommit(e,t){let{repoPath:i}=e,r=await this.container.git.getCommitBranches(e.repoPath,e.ref,void 0,(0,N.f_)(e)?{commitDate:e.committer.date}:void 0);if(0!==r.length)return this.findNode(t=>t.commit?.ref===e.ref,{allowPaging:!0,maxDepth:5,canTraverse:async t=>t instanceof aW||(t instanceof aU||t instanceof od?t.repoPath===i:!!(t instanceof ou&&t.repoPath===i&&r.includes(t.branch.name))&&(await t.loadMore({until:e.ref}),!0)),token:t})}revealBranch(e,t){return b.window.withProgress({location:b.ProgressLocation.Notification,title:`Revealing ${(0,F.Wh)(e,{icon:!1,quoted:!0})} in the side bar...`,cancellable:!0},async(i,r)=>{let s=await this.findBranch(e,r);if(null!=s)return await this.ensureRevealNode(s,t),s})}async revealCommit(e,t){return b.window.withProgress({location:b.ProgressLocation.Notification,title:`Revealing ${(0,F.Wh)(e,{icon:!1,quoted:!0})} in the side bar...`,cancellable:!0},async(i,r)=>{let s=await this.findCommit(e,r);if(null!=s)return await this.ensureRevealNode(s,t),s})}async revealRepository(e,t){let i=await this.findNode(t=>t instanceof nM.v&&t.repoPath===e,{maxDepth:1,canTraverse:e=>e instanceof aW||e instanceof nM.v});return void 0!==i&&await this.reveal(i,t),i}setLayout(e){return C.D.updateEffective(`views.${this.configKey}.branches.layout`,e)}setFilesLayout(e){return C.D.updateEffective(`views.${this.configKey}.files.layout`,e)}setShowAvatars(e){return C.D.updateEffective(`views.${this.configKey}.avatars`,e)}setShowBranchComparison(e){return C.D.updateEffective(`views.${this.configKey}.showBranchComparison`,!!e&&"branch")}async setShowBranchPullRequest(e){await C.D.updateEffective(`views.${this.configKey}.pullRequests.showForBranches`,e),await C.D.updateEffective(`views.${this.configKey}.pullRequests.enabled`,e)}}aB([(0,t4.H)(()=>"")],aM.prototype,"revealBranch",1),aB([(0,t4.H)(()=>"")],aM.prototype,"revealCommit",1),aB([(0,t4.H)(()=>"")],aM.prototype,"revealRepository",1);var aL=Object.defineProperty,aN=Object.getOwnPropertyDescriptor,aH=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?aN(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&aL(t,i,n),n};class aG extends nM.v{async getChildren(){if(null==this.child){let e=await this.repo.getBranch();if(null==e)return this.view.message="No commits could be found.",[];this.view.message=void 0;let t=this.view.state.filterCommits.get(this.repo.id);this.child=new ou(this.uri,this.view,this.splatted?this.parent??this:this,this.repo,e,!0,{expanded:!0,limitCommits:!this.splatted,showComparison:this.view.config.showBranchComparison,showCurrent:!1,showMergeCommits:!this.view.state.hideMergeCommits,showTracking:!0,authors:t})}return this.child.getChildren()}async refresh(e=!1){e?this.child=void 0:this.parent?.triggerChange(!1),await this.ensureSubscription()}async subscribe(){let e=await this.repo?.getLastFetched()??0,t=tP._j.getLastFetchedUpdateInterval(e);return 0!==e&&t>0?b.Disposable.from(await super.subscribe(),(0,t5.DH)(()=>{t!==tP._j.getLastFetchedUpdateInterval(e)&&this.resetSubscription(),this.splatted?this.view.triggerNodeChange(this.parent??this):this.view.triggerNodeChange(this)},t)):super.subscribe()}changed(e){return e.changed(tP.I6.Config,tP.I6.Heads,tP.I6.Index,tP.I6.Remotes,tP.I6.RemoteProviders,tP.I6.Status,tP.I6.Unknown,tP.du.Any)}}aH([(0,t4.H)(),(0,eW.fF)()],aG.prototype,"refresh",1),aH([(0,eW.fF)()],aG.prototype,"subscribe",1);class aq extends nW{async getChildren(){if(null==this.children){let e=this.view.container.git.openRepositories;if(0===e.length)return this.view.message=this.view.container.git.isDiscoveringRepositories?"Loading commits...":"No commits could be found.",[];this.view.message=void 0;let t=1===e.length;this.children=e.map(e=>new aG(ty.YY.fromRepoPath(e.path),this.view,this,e,t,{showBranchAndLastFetched:!0}))}let e=C.D.get("plusFeatures.enabled")&&null==this.view.container.usage.get("graphView:shown")&&null==this.view.container.usage.get("graphWebview:shown")?new nV.$h(this.view,this,(0,rg.fA)($.Gh.ShowGraph,"Show Commit Graph"),"Visualize commits on the Commit Graph ✨",void 0,"Visualize commits on the Commit Graph ✨",new b.ThemeIcon("gitlens-graph")):void 0;if(1===this.children.length){let[t]=this.children,i=await t.repo.getBranch();if(null!=i){let e=await t.repo.getLastFetched()??0,r=i.getTrackingStatus();this.view.description=`${r?`${r} ${$.NE.Dot} `:""}${i.name}${i.rebasing?" (Rebasing)":""}${e?` ${$.NE.Dot} Last fetched ${tP._j.formatLastFetched(e)}`:""}`}return null==e?t.getChildren():[e,...await t.getChildren()]}return null==e?this.children:[e,...this.children]}getTreeItem(){return new b.TreeItem("Commits",b.TreeItemCollapsibleState.Expanded)}}class aY extends nN._H{configKey="commits";constructor(e){super(e,"commits","Commits","commitsView"),this.disposables.push(e.usage.onDidChange(this.onUsageChanged,this))}onUsageChanged(e){(null==e||"graphView:shown"===e.key||"graphWebview:shown"===e.key)&&this.refresh()}get canReveal(){return this.config.reveal||!C.D.get("views.repositories.showCommits")}_state={filterCommits:new Map};get state(){return this._state}getRoot(){return new aq(this)}registerCommands(){return this.container.viewCommands,[ax(this.getQualifiedCommand("copy"),()=>(0,rg.P0)($.Gh.ViewsCopy,this.activeSelection,this.selection),this),ax(this.getQualifiedCommand("refresh"),()=>(this.container.git.resetCaches("branches","status","tags"),this.refresh(!0)),this),ax(this.getQualifiedCommand("setFilesLayoutToAuto"),()=>this.setFilesLayout("auto"),this),ax(this.getQualifiedCommand("setFilesLayoutToList"),()=>this.setFilesLayout("list"),this),ax(this.getQualifiedCommand("setFilesLayoutToTree"),()=>this.setFilesLayout("tree"),this),ax(this.getQualifiedCommand("setCommitsFilterAuthors"),e=>this.setCommitsFilter(e,!0),this),ax(this.getQualifiedCommand("setCommitsFilterOff"),e=>this.setCommitsFilter(e,!1),this),ax(this.getQualifiedCommand("setShowMergeCommitsOn"),()=>this.setShowMergeCommits(!0),this),ax(this.getQualifiedCommand("setShowMergeCommitsOff"),()=>this.setShowMergeCommits(!1),this),ax(this.getQualifiedCommand("setShowAvatarsOn"),()=>this.setShowAvatars(!0),this),ax(this.getQualifiedCommand("setShowAvatarsOff"),()=>this.setShowAvatars(!1),this),ax(this.getQualifiedCommand("setShowBranchComparisonOn"),()=>this.setShowBranchComparison(!0),this),ax(this.getQualifiedCommand("setShowBranchComparisonOff"),()=>this.setShowBranchComparison(!1),this),ax(this.getQualifiedCommand("setShowBranchPullRequestOn"),()=>this.setShowBranchPullRequest(!0),this),ax(this.getQualifiedCommand("setShowBranchPullRequestOff"),()=>this.setShowBranchPullRequest(!1),this)]}filterConfigurationChanged(e){return!!(super.filterConfigurationChanged(e)||C.D.changed(e,"defaultDateFormat")||C.D.changed(e,"defaultDateLocale")||C.D.changed(e,"defaultDateShortFormat")||C.D.changed(e,"defaultDateSource")||C.D.changed(e,"defaultDateStyle")||C.D.changed(e,"defaultGravatarsStyle")||C.D.changed(e,"defaultTimeFormat")||C.D.changed(e,"plusFeatures.enabled")||C.D.changed(e,"sortRepositoriesBy"))}async findCommit(e,t){let{repoPath:i}=e,r=await this.container.git.getBranch(e.repoPath);if(null!=r&&(await this.container.git.getCommitBranches(e.repoPath,e.ref,r.name,{commitDate:(0,N.f_)(e)?e.committer.date:void 0})).length)return this.findNode(t=>t.commit?.ref===e.ref,{allowPaging:!0,maxDepth:2,canTraverse:async t=>{if(t instanceof aq){let i=await t.getSplattedChild?.();return i instanceof aG&&(i=await i.getSplattedChild?.())instanceof ou&&await i.loadMore({until:e.ref}),!0}if(t instanceof aG&&t.repoPath===i){let i=await t.getSplattedChild?.();if(i instanceof ou)return await i.loadMore({until:e.ref}),!0}return t instanceof nZ&&t.repoPath===i},token:t})}async revealCommit(e,t){return b.window.withProgress({location:b.ProgressLocation.Notification,title:`Revealing ${(0,F.Wh)(e,{icon:!1,quoted:!0})} in the side bar...`,cancellable:!0},async(i,r)=>{let s=await this.findCommit(e,r);if(null!=s)return await this.ensureRevealNode(s,t),s})}async revealRepository(e,t){let i=await this.findNode(t=>t instanceof nM.v&&t.repoPath===e,{maxDepth:1,canTraverse:e=>e instanceof aq||e instanceof nM.v});return void 0!==i&&await this.reveal(i,t),i}setFilesLayout(e){return C.D.updateEffective(`views.${this.configKey}.files.layout`,e)}async setCommitsFilter(e,t){let i;if(null!=e){if(e.is("repo-folder"))i=e.repo;else{let t=e;do if(t=t.getParent(),t?.is("repo-folder")){i=t.repo;break}while(null!=t)}}if(t){if(null==(i??=await (0,sX.vJ)("Filter Commits","Choose a repository")))return;let e=this.state.filterCommits.get(i.id);if(null==e){let t=await this.container.git.getCurrentUser(i.uri);e=null!=t?[t]:void 0}let r=await (0,ok.J)(this.container,i,"Filter Commits",i.virtual?"Choose a contributor to show commits from":"Choose contributors to show commits from",{appendReposToTitle:!0,clearButton:!0,multiselect:!i.virtual,picked:t=>e?.some(e=>tb.v(t,e))??!1});if(null==r)return;0===r.length?(t=!1,this.state.filterCommits.delete(i.id)):this.state.filterCommits.set(i.id,r)}else null!=i?this.state.filterCommits.delete(i.id):this.state.filterCommits.clear();(0,i4.v)("gitlens:views:commits:filtered",0!==this.state.filterCommits.size),this.refresh(!0)}setShowMergeCommits(e){(0,i4.v)("gitlens:views:commits:hideMergeCommits",!e),this.state.hideMergeCommits=!e,this.refresh(!0)}setShowAvatars(e){return C.D.updateEffective(`views.${this.configKey}.avatars`,e)}setShowBranchComparison(e){return C.D.updateEffective(`views.${this.configKey}.showBranchComparison`,!!e&&"working")}async setShowBranchPullRequest(e){await C.D.updateEffective(`views.${this.configKey}.pullRequests.showForBranches`,e),await C.D.updateEffective(`views.${this.configKey}.pullRequests.enabled`,e)}}aH([(0,t4.H)(()=>"")],aY.prototype,"revealCommit",1),aH([(0,t4.H)(()=>"")],aY.prototype,"revealRepository",1);var aj=Object.defineProperty,aV=Object.getOwnPropertyDescriptor,aQ=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?aV(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&aj(t,i,n),n};class az extends nM.v{async getChildren(){return null==this.child&&(this.child=new o0(this.uri,this.view,this,this.repo)),this.child.getChildren()}async subscribe(){return b.Disposable.from(await super.subscribe(),(0,tf.cL)(e=>this.child?.updateAvatar(e.email)))}changed(e){return e.changed(tP.I6.Config,tP.I6.Heads,tP.I6.Remotes,tP.I6.Unknown,tP.du.Any)}}aQ([(0,eW.fF)()],az.prototype,"subscribe",1);class aK extends nW{async getChildren(){if(null==this.children){let e=this.view.container.git.openRepositories;if(0===e.length)return this.view.message=this.view.container.git.isDiscoveringRepositories?"Loading contributors...":"No contributors could be found.",[];this.view.message=void 0;let t=1===e.length;this.children=e.map(e=>new az(ty.YY.fromRepoPath(e.path),this.view,this,e,t))}if(1===this.children.length){let[e]=this.children,t=await e.getChildren();return 0===t.length?(this.view.message="No contributors could be found.",this.view.title="Contributors",e.ensureSubscription(),[]):(this.view.message=void 0,this.view.title=`Contributors (${t.length})`,t)}return this.view.title="Contributors",this.children}getTreeItem(){return new b.TreeItem("Contributors",b.TreeItemCollapsibleState.Expanded)}}class aJ extends nN._H{configKey="contributors";constructor(e){super(e,"contributors","Contributors","contributorsView")}get canReveal(){return this.config.reveal||!C.D.get("views.repositories.showContributors")}getRoot(){return new aK(this)}registerCommands(){return this.container.viewCommands,[ax(this.getQualifiedCommand("copy"),()=>(0,rg.P0)($.Gh.ViewsCopy,this.activeSelection,this.selection),this),ax(this.getQualifiedCommand("refresh"),()=>(this.container.git.resetCaches("contributors"),this.refresh(!0)),this),ax(this.getQualifiedCommand("setFilesLayoutToAuto"),()=>this.setFilesLayout("auto"),this),ax(this.getQualifiedCommand("setFilesLayoutToList"),()=>this.setFilesLayout("list"),this),ax(this.getQualifiedCommand("setFilesLayoutToTree"),()=>this.setFilesLayout("tree"),this),ax(this.getQualifiedCommand("setShowAllBranchesOn"),()=>this.setShowAllBranches(!0),this),ax(this.getQualifiedCommand("setShowAllBranchesOff"),()=>this.setShowAllBranches(!1),this),ax(this.getQualifiedCommand("setShowAvatarsOn"),()=>this.setShowAvatars(!0),this),ax(this.getQualifiedCommand("setShowAvatarsOff"),()=>this.setShowAvatars(!1),this),ax(this.getQualifiedCommand("setShowStatisticsOn"),()=>this.setShowStatistics(!0),this),ax(this.getQualifiedCommand("setShowStatisticsOff"),()=>this.setShowStatistics(!1),this)]}filterConfigurationChanged(e){return!!(super.filterConfigurationChanged(e)||C.D.changed(e,"defaultDateFormat")||C.D.changed(e,"defaultDateLocale")||C.D.changed(e,"defaultDateShortFormat")||C.D.changed(e,"defaultDateSource")||C.D.changed(e,"defaultDateStyle")||C.D.changed(e,"defaultGravatarsStyle")||C.D.changed(e,"defaultTimeFormat")||C.D.changed(e,"sortContributorsBy")||C.D.changed(e,"sortRepositoriesBy"))}findContributor(e,t){let{repoPath:i,username:r,email:s,name:n}=e;return this.findNode(e=>e instanceof oI&&e.contributor.username===r&&e.contributor.email===s&&e.contributor.name===n,{maxDepth:2,canTraverse:e=>e instanceof aK||e instanceof az&&e.repoPath===i,token:t})}async revealRepository(e,t){let i=await this.findNode(t=>t instanceof nM.v&&t.repoPath===e,{maxDepth:1,canTraverse:e=>e instanceof aK||e instanceof nM.v});return void 0!==i&&await this.reveal(i,t),i}async revealContributor(e,t){return b.window.withProgress({location:b.ProgressLocation.Notification,title:`Revealing contributor '${e.name}' in the side bar...`,cancellable:!0},async(i,r)=>{let s=await this.findContributor(e,r);if(null!=s)return await this.ensureRevealNode(s,t),s})}setFilesLayout(e){return C.D.updateEffective(`views.${this.configKey}.files.layout`,e)}setShowAllBranches(e){return C.D.updateEffective(`views.${this.configKey}.showAllBranches`,e)}setShowAvatars(e){return C.D.updateEffective(`views.${this.configKey}.avatars`,e)}setShowStatistics(e){return C.D.updateEffective(`views.${this.configKey}.showStatistics`,e)}}aQ([(0,t4.H)(()=>"")],aJ.prototype,"revealRepository",1),aQ([(0,t4.H)(()=>"")],aJ.prototype,"revealContributor",1);var aZ=i(9679);class aX extends sJ.Re{constructor(e,t,i,r){super("draft",e,t,i),this.parent=i,this.draft=r,this.updateContext({draft:r}),this._uniqueId=(0,sJ.tO)(this.type,this.context)}get id(){return this._uniqueId}toClipboard(){return this.draft.title??this.draft.description??""}getChildren(){return[]}getTreeItem(){let e=this.draft.title??`Draft (${this.draft.id})`,t=new b.TreeItem(e,b.TreeItemCollapsibleState.None),i=C.D.get("defaultDateFormat")??"MMMM Do, YYYY h:mma",r=this.draft.updatedAt.getTime()-this.draft.createdAt.getTime()>=1e3;return t.id=this.id,t.contextValue=sJ.Td.Draft,t.iconPath=new b.ThemeIcon("cloud"),t.tooltip=new b.MarkdownString(`${e}${this.draft.description?`\\
${this.draft.description}`:""}

Created ${(0,ev.Zh)(this.draft.createdAt)} &nbsp; _(${(0,ev.p6)(this.draft.createdAt,i)})_${r?` \\
Last updated ${(0,ev.Zh)(this.draft.updatedAt)} &nbsp; _(${(0,ev.p6)(this.draft.updatedAt,i)})_`:""}`),t.description=(0,ev.Zh)(this.draft.updatedAt),t.command={title:"Show Patch",command:this.view.getQualifiedCommand("open"),arguments:[this]},t}}var a0=Object.defineProperty,a1=Object.getOwnPropertyDescriptor;class a2 extends nL.y{constructor(e){super("drafts",ty.Wj,e)}async getChildren(){if(null==this.children){let e=[];try{let t=await this.view.container.drafts.getDrafts();for(let i of(t.sort((e,t)=>t.createdAt.getTime()-e.createdAt.getTime()),t))e.push(new aX(this.uri,this.view,this,i))}catch(e){if(!(e instanceof ru.TZ))throw e}this.children=e}return this.children}getTreeItem(){return new b.TreeItem("Drafts",b.TreeItemCollapsibleState.Expanded)}}class a4 extends nN._H{configKey="drafts";_disposable;constructor(e){super(e,"drafts","Cloud Patches","draftsView"),this.description=`PREVIEW\xa0\xA0\u2601\uFE0F`}dispose(){this._disposable?.dispose(),super.dispose()}get canSelectMany(){return!1}getRoot(){return new a2(this)}async show(e){if(await (0,rZ.C)())return super.show(e)}get canReveal(){return!1}registerCommands(){return this.container.viewCommands,[ax(this.getQualifiedCommand("copy"),()=>(0,rg.P0)($.Gh.ViewsCopy,this.activeSelection,this.selection),this),ax(this.getQualifiedCommand("refresh"),()=>this.refresh(!0),this),ax(this.getQualifiedCommand("create"),async()=>{await (0,rg.P0)($.Gh.CreateCloudPatch),this.ensureRoot().triggerChange(!0)},this),ax(this.getQualifiedCommand("delete"),async e=>{let t={title:"Delete"};await b.window.showInformationMessage(`Are you sure you want to delete Cloud Patch '${e.draft.title}'?`,{modal:!0},t,{title:"Cancel",isCloseAffordance:!0})===t&&(await this.container.drafts.deleteDraft(e.draft.id),e.getParent()?.triggerChange(!0))},this),ax(this.getQualifiedCommand("open"),async e=>{let t=e.draft;null==t.changesets&&(t=await this.container.drafts.getDraft(e.draft.id)),(0,aZ.l)({mode:"view",draft:t})},this)]}async findDraft(e,t){return this.findNode(t=>t.draft?.id===e.id,{allowPaging:!1,maxDepth:2,canTraverse:e=>e instanceof a2,token:t})}async revealDraft(e,t){let i=await this.findDraft(e);if(null!=i)return await this.ensureRevealNode(i,t),i}}((e,t,i,r)=>{for(var s,n=r>1?void 0:r?a1(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&a0(t,i,n)})([(0,t4.H)(()=>"")],a4.prototype,"revealDraft",1);let a5=" (pinned)";class a6 extends nN._H{configKey="fileHistory";_followCursor=!1;_followEditor=!0;constructor(e){super(e,"fileHistory","File History","fileHistoryView"),(0,i4.v)("gitlens:views:fileHistory:cursorFollowing",this._followCursor),(0,i4.v)("gitlens:views:fileHistory:editorFollowing",this._followEditor)}get showCollapseAll(){return!1}getRoot(){return this._followCursor?new oG(this):new oO(this)}registerCommands(){return this.container.viewCommands,[ax(this.getQualifiedCommand("copy"),()=>(0,rg.P0)($.Gh.ViewsCopy,this.activeSelection,this.selection),this),ax(this.getQualifiedCommand("refresh"),()=>this.refresh(!0),this),ax(this.getQualifiedCommand("changeBase"),()=>this.changeBase(),this),ax(this.getQualifiedCommand("setCursorFollowingOn"),()=>this.setCursorFollowing(!0),this),ax(this.getQualifiedCommand("setCursorFollowingOff"),()=>this.setCursorFollowing(!1),this),ax(this.getQualifiedCommand("setEditorFollowingOn"),()=>this.setEditorFollowing(!0),this),ax(this.getQualifiedCommand("setEditorFollowingOff"),()=>this.setEditorFollowing(!1),this),ax(this.getQualifiedCommand("setRenameFollowingOn"),()=>this.setRenameFollowing(!0),this),ax(this.getQualifiedCommand("setRenameFollowingOff"),()=>this.setRenameFollowing(!1),this),ax(this.getQualifiedCommand("setShowAllBranchesOn"),()=>this.setShowAllBranches(!0),this),ax(this.getQualifiedCommand("setShowAllBranchesOff"),()=>this.setShowAllBranches(!1),this),ax(this.getQualifiedCommand("setShowMergeCommitsOn"),()=>this.setShowMergeCommits(!0),this),ax(this.getQualifiedCommand("setShowMergeCommitsOff"),()=>this.setShowMergeCommits(!1),this),ax(this.getQualifiedCommand("setShowAvatarsOn"),()=>this.setShowAvatars(!0),this),ax(this.getQualifiedCommand("setShowAvatarsOff"),()=>this.setShowAvatars(!1),this)]}filterConfigurationChanged(e){return!!(super.filterConfigurationChanged(e)||C.D.changed(e,"defaultDateFormat")||C.D.changed(e,"defaultDateLocale")||C.D.changed(e,"defaultDateShortFormat")||C.D.changed(e,"defaultDateSource")||C.D.changed(e,"defaultDateStyle")||C.D.changed(e,"defaultGravatarsStyle")||C.D.changed(e,"defaultTimeFormat")||C.D.changed(e,"advanced.fileHistoryFollowsRenames")||C.D.changed(e,"advanced.fileHistoryShowAllBranches")||C.D.changed(e,"advanced.fileHistoryShowMergeCommits"))}async showHistoryForUri(e){this.setCursorFollowing(!1);let t=this.ensureRoot(!0);return t instanceof oO&&(await t.showHistoryForUri(e),this.setEditorFollowing(!1)),this.show()}changeBase(){this.root?.changeBase()}setCursorFollowing(e){let t=!this._followEditor&&this.root?.hasUri?this.root.uri:void 0;this._followCursor=e,(0,i4.v)("gitlens:views:fileHistory:cursorFollowing",e),this.title=this._followCursor?"Line History":"File History";let i=this.ensureRoot(!0);null!=t&&i.setUri(t),i.setEditorFollowing(this._followEditor),i.ensureSubscription(),this.refresh(!0)}setEditorFollowing(e){let t=this.ensureRoot();t.hasUri&&(this._followEditor=e,(0,i4.v)("gitlens:views:fileHistory:editorFollowing",e),t.setEditorFollowing(e),this.description?.endsWith(a5)?e&&(this.description=this.description.substr(0,this.description.length-a5.length)):e||null==this.description||(this.description+=a5),e&&(t.ensureSubscription(),this.refresh(!0)))}setRenameFollowing(e){return C.D.updateEffective("advanced.fileHistoryFollowsRenames",e)}setShowAllBranches(e){return C.D.updateEffective("advanced.fileHistoryShowAllBranches",e)}setShowMergeCommits(e){return C.D.updateEffective("advanced.fileHistoryShowMergeCommits",e)}setShowAvatars(e){return C.D.updateEffective(`views.${this.configKey}.avatars`,e)}}let a3=" (pinned)";class a8 extends nN._H{configKey="lineHistory";constructor(e){super(e,"lineHistory","Line History","lineHistoryView"),(0,i4.v)("gitlens:views:lineHistory:editorFollowing",!0)}get showCollapseAll(){return!1}getRoot(){return new oG(this)}registerCommands(){return this.container.viewCommands,[ax(this.getQualifiedCommand("copy"),()=>(0,rg.P0)($.Gh.ViewsCopy,this.activeSelection,this.selection),this),ax(this.getQualifiedCommand("refresh"),()=>this.refresh(!0),this),ax(this.getQualifiedCommand("changeBase"),()=>this.changeBase(),this),ax(this.getQualifiedCommand("setEditorFollowingOn"),()=>this.setEditorFollowing(!0),this),ax(this.getQualifiedCommand("setEditorFollowingOff"),()=>this.setEditorFollowing(!1),this),ax(this.getQualifiedCommand("setShowAvatarsOn"),()=>this.setShowAvatars(!0),this),ax(this.getQualifiedCommand("setShowAvatarsOff"),()=>this.setShowAvatars(!1),this)]}filterConfigurationChanged(e){return!!(super.filterConfigurationChanged(e)||C.D.changed(e,"defaultDateFormat")||C.D.changed(e,"defaultDateLocale")||C.D.changed(e,"defaultDateShortFormat")||C.D.changed(e,"defaultDateSource")||C.D.changed(e,"defaultDateStyle")||C.D.changed(e,"defaultGravatarsStyle")||C.D.changed(e,"defaultTimeFormat"))}changeBase(){this.root?.changeBase()}setEditorFollowing(e){let t=this.ensureRoot();t.hasUri&&((0,i4.v)("gitlens:views:lineHistory:editorFollowing",e),this.root?.setEditorFollowing(e),this.description?.endsWith(a3)?e&&(this.description=this.description.substr(0,this.description.length-a3.length)):e||null==this.description||(this.description+=a3),e&&(t.ensureSubscription(),this.refresh(!0)))}setShowAvatars(e){return C.D.updateEffective(`views.${this.configKey}.avatars`,e)}}var a9=Object.defineProperty,a7=Object.getOwnPropertyDescriptor,le=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?a7(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&a9(t,i,n),n};class lt extends nM.v{async getChildren(){return null==this.child&&(this.child=new ae(this.uri,this.view,this,this.repo)),this.child.getChildren()}changed(e){return e.changed(tP.I6.Config,tP.I6.Remotes,tP.I6.RemoteProviders,tP.I6.Unknown,tP.du.Any)}}class li extends nW{async getChildren(){if(null==this.children){let e=this.view.container.git.openRepositories;if(0===e.length)return this.view.message=this.view.container.git.isDiscoveringRepositories?"Loading remotes...":"No remotes could be found.",[];this.view.message=void 0;let t=1===e.length;this.children=e.map(e=>new lt(ty.YY.fromRepoPath(e.path),this.view,this,e,t))}if(1===this.children.length){let[e]=this.children,t=await e.repo.getRemotes();return 0===t.length?(this.view.message="No remotes could be found.",this.view.title="Remotes",e.ensureSubscription(),[]):(this.view.message=void 0,this.view.title=`Remotes (${t.length})`,e.getChildren())}return this.view.title="Remotes",this.children}getTreeItem(){return new b.TreeItem("Remotes",b.TreeItemCollapsibleState.Expanded)}}class lr extends nN._H{configKey="remotes";constructor(e){super(e,"remotes","Remotes","remotesView")}get canReveal(){return this.config.reveal||!C.D.get("views.repositories.showRemotes")}getRoot(){return new li(this)}registerCommands(){return this.container.viewCommands,[ax(this.getQualifiedCommand("copy"),()=>(0,rg.P0)($.Gh.ViewsCopy,this.activeSelection,this.selection),this),ax(this.getQualifiedCommand("refresh"),()=>(this.container.git.resetCaches("branches","remotes"),this.refresh(!0)),this),ax(this.getQualifiedCommand("setLayoutToList"),()=>this.setLayout("list"),this),ax(this.getQualifiedCommand("setLayoutToTree"),()=>this.setLayout("tree"),this),ax(this.getQualifiedCommand("setFilesLayoutToAuto"),()=>this.setFilesLayout("auto"),this),ax(this.getQualifiedCommand("setFilesLayoutToList"),()=>this.setFilesLayout("list"),this),ax(this.getQualifiedCommand("setFilesLayoutToTree"),()=>this.setFilesLayout("tree"),this),ax(this.getQualifiedCommand("setShowAvatarsOn"),()=>this.setShowAvatars(!0),this),ax(this.getQualifiedCommand("setShowAvatarsOff"),()=>this.setShowAvatars(!1),this),ax(this.getQualifiedCommand("setShowBranchPullRequestOn"),()=>this.setShowBranchPullRequest(!0),this),ax(this.getQualifiedCommand("setShowBranchPullRequestOff"),()=>this.setShowBranchPullRequest(!1),this)]}filterConfigurationChanged(e){return!!(super.filterConfigurationChanged(e)||C.D.changed(e,"defaultDateFormat")||C.D.changed(e,"defaultDateLocale")||C.D.changed(e,"defaultDateShortFormat")||C.D.changed(e,"defaultDateSource")||C.D.changed(e,"defaultDateStyle")||C.D.changed(e,"defaultGravatarsStyle")||C.D.changed(e,"defaultTimeFormat")||C.D.changed(e,"integrations.enabled")||C.D.changed(e,"sortBranchesBy")||C.D.changed(e,"sortRepositoriesBy"))}findBranch(e,t){if(!e.remote)return;let{repoPath:i}=e;return this.findNode(t=>t.branch?.ref===e.ref,{allowPaging:!0,maxDepth:5,canTraverse:t=>t instanceof li||(t instanceof lt||t instanceof od?t.repoPath===i:t instanceof oK&&t.repoPath===i&&t.remote.name===(0,T.Lo)(e.name)),token:t})}async findCommit(e,t){let{repoPath:i}=e,r=await this.container.git.getCommitBranches(e.repoPath,e.ref,void 0,(0,N.f_)(e)?{commitDate:e.committer.date,remotes:!0}:{remotes:!0});if(0===r.length)return;let s=r.map(e=>e.split("/",1)[0]);return this.findNode(t=>t.commit?.ref===e.ref,{allowPaging:!0,maxDepth:6,canTraverse:e=>e instanceof li||(e instanceof lt||e instanceof od?e.repoPath===i:e instanceof oK?e.repoPath===i&&s.includes(e.remote.name):e instanceof ou?e.repoPath===i&&r.includes(e.branch.name):(e instanceof ak||e instanceof ae||e instanceof od)&&e.repoPath===i),token:t})}findRemote(e,t){let{repoPath:i}=e;return this.findNode(t=>t.remote?.name===e.name,{allowPaging:!0,maxDepth:2,canTraverse:e=>e instanceof li||e instanceof lt&&e.repoPath===i,token:t})}revealBranch(e,t){return b.window.withProgress({location:b.ProgressLocation.Notification,title:`Revealing ${(0,F.Wh)(e,{icon:!1,quoted:!0})} in the side bar...`,cancellable:!0},async(i,r)=>{let s=await this.findBranch(e,r);if(null!=s)return await this.ensureRevealNode(s,t),s})}async revealCommit(e,t){return b.window.withProgress({location:b.ProgressLocation.Notification,title:`Revealing ${(0,F.Wh)(e,{icon:!1,quoted:!0})} in the side bar...`,cancellable:!0},async(i,r)=>{let s=await this.findCommit(e,r);if(null!=s)return await this.ensureRevealNode(s,t),s})}revealRemote(e,t){return b.window.withProgress({location:b.ProgressLocation.Notification,title:`Revealing remote '${e.name}' in the side bar...`,cancellable:!0},async(i,r)=>{let s=await this.findRemote(e,r);if(null!=s)return await this.ensureRevealNode(s,t),s})}async revealRepository(e,t){let i=await this.findNode(t=>t instanceof nM.v&&t.repoPath===e,{maxDepth:1,canTraverse:e=>e instanceof li||e instanceof nM.v});return void 0!==i&&await this.reveal(i,t),i}setLayout(e){return C.D.updateEffective(`views.${this.configKey}.branches.layout`,e)}setFilesLayout(e){return C.D.updateEffective(`views.${this.configKey}.files.layout`,e)}setShowAvatars(e){return C.D.updateEffective(`views.${this.configKey}.avatars`,e)}async setShowBranchPullRequest(e){await C.D.updateEffective(`views.${this.configKey}.pullRequests.showForBranches`,e),await C.D.updateEffective(`views.${this.configKey}.pullRequests.enabled`,e)}}le([(0,t4.H)(()=>"")],lr.prototype,"revealBranch",1),le([(0,t4.H)(()=>"")],lr.prototype,"revealCommit",1),le([(0,t4.H)(()=>"")],lr.prototype,"revealRemote",1),le([(0,t4.H)(()=>"")],lr.prototype,"revealRepository",1);var ls=Object.defineProperty,ln=Object.getOwnPropertyDescriptor,lo=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?ln(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&ls(t,i,n),n};class la extends nE.C{constructor(e){super("repositories",ty.Wj,e)}getChildren(){if(null==this.children){let e=this.view.container.git.openRepositories;if(0===e.length)return[new nV.AE(this.view,this,"No repositories could be found.")];this.children=e.map(e=>new ak(ty.YY.fromRepoPath(e.path),this.view,this,e))}return this.children}getTreeItem(){let e="workspaces"===this.view.type,t=e&&null!=this.view.container.workspaces.currentWorkspaceId,i=t&&null!=this.view.container.workspaces.currentWorkspace,r=new b.TreeItem(e?"Current Window":"Repositories",e?b.TreeItemCollapsibleState.Collapsed:b.TreeItemCollapsibleState.Expanded);e&&(r.description=b.workspace.name??b.workspace.workspaceFolders?.[0]?.name??"");let s=sJ.Td.Repositories;return e&&(s+="+workspaces"),t&&(s+="+linked"),i&&(s+="+current",r.resourceUri=b.Uri.parse("gitlens-view://workspaces/workspace/current")),r.contextValue=s,r}async refresh(e=!1){let t=null!=this.children;if(super.refresh(e),!t)return;if(e){await this.unsubscribe(),this.ensureSubscription();return}let i=this.view.container.git.openRepositories;if(0===i.length&&(null==this.children||0===this.children.length))return;if(0===i.length){this.children=[new nV.AE(this.view,this,"No repositories could be found.")];return}let r=[];for(let e of i){let t=e.id,i=this.children.find(e=>e.repo.id===t);null!=i?(r.push(i),i.refresh()):r.push(new ak(ty.YY.fromRepoPath(e.path),this.view,this,e))}this.children=r,this.ensureSubscription()}subscribe(){let e=[(0,iV.D$)(this.view.container.git.onDidChangeRepositories,this.onRepositoriesChanged,this)];return"gitlens.views.repositories"===this.view.id&&this.view.config.autoReveal&&e.push((0,iV.D$)(b.window.onDidChangeActiveTextEditor,(0,t5.Ds)(this.onActiveEditorChanged,500),this)),b.Disposable.from(...e)}etag(){return(0,t5.NX)(this.view.container.git.etag,this.view.container.subscription.etag)}onActiveEditorChanged(e){if(null!=e&&null!=this.children&&1!==this.children.length)try{let t=e.document.uri,i=this.children.find(e=>e instanceof ak&&e.repo.containsUri(t));if(null==i)return;let r=0===this.view.selection.length?void 0:this.view.selection[0];for(;null!=r;){if(r===i)return;r=r.getParent()}this.view.reveal(i,{expand:!0})}catch(e){eL.Yd.error(e)}}onRepositoriesChanged(e){this.triggerChange(!0)}}lo([(0,t4.H)(),(0,eW.fF)()],la.prototype,"refresh",1),lo([(0,eW.fF)()],la.prototype,"subscribe",1),lo([(0,eW.fF)({args:!1})],la.prototype,"onActiveEditorChanged",1),lo([(0,eW.fF)()],la.prototype,"onRepositoriesChanged",1);var ll=Object.defineProperty,lh=Object.getOwnPropertyDescriptor,lc=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?lh(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&ll(t,i,n),n};class lu extends nN._H{configKey="repositories";constructor(e){super(e,"repositories","Repositories","repositoriesView")}_onDidChangeAutoRefresh=new b.EventEmitter;get onDidChangeAutoRefresh(){return this._onDidChangeAutoRefresh.event}get canSelectMany(){return!1}getRoot(){return new la(this)}registerCommands(){return this.container.viewCommands,[ax(this.getQualifiedCommand("copy"),()=>(0,rg.P0)($.Gh.ViewsCopy,this.activeSelection,this.selection),this),ax(this.getQualifiedCommand("refresh"),()=>(this.container.git.resetCaches("branches","contributors","remotes","stashes","status","tags"),this.refresh(!0)),this),ax(this.getQualifiedCommand("setBranchesLayoutToList"),()=>this.setBranchesLayout("list"),this),ax(this.getQualifiedCommand("setBranchesLayoutToTree"),()=>this.setBranchesLayout("tree"),this),ax(this.getQualifiedCommand("setFilesLayoutToAuto"),()=>this.setFilesLayout("auto"),this),ax(this.getQualifiedCommand("setFilesLayoutToList"),()=>this.setFilesLayout("list"),this),ax(this.getQualifiedCommand("setFilesLayoutToTree"),()=>this.setFilesLayout("tree"),this),ax(this.getQualifiedCommand("setAutoRefreshToOn"),()=>this.setAutoRefresh(C.D.get("views.repositories.autoRefresh"),!0),this),ax(this.getQualifiedCommand("setAutoRefreshToOff"),()=>this.setAutoRefresh(C.D.get("views.repositories.autoRefresh"),!1),this),ax(this.getQualifiedCommand("setShowAvatarsOn"),()=>this.setShowAvatars(!0),this),ax(this.getQualifiedCommand("setShowAvatarsOff"),()=>this.setShowAvatars(!1),this),ax(this.getQualifiedCommand("setShowBranchComparisonOn"),()=>this.setShowBranchComparison(!0),this),ax(this.getQualifiedCommand("setShowBranchComparisonOff"),()=>this.setShowBranchComparison(!1),this),ax(this.getQualifiedCommand("setBranchesShowBranchComparisonOn"),()=>this.setBranchShowBranchComparison(!0),this),ax(this.getQualifiedCommand("setBranchesShowBranchComparisonOff"),()=>this.setBranchShowBranchComparison(!1),this),ax(this.getQualifiedCommand("setShowBranchesOn"),()=>this.toggleSection("showBranches",!0),this),ax(this.getQualifiedCommand("setShowBranchesOff"),()=>this.toggleSection("showBranches",!1),this),ax(this.getQualifiedCommand("setShowCommitsOn"),()=>this.toggleSection("showCommits",!0),this),ax(this.getQualifiedCommand("setShowCommitsOff"),()=>this.toggleSection("showCommits",!1),this),ax(this.getQualifiedCommand("setShowContributorsOn"),()=>this.toggleSection("showContributors",!0),this),ax(this.getQualifiedCommand("setShowContributorsOff"),()=>this.toggleSection("showContributors",!1),this),ax(this.getQualifiedCommand("setShowRemotesOn"),()=>this.toggleSection("showRemotes",!0),this),ax(this.getQualifiedCommand("setShowRemotesOff"),()=>this.toggleSection("showRemotes",!1),this),ax(this.getQualifiedCommand("setShowStashesOn"),()=>this.toggleSection("showStashes",!0),this),ax(this.getQualifiedCommand("setShowStashesOff"),()=>this.toggleSection("showStashes",!1),this),ax(this.getQualifiedCommand("setShowTagsOn"),()=>this.toggleSection("showTags",!0),this),ax(this.getQualifiedCommand("setShowTagsOff"),()=>this.toggleSection("showTags",!1),this),ax(this.getQualifiedCommand("setShowWorktreesOn"),()=>this.toggleSection("showWorktrees",!0),this),ax(this.getQualifiedCommand("setShowWorktreesOff"),()=>this.toggleSection("showWorktrees",!1),this),ax(this.getQualifiedCommand("setShowUpstreamStatusOn"),()=>this.toggleSection("showUpstreamStatus",!0),this),ax(this.getQualifiedCommand("setShowUpstreamStatusOff"),()=>this.toggleSection("showUpstreamStatus",!1),this),ax(this.getQualifiedCommand("setShowSectionOff"),e=>this.toggleSectionByNode(e,!1),this)]}filterConfigurationChanged(e){return!!(super.filterConfigurationChanged(e)||C.D.changed(e,"defaultDateFormat")||C.D.changed(e,"defaultDateLocale")||C.D.changed(e,"defaultDateShortFormat")||C.D.changed(e,"defaultDateSource")||C.D.changed(e,"defaultDateStyle")||C.D.changed(e,"defaultGravatarsStyle")||C.D.changed(e,"defaultTimeFormat")||C.D.changed(e,"sortBranchesBy")||C.D.changed(e,"sortContributorsBy")||C.D.changed(e,"sortTagsBy")||C.D.changed(e,"sortRepositoriesBy"))}onConfigurationChanged(e){C.D.changed(e,`views.${this.configKey}.autoRefresh`)&&this.setAutoRefresh(C.D.get("views.repositories.autoRefresh")),super.onConfigurationChanged(e)}get autoRefresh(){return this.config.autoRefresh&&this.container.storage.getWorkspace("views:repositories:autoRefresh",!0)}findBranch(e,t){let{repoPath:i}=e;return e.remote?this.findNode(t=>t.branch?.ref===e.ref,{allowPaging:!0,maxDepth:6,canTraverse:t=>t instanceof la||(t instanceof oK?t.repoPath===i&&e.remote&&t.remote.name===(0,T.Lo)(e.name):(t instanceof ak||t instanceof om||t instanceof ae||t instanceof od)&&t.repoPath===i),token:t}):this.findNode(t=>t.branch?.ref===e.ref,{allowPaging:!0,maxDepth:5,canTraverse:e=>e instanceof la||(e instanceof ak||e instanceof om||e instanceof od)&&e.repoPath===i,token:t})}async findCommit(e,t){let{repoPath:i}=e,r=await this.container.git.getCommitBranches(e.repoPath,e.ref,void 0,(0,N.f_)(e)?{commitDate:e.committer.date}:void 0);if(0!==r.length)return this.findNode(t=>t.commit?.ref===e.ref,{allowPaging:!0,maxDepth:6,canTraverse:async t=>t instanceof la||(t instanceof ak||t instanceof om||t instanceof od?t.repoPath===i:!!(t instanceof ou&&t.repoPath===i&&r.includes(t.branch.name))&&(await t.loadMore({until:e.ref}),!0)),token:t});if(0===(r=await this.container.git.getCommitBranches(e.repoPath,e.ref,void 0,(0,N.f_)(e)?{commitDate:e.committer.date,remotes:!0}:{remotes:!0})).length)return;let s=r.map(e=>e.split("/",1)[0]);return this.findNode(t=>t.commit?.ref===e.ref,{allowPaging:!0,maxDepth:8,canTraverse:e=>e instanceof la||(e instanceof oK?e.repoPath===i&&s.includes(e.remote.name):e instanceof ou?e.repoPath===i&&r.includes(e.branch.name):(e instanceof ak||e instanceof ae||e instanceof od)&&e.repoPath===i),token:t})}findContributor(e,t){let{repoPath:i,username:r,email:s,name:n}=e;return this.findNode(e=>e instanceof oI&&e.contributor.username===r&&e.contributor.email===s&&e.contributor.name===n,{maxDepth:2,canTraverse:e=>e instanceof la||(e instanceof ak||e instanceof o0)&&e.repoPath===i,token:t})}findRemote(e,t){let{repoPath:i}=e;return this.findNode(t=>t.remote?.name===e.name,{allowPaging:!0,maxDepth:2,canTraverse:e=>e instanceof la||(e instanceof ak||e instanceof ae)&&e.repoPath===i,token:t})}findStash(e,t){let{repoPath:i}=e;return this.findNode(t=>t.commit?.ref===e.ref,{maxDepth:3,canTraverse:e=>e instanceof la||(e instanceof ak||e instanceof as)&&e.repoPath===i,token:t})}findTag(e,t){let{repoPath:i}=e;return this.findNode(t=>t.tag?.ref===e.ref,{allowPaging:!0,maxDepth:5,canTraverse:e=>e instanceof la||(e instanceof ak||e instanceof ad||e instanceof od)&&e.repoPath===i,token:t})}findWorktree(e,t){let{repoPath:i,uri:r}=e,s=r.toString();return this.findNode(t=>t instanceof av&&e.uri.toString()===s,{maxDepth:2,canTraverse:e=>e instanceof la||(e instanceof ak||e instanceof aC)&&e.repoPath===i,token:t})}revealBranch(e,t){return b.window.withProgress({location:b.ProgressLocation.Notification,title:`Revealing ${(0,F.Wh)(e,{icon:!1,quoted:!0})} in the Repositories view...`,cancellable:!0},async(i,r)=>{let s=await this.findBranch(e,r);if(null!=s)return await this.ensureRevealNode(s,t),s})}async revealBranches(e,t){let i=await this.findNode(t=>t instanceof om&&t.repoPath===e,{maxDepth:2,canTraverse:t=>t instanceof la||t instanceof ak&&t.repoPath===e});return void 0!==i&&await this.reveal(i,t),i}async revealCommit(e,t){return b.window.withProgress({location:b.ProgressLocation.Notification,title:`Revealing ${(0,F.Wh)(e,{icon:!1,quoted:!0})} in the Repositories view...`,cancellable:!0},async(i,r)=>{let s=await this.findCommit(e,r);if(null!=s)return await this.ensureRevealNode(s,t),s})}async revealContributor(e,t){return b.window.withProgress({location:b.ProgressLocation.Notification,title:`Revealing contributor '${e.name} in the Repositories view...`,cancellable:!0},async(i,r)=>{let s=await this.findContributor(e,r);if(null!=s)return await this.ensureRevealNode(s,t),s})}revealRemote(e,t){return b.window.withProgress({location:b.ProgressLocation.Notification,title:`Revealing remote '${e.name}' in the side bar...`,cancellable:!0},async(i,r)=>{let s=await this.findRemote(e,r);if(null!=s)return await this.ensureRevealNode(s,t),s})}async revealRepository(e,t){let i=await this.findNode(t=>t instanceof ak&&t.repoPath===e,{maxDepth:1,canTraverse:e=>e instanceof la});return void 0!==i&&await this.reveal(i,t),i}async revealStash(e,t){return b.window.withProgress({location:b.ProgressLocation.Notification,title:`Revealing ${(0,F.Wh)(e,{icon:!1,quoted:!0})} in the Repositories view...`,cancellable:!0},async(i,r)=>{let s=await this.findStash(e,r);return void 0!==s&&await this.reveal(s,t),s})}async revealStashes(e,t){let i=await this.findNode(t=>t instanceof as&&t.repoPath===e,{maxDepth:2,canTraverse:t=>t instanceof la||t instanceof ak&&t.repoPath===e});return void 0!==i&&await this.reveal(i,t),i}revealTag(e,t){return b.window.withProgress({location:b.ProgressLocation.Notification,title:`Revealing ${(0,F.Wh)(e,{icon:!1,quoted:!0})} in the Repositories view...`,cancellable:!0},async(i,r)=>{let s=await this.findTag(e,r);if(null!=s)return await this.ensureRevealNode(s,t),s})}async revealTags(e,t){let i=await this.findNode(t=>t instanceof ad&&t.repoPath===e,{maxDepth:2,canTraverse:t=>t instanceof la||t instanceof ak&&t.repoPath===e});return void 0!==i&&await this.reveal(i,t),i}revealWorktree(e,t){return b.window.withProgress({location:b.ProgressLocation.Notification,title:`Revealing worktree '${e.name}' in the side bar...`,cancellable:!0},async(i,r)=>{let s=await this.findWorktree(e,r);if(null!=s)return await this.ensureRevealNode(s,t),s})}async revealWorktrees(e,t){let i=await this.findNode(t=>t instanceof aC&&t.repoPath===e,{maxDepth:2,canTraverse:t=>t instanceof la||t instanceof ak&&t.repoPath===e});return void 0!==i&&await this.reveal(i,t),i}async setAutoRefresh(e,t){e&&(void 0===t?t=this.container.storage.getWorkspace("views:repositories:autoRefresh",!0):await this.container.storage.storeWorkspace("views:repositories:autoRefresh",t)),(0,i4.v)("gitlens:views:repositories:autoRefresh",e&&t),this._onDidChangeAutoRefresh.fire()}setBranchesLayout(e){return C.D.updateEffective(`views.${this.configKey}.branches.layout`,e)}setFilesLayout(e){return C.D.updateEffective(`views.${this.configKey}.files.layout`,e)}setShowAvatars(e){return C.D.updateEffective(`views.${this.configKey}.avatars`,e)}setShowBranchComparison(e){return C.D.updateEffective(`views.${this.configKey}.showBranchComparison`,!!e&&"working")}setBranchShowBranchComparison(e){return C.D.updateEffective(`views.${this.configKey}.branches.showBranchComparison`,!!e&&"branch")}toggleSection(e,t){return C.D.updateEffective(`views.${this.configKey}.${e}`,t)}toggleSectionByNode(e,t){return e instanceof om?C.D.updateEffective(`views.${this.configKey}.showBranches`,t):e instanceof ou?C.D.updateEffective(`views.${this.configKey}.showCommits`,t):e instanceof nZ?C.D.updateEffective(`views.${this.configKey}.showUpstreamStatus`,t):e instanceof n8?this.setShowBranchComparison(t):e instanceof o0?C.D.updateEffective(`views.${this.configKey}.showContributors`,t):e instanceof o8?C.D.updateEffective(`views.${this.configKey}.showIncomingActivity`,t):e instanceof ae?C.D.updateEffective(`views.${this.configKey}.showRemotes`,t):e instanceof as?C.D.updateEffective(`views.${this.configKey}.showStashes`,t):e instanceof ad?C.D.updateEffective(`views.${this.configKey}.showTags`,t):e instanceof aC?C.D.updateEffective(`views.${this.configKey}.showWorktrees`,t):Promise.resolve()}}lc([(0,t4.H)(()=>"")],lu.prototype,"revealBranch",1),lc([(0,t4.H)(()=>"")],lu.prototype,"revealBranches",1),lc([(0,t4.H)(()=>"")],lu.prototype,"revealCommit",1),lc([(0,t4.H)(()=>"")],lu.prototype,"revealContributor",1),lc([(0,t4.H)(()=>"")],lu.prototype,"revealRemote",1),lc([(0,t4.H)(()=>"")],lu.prototype,"revealRepository",1),lc([(0,t4.H)(()=>"")],lu.prototype,"revealStash",1),lc([(0,t4.H)(()=>"")],lu.prototype,"revealStashes",1),lc([(0,t4.H)(()=>"")],lu.prototype,"revealTag",1),lc([(0,t4.H)(()=>"")],lu.prototype,"revealTags",1),lc([(0,t4.H)(()=>"")],lu.prototype,"revealWorktree",1),lc([(0,t4.H)(()=>"")],lu.prototype,"revealWorktrees",1);class ld extends sJ.Re{constructor(e,t,i){super("compare-picker",ty.Wj,e,t),this.selectedRef=i}order=Date.now();getChildren(){return[]}getTreeItem(){let e,t;let i=this.selectedRef,r=i?.repoPath;if(void 0!==r&&this.view.container.git.repositoryCount>1){let t=this.view.container.git.getRepository(r);e=t?.formattedName??r}return null==i?((t=new b.TreeItem("Compare <branch, tag, or ref> with <branch, tag, or ref>",b.TreeItemCollapsibleState.None)).contextValue=sJ.Td.ComparePicker,t.description=e,t.tooltip=`Click to select or enter a reference for compare${$.NE.Ellipsis}`,t.command={title:`Compare${$.NE.Ellipsis}`,command:this.view.getQualifiedCommand("selectForCompare")}):((t=new b.TreeItem(`Compare ${i.label} with <branch, tag, or ref>`,b.TreeItemCollapsibleState.None)).contextValue=sJ.Td.ComparePickerWithRef,t.description=e,t.tooltip=`Click to compare ${i.label} with${$.NE.Ellipsis}`,t.command={title:`Compare ${i.label} with${$.NE.Ellipsis}`,command:this.view.getQualifiedCommand("compareWithSelected")}),t}}var lp=i(4655),lg=Object.defineProperty,lm=Object.getOwnPropertyDescriptor,lf=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?lm(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&lg(t,i,n),n};class lw extends sJ.Re{splatted=!0;comparePicker;constructor(e){super("search-compare",ty.Wj,e)}dispose(){(0,nN.Qu)(this._children)}_children;get children(){if(null==this._children){let e=[],t=this.view.getStoredNodes();0!==t.length&&e.push(...t),(0,nN.Qu)(this._children,e),this._children=e}return this._children}set children(e){this.children!==e&&((0,nN.Qu)(this.children,e),this._children=e)}getChildren(){let e=this.children;return 0===e.length?[]:e.sort((e,t)=>t.order-e.order)}getTreeItem(){this.splatted=!1;let e=new b.TreeItem("SearchAndCompare",b.TreeItemCollapsibleState.Expanded);return e.contextValue=sJ.Td.SearchAndCompare,e}addOrReplace(e){let t=[...this.children];t.includes(e)||(t.push(e),this.children=t,this.view.triggerNodeChange())}async clear(){0!==this.children.length&&(this.removeComparePicker(!0),this.children=[],await this.view.clearStorage(),this.view.triggerNodeChange())}dismiss(e){if(e===this.comparePicker){this.removeComparePicker();return}(e instanceof n1.fc||e instanceof lp.V)&&e.dismiss();let t=[...this.children];if(0===t.length)return;let i=t.indexOf(e);-1!==i&&(t.splice(i,1),this.children=t,this.view.triggerNodeChange())}async refresh(e=!1){let t=this.children;if(0===t.length)return;let i=[...(0,W.DZ)(t,t=>{let i=t.refresh?.(e);return(0,t6.tI)(i)?i:void 0})];await Promise.allSettled(i)}async compareWithSelected(e,t){let i=this.comparePicker?.selectedRef;if(null!=i){if(null==e)e=i.repoPath;else if(e!==i.repoPath){this.selectForCompare(e,t);return}if(null==t){let r=await (0,n0.V)(e,`Compare ${this.getRefName(i.ref)} with`,"Choose a reference to compare with",{allowEnteringRefs:!0,picked:"string"==typeof i.ref?i.ref:i.ref.ref,include:n0.H.BranchesAndTags|n0.H.HEAD,sort:{branches:{current:!0}}});if(null==r){null!=this.comparePicker&&(await this.view.show(),await this.view.reveal(this.comparePicker,{focus:!0,select:!0}));return}t=r.ref}this.removeComparePicker(),await this.view.compare(e,i.ref,t)}}async selectForCompare(e,t,i){let r;if(null==e&&(e=(await sX.vJ("Compare"))?.path),null==e)return;this.removeComparePicker(!0);let s=i?.prompt??!1;if(null==t){let i=await (0,n0.V)(e,"Compare","Choose a reference to compare",{allowEnteringRefs:{ranges:!0},include:n0.H.BranchesAndTags|n0.H.HEAD|n0.H.WorkingTree,sort:{branches:{current:!0},tags:{}}});if(null==i){await this.triggerChange();return}if(t=i.ref,(0,F.yk)(t)){let e=(0,F.t6)(t);null!=e&&(t=e.ref1||"HEAD",r=e.ref2||"HEAD")}s=!0}this.comparePicker=new ld(this.view,this,{label:this.getRefName(t),repoPath:e,ref:t});let n=[...this.children];n.unshift(this.comparePicker),this.children=n,(0,i4.v)("gitlens:views:canCompare",!0),await this.triggerChange(),await this.view.reveal(this.comparePicker,{focus:!1,select:!0}),s&&await this.compareWithSelected(e,r)}getRefName(e){return"string"==typeof e?(0,F.zL)(e,{strings:{working:"Working Tree"}}):e.label??(0,F.zL)(e.ref)}removeComparePicker(e=!1){if((0,i4.v)("gitlens:views:canCompare",!1),null!=this.comparePicker){let t=[...this.children],i=t.indexOf(this.comparePicker);-1===i||(t.splice(i,1),this.children=t,e||this.triggerChange()),this.comparePicker=void 0}}}lf([(0,eW.cM)()],lw.prototype,"clear",1),lf([(0,eW.cM)({args:{0:e=>e.toString()}})],lw.prototype,"dismiss",1),lf([(0,t4.H)(),(0,eW.fF)()],lw.prototype,"refresh",1);class lv extends nN._H{configKey="searchAndCompare";constructor(e){super(e,"searchAndCompare","Search & Compare","searchAndCompareView")}getRoot(){return new lw(this)}registerCommands(){return this.container.viewCommands,[ax(this.getQualifiedCommand("clear"),()=>void this.clear(),this),ax(this.getQualifiedCommand("copy"),()=>(0,rg.P0)($.Gh.ViewsCopy,this.activeSelection,this.selection),this),ax(this.getQualifiedCommand("refresh"),()=>this.refresh(!0),this),ax(this.getQualifiedCommand("setFilesLayoutToAuto"),()=>this.setFilesLayout("auto"),this),ax(this.getQualifiedCommand("setFilesLayoutToList"),()=>this.setFilesLayout("list"),this),ax(this.getQualifiedCommand("setFilesLayoutToTree"),()=>this.setFilesLayout("tree"),this),ax(this.getQualifiedCommand("setShowAvatarsOn"),()=>this.setShowAvatars(!0),this),ax(this.getQualifiedCommand("setShowAvatarsOff"),()=>this.setShowAvatars(!1),this),ax(this.getQualifiedCommand("swapComparison"),this.swapComparison,this),ax(this.getQualifiedCommand("selectForCompare"),()=>this.selectForCompare()),ax(this.getQualifiedCommand("compareWithSelected"),this.compareWithSelected,this),ax(this.getQualifiedCommand("setFilesFilterOnLeft"),e=>this.setFilesFilter(e,n4.W.Left),this),ax(this.getQualifiedCommand("setFilesFilterOnRight"),e=>this.setFilesFilter(e,n4.W.Right),this),ax(this.getQualifiedCommand("setFilesFilterOff"),e=>this.setFilesFilter(e,void 0),this)]}filterConfigurationChanged(e){return!!(super.filterConfigurationChanged(e)||C.D.changed(e,"defaultDateFormat")||C.D.changed(e,"defaultDateLocale")||C.D.changed(e,"defaultDateShortFormat")||C.D.changed(e,"defaultDateSource")||C.D.changed(e,"defaultDateStyle")||C.D.changed(e,"defaultGravatarsStyle")||C.D.changed(e,"defaultTimeFormat"))}clear(){return this.root?.clear()}dismissNode(e){null!=this.root&&(e instanceof ld||e instanceof n1.fc||e instanceof lp.V)&&this.root.dismiss(e)}compare(e,t,i){return this.addResults(new n1.fc(this,this.ensureRoot(),e,"string"==typeof t?{ref:t}:t,"string"==typeof i?{ref:i}:i))}compareWithSelected(e,t){this.ensureRoot().compareWithSelected(e,t)}selectForCompare(e,t,i){this.ensureRoot().selectForCompare(e,t,i)}async search(e,t,{label:i,reveal:r},s,n){this.visible||await this.show();let o={label:`Search results ${"string"==typeof i?i:i.label}`,queryLabel:i};if(null!=n){await n.edit({pattern:t,labels:o,log:s});return}await this.addResults(new lp.V(this,this.root,e,t,o,s),r)}getStoredNodes(){let e=this.container.storage.getWorkspace("views:searchAndCompare:pinned");if(null==e)return[];let t=this.ensureRoot();return Object.entries(e).sort(([,e],[,t])=>(t.timestamp??0)-(e.timestamp??0)).map(([,e])=>"comparison"===e.type?((0,n1.k7)(this,e.checkedFiles),new n1.fc(this,t,e.path,{label:e.ref1.label,ref:e.ref1.ref??e.ref1.name??e.ref1.sha},{label:e.ref2.label,ref:e.ref2.ref??e.ref2.name??e.ref2.sha},e.timestamp)):new lp.V(this,t,e.path,(0,t0.uP)(e.search),e.labels,void 0,e.timestamp))}clearStorage(){return this.container.storage.deleteWorkspace("views:searchAndCompare:pinned")}async updateStorage(e,t,i=!1){let r=this.container.storage.getWorkspace("views:searchAndCompare:pinned");r=(0,rQ.iC)(r,e,t),await this.container.storage.storeWorkspace("views:searchAndCompare:pinned",r),i||this.triggerNodeChange(this.ensureRoot())}async revealRepository(e,t){let i=await this.findNode(t=>t instanceof nM.v&&t.repoPath===e,{maxDepth:1,canTraverse:e=>e instanceof lw||e instanceof nM.v});return void 0!==i&&await this.reveal(i,t),i}async addResults(e,t={expand:!0,focus:!0,select:!0}){this.visible||await this.show(),this.ensureRoot().addOrReplace(e),queueMicrotask(()=>this.reveal(e,t))}setFilesLayout(e){return C.D.updateEffective(`views.${this.configKey}.files.layout`,e)}setShowAvatars(e){return C.D.updateEffective(`views.${this.configKey}.avatars`,e)}setFilesFilter(e,t){e instanceof n4.V&&(e.filter=t)}swapComparison(e){if(e instanceof n1.fc)return e.swap()}}lf([(0,t4.H)(()=>"")],lv.prototype,"revealRepository",1);var ly=Object.defineProperty,lb=Object.getOwnPropertyDescriptor,lC=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?lb(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&ly(t,i,n),n};class lA extends nM.v{async getChildren(){return null==this.child&&(this.child=new as(this.uri,this.view,this,this.repo)),this.child.getChildren()}changed(e){return e.changed(tP.I6.Stash,tP.I6.Unknown,tP.du.Any)}}class lP extends nW{async getChildren(){if(null==this.children){let e=this.view.container.git.openRepositories;if(0===e.length)return this.view.message=this.view.container.git.isDiscoveringRepositories?"Loading stashes...":"No stashes could be found.",[];this.view.message=void 0;let t=1===e.length;this.children=e.map(e=>new lA(ty.YY.fromRepoPath(e.path),this.view,this,e,t))}if(1===this.children.length){let[e]=this.children,t=await e.repo.getStash();return null==t||0===t.commits.size?(this.view.message="No stashes could be found.",this.view.title="Stashes",e.ensureSubscription(),[]):(this.view.message=void 0,this.view.title=`Stashes (${t.commits.size})`,e.getChildren())}return this.view.title="Stashes",this.children}getTreeItem(){return new b.TreeItem("Stashes",b.TreeItemCollapsibleState.Expanded)}}class lD extends nN._H{configKey="stashes";constructor(e){super(e,"stashes","Stashes","stashesView")}get canReveal(){return this.config.reveal||!C.D.get("views.repositories.showStashes")}getRoot(){return new lP(this)}registerCommands(){return this.container.viewCommands,[ax(this.getQualifiedCommand("copy"),()=>(0,rg.P0)($.Gh.ViewsCopy,this.activeSelection,this.selection),this),ax(this.getQualifiedCommand("refresh"),()=>(this.container.git.resetCaches("stashes"),this.refresh(!0)),this),ax(this.getQualifiedCommand("setFilesLayoutToAuto"),()=>this.setFilesLayout("auto"),this),ax(this.getQualifiedCommand("setFilesLayoutToList"),()=>this.setFilesLayout("list"),this),ax(this.getQualifiedCommand("setFilesLayoutToTree"),()=>this.setFilesLayout("tree"),this)]}filterConfigurationChanged(e){return!!(super.filterConfigurationChanged(e)||C.D.changed(e,"defaultDateFormat")||C.D.changed(e,"defaultDateLocale")||C.D.changed(e,"defaultDateShortFormat")||C.D.changed(e,"defaultDateSource")||C.D.changed(e,"defaultDateStyle")||C.D.changed(e,"defaultGravatarsStyle")||C.D.changed(e,"defaultTimeFormat")||C.D.changed(e,"sortRepositoriesBy"))}findStash(e,t){let{repoPath:i}=e;return this.findNode(t=>t.commit?.ref===e.ref,{maxDepth:2,canTraverse:e=>e instanceof lP||e instanceof lA&&e.repoPath===i,token:t})}async revealRepository(e,t){let i=await this.findNode(t=>t instanceof nM.v&&t.repoPath===e,{maxDepth:1,canTraverse:e=>e instanceof lP||e instanceof nM.v});return void 0!==i&&await this.reveal(i,t),i}async revealStash(e,t){return b.window.withProgress({location:b.ProgressLocation.Notification,title:`Revealing ${(0,F.Wh)(e,{icon:!1,quoted:!0})} in the side bar...`,cancellable:!0},async(i,r)=>{let s=await this.findStash(e,r);if(null!=s)return await this.ensureRevealNode(s,t),s})}setFilesLayout(e){return C.D.updateEffective(`views.${this.configKey}.files.layout`,e)}}lC([(0,t4.H)(()=>"")],lD.prototype,"revealRepository",1),lC([(0,t4.H)(()=>"")],lD.prototype,"revealStash",1);var lk=Object.defineProperty,lS=Object.getOwnPropertyDescriptor,lR=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?lS(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&lk(t,i,n),n};class l$ extends nM.v{async getChildren(){return null==this.child&&(this.child=new ad(this.uri,this.view,this,this.repo)),this.child.getChildren()}changed(e){return e.changed(tP.I6.Tags,tP.I6.Unknown,tP.du.Any)}}class l_ extends nW{async getChildren(){if(null==this.children){let e=this.view.container.git.openRepositories;if(0===e.length)return this.view.message=this.view.container.git.isDiscoveringRepositories?"Loading tags...":"No tags could be found.",[];this.view.message=void 0;let t=1===e.length;this.children=e.map(e=>new l$(ty.YY.fromRepoPath(e.path),this.view,this,e,t))}if(1===this.children.length){let[e]=this.children,t=await e.repo.getTags();return 0===t.values.length?(this.view.message="No tags could be found.",this.view.title="Tags",e.ensureSubscription(),[]):(this.view.message=void 0,this.view.title=`Tags (${t.values.length})`,e.getChildren())}return this.view.title="Tags",this.children}getTreeItem(){return new b.TreeItem("Tags",b.TreeItemCollapsibleState.Expanded)}}class lI extends nN._H{configKey="tags";constructor(e){super(e,"tags","Tags","tagsView")}get canReveal(){return this.config.reveal||!C.D.get("views.repositories.showTags")}getRoot(){return new l_(this)}registerCommands(){return this.container.viewCommands,[ax(this.getQualifiedCommand("copy"),()=>(0,rg.P0)($.Gh.ViewsCopy,this.activeSelection,this.selection),this),ax(this.getQualifiedCommand("refresh"),()=>(this.container.git.resetCaches("tags"),this.refresh(!0)),this),ax(this.getQualifiedCommand("setLayoutToList"),()=>this.setLayout("list"),this),ax(this.getQualifiedCommand("setLayoutToTree"),()=>this.setLayout("tree"),this),ax(this.getQualifiedCommand("setFilesLayoutToAuto"),()=>this.setFilesLayout("auto"),this),ax(this.getQualifiedCommand("setFilesLayoutToList"),()=>this.setFilesLayout("list"),this),ax(this.getQualifiedCommand("setFilesLayoutToTree"),()=>this.setFilesLayout("tree"),this),ax(this.getQualifiedCommand("setShowAvatarsOn"),()=>this.setShowAvatars(!0),this),ax(this.getQualifiedCommand("setShowAvatarsOff"),()=>this.setShowAvatars(!1),this)]}filterConfigurationChanged(e){return!!(super.filterConfigurationChanged(e)||C.D.changed(e,"defaultDateFormat")||C.D.changed(e,"defaultDateLocale")||C.D.changed(e,"defaultDateShortFormat")||C.D.changed(e,"defaultDateSource")||C.D.changed(e,"defaultDateStyle")||C.D.changed(e,"defaultGravatarsStyle")||C.D.changed(e,"defaultTimeFormat")||C.D.changed(e,"sortTagsBy")||C.D.changed(e,"sortRepositoriesBy"))}findTag(e,t){let{repoPath:i}=e;return this.findNode(t=>t.tag?.ref===e.ref,{allowPaging:!0,maxDepth:2,canTraverse:e=>e instanceof l_||(e instanceof l$||e instanceof od)&&e.repoPath===i,token:t})}async revealRepository(e,t){let i=await this.findNode(t=>t instanceof nM.v&&t.repoPath===e,{maxDepth:1,canTraverse:e=>e instanceof l_||e instanceof nM.v});return void 0!==i&&await this.reveal(i,t),i}revealTag(e,t){return b.window.withProgress({location:b.ProgressLocation.Notification,title:`Revealing ${(0,F.Wh)(e,{icon:!1,quoted:!0})} in the side bar...`,cancellable:!0},async(i,r)=>{let s=await this.findTag(e,r);if(null!=s)return await this.ensureRevealNode(s,t),s})}setLayout(e){return C.D.updateEffective(`views.${this.configKey}.branches.layout`,e)}setFilesLayout(e){return C.D.updateEffective(`views.${this.configKey}.files.layout`,e)}setShowAvatars(e){return C.D.updateEffective(`views.${this.configKey}.avatars`,e)}}lR([(0,t4.H)(()=>"")],lI.prototype,"revealRepository",1),lR([(0,t4.H)(()=>"")],lI.prototype,"revealTag",1);var lF=i(4398);class lx{_onDidChange=new b.EventEmitter;get onDidChange(){return this._onDidChange.event}disposable;constructor(){this.disposable=b.Disposable.from(b.window.registerFileDecorationProvider({provideFileDecoration:(e,t)=>{if("gitlens-view"===e.scheme)switch(e.authority){case"branch":return this.provideBranchCurrentDecoration(e,t);case"remote":return this.provideRemoteDefaultDecoration(e,t);case"status":return this.provideStatusDecoration(e,t);case"workspaces":return this.provideWorkspaceDecoration(e,t);default:return}}}),b.window.registerFileDecorationProvider(this))}dispose(){this.disposable.dispose()}provideWorkspaceDecoration(e,t){let[,i,r]=e.path.split("/");if("repository"===i){if("open"===r)return{badge:"●",color:new b.ThemeColor("gitlens.decorations.workspaceRepoOpenForegroundColor"),tooltip:""};if("missing"===r)return{badge:"?",color:new b.ThemeColor("gitlens.decorations.workspaceRepoMissingForegroundColor"),tooltip:""}}if("workspace"===i&&"current"===r)return{badge:"●",color:new b.ThemeColor("gitlens.decorations.workspaceCurrentForegroundColor"),tooltip:""}}provideFileDecoration(e,t){if(e.scheme===$.sN.Git){let t=(0,lF.h)(e);t?.decoration!=null&&(e=b.Uri.parse(t?.decoration))}if("gitlens-view"===e.scheme)switch(e.authority){case"branch":return this.provideBranchStatusDecoration(e,t);case"commit-file":return this.provideCommitFileStatusDecoration(e,t)}}provideCommitFileStatusDecoration(e,t){let[,,i]=e.path.split("/");switch(i){case"!":return{badge:"I",color:new b.ThemeColor("gitlens.decorations.ignoredForegroundColor"),tooltip:"Ignored"};case"?":return{badge:"U",color:new b.ThemeColor("gitlens.decorations.untrackedForegroundColor"),tooltip:"Untracked"};case"A":return{badge:"A",color:new b.ThemeColor("gitlens.decorations.addedForegroundColor"),tooltip:"Added"};case"C":return{badge:"C",color:new b.ThemeColor("gitlens.decorations.copiedForegroundColor"),tooltip:"Copied"};case"D":return{badge:"D",color:new b.ThemeColor("gitlens.decorations.deletedForegroundColor"),tooltip:"Deleted"};case"M":return{badge:"M",tooltip:"Modified"};case"R":return{badge:"R",color:new b.ThemeColor("gitlens.decorations.renamedForegroundColor"),tooltip:"Renamed"};default:return}}provideBranchStatusDecoration(e,t){let[,,i]=e.path.split("/");switch(i){case"ahead":return{badge:"▲",color:new b.ThemeColor("gitlens.decorations.branchAheadForegroundColor"),tooltip:"Ahead"};case"behind":return{badge:"▼",color:new b.ThemeColor("gitlens.decorations.branchBehindForegroundColor"),tooltip:"Behind"};case"diverged":return{badge:"▼▲",color:new b.ThemeColor("gitlens.decorations.branchDivergedForegroundColor"),tooltip:"Diverged"};case"missingUpstream":return{badge:"!",color:new b.ThemeColor("gitlens.decorations.branchMissingUpstreamForegroundColor"),tooltip:"Missing Upstream"};case"upToDate":return{badge:"",color:new b.ThemeColor("gitlens.decorations.branchUpToDateForegroundColor"),tooltip:"Up to Date"};case"unpublished":return{badge:"▲+",color:new b.ThemeColor("gitlens.decorations.branchUnpublishedForegroundColor"),tooltip:"Unpublished"};default:return}}provideBranchCurrentDecoration(e,t){let i;let[,,r,s]=e.path.split("/");if(s){switch(r){case"ahead":i=new b.ThemeColor("gitlens.decorations.branchAheadForegroundColor");break;case"behind":i=new b.ThemeColor("gitlens.decorations.branchBehindForegroundColor");break;case"diverged":i=new b.ThemeColor("gitlens.decorations.branchDivergedForegroundColor");break;case"upToDate":i=new b.ThemeColor("gitlens.decorations.branchUpToDateForegroundColor");break;case"unpublished":i=new b.ThemeColor("gitlens.decorations.branchUnpublishedForegroundColor")}return{badge:$.NE.Check,color:i,tooltip:"Current Branch"}}}provideRemoteDefaultDecoration(e,t){let[,i]=e.path.split("/");if(i)return{badge:$.NE.Check,tooltip:"Default Remote"}}provideStatusDecoration(e,t){let[,i,r]=e.path.split("/");switch(i){case"rebasing":case"merging":if(r)return{badge:"!",color:new b.ThemeColor("gitlens.decorations.statusMergingOrRebasingConflictForegroundColor")};return{color:new b.ThemeColor("gitlens.decorations.statusMergingOrRebasingForegroundColor")};default:return}}}class lT extends sJ.Re{constructor(e,t,i,r){super("workspace-missing-repository",ty.Wj,e,t),this.workspace=i,this.wsRepositoryDescriptor=r,this.updateContext({wsRepositoryDescriptor:r}),this._uniqueId=(0,sJ.tO)(this.type,this.context)}get id(){return this._uniqueId}toClipboard(){return this.name}get name(){return this.wsRepositoryDescriptor.name}get workspaceId(){return this.wsRepositoryDescriptor.workspaceId}getChildren(){return[]}getTreeItem(){let e=new b.TreeItem(this.name,b.TreeItemCollapsibleState.None);return e.id=this.id,e.description="missing",e.tooltip=new b.MarkdownString(`${this.name}

Repository could not be found`),e.contextValue=sJ.Td.WorkspaceMissingRepository,e.iconPath=new b.ThemeIcon("question",new b.ThemeColor("gitlens.decorations.workspaceRepoMissingForegroundColor")),e.resourceUri=b.Uri.parse("gitlens-view://workspaces/repository/missing"),e}}var lO=Object.defineProperty,lE=Object.getOwnPropertyDescriptor;class lB extends nE.C{constructor(e,t,i,r){super("workspace",e,t,i),this.parent=i,this.workspace=r,this.updateContext({workspace:r}),this._uniqueId=(0,sJ.tO)(this.type,this.context)}get id(){return this._uniqueId}toClipboard(){return this.workspace.name}async getChildren(){if(null==this.children){let e=[];try{let t=await this.workspace.getRepositoryDescriptors();if(!t?.length)return e.push(new nV.$h(this.view,this,(0,rg.fA)("gitlens.views.workspaces.addRepos","Add Repositories...",this),"No repositories")),this.children=e,this.children;let i=await this.workspace.getRepositoriesByName({force:!0});for(let r of t){let t=i.get(r.name)?.repository;if(!t){e.push(new lT(this.view,this,this.workspace,r));continue}e.push(new ak(ty.YY.fromRepoPath(t.path),this.view,this,t,this.getNewContext({wsRepositoryDescriptor:r})))}}catch(e){return this.children=void 0,[new nV.AE(this.view,this,"Failed to load repositories")]}this.children=e}return this.children}async getTreeItem(){let e=new b.TreeItem(this.workspace.name,b.TreeItemCollapsibleState.Collapsed),t="cloud"===this.workspace.type,i=`${sJ.Td.Workspace}`;e.resourceUri=void 0;let r=[];return t?i+="+cloud":i+="+local",this.workspace.current&&(i+="+current",r.push("current"),e.resourceUri=b.Uri.parse("gitlens-view://workspaces/workspace/current")),null!=this.workspace.localPath&&(i+="+hasPath"),(await this.workspace.getRepositoryDescriptors())?.length===0&&(i+="+empty"),e.id=this.id,e.contextValue=i,e.iconPath=new b.ThemeIcon("cloud"==this.workspace.type?"cloud":"folder"),e.tooltip=`${this.workspace.name}
${t?`Cloud Workspace ${this.workspace.shared?"(Shared)":""}`:"Local Workspace"}${t&&null!=this.workspace.provider?`
Provider: ${this.workspace.provider}`:""}`,t&&null!=this.workspace.organizationId&&r.push("shared"),e.description=r.join(", "),e}etag(){return this.view.container.git.etag}subscribe(){return b.Disposable.from((0,iV.D$)(this.view.container.git.onDidChangeRepositories,this.onRepositoriesChanged,this))}onRepositoriesChanged(e){this.triggerChange(!0)}}((e,t,i,r)=>{for(var s,n=r>1?void 0:r?lE(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&lO(t,i,n)})([(0,eW.fF)()],lB.prototype,"subscribe",1);var lU=Object.defineProperty,lW=Object.getOwnPropertyDescriptor;class lM extends sJ.Re{constructor(e){super("workspaces-view",ty.Wj,e)}_children;async getChildren(){if(null==this._children){let e=[],{cloudWorkspaces:t,cloudWorkspaceInfo:i,localWorkspaces:r,localWorkspaceInfo:s}=await this.view.container.workspaces.getWorkspaces();if(t.length||r.length){for(let i of(e.push(new la(this.view)),t))e.push(new lB(this.uri,this.view,this,i));for(let t of(null!=i&&e.push(new nV.AE(this.view,this,i)),r))e.push(new lB(this.uri,this.view,this,t));0===t.length&&null==i&&e.push(new nV.AE(this.view,this,"No cloud workspaces found.")),null!=s&&e.push(new nV.AE(this.view,this,s))}this._children=e}return this._children}getTreeItem(){return new b.TreeItem("Workspaces",b.TreeItemCollapsibleState.Expanded)}refresh(){null!=this._children&&((0,nN.Qu)(this._children),this._children=void 0)}}((e,t,i,r)=>{for(var s,n=r>1?void 0:r?lW(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&lU(t,i,n)})([(0,t4.H)(),(0,eW.fF)()],lM.prototype,"refresh",1);class lL extends nN._H{configKey="workspaces";_disposable;constructor(e){super(e,"workspaces","Workspaces","workspacesView"),this.description=`PREVIEW\xa0\xA0\u2601\uFE0F`,this.disposables.push(e.workspaces.onDidResetWorkspaces(()=>void this.refresh(!0)))}dispose(){this._disposable?.dispose(),super.dispose()}get canSelectMany(){return!1}getRoot(){return new lM(this)}async show(e){if(await (0,rZ.C)())return super.show(e)}async findWorkspaceNode(e,t){return this.findNode(t=>t.workspace?.id===e,{allowPaging:!1,maxDepth:2,canTraverse:e=>e instanceof lM,token:t})}async revealWorkspaceNode(e,t){return b.window.withProgress({location:b.ProgressLocation.Notification,title:`Revealing workspace ${e} in the side bar...`,cancellable:!0},async(i,r)=>{let s=await this.findWorkspaceNode(e,r);if(null!=s)return await this.ensureRevealNode(s,t),s})}registerCommands(){return this.container.viewCommands,[ax(this.getQualifiedCommand("info"),()=>b.env.openExternal(b.Uri.parse("https://help.gitkraken.com/gitlens/side-bar/#workspaces-☁%ef%b8%8f")),this),ax(this.getQualifiedCommand("copy"),()=>(0,rg.P0)($.Gh.ViewsCopy,this.activeSelection,this.selection),this),ax(this.getQualifiedCommand("refresh"),()=>{this.container.workspaces.resetWorkspaces()},this),ax(this.getQualifiedCommand("addRepos"),async e=>{await this.container.workspaces.addCloudWorkspaceRepos(e.workspace.id),e.getParent()?.triggerChange(!0)}),ax(this.getQualifiedCommand("addReposFromLinked"),async e=>{await this.container.workspaces.addMissingCurrentWorkspaceRepos({force:!0}),e.getParent()?.triggerChange(!0)}),ax(this.getQualifiedCommand("convert"),async e=>{let t=[];for(let i of e.getChildren())i instanceof ak&&t.push(i.repo);0!==t.length&&(await this.container.workspaces.createCloudWorkspace({repos:t}),this.ensureRoot().triggerChange(!0))},this),ax(this.getQualifiedCommand("create"),async()=>{await this.container.workspaces.createCloudWorkspace(),this.ensureRoot().triggerChange(!0)},this),ax(this.getQualifiedCommand("createLocal"),async e=>{await this.container.workspaces.saveAsCodeWorkspaceFile(e.workspace.id),this.ensureRoot().triggerChange(!0)},this),ax(this.getQualifiedCommand("openLocal"),async e=>{await this.container.workspaces.openCodeWorkspaceFile(e.workspace.id,{location:"currentWindow"}),this.ensureRoot().triggerChange(!0)},this),ax(this.getQualifiedCommand("openLocalNewWindow"),async e=>{await this.container.workspaces.openCodeWorkspaceFile(e.workspace.id,{location:"newWindow"})},this),ax(this.getQualifiedCommand("changeAutoAddSetting"),async()=>{await this.container.workspaces.chooseCodeWorkspaceAutoAddSetting({current:!0})},this),ax(this.getQualifiedCommand("delete"),async e=>{await this.container.workspaces.deleteCloudWorkspace(e.workspace.id),e.getParent()?.triggerChange(!0)},this),ax(this.getQualifiedCommand("locateAllRepos"),async e=>{"cloud"===e.workspace.type&&(await b.window.withProgress({location:b.ProgressLocation.Notification,title:`Locating Repositories for '${e.workspace.name}'...`,cancellable:!0},(t,i)=>this.container.workspaces.locateAllCloudWorkspaceRepos(e.workspace.id,i)),e.triggerChange(!0))},this),ax(this.getQualifiedCommand("repo.locate"),async e=>{let t=e.wsRepositoryDescriptor;null!=t&&e.workspace?.id!=null&&(await this.container.workspaces.locateWorkspaceRepo(e.workspace.id,t),e.getParent()?.triggerChange(!0))},this),ax(this.getQualifiedCommand("repo.openInNewWindow"),e=>{let t=e.getParent();null!=t&&t instanceof lB&&(0,eG.ic)(e.repo.uri,{location:"newWindow"})},this),ax(this.getQualifiedCommand("repo.open"),e=>{let t=e.getParent();null!=t&&t instanceof lB&&(0,eG.ic)(e.repo.uri,{location:"currentWindow"})},this),ax(this.getQualifiedCommand("repo.addToWindow"),e=>{let t=e.getParent();null!=t&&t instanceof lB&&(0,eG.ic)(e.repo.uri,{location:"addToWorkspace"})},this),ax(this.getQualifiedCommand("repo.remove"),async e=>{let t=e.wsRepositoryDescriptor;t?.id!=null&&e.workspace?.id!=null&&(await this.container.workspaces.removeCloudWorkspaceRepo(e.workspace.id,t),e.getParent()?.getParent()?.triggerChange(!0))})]}}var lN=Object.defineProperty,lH=Object.getOwnPropertyDescriptor,lG=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?lH(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&lN(t,i,n),n};class lq extends nM.v{getChildren(){return null==this.child&&(this.child=new aC(this.uri,this.view,this,this.repo)),this.child.getChildren()}changed(e){return e.changed(tP.I6.Config,tP.I6.Worktrees,tP.I6.Unknown,tP.du.Any)}}class lY extends nW{async getChildren(){if(!1===(await this.view.container.git.access(tv.x.Worktrees)).allowed)return[];if(null==this.children){let e=this.view.container.git.openRepositories;if(0===e.length)return this.view.message=this.view.container.git.isDiscoveringRepositories?"Loading worktrees...":"No worktrees could be found.",[];this.view.message=void 0;let t=1===e.length;this.children=e.map(e=>new lq(ty.YY.fromRepoPath(e.path),this.view,this,e,t))}if(1===this.children.length){let[e]=this.children,t=await e.getChildren();return t.length<=1?(this.view.message=void 0,this.view.title="Worktrees",e.ensureSubscription(),[]):(this.view.message=void 0,this.view.title=`Worktrees (${t.length})`,t)}return this.view.title="Worktrees",this.children}getTreeItem(){return new b.TreeItem("Worktrees",b.TreeItemCollapsibleState.Expanded)}}class lj extends nN._H{configKey="worktrees";constructor(e){super(e,"worktrees","Worktrees","worktreesView"),this.disposables.push(b.window.registerFileDecorationProvider({provideFileDecoration:(e,t)=>{if("gitlens-view"!==e.scheme||"worktree"!==e.authority)return;let[,i]=e.path.split("/");switch(i){case"changes":return{badge:"●",color:new b.ThemeColor("gitlens.decorations.worktreeHasUncommittedChangesForegroundColor"),tooltip:"Has Uncommitted Changes"};case"missing":return{badge:$.NE.Warning,color:new b.ThemeColor("gitlens.decorations.worktreeMissingForegroundColor"),tooltip:""};default:return}}})),this.description="✨"}get canReveal(){return this.config.reveal||!C.D.get("views.repositories.showWorktrees")}async show(e){if(await (0,rZ.C)())return super.show(e)}getRoot(){return new lY(this)}registerCommands(){return this.container.viewCommands,[ax(this.getQualifiedCommand("copy"),()=>(0,rg.P0)($.Gh.ViewsCopy,this.activeSelection,this.selection),this),ax(this.getQualifiedCommand("refresh"),async()=>this.refresh(!0),this),ax(this.getQualifiedCommand("setFilesLayoutToAuto"),()=>this.setFilesLayout("auto"),this),ax(this.getQualifiedCommand("setFilesLayoutToList"),()=>this.setFilesLayout("list"),this),ax(this.getQualifiedCommand("setFilesLayoutToTree"),()=>this.setFilesLayout("tree"),this),ax(this.getQualifiedCommand("setShowAvatarsOn"),()=>this.setShowAvatars(!0),this),ax(this.getQualifiedCommand("setShowAvatarsOff"),()=>this.setShowAvatars(!1),this),ax(this.getQualifiedCommand("setShowBranchComparisonOn"),()=>this.setShowBranchComparison(!0),this),ax(this.getQualifiedCommand("setShowBranchComparisonOff"),()=>this.setShowBranchComparison(!1),this),ax(this.getQualifiedCommand("setShowBranchPullRequestOn"),()=>this.setShowBranchPullRequest(!0),this),ax(this.getQualifiedCommand("setShowBranchPullRequestOff"),()=>this.setShowBranchPullRequest(!1),this)]}filterConfigurationChanged(e){return!!(super.filterConfigurationChanged(e)||C.D.changed(e,"defaultDateFormat")||C.D.changed(e,"defaultDateLocale")||C.D.changed(e,"defaultDateShortFormat")||C.D.changed(e,"defaultDateSource")||C.D.changed(e,"defaultDateStyle")||C.D.changed(e,"defaultGravatarsStyle")||C.D.changed(e,"defaultTimeFormat")||C.D.changed(e,"sortRepositoriesBy"))}findWorktree(e,t){let{repoPath:i,uri:r}=e,s=r.toString();return this.findNode(t=>t instanceof av&&e.uri.toString()===s,{maxDepth:2,canTraverse:e=>e instanceof lY||e instanceof lq&&e.repoPath===i,token:t})}async revealRepository(e,t){let i=await this.findNode(t=>t instanceof nM.v&&t.repoPath===e,{maxDepth:1,canTraverse:e=>e instanceof lY||e instanceof nM.v});return void 0!==i&&await this.reveal(i,t),i}revealWorktree(e,t){return b.window.withProgress({location:b.ProgressLocation.Notification,title:`Revealing worktree '${e.name}' in the side bar...`,cancellable:!0},async(i,r)=>{let s=await this.findWorktree(e,r);if(null!=s)return await this.ensureRevealNode(s,t),s})}setFilesLayout(e){return C.D.updateEffective(`views.${this.configKey}.files.layout`,e)}setShowAvatars(e){return C.D.updateEffective(`views.${this.configKey}.avatars`,e)}setShowBranchComparison(e){return C.D.updateEffective(`views.${this.configKey}.showBranchComparison`,!!e&&"branch")}async setShowBranchPullRequest(e){await C.D.updateEffective(`views.${this.configKey}.pullRequests.showForBranches`,e),await C.D.updateEffective(`views.${this.configKey}.pullRequests.enabled`,e)}}lG([(0,t4.H)(()=>"")],lj.prototype,"revealRepository",1),lG([(0,t4.H)(()=>"")],lj.prototype,"revealWorktree",1);class lV{constructor(e){this.name=e}}let lQ=new lV("git"),lz=new lV("git/logStreamTo"),lK=new lV("repositories/inFolder");var lJ=Object.defineProperty,lZ=Object.getOwnPropertyDescriptor,lX=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?lZ(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&lJ(t,i,n),n};let l0=()=>!0,l1=new Map([["blame",l0],["branch",e=>"--contains"===e[1]],["cat-file",l0],["check-mailmap",l0],["check-ref-format",l0],["config",e=>"--get"===e[1]||"--get-regex"===e[1]],["diff",l0],["difftool",l0],["for-each-ref",l0],["log",l0],["ls-files",l0],["ls-tree",l0],["merge-base",l0],["remote",e=>"-v"===e[1]||"get-url"===e[1]],["rev-list",l0],["rev-parse",l0],["show",l0],["show-ref",l0],["stash",e=>"list"===e[1]],["status",l0],["symbolic-ref",l0],["tag",e=>"-l"===e[1]],["worktree",e=>"list"===e[1]]]),l2=/^[/|\\]/,l4=class e{constructor(e,t,i){this._api=e,this._service=t,this.container=i,t.onDidChangeIsServiceAvailable(this.onAvailabilityChanged.bind(this)),this._disposable=b.Disposable.from(b.workspace.onDidChangeWorkspaceFolders(this.onWorkspaceFoldersChanged,this)),this.onRequest(lQ,this.onGitCommandRequest.bind(this)),this.onRequest(lz,this.onGitLogStreamToCommandRequest.bind(this)),this.onRequest(lK,this.onGetRepositoriesForUriRequest.bind(this)),this.onWorkspaceFoldersChanged()}static ServiceId="proxy";static async share(t,i){let r=await t.shareService(this.ServiceId);if(null==r)throw Error("Failed to share host service");return new e(t,r,i)}_disposable;_localPathsRegex;_localToSharedPaths=new Map;_sharedPathsRegex;_sharedToLocalPaths=new Map;dispose(){this._disposable.dispose(),this._api.unshareService(e.ServiceId)}onRequest(e,t){this._service.onRequest(e.name,function(e,i){let r;for(let t of e)if("object"==typeof t&&"__type"in t){r=t;break}return t(r??e[0],i)})}onAvailabilityChanged(e){}onWorkspaceFoldersChanged(e){let t,i;if(null==b.workspace.workspaceFolders||0===b.workspace.workspaceFolders.length)return;let r=(0,eH.UH)();for(let e of(this._localToSharedPaths.clear(),this._sharedToLocalPaths.clear(),b.workspace.workspaceFolders))t=(0,M.AH)(e.uri.fsPath),i=(0,M.AH)(this.convertLocalUriToShared(e.uri).toString()),eL.Yd.debug(r,`shared='${i}' \u2194 local='${t}'`),this._localToSharedPaths.set(t,i),this._sharedToLocalPaths.set(i,t);let s=(0,eM.v_)(this._sharedToLocalPaths.values(),"|");s=s.replace(/(\/|\\)/g,"[\\\\/|\\\\]"),this._localPathsRegex=RegExp(`(${s})`,"gi");let n=(0,eM.v_)(this._localToSharedPaths.values(),"|");n=n.replace(/(\/|\\)/g,"[\\\\/|\\\\]"),this._sharedPathsRegex=RegExp(`^(${n})`,"i")}async onGitCommandRequest(e,t){let i=l1.get(e.args[0]);if(null==i||!i(e.args))throw Error(`Git ${e.args[0]} command is not allowed`);let{options:r,args:s}=e,[n,o]=this.convertGitCommandCwd(r.cwd);r.cwd=n;let a=await function(e,...t){return iT().git(e,...t)}(r,...this.convertGitCommandArgs(s,o));return"string"==typeof a?(null!=this._localPathsRegex&&a.length>0&&(a=a.replace(this._localPathsRegex,(e,t)=>{let i=this._localToSharedPaths.get((0,M.AH)(t));return null!=i?i:t})),{data:a}):{data:a.toString("binary"),isBuffer:!0}}async onGitLogStreamToCommandRequest(e,t){let{options:i,args:r}=e,[s,n]=this.convertGitCommandCwd(e.repoPath),[o,a]=await function(e,t,i,r,...s){return iT().logStreamTo(e,t,i,r,...s)}(s,e.sha,e.limit,i,...this.convertGitCommandArgs(r,n));return null!=this._localPathsRegex&&o.length>0&&(o=o.map(e=>e.replace(this._localPathsRegex,(e,t)=>{let i=this._localToSharedPaths.get((0,M.AH)(t));return null!=i?i:t}))),{data:o,count:a}}async onGetRepositoriesForUriRequest(e,t){let i=[],r=this.convertSharedUriToLocal(b.Uri.parse(e.folderUri,!0)),s=this.container.git.getRepository(r);if(null!=s){let e=this.convertLocalUriToShared(s.uri);i.push({folderUri:e.toString(),root:s.root,closed:s.closed})}return{repositories:i}}convertLocalUriToShared(e){let t=(0,eH.UH)(),i=this._api.convertLocalUriToShared(e);eL.Yd.debug(t,`LiveShare.convertLocalUriToShared(${e.toString(!0)}) returned ${i.toString(!0)}`);let r=e.path,s=i.path;if(i.authority.length>0&&(s=`/${i.authority}${s}`),RegExp(`${r}$`,"i").test(s)){if(s.length===r.length){let t=b.workspace.getWorkspaceFolder(e);i=i.with({authority:"",path:`/~${t.index}`})}else i=i.with({authority:"",path:s.substr(0,s.length-r.length)})}else if(!s.startsWith("/~")){let t=b.workspace.getWorkspaceFolder(e);i=i.with({authority:"",path:`/~${t.index}${s}`})}return i}convertGitCommandCwd(e){let t=!1;if(null!=e&&e.length>0&&null!=this._sharedToLocalPaths){if(this._sharedPathsRegex?.test(e))e=(0,M.AH)(e).replace(this._sharedPathsRegex,(e,i)=>{t||(t="/~0"===i);let r=this._sharedToLocalPaths.get(i);return null!=r?r:i});else if(l2.test(e)){let i=this._sharedToLocalPaths.get("vsls:/~0");null!=i&&(t=!0,e=(0,M.AH)(this.container.git.getAbsoluteUri(e,i).fsPath))}}return[e,t]}convertGitCommandArgs(e,t){let i=!1,r=-1;for(let s of e){if(r++,"--"===s){i=!0;continue}i&&"string"==typeof s&&(t&&l2.test(s[0])&&e.splice(r,1,s.substr(1)),this._sharedPathsRegex?.test(s)&&e.splice(r,1,(0,M.AH)(s).replace(this._sharedPathsRegex,(e,t)=>{let i=this._sharedToLocalPaths.get(t);return null!=i?i:t})))}return e}convertSharedUriToLocal(e){(0,M.tD)(e.path)&&(e=e.with({path:`${e.path}/`}));let t=this._api.convertSharedUriToLocal(e),i=t.path,r=e.path;return i.endsWith(r)&&(i=i.substr(0,i.length-r.length)),47===i.charCodeAt(i.length-1)&&(i=i.slice(0,-1)),t.with({path:i})}};lX([(0,eW.cM)()],l4.prototype,"onAvailabilityChanged",1),lX([(0,eW.fF)()],l4.prototype,"onWorkspaceFoldersChanged",1),lX([(0,eW.cM)()],l4.prototype,"onGitCommandRequest",1),lX([(0,eW.cM)()],l4.prototype,"onGitLogStreamToCommandRequest",1),lX([(0,eW.cM)()],l4.prototype,"onGetRepositoriesForUriRequest",1),lX([(0,eW.fF)({exit:!0})],l4.prototype,"convertLocalUriToShared",1),lX([(0,eW.cM)()],l4,"share",1);var l5=Object.defineProperty,l6=Object.getOwnPropertyDescriptor,l3=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?l6(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&l5(t,i,n),n};let l8=class e{constructor(e,t,i){this._api=e,this._service=t,this.container=i,t.onDidChangeIsServiceAvailable(this.onAvailabilityChanged.bind(this)),this.onAvailabilityChanged(t.isServiceAvailable)}static async connect(t,i){let r=(0,eH.UH)();try{let r=await t.getSharedService(l4.ServiceId);if(null==r)throw Error("Failed to connect to host service");return new e(t,r,i)}catch(e){eL.Yd.error(e,r);return}}dispose(){}onAvailabilityChanged(e){if(e){this.container.git.setEnabledContext(!0);return}this.container.git.setEnabledContext(!1),b.window.showWarningMessage("GitLens features will be unavailable. Unable to connect to the host GitLens service. The host may have disabled GitLens guest access or may not have GitLens installed.")}async git(e,...t){let i=await this.sendRequest(lQ,{__type:"gitlens",options:e,args:t});return i.isBuffer?Buffer.from(i.data,"binary"):i.data}async gitLogStreamTo(e,t,i,r,...s){let n=await this.sendRequest(lz,{__type:"gitlens",repoPath:e,sha:t,limit:i,options:r,args:s});return[n.data,n.count]}async getRepositoriesForUri(e){return(await this.sendRequest(lK,{__type:"gitlens",folderUri:e.toString()})).repositories}sendRequest(e,t,i){return this._service.request(e.name,[t],i)}};l3([(0,eW.cM)()],l8.prototype,"onAvailabilityChanged",1),l3([(0,eW.cM)()],l8.prototype,"git",1),l3([(0,eW.cM)()],l8.prototype,"gitLogStreamTo",1),l3([(0,eW.cM)()],l8.prototype,"getRepositoriesForUri",1),l3([(0,eW.fF)()],l8.prototype,"sendRequest",1),l3([(0,eW.cM)()],l8,"connect",1);var l9=Object.defineProperty,l7=Object.getOwnPropertyDescriptor,he=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?l7(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&l9(t,i,n),n};function ht(e){switch(e){case"available":return{status:"online",statusText:"Available"};case"away":return{status:"away",statusText:"Away"};case"busy":return{status:"busy",statusText:"Busy"};case"doNotDisturb":return{status:"dnd",statusText:"DND"};default:return{status:"offline",statusText:"Offline"}}}class hi{constructor(e){this.container=e,this._ready=(0,t6.PQ)(),this._disposable=b.Disposable.from((0,iV.IH)(e.onReady)(this.onReady,this),C.D.onDidChange(this.onConfigurationChanged,this))}_api;_disposable;_guest;_host;_ready;dispose(){this._ready.fulfill(),this._disposable.dispose(),this._host?.dispose(),this._guest?.dispose()}onReady(){this.initialize()}async initialize(){if(!this.enabled){(0,i4.v)("gitlens:vsls",!1);return}b.workspace.workspaceFolders?.some(e=>e.uri.scheme===$.sN.Vsls)&&this.setReadonly(!0);try{this._api=this.getLiveShareApi();let e=await this._api;if(null==e){(0,i4.v)("gitlens:vsls",!1),this._ready.fulfill();return}(0,i4.v)("gitlens:vsls",!0),this._disposable=b.Disposable.from(this._disposable,e.onDidChangeSession(t=>this.onLiveShareSessionChanged(e,t),this)),this.onLiveShareSessionChanged(e,{session:e.session})}catch(e){eL.Yd.error(e)}}onConfigurationChanged(e){C.D.changed(e,"liveshare.enabled")&&this.initialize()}async onLiveShareSessionChanged(e,t){switch(this._host?.dispose(),this._host=void 0,this._guest?.dispose(),this._guest=void 0,t.session.role){case 1:this.setReadonly(!1),(0,i4.v)("gitlens:vsls","host"),C.D.get("liveshare.allowGuestAccess")&&(this._host=await l4.share(e,this.container)),this._ready.fulfill();break;case 2:this.setReadonly(!0),(0,i4.v)("gitlens:vsls","guest"),this._guest=await l8.connect(e,this.container),this._ready.fulfill();break;default:this.setReadonly(!1),(0,i4.v)("gitlens:vsls",!0),this._ready.pending||(this._ready=(0,t6.PQ)())}}async getLiveShareApi(){try{let e=b.extensions.getExtension("ms-vsliveshare.vsliveshare");if(null!=e){let t=e.isActive?e.exports:await e.activate();return await t.getApi("1.0.4753")??void 0}}catch(e){eL.Yd.error(e)}}_readonly=!1;get readonly(){return this._readonly}setReadonly(e){this._readonly=e,(0,i4.v)("gitlens:readonly",!!e||void 0)}get enabled(){return C.D.get("liveshare.enabled")}async guest(){return null!=this._guest||await this._ready.promise,this._guest}async getContact(e){if(null==e)return;let t=await this._api;if(null!=t)return(await t.getContacts([e])).contacts[e]}async getContacts(e){let t=await this._api;if(null!=t)return Object.values((await t.getContacts(e)).contacts)}async getContactPresence(e){let t=await this.getContact(e);if(null!=t)return ht(t.status)}async getContactsPresence(e){let t=await this.getContacts(e);if(null!=t)return new Map(Object.values(t).map(e=>[e.email,ht(e.status)]))}async invite(e){if(null==e)return;let t=await this.getContact(e);if(null!=t)return t.invite()}async startSession(){let e=await this._api;if(null!=e)return e.share()}}he([(0,eW.fF)()],hi.prototype,"getContact",1),he([(0,eW.fF)({args:{0:e=>e.length}})],hi.prototype,"getContacts",1),he([(0,eW.fF)()],hi.prototype,"getContactPresence",1),he([(0,eW.fF)({args:{0:e=>e.length}})],hi.prototype,"getContactsPresence",1);var hr=i(1676),hs=i(5798),hn=i(6260);let ho=new hs.ke("rebase/abort"),ha=new hs.ke("rebase/disable"),hl=new hs.ke("rebase/search"),hh=new hs.ke("rebase/start"),hc=new hs.ke("rebase/switch"),hu=new hs.ke("rebase/reorder"),hd=new hs.ke("rebase/change/entry"),hp=new hs.ke("rebase/move/entry"),hg=new hs.ke("rebase/selection/update"),hm=new hs.jH("rebase/didChange");var hf=Object.defineProperty,hw=Object.getOwnPropertyDescriptor,hv=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?hw(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&hf(t,i,n),n};let hy=new TextDecoder("utf8"),hb=0,hC=0,hA=/^\s?#\s?Rebase\s([0-9a-f]+)(?:..([0-9a-f]+))?\sonto\s([0-9a-f]+)\s.*$/im,hP=/^\s?(p|pick|r|reword|e|edit|s|squash|f|fixup|d|drop)\s([0-9a-f]+?)\s(.*)$/gm,hD=new Map([["p","pick"],["pick","pick"],["r","reword"],["reword","reword"],["e","edit"],["edit","edit"],["s","squash"],["squash","squash"],["f","fixup"],["fixup","fixup"],["d","drop"],["drop","drop"]]);class hk{constructor(e){this.container=e,this._disposable=b.Disposable.from(b.window.registerCustomEditorProvider("gitlens.rebase",this,{supportsMultipleEditorsPerDocument:!1,webviewOptions:{enableFindWidget:!0,retainContextWhenHidden:!0}})),this.ascending="asc"===C.D.get("rebaseEditor.ordering")}_disposable;ascending=!1;dispose(){this._disposable.dispose()}get contextKeyPrefix(){return"gitlens:webview:rebase"}get enabled(){let e=C.D.inspectAny("workbench.editorAssociations")?.globalValue;if(null==e||0===e.length)return!0;if(Array.isArray(e)){let t=e.find(e=>"git-rebase-todo"===e.filenamePattern);return null==t||"gitlens.rebase"===t.viewType}let t=e["git-rebase-todo"];return null==t||"gitlens.rebase"===t}_disableAfterNextUse=!1;async enableForNextUse(){this.enabled||(await this.setEnabled(!0),this._disableAfterNextUse=!0)}async setEnabled(e){this._disableAfterNextUse=!1;let t=C.D.inspectAny("workbench.editorAssociations"),i=t?.globalValue;if(Array.isArray(i)&&(i=i.reduce((e,t)=>(e[t.filenamePattern]=t.viewType,e),Object.create(null))),null==i){if(e)return;i={"git-rebase-todo":"default"}}else i["git-rebase-todo"]=e?"gitlens.rebase":"default";await C.D.updateAny("workbench.editorAssociations",i,b.ConfigurationTarget.Global)}async resolveCustomTextEditor(e,t,i){this.container.usage.track("rebaseEditor:shown");let r=(0,M.AH)(b.Uri.joinPath(e.uri,"..","..","..").fsPath),s=this.container.git.getRepository(r),n=[],o={dispose:()=>void b.Disposable.from(...n).dispose(),id:(1073741824===hC?hC=1:hC++,hC),subscriptions:n,document:e,panel:t,repoPath:s?.path??r,firstSelection:!0};n.push(t.onDidDispose(()=>{(0,hn.qW)(this.contextKeyPrefix),b.Disposable.from(...n).dispose()}),t.onDidChangeViewState(e=>this.onViewStateChanged(o,e)),t.webview.onDidReceiveMessage(e=>this.onMessageReceived(o,e)),b.workspace.onDidChangeTextDocument(t=>{0!==t.contentChanges.length&&t.document.uri.toString()===e.uri.toString()&&this.updateState(o,!0)}),b.workspace.onDidSaveTextDocument(t=>{t.uri.toString()===e.uri.toString()&&this.updateState(o,!0)})),null!=s&&n.push(s.onDidChange(e=>{e.changed(tP.I6.Rebase,tP.du.Any)&&this.updateState(o)})),t.webview.options={enableCommandUris:!0,enableScripts:!0},t.webview.html=await this.getHtml(o),this._disableAfterNextUse&&(this._disableAfterNextUse=!1,this.setEnabled(!1))}onViewFocusChanged(e){(0,hn.Db)(this.contextKeyPrefix)}onViewStateChanged(e,t){t.webviewPanel.visible?(0,hn.Db)(this.contextKeyPrefix):(0,hn.qW)(this.contextKeyPrefix),e.pendingChange&&this.updateState(e)}async parseState(e){if(void 0===e.branchName){let t=await this.container.git.getBranch(e.repoPath);e.branchName=t?.name??null}return await hR(this.container,e,this.ascending)}async postMessage(e,t){try{let i=await e.panel.webview.postMessage(t);return e.pendingChange=!i,i}catch(t){return eL.Yd.error(t),e.pendingChange=!0,!1}}onMessageReceived(e,t){switch(t.method){case hs.W2.method:(0,hs.mq)(hs.W2,t,e=>{this.onViewFocusChanged(e)});break;case ho.method:(0,hs.mq)(ho,t,()=>this.abort(e));break;case ha.method:(0,hs.mq)(ha,t,()=>this.disable(e));break;case hl.method:(0,hs.mq)(hl,t,()=>(0,rg.dO)("editor.action.webvieweditor.showFind"));break;case hh.method:(0,hs.mq)(hh,t,()=>this.rebase(e));break;case hc.method:(0,hs.mq)(hc,t,()=>this.switchToText(e));break;case hu.method:(0,hs.mq)(hu,t,t=>this.swapOrdering(t,e));break;case hd.method:(0,hs.mq)(hd,t,t=>this.onEntryChanged(e,t));break;case hp.method:(0,hs.mq)(hp,t,t=>this.onEntryMoved(e,t));break;case hg.method:(0,hs.mq)(hg,t,t=>this.onSelectionChanged(e,t))}}async onEntryChanged(e,t){let i=h$(e.document),r=i.find(e=>e.sha===t.sha);if(null==r)return;let s=e.document.positionAt(r.index),n=e.document.validateRange(new b.Range(new b.Position(s.line,0),new b.Position(s.line,1073741824))),o=t.action,a=new b.WorkspaceEdit,l=[...i];l.splice(i.indexOf(r),1,{...r,action:t.action});let h=!1;for(let e of l)"squash"===e.action||"fixup"===e.action?h=!0:h&&"drop"!==e.action&&(h=!1);if(h){let t=l[l.length-1];if(r.sha===t.sha)o="pick";else{let i=e.document.positionAt(t.index),r=e.document.validateRange(new b.Range(new b.Position(i.line,0),new b.Position(i.line,1073741824)));a.replace(e.document.uri,r,`pick ${t.sha} ${t.message}`)}}a.replace(e.document.uri,n,`${o} ${r.sha} ${r.message}`),await b.workspace.applyEdit(a)}async onEntryMoved(e,t){let i;let r=h$(e.document),s=r.find(e=>e.sha===t.sha);if(null==s)return;let n=r.findIndex(e=>e.sha===t.sha);if(t.relative){if(-1===t.to&&0===n||1===t.to&&n===r.length-1)return;i=n+t.to}else{if(n===t.to)return;i=t.to}let o=r[i],a=e.document.positionAt(o.index).line;i<n&&a++;let l=e.document.positionAt(s.index),h=e.document.validateRange(new b.Range(new b.Position(l.line,0),new b.Position(l.line+1,0))),c=[...r];c.splice(n,1),c.splice(i,0,s);let u=!1;for(let e of c)"squash"===e.action||"fixup"===e.action?u=!0:u&&"drop"!==e.action&&(u=!1);let d=new b.WorkspaceEdit,p=s.action;if(u){let t=c[c.length-1];if(s.sha===t.sha)p="pick";else{let i=e.document.positionAt(t.index),r=e.document.validateRange(new b.Range(new b.Position(i.line,0),new b.Position(i.line,1073741824)));d.replace(e.document.uri,r,`pick ${t.sha} ${t.message}`)}}d.delete(e.document.uri,h),d.insert(e.document.uri,new b.Position(a,0),`${p} ${s.sha} ${s.message}
`),await b.workspace.applyEdit(d)}onSelectionChanged(e,t){null==e.fireSelectionChangedDebounced&&(e.fireSelectionChangedDebounced=(0,t5.Ds)(this.fireSelectionChanged.bind(this),250)),e.fireSelectionChangedDebounced(e,t.sha)}fireSelectionChanged(e,t){if(null==t)return;let i=C.D.get("rebaseEditor.showDetailsView");t=e.commits?.find(e=>e.sha.startsWith(t))?.sha??t,this.container.events.fire("commit:selected",{commit:(0,F.xB)(t,e.repoPath,{refType:"revision"}),interaction:"passive",preserveFocus:!0,preserveVisibility:e.firstSelection?!1===i:"selection"!==i},{source:"gitlens.rebase"}),e.firstSelection=!1}updateState(e,t=!1){if(t){e.notifyDidChangeStateDebounced?.cancel(),this.notifyDidChangeState(e);return}null==e.notifyDidChangeStateDebounced&&(e.notifyDidChangeStateDebounced=(0,t5.Ds)(this.notifyDidChangeState.bind(this),250)),e.notifyDidChangeStateDebounced(e)}async notifyDidChangeState(e){if(!e.panel.visible){e.pendingChange=!0;return}let t=await this.parseState(e);this.postMessage(e,{id:(1073741824===hb?hb=1:hb++,`host:${hb}`),method:hm.method,params:{state:t}})}async abort(e){e.dispose();let t=new b.WorkspaceEdit;t.replace(e.document.uri,new b.Range(0,0,e.document.lineCount,0),""),await b.workspace.applyEdit(t),await e.document.save(),e.panel.dispose()}async disable(e){await this.abort(e),await this.setEnabled(!1)}async rebase(e){e.dispose(),await e.document.save(),e.panel.dispose()}swapOrdering(e,t){this.ascending=e.ascending??!1,C.D.updateEffective("rebaseEditor.ordering",this.ascending?"asc":"desc"),this.updateState(t,!0)}switchToText(e){(0,t1.QP)(),(0,rg.dO)("vscode.open",e.document.uri,{override:!1,preview:!1})}async getHtml(e){let t=b.Uri.joinPath(this.container.context.extensionUri,"dist","webviews"),i=b.Uri.joinPath(t,"rebase.html"),[r,s]=await Promise.all([b.workspace.fs.readFile(i),this.parseState(e)]);return(0,hn.Q5)(hy.decode(r),"gitlens.rebase",void 0,e.panel.webview.cspSource,(0,tp.Vu)(),e.panel.webview.asWebviewUri(this.container.context.extensionUri).toString(),e.panel.webview.asWebviewUri(t).toString(),"editor",s)}}async function hS(e,t,i,r){t.commits=[],t.authors=new Map;let s=await e.git.richSearchCommits(t.repoPath,{query:`${i?`#:${i} `:""}${(0,eM.v_)((0,eM.UI)(r,e=>`#:${e.sha}`)," ")}`},{limit:0});if(null!=s){for(let e of s.commits.values())if(t.commits.push(e),t.authors.has(e.author.name)||t.authors.set(e.author.name,{author:e.author.name,avatarUrl:(await e.getAvatarUri()).toString(!0),email:e.author.email}),!t.authors.has(e.committer.name)){let i=await e.committer.getAvatarUri(e);t.authors.set(e.committer.name,{author:e.committer.name,avatarUrl:i.toString(!0),email:e.committer.email})}}}async function hR(e,t,i){let r;let s=t.document.getText(),n=h$(s),[,,,o]=hA.exec(s)??["","",""];(null==t.authors||null==t.commits)&&await hS(e,t,o,n);let a=C.D.get("defaultDateFormat"),l=hr.C.getMarkdownCommandArgs("${commit}",t.repoPath),h=o?t.commits?.find(e=>e.sha.startsWith(o)):void 0;for(let e of n)null!=(r=t.commits?.find(t=>t.sha.startsWith(e.sha)))&&(r.sha===h?.sha&&(o=""),e.commit={sha:r.sha,author:r.author.name,committer:r.committer.name,date:r.formatDate(a),dateFromNow:r.formatDateFromNow(),message:(0,tw.X)(r.message??r.summary)});return{webviewId:"gitlens.rebase",webviewInstanceId:void 0,timestamp:Date.now(),branch:t.branchName??"",onto:o?{sha:o,commit:null!=h?{sha:h.sha,author:h.author.name,committer:h.committer.name,date:h.formatDate(a),dateFromNow:h.formatDateFromNow(),message:(0,tw.X)(h.message||"root")}:void 0}:void 0,entries:n,authors:null!=t.authors?Object.fromEntries(t.authors):{},commands:{commit:l},ascending:i}}function h$(e){let t,i,r,s;let n="string"==typeof e?e:e.getText(),o=[];for(;null!=(t=hP.exec(n));)[,i,r,s]=t,o.push({index:t.index,action:hD.get(i)??"pick",sha:` ${r}`.substr(1),message:null==s||0===s.length?"":` ${s}`.substr(1)});return o.reverse()}hv([(0,eW.fF)({args:{0:e=>e.uri.toString(!0)}})],hk.prototype,"resolveCustomTextEditor",1),hv([(0,eW.fF)({args:{0:e=>`focused=${e.focused}, inputFocused=${e.inputFocused}`}})],hk.prototype,"onViewFocusChanged",1),hv([(0,eW.fF)({args:{0:e=>`${e.id}:${e.document.uri.toString(!0)}`,1:e=>`active=${e.webviewPanel.active}, visible=${e.webviewPanel.visible}`}})],hk.prototype,"onViewStateChanged",1),hv([(0,eW.fF)({args:{0:e=>`${e.id}:${e.document.uri.toString(!0)}`}})],hk.prototype,"updateState",1),hv([(0,eW.fF)({args:{0:e=>`${e.id}:${e.document.uri.toString(!0)}`}})],hk.prototype,"notifyDidChangeState",1),hv([(0,eW.cM)({args:!1})],hk.prototype,"abort",1),hv([(0,eW.cM)({args:!1})],hk.prototype,"disable",1),hv([(0,eW.cM)({args:!1})],hk.prototype,"rebase",1),hv([(0,eW.cM)({args:!1})],hk.prototype,"swapOrdering",1),hv([(0,eW.cM)({args:!1})],hk.prototype,"switchToText",1);var h_=i(620),hI=Object.defineProperty,hF=Object.getOwnPropertyDescriptor,hx=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?hF(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&hI(t,i,n),n};let hT=class e{static #e;static #t=new Proxy({},{get:function(t,i){if(null!=e.#e)return e.#e[i];if("config"===i)return C.D.getAll();throw Error("Container is not initialized")}});static create(t,i,r,s,n){if(null!=e.#e)throw Error("Container is already initialized");return e.#e=new e(t,i,r,s,n),e.#e}static get instance(){return e.#e??e.#t}_onReady=new b.EventEmitter;get onReady(){return this._onReady.event}BranchDateFormatting={dateFormat:void 0,dateStyle:void 0,reset:()=>{this.BranchDateFormatting.dateFormat=C.D.get("defaultDateFormat"),this.BranchDateFormatting.dateStyle=C.D.get("defaultDateStyle")}};CommitDateFormatting={dateFormat:null,dateSource:"authored",dateStyle:"relative",reset:()=>{this.CommitDateFormatting.dateFormat=C.D.get("defaultDateFormat"),this.CommitDateFormatting.dateSource=C.D.get("defaultDateSource"),this.CommitDateFormatting.dateStyle=C.D.get("defaultDateStyle")}};CommitShaFormatting={length:7,reset:()=>{this.CommitShaFormatting.length=Math.max(5,C.D.get("advanced.abbreviatedShaLength"))}};PullRequestDateFormatting={dateFormat:null,dateStyle:"relative",reset:()=>{this.PullRequestDateFormatting.dateFormat=C.D.get("defaultDateFormat"),this.PullRequestDateFormatting.dateStyle=C.D.get("defaultDateStyle")}};TagDateFormatting={dateFormat:null,dateStyle:"relative",reset:()=>{this.TagDateFormatting.dateFormat=C.D.get("defaultDateFormat"),this.TagDateFormatting.dateStyle=C.D.get("defaultDateStyle")}};_connection;_disposables;_terminalLinks;_webviews;constructor(e,t,r,s,n){var o,a;this._context=e,this._prerelease=r,this._version=s,this.ensureModeApplied(),this._disposables=[this._storage=t,this._telemetry=new nd(this),this._usage=new ng(this,t),C.D.onDidChangeAny(this.onAnyConfigurationChanged,this)],this._disposables.push(this._connection=new r8(this)),this._disposables.push(this._accountAuthentication=new rj(this,this._connection)),this._disposables.push(this._subscription=new r2(this,this._connection,n)),this._disposables.push(this._git=new rC(this)),this._disposables.push(new rh(this)),this._disposables.push(this._uri=new nO(this)),this._disposables.push(this._deepLinks=new nF(this)),this._disposables.push(this._actionRunners=new i0.AR(this)),this._disposables.push(this._tracker=new t9.r(this)),this._disposables.push(this._lineTracker=new n_(this)),this._disposables.push(this._keyboard=new nu),this._disposables.push(this._vsls=new hi(this)),this._disposables.push(this._eventBus=new i9),this._disposables.push(this._fileAnnotationController=new iq.f(this)),this._disposables.push(this._lineAnnotationController=new iX(this)),this._disposables.push(this._lineHoverController=new rS(this)),this._disposables.push(this._statusBarController=new ns(this)),this._disposables.push(this._codeLensController=new i5(this)),this._disposables.push(this._webviews=new h_.V(this));let l=this._webviews.registerWebviewPanel({id:$.Gh.ShowGraphPage,options:{preserveInstance:!0}},{id:"gitlens.graph",fileName:"graph.html",iconPath:"images/gitlens-icon.png",title:"Commit Graph",contextKeyPrefix:"gitlens:webview:graph",trackingFeature:"graphWebview",plusFeature:!0,column:b.ViewColumn.Active,webviewHostOptions:{retainContextWhenHidden:!0,enableFindWidget:!1},allowMultipleInstances:C.D.get("graph.allowMultiple")},async(e,t)=>{let{GraphWebviewProvider:r}=await i.e(786).then(i.bind(i,1302));return new r(e,t)});this._disposables.push(l),this._disposables.push((o=this,b.Disposable.from((0,rg.xR)($.Gh.ShowGraph,(...e)=>{let t;let[i]=e;if((0,sK.WO)(i)){if(null!=i.rootUri){let e=o.git.getRepository(i.rootUri);null!=e&&(t=e)}e=[]}else i instanceof sJ.Re&&(i.is("repo-folder")&&(t=i.repo),e=[]);return null!=t?(0,rg.P0)($.Gh.ShowInCommitGraph,t):"panel"===C.D.get("graph.layout")?(0,rg.P0)($.Gh.ShowGraphView,...e):(0,rg.P0)($.Gh.ShowGraphPage,void 0,...e)}),(0,rg.xR)(`${l.id}.switchToEditorLayout`,async()=>{await C.D.updateEffective("graph.layout","editor"),queueMicrotask(()=>void(0,rg.P0)($.Gh.ShowGraphPage))}),(0,rg.xR)(`${l.id}.switchToPanelLayout`,async()=>{await C.D.updateEffective("graph.layout","panel"),queueMicrotask(async()=>{await (0,rg.dO)("gitlens.views.graph.resetViewLocation"),await (0,rg.dO)("gitlens.views.graphDetails.resetViewLocation"),(0,rg.P0)($.Gh.ShowGraphView)})}),(0,rg.xR)($.Gh.ToggleGraph,(...e)=>{(0,i4.fw)("gitlens:webviewView:graph:visible")?(0,rg.dO)("workbench.action.closePanel"):(0,rg.P0)($.Gh.ShowGraphView,...e)}),(0,rg.xR)($.Gh.ToggleMaximizedGraph,(...e)=>{(0,i4.fw)("gitlens:webviewView:graph:visible")||(0,rg.P0)($.Gh.ShowGraphView,...e),(0,rg.dO)("workbench.action.toggleMaximizedPanel")}),(0,rg.xR)($.Gh.ShowInCommitGraph,e=>{let t="preserveFocus"in e&&(e.preserveFocus??!1);if("panel"===C.D.get("graph.layout")){if(!o.graphView.visible){let i=l.getBestInstance({preserveFocus:t},e);if(null!=i){i.show({preserveFocus:t},e);return}}o.graphView.show({preserveFocus:t},e)}else l.show({preserveFocus:t},e)}),(0,rg.xR)($.Gh.ShowInCommitGraphView,e=>{let t="preserveFocus"in e&&(e.preserveFocus??!1);o.graphView.show({preserveFocus:t},e)}),(0,rg.xR)(`${l.id}.refresh`,()=>void l.getActiveInstance()?.refresh(!0)),(0,rg.xR)(`${l.id}.split`,()=>void l.splitActiveInstance({preserveInstance:!1,column:b.ViewColumn.Beside}))))),this._disposables.push(this._graphView=this._webviews.registerWebviewView({id:"gitlens.views.graph",fileName:"graph.html",title:"Commit Graph",contextKeyPrefix:"gitlens:webviewView:graph",trackingFeature:"graphView",plusFeature:!0,webviewHostOptions:{retainContextWhenHidden:!0}},async(e,t)=>{let{GraphWebviewProvider:r}=await i.e(786).then(i.bind(i,1302));return new r(e,t)})),this._disposables.push(new sZ(this));let h=this._webviews.registerWebviewPanel({id:$.Gh.ShowFocusPage,options:{preserveInstance:!0}},{id:"gitlens.focus",fileName:"focus.html",iconPath:"images/gitlens-icon.png",title:"Focus",contextKeyPrefix:"gitlens:webview:focus",trackingFeature:"focusWebview",plusFeature:!0,column:b.ViewColumn.Active,webviewHostOptions:{retainContextWhenHidden:!0,enableFindWidget:!0},allowMultipleInstances:C.D.get("focus.allowMultiple")},async(e,t)=>{let{FocusWebviewProvider:r}=await i.e(521).then(i.bind(i,1629));return new r(e,t)});this._disposables.push(h),this._disposables.push(b.Disposable.from((0,rg.xR)(`${h.id}.refresh`,()=>void h.getActiveInstance()?.refresh(!0)),(0,rg.xR)(`${h.id}.split`,()=>void h.splitActiveInstance({preserveInstance:!1,column:b.ViewColumn.Beside}))));let c=this._webviews.registerWebviewPanel({id:$.Gh.ShowTimelinePage,options:{preserveInstance:!0}},{id:"gitlens.timeline",fileName:"timeline.html",iconPath:"images/gitlens-icon.png",title:"Visual File History",contextKeyPrefix:"gitlens:webview:timeline",trackingFeature:"timelineWebview",plusFeature:!0,column:b.ViewColumn.Active,webviewHostOptions:{retainContextWhenHidden:!1,enableFindWidget:!1},allowMultipleInstances:C.D.get("visualHistory.allowMultiple")},async(e,t)=>{let{TimelineWebviewProvider:r}=await i.e(831).then(i.bind(i,9042));return new r(e,t)});this._disposables.push(c),this._disposables.push(b.Disposable.from((0,rg.xR)($.Gh.ShowInTimeline,(...e)=>void c.show(void 0,...e)),(0,rg.xR)(`${c.id}.refresh`,()=>void c.getActiveInstance()?.refresh(!0)),(0,rg.xR)(`${c.id}.split`,()=>void c.splitActiveInstance({preserveInstance:!1,column:b.ViewColumn.Beside})))),this._disposables.push(this._timelineView=this._webviews.registerWebviewView({id:"gitlens.views.timeline",fileName:"timeline.html",title:"Visual File History",contextKeyPrefix:"gitlens:webviewView:timeline",trackingFeature:"timelineView",plusFeature:!0,webviewHostOptions:{retainContextWhenHidden:!1}},async(e,t)=>{let{TimelineWebviewProvider:r}=await i.e(831).then(i.bind(i,9042));return new r(e,t)})),this._disposables.push(this._rebaseEditor=new hk(this));let u=this._webviews.registerWebviewPanel({id:$.Gh.ShowSettingsPage},{id:"gitlens.settings",fileName:"settings.html",iconPath:"images/gitlens-icon.png",title:"GitLens Settings",contextKeyPrefix:"gitlens:webview:settings",trackingFeature:"settingsWebview",plusFeature:!1,column:b.ViewColumn.Active,webviewHostOptions:{retainContextWhenHidden:!1,enableFindWidget:!0}},async(e,t)=>{let{SettingsWebviewProvider:r}=await i.e(571).then(i.bind(i,5596));return new r(e,t)});this._disposables.push(u),this._disposables.push(b.Disposable.from(...[$.Gh.ShowSettingsPageAndJumpToBranchesView,$.Gh.ShowSettingsPageAndJumpToCommitsView,$.Gh.ShowSettingsPageAndJumpToContributorsView,$.Gh.ShowSettingsPageAndJumpToFileHistoryView,$.Gh.ShowSettingsPageAndJumpToLineHistoryView,$.Gh.ShowSettingsPageAndJumpToRemotesView,$.Gh.ShowSettingsPageAndJumpToRepositoriesView,$.Gh.ShowSettingsPageAndJumpToSearchAndCompareView,$.Gh.ShowSettingsPageAndJumpToStashesView,$.Gh.ShowSettingsPageAndJumpToTagsView,$.Gh.ShowSettingsPageAndJumpToWorkTreesView,$.Gh.ShowSettingsPageAndJumpToViews,$.Gh.ShowSettingsPageAndJumpToCommitGraph,$.Gh.ShowSettingsPageAndJumpToAutolinks].map(e=>{let t;let i=/.*?!(.*)/.exec(e);return null!=i&&([,t]=i),(0,rg.xR)(e,()=>void u.show(void 0,...t?[t]:[]))}))),this._disposables.push(this._webviews.registerWebviewPanel({id:$.Gh.ShowWelcomePage},{id:"gitlens.welcome",fileName:"welcome.html",iconPath:"images/gitlens-icon.png",title:"Welcome to GitLens",contextKeyPrefix:"gitlens:webview:welcome",trackingFeature:"welcomeWebview",plusFeature:!1,column:b.ViewColumn.Active,webviewHostOptions:{retainContextWhenHidden:!1,enableFindWidget:!0}},async(e,t)=>{let{WelcomeWebviewProvider:r}=await i.e(773).then(i.bind(i,7745));return new r(e,t)})),this._disposables.push(new lx),this._disposables.push(this._repositoriesView=new lu(this)),this._disposables.push(this._commitDetailsView=this._webviews.registerWebviewView({id:"gitlens.views.commitDetails",fileName:"commitDetails.html",title:"Commit Details",contextKeyPrefix:"gitlens:webviewView:commitDetails",trackingFeature:"commitDetailsView",plusFeature:!1,webviewHostOptions:{retainContextWhenHidden:!1}},async(e,t)=>{let{CommitDetailsWebviewProvider:r}=await i.e(10).then(i.bind(i,9263));return new r(e,t,{attachedTo:"default"})}));let d=this._webviews.registerWebviewPanel({id:$.Gh.ShowPatchDetailsPage,options:{preserveInstance:!0}},{id:"gitlens.patchDetails",fileName:"patchDetails.html",iconPath:"images/gitlens-icon.png",title:"Patch",contextKeyPrefix:"gitlens:webview:patchDetails",trackingFeature:"patchDetailsWebview",plusFeature:!0,column:b.ViewColumn.Active,webviewHostOptions:{retainContextWhenHidden:!1,enableFindWidget:!1},allowMultipleInstances:!0},async(e,t)=>{let{PatchDetailsWebviewProvider:r}=await i.e(537).then(i.bind(i,9804));return new r(e,t)});this._disposables.push(d),this._disposables.push(this._patchDetailsView=this._webviews.registerWebviewView({id:"gitlens.views.patchDetails",fileName:"patchDetails.html",title:"Patch",contextKeyPrefix:"gitlens:webviewView:patchDetails",trackingFeature:"patchDetailsView",plusFeature:!0,webviewHostOptions:{retainContextWhenHidden:!1}},async(e,t)=>{let{PatchDetailsWebviewProvider:r}=await i.e(537).then(i.bind(i,9804));return new r(e,t)},async(...e)=>{if("editor"===C.D.get("cloudPatches.experimental.layout")){await (0,i4.v)("gitlens:views:patchDetails:mode",void 0),(0,rg.P0)($.Gh.ShowPatchDetailsPage,void 0,...e);return}let t=e[0];null!=t&&await (0,i4.v)("gitlens:views:patchDetails:mode","state"in t?t.state.mode:t.mode)})),this._disposables.push(this._graphDetailsView=this._webviews.registerWebviewView({id:"gitlens.views.graphDetails",fileName:"commitDetails.html",title:"Commit Graph Details",contextKeyPrefix:"gitlens:webviewView:graphDetails",trackingFeature:"graphDetailsView",plusFeature:!1,webviewHostOptions:{retainContextWhenHidden:!1}},async(e,t)=>{let{CommitDetailsWebviewProvider:r}=await i.e(10).then(i.bind(i,9263));return new r(e,t,{attachedTo:"graph"})})),this._disposables.push(this._commitsView=new aY(this)),this._disposables.push(this._fileHistoryView=new a6(this)),this._disposables.push(this._lineHistoryView=new a8(this)),this._disposables.push(this._branchesView=new aM(this)),this._disposables.push(this._remotesView=new lr(this)),this._disposables.push(this._stashesView=new lD(this)),this._disposables.push(this._tagsView=new lI(this)),this._disposables.push(this._worktreesView=new lj(this)),this._disposables.push(this._contributorsView=new aJ(this)),this._disposables.push(this._searchAndCompareView=new lv(this)),this._disposables.push(this._draftsView=new a4(this)),this._disposables.push(this._workspacesView=new lL(this)),this._disposables.push(this._homeView=this._webviews.registerWebviewView({id:"gitlens.views.home",fileName:"home.html",title:"Home",contextKeyPrefix:"gitlens:webviewView:home",trackingFeature:"homeView",plusFeature:!1,webviewHostOptions:{retainContextWhenHidden:!1}},async(e,t)=>{let{HomeWebviewProvider:r}=await i.e(177).then(i.bind(i,2384));return new r(e,t)})),this._disposables.push(this._accountView=this._webviews.registerWebviewView({id:"gitlens.views.account",fileName:"account.html",title:"GitKraken Account",contextKeyPrefix:"gitlens:webviewView:account",trackingFeature:"accountView",plusFeature:!1,webviewHostOptions:{retainContextWhenHidden:!1}},async(e,t)=>{let{AccountWebviewProvider:r}=await i.e(809).then(i.bind(i,420));return new r(e,t)})),C.D.get("terminalLinks.enabled")&&this._disposables.push(this._terminalLinks=new ny(this)),this._disposables.push(C.D.onDidChange(e=>{C.D.changed(e,"terminalLinks.enabled")&&(this._terminalLinks?.dispose(),C.D.get("terminalLinks.enabled")&&this._disposables.push(this._terminalLinks=new ny(this)))})),e.subscriptions.push({dispose:()=>this._disposables.reverse().forEach(e=>void e.dispose())}),a=this,null!=ne()&&setTimeout(()=>a.workspaces.addMissingCurrentWorkspaceRepos(),1e4)}deactivate(){this._deactivating=!0}_deactivating=!1;get deactivating(){return this._deactivating}_ready=!1;async ready(){if(this._ready)throw Error("Container is already ready");this._ready=!0,await this.registerGitProviders(),queueMicrotask(()=>this._onReady.fire())}async registerGitProviders(){for(let e of(await iO(this)))this._disposables.push(this._git.register(e.descriptor.id,e));this._git.registrationComplete()}onAnyConfigurationChanged(e){C.D.changedAny(e,$.m1)&&(this._mode=void 0,C.D.changed(e,"outputLevel")&&(eL.Yd.logLevel=(0,i6.oE)(C.D.get("outputLevel"))),C.D.changed(e,"defaultGravatarsStyle")&&(0,tf.Wr)(C.D.get("defaultGravatarsStyle")),C.D.changed(e,"mode")&&this.ensureModeApplied())}_accountAuthentication;get accountAuthentication(){return this._accountAuthentication}_accountView;get accountView(){return this._accountView}_actionRunners;get actionRunners(){return this._actionRunners}_ai;get ai(){return null==this._ai&&this._disposables.push(this._ai=new iL(this)),this._ai}_autolinks;get autolinks(){return null==this._autolinks&&this._disposables.push(this._autolinks=new iG.P(this)),this._autolinks}_branchesView;get branchesView(){return this._branchesView}_cache;get cache(){return null==this._cache&&this._disposables.push(this._cache=new i1(this)),this._cache}_drafts;get drafts(){return null==this._drafts&&this._disposables.push(this._drafts=new rI(this,this._connection)),this._drafts}_repositoryIdentity;get repositoryIdentity(){return null==this._repositoryIdentity&&this._disposables.push(this._repositoryIdentity=new sz(this,this._connection)),this._repositoryIdentity}_draftsView;get draftsView(){return this._draftsView}_codeLensController;get codeLens(){return this._codeLensController}_commitsView;get commitsView(){return this._commitsView}_commitDetailsView;get commitDetailsView(){return this._commitDetailsView}_context;get context(){return this._context}_contributorsView;get contributorsView(){return this._contributorsView}get debugging(){return this._context.extensionMode===b.ExtensionMode.Development}_deepLinks;get deepLinks(){return this._deepLinks}get env(){if(this.prereleaseOrDebugging){let e=C.D.getAny("gitkraken.env");if("dev"===e)return"dev";if("staging"===e)return"staging"}return"production"}_eventBus;get events(){return this._eventBus}_fileAnnotationController;get fileAnnotations(){return this._fileAnnotationController}_fileHistoryView;get fileHistoryView(){return this._fileHistoryView}_focus;get focus(){return null==this._focus&&this._disposables.push(this._focus=new rE(this,new r8(this))),this._focus}_git;get git(){return this._git}_github;get github(){return null==this._github&&(this._github=this._loadGitHubApi()),this._github}async _loadGitHubApi(){try{let e=new(await i.e(457).then(i.bind(i,1064))).GitHubApi(this);return this._disposables.push(e),e}catch(e){eL.Yd.error(e);return}}_gitlab;get gitlab(){return null==this._gitlab&&(this._gitlab=this._loadGitLabApi()),this._gitlab}async _loadGitLabApi(){try{let e=new(await i.e(449).then(i.bind(i,661))).GitLabApi(this);return this._disposables.push(e),e}catch(e){eL.Yd.error(e);return}}_graphDetailsView;get graphDetailsView(){return this._graphDetailsView}_graphView;get graphView(){return this._graphView}_homeView;get homeView(){return this._homeView}get id(){return this._context.extension.id}_integrationAuthentication;get integrationAuthentication(){return null==this._integrationAuthentication&&this._disposables.push(this._integrationAuthentication=new sc(this)),this._integrationAuthentication}_integrations;get integrations(){return null==this._integrations&&this._disposables.push(this._integrations=new sq(this)),this._integrations}_keyboard;get keyboard(){return this._keyboard}_lineAnnotationController;get lineAnnotations(){return this._lineAnnotationController}_lineHistoryView;get lineHistoryView(){return this._lineHistoryView}_lineHoverController;get lineHovers(){return this._lineHoverController}_lineTracker;get lineTracker(){return this._lineTracker}_mode;get mode(){return null==this._mode&&(this._mode=C.D.get("modes")?.[C.D.get("mode.active")]),this._mode}_patchDetailsView;get patchDetailsView(){return this._patchDetailsView}_prerelease;get prerelease(){return this._prerelease}get prereleaseOrDebugging(){return this._prerelease||this.debugging}_rebaseEditor;get rebaseEditor(){return this._rebaseEditor}_remotesView;get remotesView(){return this._remotesView}_repositoriesView;get repositoriesView(){return this._repositoriesView}_repositoryPathMapping;get repositoryPathMapping(){return null==this._repositoryPathMapping&&this._disposables.push(this._repositoryPathMapping=new iF(this)),this._repositoryPathMapping}_searchAndCompareView;get searchAndCompareView(){return this._searchAndCompareView}_stashesView;get stashesView(){return this._stashesView}_statusBarController;get statusBar(){return this._statusBarController}_storage;get storage(){return this._storage}_subscription;get subscription(){return this._subscription}_tagsView;get tagsView(){return this._tagsView}_telemetry;get telemetry(){return this._telemetry}_timelineView;get timelineView(){return this._timelineView}_tracker;get tracker(){return this._tracker}_uri;get uri(){return this._uri}_usage;get usage(){return this._usage}_version;get version(){return this._version}_viewCommands;get viewCommands(){return null==this._viewCommands&&(this._viewCommands=new aT(this)),this._viewCommands}_vsls;get vsls(){return this._vsls}_workspaces;get workspaces(){return null==this._workspaces&&this._disposables.push(this._workspaces=new s9(this,this._connection)),this._workspaces}_workspacesView;get workspacesView(){return this._workspacesView}_worktreesView;get worktreesView(){return this._worktreesView}ensureModeApplied(){let e=this.mode;if(null==e){C.D.clearOverrides();return}if(null!=e.annotations){let t;switch(e.annotations){case"blame":t=$.Gh.ToggleFileBlame;break;case"changes":t=$.Gh.ToggleFileChanges;break;case"heatmap":t=$.Gh.ToggleFileHeatmap}if(null!=t){let i={type:e.annotations,on:!0};setTimeout(rg.P0,50,t,i)}}C.D.applyOverrides({get:(t,i)=>{if(null!=e.annotations){if(C.D.matches(`${e.annotations}.toggleMode`,t,i))return i="window";if(C.D.matches(e.annotations,t,i))return i.toggleMode="window",i}for(let r of["codeLens","currentLine","hovers","statusBar"])if(null!=e[r]){if(C.D.matches(`${r}.enabled`,t,i)){i=e[r];break}if(C.D.matches(r,t,i)){i.enabled=e[r];break}}return i},getAll:t=>(null!=e.annotations&&(t[e.annotations].toggleMode="window"),null!=e.codeLens&&(t.codeLens.enabled=e.codeLens),null!=e.currentLine&&(t.currentLine.enabled=e.currentLine),null!=e.hovers&&(t.hovers.enabled=e.hovers),null!=e.statusBar&&(t.statusBar.enabled=e.statusBar),t),onDidChange:e=>{if(!C.D.changed(e,["mode","modes"]))return e;let t=e.affectsConfiguration;return{...e,affectsConfiguration:(e,i)=>!!/^gitlens\.(?:modes?|blame|changes|heatmap|codeLens|currentLine|hovers|statusBar)\b/.test(e)||t(e,i)}}})}};hx([(0,eW.cM)()],hT.prototype,"registerGitProviders",1),hx([(0,ey.H)()],hT.prototype,"debugging",1),hx([(0,ey.H)()],hT.prototype,"env",1),hx([(0,ey.H)()],hT.prototype,"id",1),hx([(0,ey.H)()],hT.prototype,"prereleaseOrDebugging",1);let hO=hT;function hE(e){return e instanceof hO}},3148:(e,t,i)=>{let r;i.d(t,{X:()=>o});var s=i(4627);let n=/:([-+_a-z0-9]+):/g;function o(e){return null==r&&(r=JSON.parse((0,s.QC)(""))),e.replace(n,(e,t)=>r[t]||e)}},3951:(e,t,i)=>{i.d(t,{Vu:()=>s,FB:()=>n,Vj:()=>o});let r=require("crypto");function s(){return(0,r.randomBytes)(16).toString("base64")}function n(e,t="hex"){return(0,r.createHash)("md5").update(e).digest(t)}function o(){return(0,r.randomUUID)()}},1177:(e,t,i)=>{i.d(t,{Nx:()=>h,a_:()=>c,he:()=>o.default});var r=i(7282),s=i(7310),n=i(6018),o=i(6292),a=i(5148),l=i(4336);function h(e){let t;let i=a.D.get("proxy");return(null!=i?(t=i.url??void 0,e=e??i.strictSSL):"off"===a.D.getAny("http.proxySupport",void 0,"override")?e=e??!0:(e=e??a.D.getAny("http.proxyStrictSSL",void 0,!0),t=a.D.getAny("http.proxy")||r.env.HTTPS_PROXY||r.env.HTTP_PROXY),t)?(l.Yd.debug(`Using https proxy: ${t}`),new n.HttpsProxyAgent({...s.parse(t),rejectUnauthorized:e})):!1===e?new n.HttpsProxyAgent({rejectUnauthorized:!1}):void 0}async function c(e,t){if("force"!==e)return t();let i=r.env.NODE_TLS_REJECT_UNAUTHORIZED;r.env.NODE_TLS_REJECT_UNAUTHORIZED="0";try{return await t()}finally{r.env.NODE_TLS_REJECT_UNAUTHORIZED=i}}},6150:(e,t,i)=>{function r(e){return Buffer.from(e,"utf8").toString("hex")}function s(e){return Buffer.from(e,"hex").toString("utf8")}i.d(t,{d:()=>s,e:()=>r})},4372:(e,t,i)=>{i.d(t,{a:()=>r.hrtime});var r=i(7282)},7338:(e,t,i)=>{i.d(t,{$L:()=>n,ED:()=>l,IJ:()=>o,Xf:()=>h});var r=i(7282),s=i(9496);let n=s.env.uiKind===s.UIKind.Web,o="linux"===r.platform,a="darwin"===r.platform,l="win32"===r.platform;function h(){return l?"windows":a?"macOS":o?"linux":n?"web":"unknown"}},4575:(e,t,i)=>{i.d(t,{$y:()=>a,Bn:()=>v,FU:()=>d,Jx:()=>h,MO:()=>w,R5:()=>p,TZ:()=>u,Ww:()=>y,Xq:()=>f,_7:()=>c,dt:()=>l,kX:()=>m,sh:()=>g,yx:()=>b});var r,s,n=i(9496),o=i(6516);class a extends Error{subscription;required;constructor(e,t){super(e.account?.verified===!1?"Email verification required":null!=t&&(0,o.aG)(t)?"Paid plan required":"Plan required"),this.subscription=e,this.required=t,Error.captureStackTrace?.(this,a)}}class l extends Error{original;statusCode;statusText;constructor(e,t,i,r){super(e+=`; status=${i}: ${r}`),this.original=t,this.statusCode=i,this.statusText=r,Error.captureStackTrace?.(this,l)}}var h=((r=h||{})[r.UserDidNotConsent=1]="UserDidNotConsent",r[r.Unauthorized=2]="Unauthorized",r[r.Forbidden=3]="Forbidden",r);class c extends Error{id;original;reason;constructor(e,t,i){let r,s;if(null==t)r=`Unable to get required authentication session for '${e}'`;else if("string"==typeof t)r=t,s=void 0;else switch(s=t){case 1:r=`'${e}' authentication is required for this operation`;break;case 2:r=`Your '${e}' credentials are either invalid or expired`;break;case 3:r=`Your '${e}' credentials do not have the required access`}super(r),this.id=e,this.original=i,this.reason=s,Error.captureStackTrace?.(this,c)}}class u extends Error{constructor(){super("Authentication required"),Error.captureStackTrace?.(this,u)}}class d extends n.CancellationError{constructor(e){super(),this.original=e,Error.captureStackTrace?.(this,d)}}class p extends Error{constructor(e,t){super(`Unable to find the ${t} extension (${e}). Please ensure it is installed and enabled.`),this.extensionId=e,this.extensionName=t,Error.captureStackTrace?.(this,p)}}var g=((s=g||{})[s.RemoteHubApiNotFound=1]="RemoteHubApiNotFound",s[s.NotAGitHubRepository=2]="NotAGitHubRepository",s[s.GitHubAuthenticationNotFound=3]="GitHubAuthenticationNotFound",s[s.GitHubAuthenticationDenied=4]="GitHubAuthenticationDenied",s);class m extends Error{original;reason;repoPath;constructor(e,t,i){let r,s;if(null==t)r=`Unable to open the virtual repository: ${e}`;else if("string"==typeof t)r=t,s=void 0;else switch(s=t,r=`Unable to open the virtual repository: ${e}; `,s){case 1:r+="Unable to get required api from the GitHub Repositories extension. Please ensure that the GitHub Repositories extension is installed and enabled";break;case 2:r+="Only GitHub repositories are supported currently";break;case 3:r+="Unable to get required GitHub authentication";break;case 4:r+="GitHub authentication is required"}super(r),this.original=i,this.reason=s,this.repoPath=e,Error.captureStackTrace?.(this,m)}}class f extends Error{constructor(e,t,i){super(`${e} request failed: ${t.ok?"":`(${t.status}) ${t.statusText}. `}${i?.length?i[0].message:""}`),this.response=t,Error.captureStackTrace?.(this,f)}get status(){return this.response.status}get statusText(){return this.response.statusText}}class w extends Error{constructor(e){super(`No provider registered for '${null==e?String(e):"string"==typeof e?e:e.toString(!0)}'`),Error.captureStackTrace?.(this,w)}}class v extends Error{constructor(e){super(e.message),this.original=e,Error.captureStackTrace?.(this,v)}}class y extends Error{constructor(e){super(e.message),this.original=e,Error.captureStackTrace?.(this,y)}}class b extends Error{constructor(e,t,i){super(e.message),this.original=e,this.token=t,this.resetAt=i,Error.captureStackTrace?.(this,b)}}},8887:(e,t,i)=>{i.d(t,{A:()=>n,x:()=>o});var r,s,n=((r=n||{}).Stashes="stashes",r.Timeline="timeline",r.Worktrees="worktrees",r.StashOnlyStaged="stashOnlyStaged",r.ForceIfIncludes="forceIfIncludes",r),o=((s=o||{}).Timeline="timeline",s.Worktrees="worktrees",s.Graph="graph",s.Focus="focus",s)},9311:(e,t,i)=>{i.d(t,{g:()=>a,m:()=>o});var r=i(5255),s=i(9529),n=i(7469);async function o(e){let t=(0,n.PQ)();return await (0,s.P0)(r.Gh.GitCommands,{...e,completion:t}),t.promise}async function a(e,t){await (0,s.b2)(r.Gh.BrowseRepoAtRevision,void 0,{uri:e,before:t?.before,openInNewWindow:t?.openInNewWindow})}},3401:(e,t,i)=>{i.d(t,{Od:()=>o,PQ:()=>a,Ue:()=>n,ay:()=>l});var r=i(5140),s=i(9311);function n(e,t,i){return(0,s.m)({command:"branch",state:{subcommand:"create",repo:e,reference:t,name:i}})}function o(e,t){return(0,s.m)({command:"branch",state:{subcommand:"delete",repo:e,references:t}})}function a(e,t,i){return(0,s.m)({command:"branch",state:{subcommand:"rename",repo:e,reference:t,name:i}})}async function l(e,t){let i=e.remote?r.W.instance.remotesView:r.W.instance.branchesView,s=i.canReveal?await i.revealBranch(e,t):await r.W.instance.repositoriesView.revealBranch(e,t);return null==s&&i.show({preserveFocus:!t?.focus}),s}},6897:(e,t,i)=>{i.d(t,{$H:()=>p,$J:()=>F,Dh:()=>$,E4:()=>T,Fw:()=>x,GM:()=>O,Gp:()=>m,Hl:()=>_,Os:()=>P,Ou:()=>w,SJ:()=>g,Uc:()=>E,Xy:()=>y,YM:()=>S,YS:()=>k,ZB:()=>D,aE:()=>R,ay:()=>I,ce:()=>b,iK:()=>C,tc:()=>A,vw:()=>v,wr:()=>f,zb:()=>d});var r=i(9496),s=i(5255),n=i(5140),o=i(9529),a=i(2509),l=i(7462),h=i(6450),c=i(439),u=i(4321);async function d(e,t,i){let s=!1,o=t.ref,a=i?.ref;if("string"!=typeof e){if("?"===e.status)o=`${o}^3`,s=!0;else if("A"===e.status)s=!0;else if("D"===e.status){let i=l.YY.fromFile(e,t.repoPath);try{await r.workspace.fs.stat(i)}catch{s=!0,a=o,o=`${o}^`}}}if(s){let i=l.YY.fromFile(e,t.repoPath);await n.W.instance.git.applyChangesToWorkingFile(i,o,a),await D(i,{preserveFocus:!0,preview:!1})}else await D(e,t,{preserveFocus:!0,preview:!1}),await n.W.instance.git.applyChangesToWorkingFile(l.YY.fromFile(e,t.repoPath,o),o,a)}async function p(e){await r.env.clipboard.writeText(e.ref)}async function g(e){let t;if((0,h.f_)(e))null==(t=e).message&&await t.ensureFullDetails();else if(null==(t=await n.W.instance.git.getCommit(e.repoPath,e.ref)))return;let i=t.message??t.summary;await r.env.clipboard.writeText(i)}async function m(e,t,i){let s,n;if((0,h.f_)(e)?(null==e.files&&await e.ensureFullDetails(),s=e.files??[],n={repoPath:e.repoPath,rhs:e.sha,lhs:e.unresolvedPreviousSha},i=t):(s=e,n=t),s.length>10){let e=await r.window.showWarningMessage(`Are you sure you want to open the changes for all ${s.length} files?`,{title:"Yes"},{title:"No",isCloseAffordance:!0});if(null==e||"No"===e.title)return}for(let e of(i={preserveFocus:!0,preview:!1,...i},s))await v(e,n,i)}async function f(e,t){let i;if((0,h.f_)(e)?(null==e.files&&await e.ensureFullDetails(),i=e.files??[],t={repoPath:e.repoPath,ref:e.sha}):i=e,i.length>10){let e=await r.window.showWarningMessage(`Are you sure you want to open the changes for all ${i.length} files?`,{title:"Yes"},{title:"No",isCloseAffordance:!0});if(null==e||"No"===e.title)return}for(let e of i)y(e,t)}async function w(e,t,i){let s,n;if((0,h.f_)(e)?(null==e.files&&await e.ensureFullDetails(),s=e.files??[],n={repoPath:e.repoPath,ref:e.sha},i=t):(s=e,n=t),s.length>10){let e=await r.window.showWarningMessage(`Are you sure you want to open the changes for all ${s.length} files?`,{title:"Yes"},{title:"No",isCloseAffordance:!0});if(null==e||"No"===e.title)return}for(let e of(i={preserveFocus:!0,preview:!1,...i},s))await b(e,n,i)}async function v(e,t,i){let r=(0,h.f_)(t);if("string"==typeof e){if(!r)throw Error("Invalid arguments");let i=await t.findFile(e);if(null==i)throw Error("Invalid arguments");e=i}if(i={preserveFocus:!0,preview:!1,...i},"A"===e.status&&r){let r=await t.getCommitForFile(e);(0,o.P0)(s.Gh.DiffWithPrevious,{commit:r,showOptions:i});return}let n=r?{repoPath:t.repoPath,rhs:t.sha,lhs:t.unresolvedPreviousSha}:t,a=l.YY.fromFile(e,n.repoPath),c="R"===e.status||"C"===e.status?l.YY.fromFile(e,n.repoPath,n.lhs,!0):a;await (0,o.P0)(s.Gh.DiffWith,{repoPath:n.repoPath,lhs:{uri:c,sha:n.lhs,title:i?.lhsTitle},rhs:{uri:a,sha:n.rhs,title:i?.rhsTitle},showOptions:i})}async function y(e,t,i){if("string"==typeof e){if(!(0,h.f_)(t))throw Error("Invalid arguments");let i=await t.findFile(e);if(null==i)throw Error("Invalid arguments");e=i}return n.W.instance.git.openDiffTool(t.repoPath,l.YY.fromFile(e,e.repoPath??t.repoPath),{ref1:(0,u.l3)(t.ref)?"":`${t.ref}^`,ref2:(0,u.l3)(t.ref)?"":t.ref,staged:(0,u.rD)(t.ref)||null!=e.indexStatus,tool:i})}async function b(e,t,i){let r;if("string"==typeof e){if(!(0,h.f_)(t))throw Error("Invalid arguments");let i=await t.findFile(e);if(null==i)throw Error("Invalid arguments");e=i}"D"!==e.status&&(r=(0,h.f_)(t)?{repoPath:t.repoPath,ref:t.sha}:t,i={preserveFocus:!0,preview:!1,...i},await (0,o.b2)(s.Gh.DiffWithWorking,void 0,{uri:l.YY.fromFile(e,r.repoPath,r.ref),showOptions:i,lhsTitle:i?.lhsTitle}))}async function C(e,t,i,r){return n.W.instance.git.openDirectoryCompare(e,t,i,r)}async function A(e){return C(e.repoPath,e.ref,`${e.ref}^`)}async function P(e){return C(e.repoPath,e.ref,void 0)}async function D(e,t,i){let n;if(e instanceof r.Uri)n=e,i=t;else if(n=l.YY.fromFile(e,t.repoPath,t.ref),"string"!=typeof e&&"?"===e.status)return;i={preserveFocus:!0,preview:!1,...i},await (0,o.b2)(s.Gh.OpenWorkingFile,void 0,{uri:n,showOptions:i})}async function k(e,t,i){let s;if(e instanceof r.Uri){if((0,h.f_)(t))throw Error("Invalid arguments");s=e,i=t}else{let i;if(!(0,h.f_)(t))throw Error("Invalid arguments");if("string"==typeof e){let r=await t.findFile(e);if(null==r)throw Error("Invalid arguments");i=r}else i=e;s=n.W.instance.git.getRevisionUri("D"===i.status?await t.getPreviousSha()??c.Ii:t.sha,i,t.repoPath)}let{annotationType:o,line:l,...u}={preserveFocus:!0,preview:!1,...i};null!=l&&0!==l&&(u.selection=new r.Range(l,0,l,0));let d=await (0,a.GR)(s,u);null!=o&&null!=d&&await n.W.instance.fileAnnotations.show(d,o,{selection:{line:l}})}async function S(e,t){let i;if(e instanceof r.Uri)i=e;else{if(null==t)throw Error("Invalid arguments");if(i=l.YY.fromFile(e,t.repoPath,t.ref),"string"!=typeof e&&"?"===e.status)return}await (0,o.P0)(s.Gh.OpenFileOnRemote,i,{sha:t?.ref})}async function R(e,t,i){let s;if((0,h.f_)(e)?(null==e.files&&await e.ensureFullDetails(),s=e.files??[],t=e.repoPath,i=e.sha):s=e,s.length>10){let e=await r.window.showWarningMessage(`Are you sure you want to open all ${s.length} files?`,{title:"Yes"},{title:"No",isCloseAffordance:!0});if(null==e||"No"===e.title)return}let o=(await Promise.all(s.map(e=>n.W.instance.git.getWorkingUri(t,l.YY.fromFile(e,t,i))))).filter(e=>!!e);(0,a.$_)(o)}async function $(e,t,i,s){let o;if((0,h.f_)(e)?(null==e.files&&await e.ensureFullDetails(),o=e.files??[],t=e.repoPath,i=e.sha,s=await e.getPreviousSha()):o=e,o.length>10){let e=await r.window.showWarningMessage(`Are you sure you want to open all ${o.length} file revisions?`,{title:"Yes"},{title:"No",isCloseAffordance:!0});if(null==e||"No"===e.title)return}(0,a.$_)(o.map(e=>n.W.instance.git.getRevisionUri("D"===e.status?s:i,e,t)))}async function _(e,t){let i,s;if("string"==typeof e)i=e,s=t.ref;else if(i=e.path,"D"===e.status){let i=l.YY.fromFile(e,t.repoPath);try{await r.workspace.fs.stat(i),s=`${t.ref}^`}catch{s=t.ref}}else s="?"===e.status?`${t.ref}^3`:t.ref;await n.W.instance.git.checkout(t.repoPath,s,{path:i})}async function I(e,t){let i=[n.W.instance.commitsView,n.W.instance.branchesView,n.W.instance.remotesView];for(let r of i){let i=r.canReveal?await r.revealCommit(e,t):await n.W.instance.repositoriesView.revealCommit(e,t);if(null!=i)return i}i[0].show({preserveFocus:!t?.focus})}async function F(e,t){let i;if(null==t){await (0,o.P0)(s.Gh.ShowQuickCommit,{commit:e});return}i=t instanceof r.Uri?t:l.YY.fromFile(t,e.repoPath,e.ref),await (0,o.P0)(s.Gh.ShowQuickCommitFile,i,{sha:e.sha})}function x(e,t){let{preserveFocus:i,...r}={...t,commit:e};return n.W.instance.commitDetailsView.show({preserveFocus:i},r)}function T(e,t){let{preserveFocus:i,...r}={...t,commit:e};return n.W.instance.graphDetailsView.show({preserveFocus:i},r)}async function O(e,t){await (0,o.P0)(s.Gh.ShowInCommitGraph,{ref:(0,u.qj)(e),preserveFocus:t?.preserveFocus})}async function E(e){await e.ensureFullDetails();let t=e.files??[];if(t.length>10){let e=await r.window.showWarningMessage(`Are you sure you want to open all ${t.length} files?`,{title:"Yes"},{title:"No",isCloseAffordance:!0});if(null==e||"No"===e.title)return}await (0,o.P0)(s.Gh.OpenOnlyChangedFiles,{uris:t.filter(e=>"D"!==e.status).map(e=>e.uri)})}},7445:(e,t,i)=>{i.d(t,{a:()=>o,q:()=>n});var r=i(5140),s=i(9311);function n(e,t){return(0,s.m)({command:"co-authors",state:{repo:e,contributors:t}})}async function o(e,t){let i=r.W.instance.contributorsView,s=i.canReveal?await i.revealContributor(e,t):await r.W.instance.repositoriesView.revealContributor(e,t);return null==s&&i.show({preserveFocus:!t?.focus}),s}},4155:(e,t,i)=>{i.d(t,{IH:()=>n,Od:()=>l,Qs:()=>a,ay:()=>h,he:()=>o});var r=i(5140),s=i(9311);function n(e,t,i,r){return(0,s.m)({command:"remote",confirm:r?.confirm,state:{repo:e,subcommand:"add",name:t,url:i,flags:r?.fetch?["-f"]:void 0,reveal:r?.reveal}})}async function o(e,t){if("string"==typeof e){let t=r.W.instance.git.getRepository(e);if(null==t)return;e=t}await e.fetch({remote:t})}async function a(e,t){return(0,s.m)({command:"remote",state:{repo:e,subcommand:"prune",remote:t}})}async function l(e,t){return(0,s.m)({command:"remote",state:{repo:e,subcommand:"remove",remote:t}})}async function h(e,t){let i=r.W.instance.remotesView,s=null!=e?i.canReveal?await i.revealRemote(e,t):await r.W.instance.repositoriesView.revealRemote(e,t):void 0;return null==s&&i.show({preserveFocus:!t?.focus}),s}},8834:(e,t,i)=>{i.d(t,{CU:()=>d,DW:()=>c,QP:()=>n,TS:()=>a,VF:()=>h,X4:()=>l,ay:()=>g,gu:()=>p,he:()=>o,mc:()=>u});var r=i(5140),s=i(9311);function n(e,t){return(0,s.m)({command:"cherry-pick",state:{repo:e,references:t}})}function o(e,t){return(0,s.m)({command:"fetch",state:{repos:e,reference:t}})}function a(e,t){return(0,s.m)({command:"merge",state:{repo:e,reference:t}})}function l(e,t){return(0,s.m)({command:"pull",state:{repos:e,reference:t}})}function h(e,t,i){return(0,s.m)({command:"push",state:{repos:e,flags:t?["--force"]:[],reference:i}})}function c(e,t,i=!0){return(0,s.m)({command:"rebase",state:{repo:e,reference:t,flags:i?["--interactive"]:[]}})}function u(e,t,i){return(0,s.m)({command:"reset",confirm:null==i||i.includes("--hard"),state:{repo:e,reference:t,flags:i}})}function d(e,t){return(0,s.m)({command:"revert",state:{repo:e,references:t}})}function p(e,t,i){return(0,s.m)({command:"switch",state:{repos:e,reference:t},confirm:i})}async function g(e,t,i){let s=t?.canReveal?await t.revealRepository(e,i):await r.W.instance.repositoriesView.revealRepository(e,i);return null==s&&(t??r.W.instance.repositoriesView).show({preserveFocus:!i?.focus}),s}},252:(e,t,i)=>{i.d(t,{Cw:()=>o,Fw:()=>u,PQ:()=>a,Sw:()=>l,VF:()=>h,ay:()=>c,nn:()=>n});var r=i(5140),s=i(9311);function n(e,t){return(0,s.m)({command:"stash",state:{subcommand:"apply",repo:e,reference:t}})}function o(e,t){return(0,s.m)({command:"stash",state:{subcommand:"drop",repo:e,reference:t}})}function a(e,t,i){return(0,s.m)({command:"stash",state:{subcommand:"rename",repo:e,reference:t,message:i}})}function l(e,t){return(0,s.m)({command:"stash",state:{subcommand:"pop",repo:e,reference:t}})}function h(e,t,i,r=!1,n=!1,o){return(0,s.m)({command:"stash",state:{subcommand:"push",repo:e,uris:t,onlyStagedUris:o,message:i,flags:[...r?["--keep-index"]:[],...n?["--staged"]:[]]}})}async function c(e,t){let i=r.W.instance.stashesView,s=i.canReveal?await i.revealStash(e,t):await r.W.instance.repositoriesView.revealStash(e,t);return null==s&&i.show({preserveFocus:!t?.focus}),s}function u(e,t){let{preserveFocus:i,...s}={...t,commit:e};return r.W.instance.commitDetailsView.show({preserveFocus:i},s)}},6713:(e,t,i)=>{i.d(t,{Od:()=>o,Ue:()=>n,ay:()=>a});var r=i(5140),s=i(9311);function n(e,t,i){return(0,s.m)({command:"tag",state:{subcommand:"create",repo:e,reference:t,name:i}})}function o(e,t){return(0,s.m)({command:"tag",state:{subcommand:"delete",repo:e,references:t}})}async function a(e,t){let i=r.W.instance.tagsView,s=i.canReveal?await i.revealTag(e,t):await r.W.instance.repositoriesView.revealTag(e,t);return null==s&&i.show({preserveFocus:!t?.focus}),s}},5025:(e,t,i)=>{i.d(t,{BC:()=>c,Od:()=>l,Ue:()=>o,ay:()=>h,bA:()=>a});var r=i(5140),s=i(2800),n=i(9311);function o(e,t,i,r){return(0,n.m)({command:"worktree",state:{subcommand:"create",repo:e,uri:t,reference:i,createBranch:r?.createBranch,flags:r?.createBranch?["-b"]:void 0,reveal:r?.reveal}})}function a(e,t){return(0,n.m)({command:"worktree",state:{subcommand:"open",repo:e.repoPath,uri:e.uri,flags:function(e){if(null!=e)switch(e){case"newWindow":return["--new-window"];case"addToWorkspace":return["--add-to-workspace"];default:return[]}}(t?.location)}})}function l(e,t){return(0,n.m)({command:"worktree",state:{subcommand:"delete",repo:e,uris:(0,s.zx)(t)}})}async function h(e,t){let i=r.W.instance.worktreesView,s=null!=e?i.canReveal?await i.revealWorktree(e,t):await r.W.instance.repositoriesView.revealWorktree(e,t):void 0;return null==s&&i.show({preserveFocus:!t?.focus}),s}function c(e){if(null!=e)return e.includes("--new-window")?"newWindow":e.includes("--add-to-workspace")?"addToWorkspace":"currentWindow"}},6592:(e,t,i)=>{i.d(t,{FD:()=>y,Ms:()=>s,Nk:()=>I,P6:()=>$,PK:()=>b,PZ:()=>n,bk:()=>g,e9:()=>D,ef:()=>m,g1:()=>f,gk:()=>v,hK:()=>R,kp:()=>P,l0:()=>r,oj:()=>k,q6:()=>S,s8:()=>w,uI:()=>A,wG:()=>C,xe:()=>_});class r extends Error{constructor(e){super(e.message),this.original=e,Error.captureStackTrace?.(this,r)}}class s extends Error{constructor(e,t){super(`Invalid blame.ignoreRevsFile: '${e}'`),this.fileName=e,this.original=t,Error.captureStackTrace?.(this,s)}static is(e){return e instanceof s}}class n extends Error{constructor(e,t){super(`Invalid revision in blame.ignoreRevsFile: '${e}'`),this.revision=e,this.original=t,Error.captureStackTrace?.(this,n)}static is(e){return e instanceof n}}var o,a,l,h,c,u,d,p,g=((o=g||{})[o.WorkingChanges=1]="WorkingChanges",o);class m extends Error{static is(e,t){return e instanceof m&&(null==t||e.reason===t)}original;reason;constructor(e,t){let i,r;null==e?i="Unable to apply stash":"string"==typeof e?(i=e,r=void 0):(r=e,i="Unable to apply stash. Your working tree changes would be overwritten. Please commit or stash your changes before trying again"),super(i),this.original=t,this.reason=r,Error.captureStackTrace?.(this,m)}}var f=((a=f||{})[a.ConflictingStagedAndUnstagedLines=1]="ConflictingStagedAndUnstagedLines",a);class w extends Error{static is(e,t){return e instanceof w&&(null==t||e.reason===t)}original;reason;constructor(e,t){let i,r;null==e?i="Unable to stash":"string"==typeof e?(i=e,r=void 0):i=1===(r=e)?"Stash was created, but the working tree cannot be updated because at least one file has staged and unstaged changes on the same line(s).\n\nDo you want to try again by stashing both your staged and unstaged changes?":"Unable to stash",super(i),this.original=t,this.reason=r,Error.captureStackTrace?.(this,m)}}var v=((l=v||{})[l.RemoteAhead=1]="RemoteAhead",l[l.TipBehind=2]="TipBehind",l[l.PushRejected=3]="PushRejected",l[l.PushRejectedWithLease=4]="PushRejectedWithLease",l[l.PushRejectedWithLeaseIfIncludes=5]="PushRejectedWithLeaseIfIncludes",l[l.PermissionDenied=6]="PermissionDenied",l[l.RemoteConnection=7]="RemoteConnection",l[l.NoUpstream=8]="NoUpstream",l[l.Other=9]="Other",l);class y extends Error{static is(e,t){return e instanceof y&&(null==t||e.reason===t)}original;reason;constructor(e,t,i,r){let s,n;let o=`Unable to push${i?` branch '${i}'`:""}${r?` to ${r}`:""}`;if(null==e)s=o;else if("string"==typeof e)s=e,n=void 0;else switch(n=e){case 1:s=`${o} because the remote contains work that you do not have locally. Try fetching first.`;break;case 2:s=`${o} as it is behind its remote counterpart. Try pulling first.`;break;case 3:s=`${o} because some refs failed to push or the push was rejected. Try pulling first.`;break;case 4:case 5:s=`Unable to force push${i?` branch '${i}'`:""}${r?` to ${r}`:""} because some refs failed to push or the push was rejected. The tip of the remote-tracking branch has been updated since the last checkout. Try pulling first.`;break;case 6:s=`${o} because you don't have permission to push to this remote repository.`;break;case 7:s=`${o} because the remote repository could not be reached.`;break;case 8:s=`${o} because it has no upstream branch.`;break;default:s=o}super(s),this.original=t,this.reason=n,Error.captureStackTrace?.(this,y)}}var b=((h=b||{})[h.Conflict=1]="Conflict",h[h.GitIdentity=2]="GitIdentity",h[h.RemoteConnection=3]="RemoteConnection",h[h.UnstagedChanges=4]="UnstagedChanges",h[h.UnmergedFiles=5]="UnmergedFiles",h[h.UncommittedChanges=6]="UncommittedChanges",h[h.OverwrittenChanges=7]="OverwrittenChanges",h[h.RefLocked=8]="RefLocked",h[h.RebaseMultipleBranches=9]="RebaseMultipleBranches",h[h.TagConflict=10]="TagConflict",h[h.Other=11]="Other",h);class C extends Error{static is(e,t){return e instanceof C&&(null==t||e.reason===t)}original;reason;constructor(e,t,i,r){let s,n;let o=`Unable to pull${i?` branch '${i}'`:""}${r?` from ${r}`:""}`;if(null==e)s="Unable to pull";else if("string"==typeof e)s=e,n=void 0;else switch(n=e){case 1:s=`${o} due to conflicts.`;break;case 2:s=`${o} because you have not yet set up your Git identity.`;break;case 3:s=`${o} because the remote repository could not be reached.`;break;case 4:s=`${o} because you have unstaged changes.`;break;case 5:s=`${o} because you have unmerged files.`;break;case 6:s=`${o} because you have uncommitted changes.`;break;case 7:s=`${o} because local changes to some files would be overwritten.`;break;case 8:s=`${o} because a local ref could not be updated.`;break;case 9:s=`${o} because you are trying to rebase onto multiple branches.`;break;case 10:s=`${o} because a local tag would be overwritten.`;break;default:s=o}super(s),this.original=t,this.reason=n,Error.captureStackTrace?.(this,C)}}var A=((c=A||{})[c.NoFastForward=1]="NoFastForward",c[c.NoRemote=2]="NoRemote",c[c.RemoteConnection=3]="RemoteConnection",c[c.Other=4]="Other",c);class P extends Error{static is(e,t){return e instanceof P&&(null==t||e.reason===t)}original;reason;constructor(e,t,i,r){let s,n;let o=`Unable to fetch${i?` branch '${i}'`:""}${r?` from ${r}`:""}`;if(null==e)s=o;else if("string"==typeof e)s=e,n=void 0;else switch(n=e){case 1:s=`${o} as it cannot be fast-forwarded`;break;case 2:s=`${o} without a remote repository specified.`;break;case 3:s=`${o}. Could not connect to the remote repository.`;break;default:s=o}super(s),this.original=t,this.reason=n,Error.captureStackTrace?.(this,P)}}var D=((u=D||{})[u.Conflict=0]="Conflict",u[u.OverwrittenChanges=1]="OverwrittenChanges",u[u.Other=2]="Other",u);class k extends Error{static is(e,t){return e instanceof k&&(null==t||e.reason===t)}original;reason;constructor(e,t,i){let r,s;let n=`Unable to cherry-pick${i?` commit '${i}'`:""}`;if(null==e)r=n;else if("string"==typeof e)r=e,s=void 0;else switch(s=e){case 1:r=`${n} because local changes to some files would be overwritten.`;break;case 0:r=`${n} due to conflicts.`;break;default:r=n}super(r),this.original=t,this.reason=s,Error.captureStackTrace?.(this,k)}}class S extends Error{constructor(){super("Unable to perform Git operations because the current workspace is untrusted"),Error.captureStackTrace?.(this,S)}}var R=((d=R||{})[d.AlreadyCheckedOut=1]="AlreadyCheckedOut",d[d.AlreadyExists=2]="AlreadyExists",d);class $ extends Error{static is(e,t){return e instanceof $&&(null==t||e.reason===t)}original;reason;constructor(e,t){let i,r;if(null==e)i="Unable to create worktree";else if("string"==typeof e)i=e,r=void 0;else switch(r=e){case 1:i="Unable to create worktree because it is already checked out";break;case 2:i="Unable to create worktree because it already exists"}super(i),this.original=t,this.reason=r,Error.captureStackTrace?.(this,$)}}var _=((p=_||{})[p.HasChanges=1]="HasChanges",p[p.MainWorkingTree=2]="MainWorkingTree",p);class I extends Error{static is(e,t){return e instanceof I&&(null==t||e.reason===t)}original;reason;constructor(e,t){let i,r;if(null==e)i="Unable to delete worktree";else if("string"==typeof e)i=e,r=void 0;else switch(r=e){case 1:i="Unable to delete worktree because there are uncommitted changes";break;case 2:i="Unable to delete worktree because it is a main working tree"}super(i),this.original=t,this.reason=r,Error.captureStackTrace?.(this,I)}}},9338:(e,t,i)=>{i.d(t,{i:()=>S});var r=i(8388),s=i(7139),n=i(1848),o=i(2138),a=i(4893),l=i(6199),h=i(1676),c=i(8918),u=i(5255),d=i(5140),p=i(3148),g=i(718),m=i(5148),f=i(3105),w=i(7469),v=i(4627),y=i(6450),b=i(439),C=i(8452),A=i(4092),P=i(4321),D=i(3050),k=i(5485);class S extends k.M{reset(e,t){super.reset(e,t),null==this._options.outputFormat&&(this._options.outputFormat="plaintext")}get _authorDate(){return this._item.author.formatDate(this._options.dateFormat)}get _authorDateAgo(){return this._item.author.fromNow()}get _authorDateAgoShort(){return this._item.author.fromNow(!0)}get _committerDate(){return this._item.committer.formatDate(this._options.dateFormat)}get _committerDateAgo(){return this._item.committer.fromNow()}get _committerDateAgoShort(){return this._item.committer.fromNow(!0)}get _date(){return this._item.formatDate(this._options.dateFormat)}get _dateAgo(){return this._item.formatDateFromNow()}get _dateAgoShort(){return this._item.formatDateFromNow(!0)}get _pullRequestDate(){let{pullRequest:e}=this._options;return null!=e&&A.i7.is(e)?e.formatDate(this._options.dateFormat)??"":""}get _pullRequestDateAgo(){let{pullRequest:e}=this._options;return null!=e&&A.i7.is(e)?e.formatDateFromNow()??"":""}get _pullRequestDateOrAgo(){return"absolute"===(null!=this._options.dateStyle?this._options.dateStyle:m.D.get("defaultDateStyle"))?this._pullRequestDate:this._pullRequestDateAgo}get ago(){return this._padOrTruncate(this._dateAgo,this._options.tokenOptions.ago)}get agoOrDate(){let e=null!=this._options.dateStyle?this._options.dateStyle:m.D.get("defaultDateStyle");return this._padOrTruncate("absolute"===e?this._date:this._dateAgo,this._options.tokenOptions.agoOrDate)}get agoOrDateShort(){let e=null!=this._options.dateStyle?this._options.dateStyle:m.D.get("defaultDateStyle");return this._padOrTruncate("absolute"===e?this._date:this._dateAgoShort,this._options.tokenOptions.agoOrDateShort)}get author(){let{name:e,email:t}=this._item.author,i=this._padOrTruncate(e,this._options.tokenOptions.author);switch(this._options.outputFormat){case"markdown":return`[${i}](${t?`mailto:${t} "Email ${e} (${t})"`:`# "${e}"`})`;case"html":return e=(0,v.se)(e),t=(0,v.se)(t),`<a ${t?`href="mailto:${t}" title="Email ${e} (${t})"`:`href="#" title="${e}"`})${this._options.htmlFormat?.classes?.author?` class="${this._options.htmlFormat.classes.author}"`:""}>${i}</a>`;default:return i}}get authorAgo(){return this._padOrTruncate(this._authorDateAgo,this._options.tokenOptions.authorAgo)}get authorAgoOrDate(){let e=null!=this._options.dateStyle?this._options.dateStyle:m.D.get("defaultDateStyle");return this._padOrTruncate("absolute"===e?this._authorDate:this._authorDateAgo,this._options.tokenOptions.authorAgoOrDate)}get authorAgoOrDateShort(){let e=null!=this._options.dateStyle?this._options.dateStyle:m.D.get("defaultDateStyle");return this._padOrTruncate("absolute"===e?this._authorDate:this._authorDateAgoShort,this._options.tokenOptions.authorAgoOrDateShort)}get authorDate(){return this._padOrTruncate(this._authorDate,this._options.tokenOptions.authorDate)}get authorNotYou(){let{name:e,email:t}=this._item.author;if("You"===e)return this._padOrTruncate("",this._options.tokenOptions.authorNotYou);let i=this._padOrTruncate(e,this._options.tokenOptions.authorNotYou);switch(this._options.outputFormat){case"markdown":return`[${i}](${t?`mailto:${t} "Email ${e} (${t})"`:`# "${e}"`})`;case"html":return e=(0,v.se)(e),t=(0,v.se)(t),`<a ${t?`href="mailto:${t}" title="Email ${e} (${t})"`:`href="#" title="${e}"`})${this._options.htmlFormat?.classes?.author?` class="${this._options.htmlFormat.classes.author}"`:""}>${i}</a>`;default:return i}}get avatar(){let{outputFormat:e}=this._options;if("plaintext"===e||!m.D.get("hovers.avatars"))return this._padOrTruncate("",this._options.tokenOptions.avatar);let{name:t}=this._item.author,i=this._options.presence;if(null!=i){let r=`${t} ${"You"===t?"are":"is"} ${"dnd"===i.status?"in ":""}${i.statusText.toLocaleLowerCase()}`;return"html"===e&&(r=(0,v.se)(r)),this._getAvatar(e,r,this._options.avatarSize).then(t=>this._padOrTruncate(`${t}${this._getPresence(e,i,r)}`,this._options.tokenOptions.avatar))}return"html"===e&&(t=(0,v.se)(t)),this._getAvatar(e,t,this._options.avatarSize)}async _getAvatar(e,t,i){i=i??m.D.get("hovers.avatarSize");let r=this._item.getAvatarUri({defaultStyle:m.D.get("defaultGravatarsStyle"),size:i}),s=(await r).toString(!0);return this._padOrTruncate("html"===e?`<img src="${s}" alt="title)" title="${t}" width="${i}" height="${i}"${this._options.htmlFormat?.classes?.avatar?` class="${this._options.htmlFormat.classes.avatar}"`:""} />`:`![${t}](${s}|width=${i},height=${i} "${t}")`,this._options.tokenOptions.avatar)}_getPresence(e,t,i){return"html"===e?`<img src="${(0,r.TU)(t.status)}" alt="${i}" title="${i}"${this._options.htmlFormat?.classes?.avatarPresence?` class="${this._options.htmlFormat.classes.avatarPresence}"`:""}/>`:`![${i}](${(0,r.TU)(t.status)} "${i}")`}get changes(){return this._padOrTruncate((0,y.f_)(this._item)?this._item.formatStats():"",this._options.tokenOptions.changes)}get changesDetail(){return this._padOrTruncate((0,y.f_)(this._item)?this._item.formatStats({expand:!0,separator:", "}):"",this._options.tokenOptions.changesDetail)}get changesShort(){return this._padOrTruncate((0,y.f_)(this._item)?this._item.formatStats({compact:!0,separator:""}):"",this._options.tokenOptions.changesShort)}get commands(){let e;if("plaintext"===this._options.outputFormat||"html"===this._options.outputFormat)return this._padOrTruncate("",this._options.tokenOptions.commands);if(this._item.isUncommitted){let{previousLineComparisonUris:e}=this._options;return e?.previous!=null?`[\`${this._padOrTruncate((0,P.zL)((0,P.rD)(e.current.sha)?e.current.sha:b.CL),this._options.tokenOptions.commands)}\`](${h.C.getMarkdownCommandArgs(this._item.sha,this._item.repoPath)} "Open Details") &nbsp;[$(chevron-left)$(compare-changes)](${n.V.getMarkdownCommandArgs({lhs:{sha:e.previous.sha??"",uri:e.previous.documentUri()},rhs:{sha:e.current.sha??"",uri:e.current.documentUri()},repoPath:this._item.repoPath,line:this._options.editor?.line})} "Open Changes with Previous Revision") &nbsp;[$(versions)](${a.D.getMarkdownCommandArgs(d.W.instance.git.getRevisionUri(e.previous),"blame",this._options.editor?.line)} "Open Blame Prior to this Change")`:`[\`${this._padOrTruncate((0,P.zL)(this._item.isUncommittedStaged?b.pw:b.CL),this._options.tokenOptions.commands)}\`](${h.C.getMarkdownCommandArgs(this._item.sha,this._item.repoPath)} "Open Details")`}let t=" &nbsp;&nbsp;|&nbsp;&nbsp; ";if(e=`---

[\`$(git-commit) ${this.id}\`](${h.C.getMarkdownCommandArgs(this._item.sha,this._item.repoPath)} "Open Details") &nbsp;[$(chevron-left)$(compare-changes)](${n.V.getMarkdownCommandArgs(this._item,this._options.editor?.line)} "Open Changes with Previous Revision")`,null!=this._item.file&&null!=this._item.unresolvedPreviousSha){let t=d.W.instance.git.getRevisionUri(this._item.unresolvedPreviousSha,this._item.file.originalPath??this._item.file?.path,this._item.repoPath);e+=` &nbsp;[$(versions)](${a.D.getMarkdownCommandArgs(t,"blame",this._options.editor?.line)} "Open Blame Prior to this Change")`}e+=` &nbsp;[$(search)](${s.mY.getMarkdownCommandArgsCore(u.Gh.RevealCommitInView,{repoPath:this._item.repoPath,sha:this._item.sha,revealInView:!0})} "Reveal in Side Bar")`,(0,g.L)()&&(e+=` &nbsp;[$(gitlens-graph)](${s.mY.getMarkdownCommandArgsCore(u.Gh.ShowInCommitGraph,{ref:(0,P.qj)(this._item,{excludeMessage:!0})})} "Open in Commit Graph")`);let{pullRequest:i,remotes:r}=this._options;if(r?.length){let t=D.ss.getHighlanderProviders(r);e+=` &nbsp;[$(globe)](${o._.getMarkdownCommandArgs(this._item.sha)} "Open Commit on ${t?.length?t[0].name:"Remote"}")`}if(null!=i)A.i7.is(i)?e+=`${t}[$(git-pull-request) PR #${i.id}](${R("openPullRequest",{repoPath:this._item.repoPath,provider:{id:i.provider.id,name:i.provider.name,domain:i.provider.domain},pullRequest:{id:i.id,url:i.url}})} "Open Pull Request \\#${i.id}${1==d.W.instance.actionRunners.count("openPullRequest")?` on ${i.provider.name}`:"..."}
${u.NE.Dash.repeat(2)}
${(0,v.ry)(i.title).replace(/"/g,'\\"')}
${i.state}, ${i.formatDateFromNow()}")`:(0,w.tI)(i)&&(e+=`${t}[$(git-pull-request) PR $(loading~spin)](command:${u.Gh.RefreshHover} "Searching for a Pull Request (if any) that introduced this commit...")`);else if(null!=r){let[i]=r;i?.hasIntegration()&&!i.maybeIntegrationConnected&&m.D.get("integrations.enabled")&&(e+=`${t}[$(plug) Connect to ${i?.provider.name}${u.NE.Ellipsis}](${l.t.getMarkdownCommandArgs(i)} "Connect to ${i.provider.name} to enable the display of the Pull Request (if any) that introduced this commit")`)}if(d.W.instance.actionRunners.count("hover.commands")>0){let{name:i,email:r}=this._item.author;e+=`${t}[$(organization) Team${u.NE.SpaceThinnest}${u.NE.Ellipsis}](${R("hover.commands",{repoPath:this._item.repoPath,commit:{sha:this._item.sha,author:{name:i,email:r,presence:this._options.presence}},file:null!=this._options.editor?{uri:this._options.editor?.uri.toString(),line:this._options.editor?.line}:void 0})} "Show Team Actions")`}let p=this._item.getGitUri();return e+=`${t}[$(ellipsis)](${c.M.getMarkdownCommandArgs(null!=p?{revisionUri:d.W.instance.git.getRevisionUri(p).toString(!0)}:{commit:this._item})} "Show More Actions")`,this._padOrTruncate(e,this._options.tokenOptions.commands)}get committerAgo(){return this._padOrTruncate(this._committerDateAgo,this._options.tokenOptions.committerAgo)}get committerAgoOrDate(){let e=null!=this._options.dateStyle?this._options.dateStyle:m.D.get("defaultDateStyle");return this._padOrTruncate("absolute"===e?this._committerDate:this._committerDateAgo,this._options.tokenOptions.committerAgoOrDate)}get committerAgoOrDateShort(){let e=null!=this._options.dateStyle?this._options.dateStyle:m.D.get("defaultDateStyle");return this._padOrTruncate("absolute"===e?this._committerDate:this._committerDateAgoShort,this._options.tokenOptions.committerAgoOrDateShort)}get committerDate(){return this._padOrTruncate(this._committerDate,this._options.tokenOptions.committerDate)}get date(){return this._padOrTruncate(this._date,this._options.tokenOptions.date)}get email(){let{email:e}=this._item.author;return this._padOrTruncate(e??"",this._options.tokenOptions.email)}get footnotes(){let{outputFormat:e}=this._options;return this._padOrTruncate(null==this._options.footnotes||0===this._options.footnotes.size?"":(0,f.v_)((0,f.UI)(this._options.footnotes,([t,i])=>"plaintext"===e?`${(0,v.sC)(t)} ${i}`:i),"html"===e?"<br \\>":"markdown"===e?"\\\n":"\n"),this._options.tokenOptions.footnotes)}get id(){let e=this._padOrTruncate(this._item.shortSha??"",this._options.tokenOptions.id);return"plaintext"!==this._options.outputFormat&&this._options.unpublished?`<span style="color:#35b15e;"${this._options.htmlFormat?.classes?.id?` class="${this._options.htmlFormat.classes.id}"`:""}>${e} (unpublished)</span>`:e}get link(){let e;switch(this._options.outputFormat){case"markdown":{let t=this._padOrTruncate(this._item.shortSha??"",this._options.tokenOptions.id);e=`[\`$(git-commit) ${t}\`](${h.C.getMarkdownCommandArgs(this._item.sha,this._item.repoPath)} "Open Details")`;break}case"html":{let t=this._padOrTruncate(this._item.shortSha??"",this._options.tokenOptions.id);e=`<a href="${h.C.getMarkdownCommandArgs(this._item.sha,this._item.repoPath)}" title="Open Details"${this._options.htmlFormat?.classes?.link?` class="${this._options.htmlFormat.classes.link}"`:""}><span class="codicon codicon-git-commit"></span>${t}</a>`;break}default:return this.id}return this._padOrTruncate(e,this._options.tokenOptions.link)}get message(){let{outputFormat:e}=this._options;if(this._item.isUncommitted){let t=this._item.file?.hasConflicts??!1,i=this._item.isUncommittedStaged||(this._options.previousLineComparisonUris?.current?.isUncommittedStaged??!1),r=`${t?"Merge":i?"Staged":"Uncommitted"} changes`;switch(e){case"html":r=`<span ${this._options.htmlFormat?.classes?.message?`class="${this._options.htmlFormat.classes.message}"`:""}>${r}</span>`;break;case"markdown":r=`
> ${r}`}return this._padOrTruncate(r,this._options.tokenOptions.message)}let t=(this._options.messageTruncateAtNewLine?this._item.summary:this._item.message??this._item.summary).trim().replace(/\r?\n/g,"\n");switch(t=(0,p.X)(t),t=this._padOrTruncate(t,this._options.tokenOptions.message),"plaintext"!==e&&(t=(0,v.se)(t)),"markdown"===e&&(t=(0,v.ry)(t,{quoted:!0})),this._options.messageAutolinks&&(t=d.W.instance.autolinks.linkify(t,e,this._options.remotes,this._options.enrichedAutolinks,null==this._options.pullRequest||(0,w.tI)(this._options.pullRequest)?void 0:new Set([this._options.pullRequest.id]),this._options.footnotes)),null!=this._options.messageIndent&&"plaintext"===e&&(t=t.replace(/^/gm,u.NE.Space.repeat(this._options.messageIndent))),e){case"html":return`<span ${this._options.htmlFormat?.classes?.id?`class="${this._options.htmlFormat.classes.id}"`:""}>${t}</span>`;case"markdown":return`
> ${t}`;default:return t}}get pullRequest(){let e;let{pullRequest:t}=this._options;if(null==t||"html"===this._options.outputFormat)return this._padOrTruncate("",this._options.tokenOptions.pullRequest);if(A.i7.is(t)){if("markdown"===this._options.outputFormat){if(e=`PR [**#${t.id}**](${R("openPullRequest",{repoPath:this._item.repoPath,provider:{id:t.provider.id,name:t.provider.name,domain:t.provider.domain},pullRequest:{id:t.id,url:t.url}})} "Open Pull Request \\#${t.id}${1==d.W.instance.actionRunners.count("openPullRequest")?` on ${t.provider.name}`:"..."}
${u.NE.Dash.repeat(2)}
${(0,v.ry)(t.title).replace(/"/g,'\\"')}
${t.state}, ${t.formatDateFromNow()}")`,null!=this._options.footnotes){let e=(0,v.ry)(t.title).replace(/"/g,'\\"').trim(),i=this._options.footnotes.size+1;this._options.footnotes.set(i,`${(0,C.sy)(t)} [**${e}**](${t.url} "Open Pull Request \\#${t.id} on ${t.provider.name}")\\
${u.NE.Space.repeat(4)} #${t.id} ${t.state} ${t.formatDateFromNow()}`)}}else if(null!=this._options.footnotes){let i=this._options.footnotes.size+1;this._options.footnotes.set(i,`PR #${t.id}: ${t.title}  ${u.NE.Dot}  ${t.state}, ${t.formatDateFromNow()}`),e=`PR #${t.id}${(0,v.sC)(i)}`}else e=`PR #${t.id}`}else{if(!(0,w.tI)(t))return this._padOrTruncate("",this._options.tokenOptions.pullRequest);e="markdown"===this._options.outputFormat?`[PR $(loading~spin)](command:${u.Gh.RefreshHover} "Searching for a Pull Request (if any) that introduced this commit...")`:this._options?.pullRequestPendingMessage??""}return this._padOrTruncate(e,this._options.tokenOptions.pullRequest)}get pullRequestAgo(){return this._padOrTruncate(this._pullRequestDateAgo,this._options.tokenOptions.pullRequestAgo)}get pullRequestAgoOrDate(){return this._padOrTruncate(this._pullRequestDateOrAgo,this._options.tokenOptions.pullRequestAgoOrDate)}get pullRequestDate(){return this._padOrTruncate(this._pullRequestDate,this._options.tokenOptions.pullRequestDate)}get pullRequestState(){let{pullRequest:e}=this._options;return this._padOrTruncate(null!=e&&A.i7.is(e)?e.state??"":"",this._options.tokenOptions.pullRequestState)}get sha(){return this._padOrTruncate(this._item.shortSha??"",this._options.tokenOptions.sha)}get stashName(){return this._padOrTruncate(this._item.stashName??"",this._options.tokenOptions.stashName)}get stashNumber(){return this._padOrTruncate(this._item.number??"",this._options.tokenOptions.stashNumber)}get stashOnRef(){return this._padOrTruncate(this._item.stashOnRef??"",this._options.tokenOptions.stashOnRef)}get tips(){let e=this._options.getBranchAndTagTips?.(this._item.sha,{icons:"markdown"===this._options.outputFormat});return null!=e&&"plaintext"!==this._options.outputFormat&&(e=e.split(", ").map(e=>`<span style="color:#ffffff;background-color:#1d76db;"${this._options.htmlFormat?.classes?.tips?` class="${this._options.htmlFormat.classes.tips}"`:""}>&nbsp;&nbsp;${e}&nbsp;&nbsp;</span>`).join(u.NE.Space.repeat(3))),this._padOrTruncate(e??"",this._options.tokenOptions.tips)}static fromTemplate(e,t,i){if((null==i||"string"==typeof i)&&(i={dateFormat:i}),S.has(e,"footnotes")&&null==i.footnotes&&(i.footnotes=new Map),S.has(e,"avatar")&&i?.outputFormat)throw Error("Invalid template token 'avatar' used in non-async call");return super.fromTemplateCore(this,e,t,i)}static fromTemplateAsync(e,t,i){return S.has(e,"footnotes")&&((null==i||"string"==typeof i)&&(i={dateFormat:i}),null==i.footnotes&&(i.footnotes=new Map)),super.fromTemplateCoreAsync(this,e,t,i)}static has(e,...t){return super.has(e,...t)}}function R(e,t){return s.mY.getMarkdownCommandArgsCore(`${u.Gh.ActionPrefix}${e}`,{...t,type:e})}},5485:(e,t,i)=>{i.d(t,{M:()=>o});var r=i(4627);let s=new Map,n=/ /g;class o{_item;_options;constructor(e,t){this.reset(e,t)}reset(e,t){this._item=e,this.collapsableWhitespace=0,(null!=t||null==this._options)&&(null==t&&(t={}),null==t.dateFormat&&(t.dateFormat="MMMM Do, YYYY h:mma"),null==t.tokenOptions&&(t.tokenOptions={}),this._options=t)}collapsableWhitespace=0;_padOrTruncate(e,t){if(null==e||0===e.length)return e;null==t&&(t={collapseWhitespace:!1,padDirection:"left",prefix:void 0,suffix:void 0,truncateTo:void 0});let i=t.truncateTo;if(null==i)this.collapsableWhitespace=0;else{i+=this.collapsableWhitespace,this.collapsableWhitespace=0;let s=(0,r.dz)(e),n=i-s;n>0?(t.collapseWhitespace&&(this.collapsableWhitespace=n),"left"===t.padDirection?e=(0,r.Q_)(e,i,void 0,s):(t.collapseWhitespace&&(i-=n),e=(0,r.eh)(e,i,void 0,s))):n<0&&(e=(0,r.$G)(e,i,void 0,s))}return(t.prefix||t.suffix)&&(e=`${t.prefix??""}${e}${t.suffix??""}`),e}static _formatter=void 0;static fromTemplateCore(e,t,i,s){let a;if(t=t.replace(n," "),e instanceof o)return(0,r.sX)(t,e);if(null==(a=null==s||"string"==typeof s?{dateFormat:s}:s).tokenOptions){let e=(0,r.Gg)(t).reduce((e,t)=>(e[t.key]=t.options,e),Object.create(null));a.tokenOptions=e}return null==this._formatter?this._formatter=new e(i,a):this._formatter.reset(i,a),(0,r.sX)(t,this._formatter)}static fromTemplateCoreAsync(e,t,i,s){let a;if(t=t.replace(n," "),e instanceof o)return(0,r.Qu)(t,e);if(null==(a=null==s||"string"==typeof s?{dateFormat:s}:s).tokenOptions){let e=(0,r.Gg)(t).reduce((e,t)=>(e[t.key]=t.options,e),Object.create(null));a.tokenOptions=e}return null==this._formatter?this._formatter=new e(i,a):this._formatter.reset(i,a),(0,r.Qu)(t,this._formatter)}static has(e,...t){let i=1===t.length?t[0]:`(${t.join("|")})`,r=s.get(i);return null==r&&(r=RegExp(`\\b${i}\\b`),s.set(i,r)),r.test(e)}}},6373:(e,t,i)=>{i.d(t,{o:()=>a});var r=i(5255),s=i(3700),n=i(7881),o=i(5485);class a extends o.M{get directory(){let e=(0,n.OC)(this._item,!1,this._options.relativePath);return this._padOrTruncate(e,this._options.tokenOptions.directory)}get file(){let e=(0,s.EZ)(this._item.path);return this._padOrTruncate(e,this._options.tokenOptions.file)}get filePath(){let e=(0,n.PM)(this._item,{relativeTo:this._options.relativePath,truncateTo:this._options.tokenOptions.filePath?.truncateTo});return this._padOrTruncate(e,this._options.tokenOptions.filePath)}get originalPath(){let e=(0,n.Gv)(this._item,this._options.relativePath);return this._padOrTruncate(e,this._options.tokenOptions.originalPath)}get path(){let e=(0,n.W5)(this._item,this._options.relativePath);return this._padOrTruncate(e,this._options.tokenOptions.path)}get status(){let e=(0,n.K9)(this._item.status);return this._padOrTruncate(e,this._options.tokenOptions.status)}get working(){let e="";return e=null!=this._item.workingTreeStatus&&null!=this._item.indexStatus?`${r.NE.Pencil}${r.NE.Space}${r.NE.SpaceThinnest}${r.NE.Check}`:null!=this._item.workingTreeStatus?`${r.NE.Pencil}${r.NE.SpaceThin}${r.NE.SpaceThinnest}${r.NE.EnDash}${r.NE.Space}`:null!=this._item.indexStatus?`${r.NE.Space}${r.NE.EnDash}${r.NE.Space.repeat(2)}${r.NE.Check}`:"",this._padOrTruncate(e,this._options.tokenOptions.working)}get changes(){return this._padOrTruncate(n.K8.is(this._item)?this._item.formatStats():"",this._options.tokenOptions.changes)}get changesDetail(){return this._padOrTruncate(n.K8.is(this._item)?this._item.formatStats({expand:!0,separator:", "}):"",this._options.tokenOptions.changesDetail)}get changesShort(){return this._padOrTruncate(n.K8.is(this._item)?this._item.formatStats({compact:!0,separator:""}):"",this._options.tokenOptions.changesShort)}static fromTemplate(e,t,i){return super.fromTemplateCore(this,e,t,i)}}},7462:(e,t,i)=>{i.d(t,{Tg:()=>D,Wj:()=>C,YY:()=>b,uj:()=>P,uy:()=>A});var r=i(9496),s=i(6150),n=i(4398),o=i(5255),a=i(5140),l=i(4298),h=i(4241),c=i(4488),u=i(1774),d=i(3700),p=i(2509),g=i(439),m=i(4321),f=Object.defineProperty,w=Object.getOwnPropertyDescriptor,v=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?w(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&f(t,i,n),n};let y=class e extends r.Uri{repoPath;sha;constructor(e,t){let i;if(null==e){super({scheme:"unknown"});return}if(e.scheme===o.sN.GitLens){let i=e.path,r=P(e.authority);null==r.uncPath||i.startsWith(r.uncPath)||(i=`${r.uncPath}${e.path}`),super({scheme:e.scheme,authority:e.authority,path:i,query:e.query,fragment:e.fragment}),this.repoPath=r.repoPath;let s=r.ref;null!=t&&"string"!=typeof t&&(s=t.sha),((0,m.rD)(s)||!(0,m.l3)(s))&&(this.sha=s);return}if((0,p.pt)(e)){super(e);let[,i,r]=e.path.split("/",3);this.repoPath=e.with({path:`/${i}/${r}`}).toString();let n=function(e){let t;let[i,r]=e.authority.split("+");if(r)try{t=JSON.parse((0,s.d)(r))}catch{}return{scheme:i,metadata:t}}(e),o=n.metadata?.ref?.id;null!=t&&"string"!=typeof t&&(o=t.sha),o&&((0,m.rD)(o)||!(0,m.l3)(o))&&(this.sha=o);return}if(void 0===t){super(e);return}if("string"==typeof t){super(e),this.repoPath=t;return}let r=e.authority,n=(0,d.AH)(a.W.instance.git.getAbsoluteUri(t.fileName??e.fsPath,t.repoPath).fsPath);if(47===n.charCodeAt(0)&&47===n.charCodeAt(1)){let e=n.indexOf("/",2);-1===e?(r=n.substring(2),n="/"):(r=n.substring(2,e),n=n.substring(e)||"/")}switch(e.scheme){case"https":case"http":case"file":i=n?47!==n.charCodeAt(0)?`/${n}`:n:"/";break;default:i=47!==n.charCodeAt(0)?`/${n}`:n}super({scheme:e.scheme,authority:r,path:i,query:e.query,fragment:e.fragment}),this.repoPath=t.repoPath,((0,m.rD)(t.sha)||!(0,m.l3)(t.sha))&&(this.sha=t.sha)}get directory(){return(0,d.Fd)(this.relativePath)}get fileName(){return(0,d.EZ)(this.relativePath)}get isUncommitted(){return(0,m.l3)(this.sha)}get isUncommittedStaged(){return(0,m.rD)(this.sha)}get relativePath(){return(0,d.uo)((0,d.M)(this.fsPath),this.repoPath)[0]}get shortSha(){return(0,m.zL)(this.sha)}documentUri(){return r.Uri.from({scheme:this.scheme,authority:this.authority,path:this.path,query:this.query,fragment:this.fragment})}equals(e){return!!l.n.equals(this,e)&&this.sha===(A(e)?e.sha:void 0)}getFormattedFileName(e){return(0,u.d)(this.fsPath,{...e,fileOnly:!0})}toFileUri(){return a.W.instance.git.getAbsoluteUri(this.fsPath,this.repoPath)}static fromFile(t,i,r,s=!1){let n=a.W.instance.git.getAbsoluteUri("string"==typeof t?t:s&&t.originalPath||t.path,i);return r?new e(n,{repoPath:i,sha:"string"!=typeof t&&"?"===t.status?`${r}^3`:r}):new e(n,i)}static fromRepoPath(t,i){return i?new e(a.W.instance.git.getAbsoluteUri(t,t),{repoPath:t,sha:i}):new e(a.W.instance.git.getAbsoluteUri(t,t),t)}static fromRevisionUri(t){return new e(t)}static async fromUri(t){if(A(t))return t;if(!a.W.instance.git.isTrackable(t)||t.scheme===o.sN.GitLens)return new e(t);if(t.scheme===o.sN.Git){let i=(0,n.h)(t);if(i?.path){let s;let n=await a.W.instance.git.getOrOpenRepository(r.Uri.file(i.path));if(null==n)throw Error(`Unable to find repository for uri=${r.Uri.file(i.path).toString(!0)}`);switch(i.ref){case"":case"~":s=g.pw;break;case null:s=void 0;break;default:s=i.ref}return new e(t,{fileName:i.path,repoPath:n.path,sha:s})}}if(t.scheme===o.sN.PRs){let i;try{i=JSON.parse(t.query)}catch{}if(i?.fileName){let s=await a.W.instance.git.getOrOpenRepository(t);if(null==s)throw Error(`Unable to find repository for uri=${r.Uri.file(i.fileName).toString(!0)}`);return new e(t,{fileName:i.fileName,repoPath:s.path,sha:i.isBase?i.baseCommit:i.headCommit})}}let i=await a.W.instance.git.getOrOpenRepository(t);return new e(t,i?.path)}};v([(0,c.H)()],y.prototype,"directory",1),v([(0,c.H)()],y.prototype,"fileName",1),v([(0,c.H)()],y.prototype,"isUncommitted",1),v([(0,c.H)()],y.prototype,"isUncommittedStaged",1),v([(0,c.H)()],y.prototype,"relativePath",1),v([(0,c.H)()],y.prototype,"shortSha",1),v([(0,c.H)()],y.prototype,"documentUri",1),v([(0,c.H)()],y.prototype,"toFileUri",1),v([(0,h.fF)({exit:!0})],y,"fromUri",1);let b=y,C=Object.freeze(new b);function A(e){return e instanceof b}function P(e){return JSON.parse((0,s.d)(e))}function D(e){return(0,s.e)(JSON.stringify(e))}},5367:(e,t,i)=>{i.d(t,{$q:()=>C,BF:()=>D,Iq:()=>y,Lo:()=>P,RJ:()=>b,S3:()=>A,Vx:()=>w,XI:()=>v,YF:()=>S,eK:()=>R,uz:()=>k});var r=i(5148),s=i(7512),n=i(4241),o=i(4488),a=i(4336),l=i(5116),h=i(4627),c=i(4321),u=i(827),d=Object.defineProperty,p=Object.getOwnPropertyDescriptor,g=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?p(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&d(t,i,n),n};let m=/\s/,f=/^(?=.*\bHEAD\b)?(?=.*\bdetached\b).*$/;function w(e,t,i){return`${e}|${t?"remotes/":"heads/"}${i}`}class v{constructor(e,t,i,r,s,n,o,a,l=0,h=0,c=!1,u=!1){this.container=e,this.repoPath=t,this.name=i,this.remote=r,this.current=s,this.date=n,this.sha=o,this.rebasing=u,this.id=w(t,r,i),this.detached=c||!!this.current&&k(i),this.detached&&(this.name=y(this.sha)),this.upstream=a?.name==null||0===a.name.length?void 0:a,this.state={ahead:l,behind:h}}refType="branch";detached;id;upstream;state;toString(){return`${(0,a.q4)(this)}(${this.id})`}get formattedDate(){return"absolute"===this.container.BranchDateFormatting.dateStyle?this.formatDate(this.container.BranchDateFormatting.dateFormat):this.formatDateFromNow()}get ref(){return this.detached?this.sha:this.name}formatDate(e){return null!=this.date?(0,s.p6)(this.date,e??"MMMM Do, YYYY h:mma"):""}formatDateFromNow(){return null!=this.date?(0,s.Zh)(this.date):""}async getAssociatedPullRequest(e){let t=await this.getRemote();if(t?.provider!=null)return this.container.integrations.getByRemote(t)?.getPullRequestForBranch(t.provider.repoDesc,this.getTrackingWithoutRemote()??this.getNameWithoutRemote(),e)}getBasename(){let e=this.getNameWithoutRemote(),t=e.lastIndexOf("/");return -1!==t?e.substring(t+1):e}getNameWithoutRemote(){return this.remote?this.name.substring(b(this.name)+1):this.name}getTrackingWithoutRemote(){return(0,c.Gn)(this)}async getRemote(){let e=this.getRemoteName();if(null==e)return;let t=await this.container.git.getRemotes(this.repoPath);return t.length?t.find(t=>t.name===e):void 0}getRemoteName(){return this.remote?P(this.name):null!=this.upstream?P(this.upstream.name):void 0}async getStatus(){return this.remote?"remote":null!=this.upstream?this.upstream.missing?"missingUpstream":this.state.ahead&&this.state.behind?"diverged":this.state.ahead?"ahead":this.state.behind?"behind":"upToDate":(await this.container.git.getRemotes(this.repoPath)).length?"unpublished":"local"}getTrackingStatus(e){return(0,u.JP)(this.upstream,this.state,e)}get starred(){let e=this.container.storage.getWorkspace("starred:branches");return void 0!==e&&!0===e[this.id]}star(){return this.container.git.getRepository(this.repoPath)?.star(this)}unstar(){return this.container.git.getRepository(this.repoPath)?.unstar(this)}}function y(e){return`(${(0,c.zL)(e)}...)`}function b(e){return e.startsWith("remotes/")?e.indexOf("/",8):e.indexOf("/")}function C(e){if(e.remote){let t=b(e.name);return -1===t?[e.name,void 0]:[e.name.substring(t+1),e.name.substring(0,t)]}if(e.upstream?.name!=null){let t=b(e.upstream.name);return -1===t?[e.name,void 0]:[e.name,e.upstream.name.substring(0,t)]}return[e.name,void 0]}function A(e){return e.substring(b(e)+1)}function P(e){return e.substring(0,b(e))}function D(e){return e instanceof v}function k(e){return m.test(e)||f.test(e)}function S(e,t){switch((t={current:!0,orderBy:r.D.get("sortBranchesBy"),...t}).orderBy){case"date:asc":return e.sort((e,i)=>(t.missingUpstream?(e.upstream?.missing?-1:1)-(i.upstream?.missing?-1:1):0)||(t.current?(e.current?-1:1)-(i.current?-1:1):0)||(e.starred?-1:1)-(i.starred?-1:1)||(i.remote?-1:1)-(e.remote?-1:1)||(null==e.date?-1:e.date.getTime())-(null==i.date?-1:i.date.getTime()));case"name:asc":return e.sort((e,i)=>(t.missingUpstream?(e.upstream?.missing?-1:1)-(i.upstream?.missing?-1:1):0)||(t.current?(e.current?-1:1)-(i.current?-1:1):0)||(e.starred?-1:1)-(i.starred?-1:1)||("main"===e.name?-1:1)-("main"===i.name?-1:1)||("master"===e.name?-1:1)-("master"===i.name?-1:1)||("develop"===e.name?-1:1)-("develop"===i.name?-1:1)||(i.remote?-1:1)-(e.remote?-1:1)||(0,h.dm)(e.name,i.name));case"name:desc":return e.sort((e,i)=>(t.missingUpstream?(e.upstream?.missing?-1:1)-(i.upstream?.missing?-1:1):0)||(t.current?(e.current?-1:1)-(i.current?-1:1):0)||(e.starred?-1:1)-(i.starred?-1:1)||("main"===e.name?-1:1)-("main"===i.name?-1:1)||("master"===e.name?-1:1)-("master"===i.name?-1:1)||("develop"===e.name?-1:1)-("develop"===i.name?-1:1)||(i.remote?-1:1)-(e.remote?-1:1)||(0,h.dm)(i.name,e.name));default:return e.sort((e,i)=>(t.missingUpstream?(e.upstream?.missing?-1:1)-(i.upstream?.missing?-1:1):0)||(t.current?(e.current?-1:1)-(i.current?-1:1):0)||(e.starred?-1:1)-(i.starred?-1:1)||(i.remote?-1:1)-(e.remote?-1:1)||(null==i.date?-1:i.date.getTime())-(null==e.date?-1:e.date.getTime()))}}async function R(e,t,i){let r;for await(let s of(t.startsWith("remotes/")?(r=t,t=t.substring(8)):r=`remotes/${t}`,(i??=new l.X(t=>e.getBranches(null!=t?{paging:t}:void 0))).values()))if(!s.remote&&s.upstream?.name!=null&&(s.upstream.name===t||s.upstream.name===r))return s}g([(0,o.H)(e=>e??"MMMM Do, YYYY h:mma")],v.prototype,"formatDate",1),g([(0,n.fF)()],v.prototype,"getAssociatedPullRequest",1),g([(0,o.H)()],v.prototype,"getBasename",1),g([(0,o.H)()],v.prototype,"getNameWithoutRemote",1),g([(0,o.H)()],v.prototype,"getTrackingWithoutRemote",1),g([(0,o.H)()],v.prototype,"getRemote",1),g([(0,o.H)()],v.prototype,"getRemoteName",1),g([(0,o.H)()],v.prototype,"getStatus",1)},6450:(e,t,i)=>{i.d(t,{By:()=>D,G2:()=>A,_j:()=>P,aM:()=>b,f_:()=>C,yp:()=>k});var r=i(9496),s=i(8388),n=i(5255),o=i(7512),a=i(5432),l=i(4488),h=i(4336),c=i(4627),u=i(7462),d=i(439),p=i(7881),g=i(4321),m=Object.defineProperty,f=Object.getOwnPropertyDescriptor,w=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?f(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&m(t,i,n),n};let v=/stash@{(\d+)}/,y=class e{constructor(e,t,i,r,s,o,a,l,h,c,u,d,m,f){this.container=e,this.repoPath=t,this.sha=i,this.author=r,this.committer=s,this.parents=a,this.ref=i,this.shortSha=i.substring(0,this.container.CommitShaFormatting.length),this.tips=d,m?(this.refType="stash",this.stashName=m||void 0,this.stashOnRef=f||void 0,this.number=v.exec(m)?.[1]):this.refType="revision",null!=l?(this._message=l,o!==l?this._summary=`${o} ${n.NE.Ellipsis}`:this._summary=o):(0,g.l3)(i,!0)?(this._summary=o,this._message="Uncommitted Changes"):this._summary=`${o} ${n.NE.Ellipsis}`,null!=c&&(this._stats=c),null!=h&&(Array.isArray(h)?this._files=h:h instanceof p.K8?this._file=h:(null!=h.file&&(this._file=h.file),null!=h.files&&(this._files=h.files)),this._recomputeStats=!0),null!=u?Array.isArray(u)?this.lines=u:this.lines=[u]:this.lines=[]}_stashUntrackedFilesLoaded=!1;_recomputeStats=!1;lines;ref;refType;shortSha;stashName;number;stashOnRef;tips;toString(){return`${(0,h.q4)(this)}(${this.repoPath}|${this.shortSha})`}get date(){return"committed"===this.container.CommitDateFormatting.dateSource?this.committer.date:this.author.date}_file;get file(){return this._file}_files;get files(){return this._files}get formattedDate(){return"absolute"===this.container.CommitDateFormatting.dateStyle?this.formatDate(this.container.CommitDateFormatting.dateFormat):this.formatDateFromNow()}get isUncommitted(){return(0,g.l3)(this.sha)}get isUncommittedStaged(){return(0,g.rD)(this.sha)}_message;get message(){return this._message}get name(){return this.stashName?this.stashName:this.shortSha}_stats;get stats(){return this._recomputeStats&&this.computeFileStats(),this._stats}_summary;get summary(){return this._summary}_resolvedPreviousSha;get unresolvedPreviousSha(){let e=this._resolvedPreviousSha??(null!=this.file?this.file.previousSha:this.parents[0])??`${this.sha}^`;return(0,g.j$)(e)?"HEAD":e}_etagFileSystem;hasFullDetails(){return null!=this.message&&null!=this.files&&(this.isUncommitted&&this._etagFileSystem===this.container.git.getRepository(this.repoPath)?.etagFileSystem||0!==this.parents.length)&&("stash"!==this.refType||this._stashUntrackedFilesLoaded)}async ensureFullDetails(){let e;if(this.hasFullDetails())return;if(this.isUncommitted){let e=this.container.git.getRepository(this.repoPath);if(this._etagFileSystem=e?.etagFileSystem,null!=this._etagFileSystem){let t=await this.container.git.getStatusForRepo(this.repoPath);null!=t&&(this._files=t.files.flatMap(e=>e.getPseudoFileChanges())),this._etagFileSystem=e?.etagFileSystem}null==this._files&&(this._files=null!=this.file?[this.file]:[]);return}let[t,i]=await Promise.allSettled(["stash"!==this.refType?this.container.git.getCommit(this.repoPath,this.sha):void 0,"stash"!==this.refType||this._stashUntrackedFilesLoaded?void 0:this.container.git.getCommit(this.repoPath,`${this.stashName}^3`),this.getPreviousSha()]);if("fulfilled"===t.status&&null!=t.value&&(e=t.value,this.parents.push(...e.parents??[]),this._summary=e.summary,this._message=e.message,this._files=e.files,null!=this._file)){let e=this._files.find(e=>e.path===this._file.path);null!=e&&(this._file=new p.K8(e.repoPath,e.path,e.status,e.originalPath??this._file.originalPath,e.previousSha??this._file.previousSha,e.stats??this._file.stats))}if("fulfilled"===i.status&&null!=i.value&&(this._stashUntrackedFilesLoaded=!0,e=i.value,e?.files!=null&&0!==e.files.length)){let t=e.files.map(e=>new p.K8(this.repoPath,e.path,p.Bh.Untracked,e.originalPath));null==this._files?this._files=t:this._files.push(...t)}this._recomputeStats=!0}computeFileStats(){if(!this._recomputeStats||null==this._files)return;this._recomputeStats=!1;let e={added:0,deleted:0,changed:0},t=0,i=0;for(let r of this._files)switch(null!=r.stats&&(t+=r.stats.additions,i+=r.stats.deletions),r.status){case"A":case"?":e.added++;break;case"D":e.deleted++;break;default:e.changed++}null!=this._stats&&(0===t&&0!==this._stats.additions&&(t=this._stats.additions),0===i&&0!==this._stats.deletions&&(i=this._stats.deletions)),this._stats={...this._stats,changedFiles:e,additions:t,deletions:i}}async findFile(e,t){if(!this.hasFullDetails()&&(await this.ensureFullDetails(),null==this._files))return;let i=this.container.git.getRelativePath(e,this.repoPath);return this.isUncommitted&&null!=t?this._files?.find(e=>e.path===i&&e.staged===t):this._files?.find(e=>e.path===i)}formatDate(e){return"committed"===this.container.CommitDateFormatting.dateSource?this.committer.formatDate(e):this.author.formatDate(e)}formatDateFromNow(e){return"committed"===this.container.CommitDateFormatting.dateSource?this.committer.fromNow(e):this.author.fromNow(e)}formatStats(e){let t=this.stats;if(null==t)return e?.empty??"";let{changedFiles:i,additions:r,deletions:s}=t;if(0>=D(i)&&r<=0&&s<=0)return e?.empty??"";let{compact:o=!1,expand:a=!1,prefix:l="",sectionSeparator:h=` ${(0,c.vk)(n.NE.Dot,1,1,n.NE.Space)} `,separator:u=" ",suffix:d=""}=e??{},p=l;if("number"==typeof i)i&&(p+=a?`${(0,c._6)("file",i)} changed`:`~${i}`);else{let{added:e,changed:t,deleted:s}=i;e?p+=a?`${(0,c._6)("file",e)} added`:`+${e}`:a||o||(p+="+0"),t?p+=`${e?u:""}${a?`${(0,c._6)("file",t)} changed`:`~${t}`}`:a||o||(p+="~0"),s?p+=`${t|r?u:""}${a?`${(0,c._6)("file",s)} deleted`:`-${s}`}`:a||o||(p+="-0")}return a&&(r&&(p+=`${i?h:""}${(0,c._6)("addition",r)}`),s&&(p+=`${i||r?u:""}${(0,c._6)("deletion",s)}`)),p+=d}async getAssociatedPullRequest(e){if(e??=await this.container.git.getBestRemoteWithIntegration(this.repoPath),!e?.hasIntegration())return;let t=this.container.integrations.getByRemote(e);return t?.getPullRequestForCommit(e.provider.repoDesc,this.ref)}async getEnrichedAutolinks(e){if(!this.isUncommitted&&(e??=await this.container.git.getBestRemoteWithIntegration(this.repoPath),e?.provider!=null))return null==this.message&&await this.ensureFullDetails(),this.container.autolinks.getEnrichedAutolinks(this.message??this.summary,e)}getAvatarUri(e){return this.author.getAvatarUri(this,e)}getCachedAvatarUri(e){return this.author.getCachedAvatarUri(e)}async getCommitForFile(e,t){let i="string"==typeof e?this.container.git.getRelativePath(e,this.repoPath):e.path,r=await this.findFile(i,t);if(null!=r)return this.with({sha:r.staged?d.pw:this.sha,files:{file:r}})}async getCommitsForFiles(){return this.hasFullDetails()||(await this.ensureFullDetails(),null!=this._files)?this._files?.map(e=>this.with({files:{file:e}}))??[]:[]}getGitUri(e=!1){let t=this._file?.uri??this.container.git.getAbsoluteUri(this.repoPath,this.repoPath);return e?new u.YY(this._file?.originalUri??t,{repoPath:this.repoPath,sha:this.unresolvedPreviousSha}):new u.YY(t,this)}getPreviousComparisonUrisForLine(e,t){return null!=this.file?this.container.git.getPreviousComparisonUrisForLine(this.repoPath,this.file.uri,e,t??(this.sha===d.CL?void 0:this.sha)):Promise.resolve(void 0)}_previousShaPromise;async getPreviousSha(){if(null==this._previousShaPromise){async function e(){if(null!=this.file){if(null!=this.file.previousSha&&(0,g.D3)(this.file.previousSha))return this.file.previousSha;let e=await this.container.git.resolveReference(this.repoPath,(0,g.l3)(this.sha,!0)?"HEAD":`${this.sha}^`,this.file.originalPath??this.file.path);return this._resolvedPreviousSha=e,e}let e=this.parents[0];if(null!=e&&(0,g.D3)(e))return e;let t=await this.container.git.resolveReference(this.repoPath,(0,g.l3)(this.sha,!0)?"HEAD":`${this.sha}^`);return this._resolvedPreviousSha=t,t}this._previousShaPromise=e.call(this)}return this._previousShaPromise}getRepository(){return this.container.git.getRepository(this.repoPath)}async isPushed(){return this.container.git.hasCommitBeenPushed(this.repoPath,this.ref)}with(t){let i;return null!=t.files?(i={file:this._file,files:this._files},null!=t.files.file?i.file=t.files.file:null===t.files.file&&(i.file=void 0),null!=t.files.files?i.files=t.files.files:null===t.files.files&&(i.files=void 0)):null===t.files&&(i=void 0),new e(this.container,this.repoPath,t.sha??this.sha,this.author,this.committer,this.summary,this.getChangedValue(t.parents,this.parents)??[],this.message,i,this.stats,this.getChangedValue(t.lines,this.lines),this.tips,this.stashName,this.stashOnRef)}getChangedValue(e,t){return void 0===e?t:null!==e?e:void 0}};w([(0,l.H)()],y.prototype,"isUncommitted",1),w([(0,l.H)()],y.prototype,"isUncommittedStaged",1),w([(0,a.H)()],y.prototype,"ensureFullDetails",1),w([(0,l.H)()],y.prototype,"getGitUri",1),w([(0,l.H)((e,t)=>`${e}|${t??""}`)],y.prototype,"getPreviousComparisonUrisForLine",1),w([(0,a.H)()],y.prototype,"isPushed",1);let b=y;function C(e){return e instanceof b}function A(e){return e instanceof b&&"stash"===e.refType&&!!e.stashName}class P{constructor(e,t,i,r){this.name=e,this.email=t,this.date=i,this.avatarUrl=r}formatDate(e){return(0,o.p6)(this.date,e??"MMMM Do, YYYY h:mma")}fromNow(e){return(0,o.Zh)(this.date,e)}getAvatarUri(e,t){return null!=this.avatarUrl?r.Uri.parse(this.avatarUrl):(0,s.oP)(this.email,e,t)}getCachedAvatarUri(e){return null!=this.avatarUrl?r.Uri.parse(this.avatarUrl):(0,s.x4)(this.email,e)}}function D(e){return null==e?0:"number"==typeof e?e:e.added+e.changed+e.deleted}function k(e){if(!e.hasFullDetails())throw Error(`GitCommit(${e.sha}) is not fully loaded`)}w([(0,l.H)(e=>e??"MMMM Do, YYYY h:mma")],P.prototype,"formatDate",1)},439:(e,t,i)=>{i.d(t,{CL:()=>s,Ii:()=>r,pw:()=>n});let r="0000000000000000000000000000000000000000-",s="0000000000000000000000000000000000000000",n="0000000000000000000000000000000000000000:"},1719:(e,t,i)=>{i.d(t,{V:()=>d,v:()=>p});var r=i(9496),s=i(8388),n=i(5148),o=i(7512),a=i(4488),l=i(4627),h=Object.defineProperty,c=Object.getOwnPropertyDescriptor;let u=class e{constructor(e,t,i,r,s,n=!1,o,a,l,h){this.repoPath=e,this.name=t,this.email=i,this.count=r,this.date=s,this.current=n,this.stats=o,this.username=a,this.avatarUrl=l,this.id=h}static is(t){return t instanceof e}static sort(e,t){switch((t={current:!0,orderBy:n.D.get("sortContributorsBy"),...t}).orderBy){case"count:asc":return e.sort((e,t)=>(e.current?-1:1)-(t.current?-1:1)||e.count-t.count||(e.date?.getTime()??0)-(t.date?.getTime()??0));case"date:desc":return e.sort((e,i)=>(t.current?(e.current?-1:1)-(i.current?-1:1):0)||(i.date?.getTime()??0)-(e.date?.getTime()??0)||i.count-e.count);case"date:asc":return e.sort((e,i)=>(t.current?(e.current?-1:1)-(i.current?-1:1):0)||(e.date?.getTime()??0)-(i.date?.getTime()??0)||i.count-e.count);case"name:asc":return e.sort((e,t)=>(e.current?-1:1)-(t.current?-1:1)||(0,l.dm)(e.name??e.username,t.name??t.username));case"name:desc":return e.sort((e,t)=>(e.current?-1:1)-(t.current?-1:1)||(0,l.dm)(t.name??t.username,e.name??e.username));default:return e.sort((e,t)=>(e.current?-1:1)-(t.current?-1:1)||t.count-e.count||(t.date?.getTime()??0)-(e.date?.getTime()??0))}}get label(){return this.name??this.username}formatDate(e){return null!=this.date?(0,o.p6)(this.date,e??"MMMM Do, YYYY h:mma"):""}formatDateFromNow(e){return null!=this.date?(0,o.Zh)(this.date,e):""}getAvatarUri(e){return null!=this.avatarUrl?r.Uri.parse(this.avatarUrl):(0,s.oP)(this.email,void 0,e)}getCoauthor(){return`${this.name}${this.email?` <${this.email}>`:""}`}};((e,t,i,r)=>{for(var s,n=r>1?void 0:r?c(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&h(t,i,n)})([(0,a.H)(e=>e??"MMMM Do, YYYY h:mma")],u.prototype,"formatDate",1);let d=u;function p(e,t){return e.name===t.name&&e.email===t.email&&e.username===t.username}},7881:(e,t,i)=>{i.d(t,{Bh:()=>w,Gv:()=>b,K8:()=>_,K9:()=>R,NV:()=>f,OC:()=>v,PM:()=>y,Qw:()=>k,Vz:()=>m,W5:()=>C,tK:()=>P});var r,s,n,o=i(5255),a=i(5140),l=i(4488),h=i(1774),c=i(3700),u=i(4627),d=Object.defineProperty,p=Object.getOwnPropertyDescriptor,g=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?p(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&d(t,i,n),n},m=((r=m||{}).AddedByBoth="AA",r.AddedByUs="AU",r.AddedByThem="UA",r.DeletedByBoth="DD",r.DeletedByUs="DU",r.DeletedByThem="UD",r.ModifiedByBoth="UU",r),f=((s=f||{}).Modified="M",s.Added="A",s.Deleted="D",s.Renamed="R",s.Copied="C",s.Unchanged=".",s.Untracked="?",s.Ignored="!",s.UpdatedButUnmerged="U",s),w=((n=w||{}).Modified="M",n.Added="A",n.Deleted="D",n.Untracked="?",n.Ignored="!",n);function v(e,t=!1,i){let r=(0,c.Fd)(e.path,i);return t&&("R"===e.status||"C"===e.status)&&e.originalPath?`${r} ${(0,u.vk)(o.NE.ArrowLeft,1,1)} ${e.originalPath}`:r}function y(e,t={}){return(0,h.d)(e.path,t)}function b(e,t){return e.originalPath?(0,c.uo)(e.originalPath,t)[0]:""}function C(e,t){return(0,c.uo)(e.path,t)[0]}let A={".":void 0,"!":"icon-status-ignored.svg","?":"icon-status-untracked.svg",A:"icon-status-added.svg",D:"icon-status-deleted.svg",M:"icon-status-modified.svg",R:"icon-status-renamed.svg",C:"icon-status-copied.svg",AA:"icon-status-conflict.svg",AU:"icon-status-conflict.svg",UA:"icon-status-conflict.svg",DD:"icon-status-conflict.svg",DU:"icon-status-conflict.svg",UD:"icon-status-conflict.svg",UU:"icon-status-conflict.svg",T:"icon-status-modified.svg",U:"icon-status-modified.svg"};function P(e){return A[e]??"icon-status-unknown.svg"}let D={".":void 0,"!":"$(diff-ignored)","?":"$(diff-added)",A:"$(diff-added)",D:"$(diff-removed)",M:"$(diff-modified)",R:"$(diff-renamed)",C:"$(diff-added)",AA:"$(warning)",AU:"$(warning)",UA:"$(warning)",DD:"$(warning)",DU:"$(warning)",UD:"$(warning)",UU:"$(warning)",T:"$(diff-modified)",U:"$(diff-modified)"};function k(e,t=o.NE.Space.repeat(4)){return D[e]??t}let S={".":"Unchanged","!":"Ignored","?":"Untracked",A:"Added",D:"Deleted",M:"Modified",R:"Renamed",C:"Copied",AA:"Conflict",AU:"Conflict",UA:"Conflict",DD:"Conflict",DU:"Conflict",UD:"Conflict",UU:"Conflict",T:"Modified",U:"Updated but Unmerged"};function R(e){return S[e]??"Unknown"}let $=class e{constructor(e,t,i,r,s,n,o){this.repoPath=e,this.path=t,this.status=i,this.originalPath=r,this.previousSha=s,this.stats=n,this.staged=o}static is(t){return t instanceof e}get hasConflicts(){switch(this.status){case"UA":case"AU":case"AA":case"UD":case"DU":case"DD":case"UU":return!0;default:return!1}}get uri(){return a.W.instance.git.getAbsoluteUri(this.path,this.repoPath)}get originalUri(){return this.originalPath?a.W.instance.git.getAbsoluteUri(this.originalPath,this.repoPath):void 0}getWorkingUri(){return a.W.instance.git.getWorkingUri(this.repoPath,this.uri)}formatStats(e){if(null==this.stats)return e?.empty??"";let{additions:t,deletions:i}=this.stats;if(t<0&&i<0)return e?.empty??"";let{compact:r=!1,expand:s=!1,prefix:n="",separator:o=" ",suffix:a=""}=e??{},l=n;return t?l+=s?`${(0,u._6)("line",t)} added`:`+${t}`:s||r||(l+="+0"),i?l+=`${t?o:""}${s?`${(0,u._6)("line",i)} deleted`:`-${i}`}`:s||r||(l+="-0"),l+=a}};g([(0,l.H)()],$.prototype,"uri",1),g([(0,l.H)()],$.prototype,"originalUri",1),g([(0,l.H)()],$.prototype,"getWorkingUri",1);let _=$},8452:(e,t,i)=>{i.d(t,{$9:()=>h,Gj:()=>s,Ty:()=>n,sy:()=>o,xX:()=>a,y$:()=>l});var r=i(9496);function s(e){return{type:e.type,provider:{id:e.provider.id,name:e.provider.name,domain:e.provider.domain,icon:e.provider.icon},id:e.id,nodeId:e.nodeId,title:e.title,url:e.url,date:e.date,closedDate:e.closedDate,closed:e.closed,state:e.state}}function n(e){if(null==e)return`<span class="codicon codicon-link" style="color:${r.window.activeColorTheme.kind===r.ColorThemeKind.Dark?"#a371f7":"#8250df"};"></span>`;if("pullrequest"!==e.type)return e.closed?`<span class="codicon codicon-pass" style="color:${r.window.activeColorTheme.kind===r.ColorThemeKind.Dark?"#a371f7":"#8250df"};"></span>`:`<span class="codicon codicon-issues" style="color:${r.window.activeColorTheme.kind===r.ColorThemeKind.Dark?"#3fb950":"#1a7f37"};"></span>`;switch(e.state){case"merged":return`<span class="codicon codicon-git-merge" style="color:${r.window.activeColorTheme.kind===r.ColorThemeKind.Dark?"#a371f7":"#8250df"};"></span>`;case"closed":return`<span class="codicon codicon-git-pull-request-closed" style="color:${r.window.activeColorTheme.kind===r.ColorThemeKind.Dark?"#f85149":"#cf222e"};"></span>`;case"opened":return`<span class="codicon codicon-git-pull-request" style="color:${r.window.activeColorTheme.kind===r.ColorThemeKind.Dark?"#3fb950":"#1a7f37"};"></span>`;default:return'<span class="codicon codicon-git-pull-request"></span>'}}function o(e){if(null==e)return`<span style="color:${r.window.activeColorTheme.kind===r.ColorThemeKind.Dark?"#a371f7":"#8250df"};">$(link)</span>`;if("pullrequest"!==e.type)return e.closed?`<span style="color:${r.window.activeColorTheme.kind===r.ColorThemeKind.Dark?"#a371f7":"#8250df"};">$(pass)</span>`:`<span style="color:${r.window.activeColorTheme.kind===r.ColorThemeKind.Dark?"#3fb950":"#1a7f37"};">$(issues)</span>`;switch(e.state){case"merged":return`<span style="color:${r.window.activeColorTheme.kind===r.ColorThemeKind.Dark?"#a371f7":"#8250df"};">$(git-merge)</span>`;case"closed":return`<span style="color:${r.window.activeColorTheme.kind===r.ColorThemeKind.Dark?"#f85149":"#cf222e"};">$(git-pull-request-closed)</span>`;case"opened":return`<span style="color:${r.window.activeColorTheme.kind===r.ColorThemeKind.Dark?"#3fb950":"#1a7f37"};">$(git-pull-request)</span>`;default:return"$(git-pull-request)"}}function a(e){if(null==e)return new r.ThemeIcon("link",new r.ThemeColor("gitlens.closedAutolinkedIssueIconColor"));if("pullrequest"!==e.type)return e.closed?new r.ThemeIcon("pass",new r.ThemeColor("gitlens.closedAutolinkedIssueIconColor")):new r.ThemeIcon("issues",new r.ThemeColor("gitlens.openAutolinkedIssueIconColor"));switch(e.state){case"merged":return new r.ThemeIcon("git-merge",new r.ThemeColor("gitlens.mergedPullRequestIconColor"));case"closed":return new r.ThemeIcon("git-pull-request-closed",new r.ThemeColor("gitlens.closedPullRequestIconColor"));case"opened":return new r.ThemeIcon("git-pull-request",new r.ThemeColor("gitlens.openPullRequestIconColor"));default:return new r.ThemeIcon("git-pull-request")}}function l(e){return{type:e.type,provider:{id:e.provider.id,name:e.provider.name,domain:e.provider.domain,icon:e.provider.icon},id:e.id,nodeId:e.nodeId,title:e.title,url:e.url,date:e.date,closedDate:e.closedDate,closed:e.closed,state:e.state,updatedDate:e.updatedDate,author:{name:e.author.name,avatarUrl:e.author.avatarUrl,url:e.author.url},repository:{owner:e.repository.owner,repo:e.repository.repo},assignees:e.assignees.map(e=>({name:e.name,avatarUrl:e.avatarUrl,url:e.url})),labels:null==e.labels?void 0:e.labels.map(e=>({color:e.color,name:e.name})),commentsCount:e.commentsCount,thumbsUpCount:e.thumbsUpCount}}class h{constructor(e,t,i,r,s,n,o,a,l,h,c,u,d,p,g,m){this.provider=e,this.id=t,this.nodeId=i,this.title=r,this.url=s,this.date=n,this.closed=o,this.state=a,this.updatedDate=l,this.author=h,this.repository=c,this.assignees=u,this.closedDate=d,this.labels=p,this.commentsCount=g,this.thumbsUpCount=m}type="issue"}},4092:(e,t,i)=>{i.d(t,{Cz:()=>d,i7:()=>m,l1:()=>p,pD:()=>u});var r,s,n=i(5140),o=i(7512),a=i(4488),l=Object.defineProperty,h=Object.getOwnPropertyDescriptor,c=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?h(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&l(t,i,n),n},u=((r=u||{}).Approved="Approved",r.ChangesRequested="ChangesRequested",r.ReviewRequired="ReviewRequired",r),d=((s=d||{}).Unknown="Unknown",s.Mergeable="Mergeable",s.Conflicting="Conflicting",s);function p(e){return{type:e.type,provider:{id:e.provider.id,name:e.provider.name,domain:e.provider.domain,icon:e.provider.icon},id:e.id,nodeId:e.nodeId,title:e.title,url:e.url,date:e.date,closedDate:e.closedDate,closed:e.closed,author:{name:e.author.name,avatarUrl:e.author.avatarUrl,url:e.author.url},state:e.state,mergedDate:e.mergedDate,mergeableState:e.mergeableState,refs:e.refs?{head:{exists:e.refs.head.exists,owner:e.refs.head.owner,repo:e.refs.head.repo,sha:e.refs.head.sha,branch:e.refs.head.branch,url:e.refs.head.url},base:{exists:e.refs.base.exists,owner:e.refs.base.owner,repo:e.refs.base.repo,sha:e.refs.base.sha,branch:e.refs.base.branch,url:e.refs.base.url},isCrossRepository:e.refs.isCrossRepository}:void 0,isDraft:e.isDraft,additions:e.additions,deletions:e.deletions,comments:e.comments,reviewDecision:e.reviewDecision,reviewRequests:e.reviewRequests,assignees:e.assignees}}let g=class e{constructor(e,t,i,r,s,n,o,a,l,h,c,u,d,p,g,m,f,w,v){this.provider=e,this.author=t,this.id=i,this.nodeId=r,this.title=s,this.url=n,this.state=o,this.date=a,this.closedDate=l,this.mergedDate=h,this.mergeableState=c,this.refs=u,this.isDraft=d,this.additions=p,this.deletions=g,this.comments=m,this.reviewDecision=f,this.reviewRequests=w,this.assignees=v}static is(t){return t instanceof e}type="pullrequest";get closed(){return"closed"===this.state}get formattedDate(){return"absolute"===n.W.instance.PullRequestDateFormatting.dateStyle?this.formatDate(n.W.instance.PullRequestDateFormatting.dateFormat):this.formatDateFromNow()}formatDate(e){return(0,o.p6)(this.mergedDate??this.closedDate??this.date,e??"MMMM Do, YYYY h:mma")}formatDateFromNow(){return(0,o.Zh)(this.mergedDate??this.closedDate??this.date)}formatClosedDate(e){return null==this.closedDate?"":(0,o.p6)(this.closedDate,e??"MMMM Do, YYYY h:mma")}formatClosedDateFromNow(){return null==this.closedDate?"":(0,o.Zh)(this.closedDate)}formatMergedDate(e){return null==this.mergedDate?"":(0,o.p6)(this.mergedDate,e??"MMMM Do, YYYY h:mma")??""}formatMergedDateFromNow(){return null==this.mergedDate?"":(0,o.Zh)(this.mergedDate)}formatUpdatedDate(e){return(0,o.p6)(this.date,e??"MMMM Do, YYYY h:mma")??""}formatUpdatedDateFromNow(){return(0,o.Zh)(this.date)}};c([(0,a.H)(e=>e??"MMMM Do, YYYY h:mma")],g.prototype,"formatDate",1),c([(0,a.H)(e=>e??"MMMM Do, YYYY h:mma")],g.prototype,"formatClosedDate",1),c([(0,a.H)(e=>e??"MMMM Do, YYYY h:mma")],g.prototype,"formatMergedDate",1),c([(0,a.H)(e=>e??"MMMM Do, YYYY h:mma")],g.prototype,"formatUpdatedDate",1);let m=g},4321:(e,t,i)=>{i.d(t,{Av:()=>$,D3:()=>v,FT:()=>x,Gn:()=>_,LB:()=>S,Nn:()=>T,UR:()=>F,Wh:()=>B,Yn:()=>I,gA:()=>E,j$:()=>C,l3:()=>b,oI:()=>f,pZ:()=>O,qj:()=>R,rD:()=>A,t6:()=>D,xB:()=>k,yk:()=>w,yo:()=>y,zL:()=>P});var r=i(5255),s=i(5148),n=i(4627),o=i(5367),a=i(439);let l=/^(\S*?)(\.\.\.?)(\S*)\s*$/,h=/(^[0-9a-f]{40}([\^@~:]\S*)?$)|(^[0]{40}(:|-)$)/,c=/(^[0-9a-f]{40}$)|(^[0]{40}(:|-)$)/,u=/(^[0-9a-f]{40})\^[0-3]?$/,d=/^(.*?)([\^@~:].*)?$/,p=/^[0]{40}(?:[\^@~:]\S*)?:?$/,g=/^[0]{40}([\^@~]\S*)?:$/;function m(e,t){return!!t&&e.test(t)}function f(e,t,i=".."){return`${e??""}${i}${t??""}`}function w(e){return e?.includes("..")??!1}function v(e){return m(c,e)}function y(e){return m(h,e)}function b(e,t=!1){return e===a.CL||e===a.pw||!t&&m(p,e)}function C(e){return e===`${a.CL}^`||e===`${a.pw}^`}function A(e,t=!1){return e===a.pw||!t&&m(g,e)}function P(e,t){if(e===a.Ii)return"(deleted)";if(!e)return t?.strings?.working??"";if(b(e))return A(e)?t?.strings?.uncommittedStaged??"Index":t?.strings?.uncommitted??"Working Tree";if(w(e)||!t?.force&&!y(e))return e;let i=Math.max(5,s.D.get("advanced.abbreviatedShaLength")),r=d.exec(e);if(null!=r){let[,e,t]=r;if(null!=t)return`${e.substr(0,i)}${t}`}return e.substr(0,i)}function D(e){let t=l.exec(e);if(null==t)return;let[,i,r,s]=t;return{ref1:i,notation:r,ref2:s}}function k(e,t,i={refType:"revision"}){switch(i.refType){case"branch":return{refType:"branch",repoPath:t,ref:e,name:i.name,id:i.id,remote:i.remote,upstream:i.upstream};case"stash":return{refType:"stash",repoPath:t,ref:e,name:i.name,number:i.number,message:i.message,stashOnRef:i.stashOnRef};case"tag":return{refType:"tag",repoPath:t,ref:e,name:i.name,id:i.id};default:return{refType:"revision",repoPath:t,ref:e,name:i.name??P(e,{force:!0,strings:{working:"Working Tree"}}),message:i.message}}}function S(e){return k(e.ref,e.repoPath,{id:e.id,refType:e.refType,name:e.name,remote:e.remote,upstream:e.upstream})}function R(e,t){return"stash"===e.refType?k(e.ref,e.repoPath,{refType:e.refType,name:e.name,number:e.number,message:t?.excludeMessage?void 0:e.message}):k(e.ref,e.repoPath,{refType:e.refType,name:e.name,message:t?.excludeMessage?void 0:e.message})}function $(e){return"branch"===e.refType&&e.remote?(0,o.S3)(e.name):e.name}function _(e){return e.upstream?.name.substring(o.RJ(e.upstream.name)+1)}function I(e){return null!=e&&"object"==typeof e&&"string"==typeof e.refType&&"string"==typeof e.repoPath&&"string"==typeof e.ref&&"string"==typeof e.name}function F(e){return e?.refType==="branch"}function x(e){return e?.refType==="revision"}function T(e){return e?.refType==="revision"&&w(e.ref)}function O(e){return e?.refType==="stash"||e?.refType==="revision"&&!!e?.stashName}function E(e){return e?.refType==="tag"}function B(e,t){let i;if(null==e)return"";if(t=!1===t?{}:{expand:!0,icon:!0,label:t?.label??t?.expand??!0,...t},!Array.isArray(e)||1===e.length){let s=Array.isArray(e)?e[0]:e,a=t?.quoted?`'${s.name}'`:s.name;switch(s.refType){case"branch":s.remote&&(a=`${(0,o.Lo)(a)}: ${(0,o.S3)(a)}`,a=t?.quoted?`'${a}'`:a),i=`${t.label?`${s.remote?"remote ":""}branch `:""}${t.icon?`$(git-branch)${r.NE.Space}${a}`:a}`;break;case"tag":i=`${t.label?"tag ":""}${t.icon?`$(tag)${r.NE.Space}${a}`:a}`;break;default:if(O(s)){let e;t.expand&&s.message&&(e=`${null!=s.number?`#${s.number}: `:""}${s.message.length>20?`${s.message.substring(0,20).trimRight()}${r.NE.Ellipsis}`:s.message}`),i=`${t.label?"stash ":""}${t.icon?`$(archive)${r.NE.Space}${e??s.name}`:`${e??(s.number?`#${s.number}`:s.name)}`}`}else if(w(s.ref))i=a;else{let e,n;(t.expand&&s.message&&(e=s.message.length>20?` (${s.message.substring(0,20).trimRight()}${r.NE.Ellipsis})`:` (${s.message})`),t.expand&&t.label&&m(u,s.ref))?(a=s.name.endsWith("^")?s.name.substr(0,s.name.length-1):s.name,t?.quoted&&(a=`'${a}'`),n="before "):n="",i=`${t.label?`${n}commit `:""}${t.icon?`$(git-commit)${r.NE.Space}${a}${e??""}`:`${a}${e??""}`}`}}return t.capitalize&&t.expand&&!1!==t.label?(0,n.kC)(i):i}let s=t.expand?` (${e.map(e=>e.name).join(", ")})`:"";switch(e[0].refType){case"branch":return`${e.length} branches${s}`;case"tag":return`${e.length} tags${s}`;default:return`${e.length} ${O(e[0])?"stashes":"commits"}${s}`}}},3050:(e,t,i)=>{i.d(t,{Ym:()=>w,dM:()=>f,jv:()=>m,ss:()=>g});var r=i(9496),s=i(5255),n=i(5140),o=i(4488),a=i(4627),l=i(2509),h=i(4794),c=Object.defineProperty,u=Object.getOwnPropertyDescriptor,d=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?u(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&c(t,i,n),n};let p=class e{constructor(e,t,i,r,s,n,o,a){this.container=e,this.repoPath=t,this.name=i,this.scheme=r,this._domain=s,this._path=n,this.provider=o,this.urls=a}static getHighlanderProviders(e){if(0===e.length)return;let t=1===e.length?e[0]:e.find(e=>e.default);if(null!=t)return[t.provider];let i=e[0].provider.name;if(e.every(e=>e.provider.name===i))return e.map(e=>e.provider)}static getHighlanderProviderName(e){if(0===e.length)return;let t=1===e.length?e[0]:e.find(e=>e.default);if(null!=t)return t.provider.name;let i=e[0].provider.name;if(e.every(e=>e.provider.name===i))return i}static is(t){return t instanceof e}static sort(e){return e.sort((e,t)=>(e.default?-1:1)-(t.default?-1:1)||("origin"===e.name?-1:1)-("origin"===t.name?-1:1)||("upstream"===e.name?-1:1)-("upstream"===t.name?-1:1)||(0,a.dm)(e.name,t.name))}get default(){let e=n.W.instance.storage.getWorkspace("remote:default");return this.name===e||this.remoteKey===e}get domain(){return this.provider?.domain??this._domain}get id(){return`${this.name}/${this.remoteKey}`}get maybeIntegrationConnected(){return!!(null!=this.provider&&this.container.integrations.supports(this.provider.id))&&this.getIntegration()?.maybeConnected}get path(){return this.provider?.path??this._path}get remoteKey(){return this._domain?`${this._domain}/${this._path}`:this.path}get url(){let e;for(let t of this.urls){if("push"===t.type)return t.url;null==e&&(e=t.url)}return e}getIntegration(){return null!=this.provider?this.container.integrations.getByRemote(this):void 0}hasIntegration(){return null!=this.provider&&this.container.integrations.supports(this.provider.id)}matches(e,t){if(null==t){if((0,a.qq)(e,this.url))return!0;[,e,t]=(0,h.Sk)(e)}return(0,a.qq)(e,this.domain)&&(0,a.qq)(t,this.path)}async setAsDefault(e=!0){let t=n.W.instance.git.getRepository(this.repoPath);await t?.setRemoteAsDefault(this,e)}};d([(0,o.H)()],p.prototype,"domain",1),d([(0,o.H)()],p.prototype,"id",1),d([(0,o.H)()],p.prototype,"path",1),d([(0,o.H)()],p.prototype,"remoteKey",1),d([(0,o.H)()],p.prototype,"url",1);let g=p;function m(e){let t=function(e){let t,i;for(let{type:r}of e.urls)if("fetch"===r){if(t=!0,i)break}else if("push"===r&&(i=!0,t))break;return t&&i?s.NE.ArrowsRightLeft:i?s.NE.ArrowRight:t?s.NE.ArrowLeft:s.NE.Dash}(e),{provider:i}=e;return null!=i?`${t}${s.NE.Space} ${i.name} ${s.NE.Space}${s.NE.Dot}${s.NE.Space} ${i.displayPath}`:`${t}${s.NE.Space} ${e.domain?`${e.domain} ${s.NE.Space}${s.NE.Dot}${s.NE.Space} `:""}${e.path}`}function f(e,t,i,s=r.window.activeColorTheme){if(t.provider?.icon==null)return;let n=r.Uri.joinPath(e.context.extensionUri,`images/${(0,l.GC)(s)?"light":"dark"}/icon-${t.provider.icon}.svg`);return null!=i?i(n):n}function w(e){return Array.isArray(e)?e.map(e=>e.remoteKey).sort().join(","):e.remoteKey}},6503:(e,t,i)=>{i.d(t,{C:()=>n,J:()=>s});var r,s=((r=s||{}).Branch="branch",r.Branches="branches",r.Commit="commit",r.Comparison="comparison",r.CreatePullRequest="createPullRequest",r.File="file",r.Repo="repo",r.Revision="revision",r);function n(e){switch(e.type){case"branch":return"Branch";case"branches":return"Branches";case"commit":return"Commit";case"comparison":return"Comparison";case"createPullRequest":return"Create Pull Request";case"file":case"revision":return"File";case"repo":return"Repository";default:return""}}},3646:(e,t,i)=>{i.d(t,{I6:()=>E,_j:()=>W,du:()=>B,uC:()=>M});var r,s,n=i(9496),o=i(3951),a=i(5640),l=i(5255),h=i(7925),c=i(2133),u=i(2800),d=i(9529),p=i(5148),g=i(7512),m=i(5432),f=i(4241),w=i(9796),v=i(3105),y=i(4336),b=i(6004),C=i(9967),A=i(3700),P=i(4627),D=i(5367),k=i(4321),S=Object.defineProperty,R=Object.getOwnPropertyDescriptor,$=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?R(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&S(t,i,n),n};let _=Object.freeze([]),I="index,HEAD,*_HEAD,MERGE_*,rebase-merge/**,sequencer/**",F="worktrees/**/index,worktrees/**/HEAD,worktrees/**/*_HEAD,worktrees/**/MERGE_*,worktrees/**/rebase-merge/**,worktrees/**/sequencer/**",x=`{${I}}`,T=`{config,refs/**,${F}}`,O=`{${I},config,refs/**,${F}}`;var E=((r=E||{})[r.Unknown=-1]="Unknown",r[r.Index=0]="Index",r[r.Head=1]="Head",r[r.Heads=2]="Heads",r[r.Tags=3]="Tags",r[r.Stash=4]="Stash",r[r.Remotes=5]="Remotes",r[r.Worktrees=6]="Worktrees",r[r.Config=7]="Config",r[r.Status=8]="Status",r[r.CherryPick=9]="CherryPick",r[r.Merge=10]="Merge",r[r.Rebase=11]="Rebase",r[r.Closed=100]="Closed",r[r.Ignores=101]="Ignores",r[r.RemoteProviders=102]="RemoteProviders",r[r.Starred=103]="Starred",r[r.Opened=104]="Opened",r),B=((s=B||{})[s.Any=0]="Any",s[s.Exclusive=1]="Exclusive",s);class U{constructor(e,t){this.repository=e,this._changes=new Set(t)}_changes;toString(e=!1){return e?`changes=${(0,v.v_)(this._changes,", ")}`:`{ repository: ${this.repository?.name??""}, changes: ${(0,v.v_)(this._changes,", ")} }`}changed(...e){let t=e.slice(0,-1),i=e[e.length-1];if(0===i)return(0,v.G)(this._changes,e=>t.includes(e));let r=this._changes;1===i&&(t.includes(9)||t.includes(10)||t.includes(11)?t.includes(8)||t.push(8):t.includes(8)&&((r=new Set(r)).delete(9),r.delete(10),r.delete(11)));let s=[...(0,v.hX)(r,e=>t.includes(e))];return 1===i?s.length===r.size:s.length===t.length}with(e){return new U(this.repository,[...this._changes,...e])}}let W=class{constructor(e,t,i,r,s,o,a,l=!1){if(this.container=e,this.onDidRepositoryChange=t,this.provider=i,this.folder=r,this.uri=s,this.root=o,null!=r){if(o)this.name=r.name;else{let t=e.git.getRelativePath(s,r.uri);this.name=t||r.name}}else this.name=(0,A.EZ)(s.path);this.index=r?.index??e.git.repositoryCount,this.id=(0,c.YW)(s),this._suspended=a,this._closed=l,this._disposable=n.Disposable.from(this.setupRepoWatchers(),p.D.onDidChange(this.onConfigurationChanged,this)),this.onConfigurationChanged(),this._orderByLastFetched&&this.getLastFetched()}static formatLastFetched(e,t=!0){let i=new Date(e);if(Date.now()-e<864e5)return(0,g.Zh)(i);if(t)return(0,g.p6)(i,p.D.get("defaultDateShortFormat")??"short");let r=p.D.get("defaultDateFormat")??`dddd, MMMM Do, YYYY [at] ${p.D.get("defaultTimeFormat")??"h:mma"}`;return/[hHm]/.test(r)||(r+=` [at] ${p.D.get("defaultTimeFormat")??"h:mma"}`),(0,g.p6)(i,r)}static getLastFetchedUpdateInterval(e){let t=Date.now()-e;return t<864e5?(t<36e5?6e4:36e5)/2:0}static sort(e,t){switch((t={orderBy:p.D.get("sortRepositoriesBy"),...t}).orderBy){case"name:asc":return e.sort((e,t)=>(e.starred?-1:1)-(t.starred?-1:1)||(0,P.dm)(e.name,t.name));case"name:desc":return e.sort((e,t)=>(e.starred?-1:1)-(t.starred?-1:1)||(0,P.dm)(t.name,e.name));case"lastFetched:asc":return e.sort((e,t)=>(e.starred?-1:1)-(t.starred?-1:1)||(e._lastFetched??0)-(t._lastFetched??0));case"lastFetched:desc":return e.sort((e,t)=>(e.starred?-1:1)-(t.starred?-1:1)||(t._lastFetched??0)-(e._lastFetched??0));default:return e}}_onDidChange=new n.EventEmitter;get onDidChange(){return this._onDidChange.event}_onDidChangeFileSystem=new n.EventEmitter;get onDidChangeFileSystem(){return this._onDidChangeFileSystem.event}get formattedName(){return this.name}id;index;name;_idHash;get idHash(){return void 0===this._idHash&&(this._idHash=(0,o.FB)(this.id)),this._idHash}_branch;_disposable;_fireChangeDebounced=void 0;_fireFileSystemChangeDebounced=void 0;_pendingFileSystemChange;_pendingRepoChange;_suspended;setupRepoWatchers(){let e;return this.setupRepoWatchersCore().then(t=>e=t),{dispose:()=>void e?.dispose()}}async setupRepoWatchersCore(){let e=(0,b.UH)(),t=[];t.push(this.container.events.on("git:cache:reset",e=>{(!e.data.repoPath||e.data.repoPath===this.path)&&(this.resetCaches(...e.data.caches??_),e.data.caches?.includes("providers")&&this.fireChange(102))}));let i=n.workspace.createFileSystemWatcher(new n.RelativePattern(this.uri,"**/.gitignore"));function r(i,r){y.Yd.debug(e,`watching '${i.toString(!0)}' for repository changes`);let s=n.workspace.createFileSystemWatcher(new n.RelativePattern(i,r));return t.push(s,s.onDidChange(e=>this.onRepositoryChanged(e,i)),s.onDidCreate(e=>this.onRepositoryChanged(e,i)),s.onDidDelete(e=>this.onRepositoryChanged(e,i))),s}t.push(i,i.onDidChange(this.onGitIgnoreChanged,this),i.onDidCreate(this.onGitIgnoreChanged,this),i.onDidDelete(this.onGitIgnoreChanged,this));let s=await this.getGitDir();return null!=s&&(s?.commonUri==null?r.call(this,s.uri,O):(r.call(this,s.uri,x),r.call(this,s.commonUri,T))),n.Disposable.from(...t)}dispose(){this.unWatchFileSystem(!0),this._disposable.dispose()}toString(){return`${(0,y.q4)(this)}(${this.id})`}get virtual(){return this.provider.virtual}get path(){return this.uri.scheme===l.sN.File?(0,A.AH)(this.uri.fsPath):this.uri.toString()}get etag(){return this._updatedAt}_orderByLastFetched=!1;get orderByLastFetched(){return this._orderByLastFetched}_updatedAt=0;get updatedAt(){return this._updatedAt}onConfigurationChanged(e){p.D.changed(e,"sortRepositoriesBy")&&(this._orderByLastFetched=p.D.get("sortRepositoriesBy")?.startsWith("lastFetched:")??!1),null!=e&&p.D.changed(e,"remotes",this.folder?.uri)&&(this.resetCaches("remotes"),this.fireChange(5))}onFileSystemChanged(e){/\.git(?:\/|\\|$)/.test(e.fsPath)||(this._etagFileSystem=Date.now(),this.fireFileSystemChange(e))}onGitIgnoreChanged(e){this.fireChange(101)}onRepositoryChanged(e,t){if(e?.path.includes("/fsmonitor--daemon/"))return;this._lastFetched=void 0,this._orderByLastFetched&&this.getLastFetched();let i=null!=e?/(worktrees|index|HEAD|FETCH_HEAD|ORIG_HEAD|CHERRY_PICK_HEAD|MERGE_HEAD|REBASE_HEAD|rebase-merge|config|refs\/(?:heads|remotes|stash|tags))/.exec(this.container.git.getRelativePath(e,t)):void 0;if(null!=i)switch(i[1]){case"config":this.resetCaches(),this.fireChange(7,5);return;case"index":this.fireChange(0);return;case"FETCH_HEAD":return;case"HEAD":this.resetCaches("branches"),this.fireChange(1,2);return;case"ORIG_HEAD":case"refs/heads":this.resetCaches("branches"),this.fireChange(2);return;case"CHERRY_PICK_HEAD":this.fireChange(9,8);return;case"MERGE_HEAD":this.fireChange(10,8);return;case"REBASE_HEAD":case"rebase-merge":this.fireChange(11,8);return;case"refs/remotes":this.resetCaches(),this.fireChange(5);return;case"refs/stash":this.fireChange(4);return;case"refs/tags":this.fireChange(3);return;case"worktrees":this.fireChange(6);return}this.fireChange(-1)}_closed=!1;get closed(){return this._closed}set closed(e){let t=this._closed!==e;this._closed=e,t&&(y.Yd.debug(`Repository(${this.id}).closed(${e})`),this.fireChange(this._closed?100:104))}access(e){return this.container.git.access(e,this.uri)}supports(e){return this.container.git.supports(this.uri,e)}async addRemote(e,t,i){await this.container.git.addRemote(this.uri,e,t,i);let[r]=await this.getRemotes({filter:e=>e.url===t});return r}pruneRemote(e){return this.container.git.pruneRemote(this.uri,e)}removeRemote(e){return this.container.git.removeRemote(this.uri,e)}branch(...e){this.runTerminalCommand("branch",...e)}branchDelete(e,t){Array.isArray(e)||(e=[e]);let i=e.filter(e=>!e.remote);if(0!==i.length){let r=["--delete"];if(t?.force&&r.push("--force"),this.runTerminalCommand("branch",...r,...e.map(e=>e.ref)),t?.remote){let e=i.filter(e=>null!=e.upstream);if(0!==e.length)for(let[t,i]of(0,u.XI)(e,e=>(0,D.Lo)(e.upstream.name)).entries())this.runTerminalCommand("push","-d",t,...i.map(e=>(0,D.S3)(e.upstream.name)))}}let r=e.filter(e=>e.remote);if(0!==r.length)for(let[e,t]of(0,u.XI)(r,e=>(0,D.Lo)(e.name)).entries())this.runTerminalCommand("push","-d",e,...t.map(e=>(0,k.Av)(e)))}cherryPick(...e){this.runTerminalCommand("cherry-pick",...e)}containsUri(e){return this===this.container.git.getRepository(e)}async fetch(e){let{progress:t,...i}={progress:!0,...e};return t?n.window.withProgress({location:n.ProgressLocation.Notification,title:null!=i.branch?`${i.pull?"Pulling":"Fetching"} ${i.branch.name}...`:`Fetching ${i.remote?`${i.remote} of `:""}${this.formattedName}...`},()=>this.fetchCore(i)):this.fetchCore(i)}async fetchCore(e){try{e?.branch!=null||p.D.get("experimental.nativeGit")?await this.container.git.fetch(this.uri,e):await (0,d.Zv)("git.fetch",this.path),this.fireChange(-1)}catch(e){y.Yd.error(e),(0,h.W8)("Unable to fetch repository")}}async getBranch(e){if(e){let{values:[t]}=await this.getBranches({filter:t=>t.name===e});return t}return null==this._branch&&(this._branch=this.container.git.getBranch(this.uri)),this._branch}getBranches(e){return this.container.git.getBranches(this.uri,e)}getChangedFilesCount(e){return this.container.git.getChangedFilesCount(this.uri,e)}getCommit(e){return this.container.git.getCommit(this.uri,e)}getContributors(e){return this.container.git.getContributors(this.uri,e)}_gitDir;_gitDirPromise;getGitDir(){return null==this._gitDirPromise&&(this._gitDirPromise=this.container.git.getGitDir(this.uri).then(e=>this._gitDir=e)),this._gitDirPromise}_lastFetched;async getLastFetched(){let e=await this.container.git.getLastFetchedTimestamp(this.uri);return null!=e&&(this._lastFetched=e),this._lastFetched??0}async getMainRepository(){let e=await this.getGitDir();return e?.commonUri==null?this:this.container.git.getOrOpenRepository(e.commonUri,{detectNested:!1,force:!0,closeOnOpen:!0})}getMergeStatus(){return this.container.git.getMergeStatus(this.uri)}getRebaseStatus(){return this.container.git.getRebaseStatus(this.uri)}async getRemote(e){return(await this.getRemotes()).find(t=>t.name===e)}async getRemotes(e){let t=await this.container.git.getRemotes(this.uri,e?.sort!=null?{sort:e.sort}:void 0);return e?.filter!=null?t.filter(e.filter):t}async getRichRemote(e=!1){return this.container.git.getBestRemoteWithIntegration(this.uri,{includeDisconnected:!e})}getStash(){return this.container.git.getStash(this.uri)}getStatus(){return this.container.git.getStatusForRepo(this.uri)}async getTag(e){let{values:[t]}=await this.getTags({filter:t=>t.name===e});return t}getTags(e){return this.container.git.getTags(this.uri,e)}async createWorktree(e,t){await this.container.git.createWorktree(this.uri,e.fsPath,t);let i=e.toString();return this.container.git.getWorktree(this.uri,e=>e.uri.toString()===i)}getWorktrees(){return this.container.git.getWorktrees(this.uri)}async getWorktreesDefaultUri(){return this.container.git.getWorktreesDefaultUri(this.uri)}deleteWorktree(e,t){return this.container.git.deleteWorktree(this.uri,e.fsPath,t)}async hasRemotes(){let e=await this.getRemotes();return e?.length>0}async hasRichRemote(e=!1){let t=await this.getRichRemote(e);return t?.provider!=null}async hasUpstreamBranch(){let e=await this.getBranch();return e?.upstream!=null}isMaybeWorktree(){if(null!=this._gitDir)return null!=this._gitDir.commonUri}async isWorktree(){return(await this.getGitDir())?.commonUri!=null}merge(...e){this.runTerminalCommand("merge",...e)}async pull(e){let{progress:t,...i}={progress:!0,...e};return t?n.window.withProgress({location:n.ProgressLocation.Notification,title:`Pulling ${this.formattedName}...`},()=>this.pullCore(i)):this.pullCore()}async pullCore(e){try{if(p.D.get("experimental.nativeGit")){let t=p.D.getAny("git.pullTags",this.uri);p.D.getAny("git.fetchOnPull",this.uri)&&await this.container.git.fetch(this.uri),await this.container.git.pull(this.uri,{...e,tags:t})}else await this.hasUpstreamBranch()?await (0,d.Zv)(e?.rebase?"git.pullRebase":"git.pull",this.path):p.D.getAny("git.fetchOnPull",this.uri)&&await this.container.git.fetch(this.uri);this.fireChange(-1)}catch(e){y.Yd.error(e),(0,h.W8)("Unable to pull repository")}}async showCreatePullRequestPrompt(e,t){if(!this.container.actionRunners.count("createPullRequest")||!await (0,h.B8)(t.name))return;let i=await this.getRemote(e);(0,d.SI)("createPullRequest",{repoPath:this.path,remote:null!=i?{name:i.name,provider:null!=i.provider?{id:i.provider.id,name:i.provider.name,domain:i.provider.domain}:void 0,url:i.url}:{name:e},branch:{name:t.name,isRemote:t.remote,upstream:t.upstream?.name}})}async push(e){let{progress:t,...i}={progress:!0,...e};return t?n.window.withProgress({location:n.ProgressLocation.Notification,title:(0,k.UR)(i.reference)?`${null!=i.publish?"Publishing ":"Pushing "}${i.reference.name}...`:`Pushing ${this.formattedName}...`},()=>this.pushCore(i)):this.pushCore(i)}async pushCore(e){try{if(p.D.get("experimental.nativeGit"))await this.container.git.push(this.uri,{reference:e?.reference,force:e?.force,publish:e?.publish}),(0,k.UR)(e?.reference)&&e?.publish!=null&&this.showCreatePullRequestPrompt(e.publish.remote,e.reference);else if((0,k.UR)(e?.reference)){let t=await this.container.git.getOrOpenScmRepository(this.uri);if(null==t)return;if(e?.publish!=null)await t?.push(e.publish.remote,e.reference.name,!0),this.showCreatePullRequestPrompt(e.publish.remote,e.reference);else{let i=await this.getBranch(e?.reference.name);if(null==i)return;await t?.push(i.getRemoteName(),i.name,void 0,e?.force?a.QO.ForceWithLease:void 0)}}else if(e?.reference!=null){let t=await this.container.git.getOrOpenScmRepository(this.uri);if(null==t)return;let i=await this.getBranch();if(null==i)return;await t?.push(i.getRemoteName(),`${e.reference.ref}:${i.getNameWithoutRemote()}`,void 0,e?.force?a.QO.ForceWithLease:void 0)}else await (0,d.Zv)(e?.force?"git.pushForce":"git.push",this.path);this.fireChange(-1)}catch(e){y.Yd.error(e),(0,h.W8)("Unable to push repository")}}rebase(e,...t){this.runTerminalCommand(null!=e&&0!==e.length?`${e.join(" ")} rebase`:"rebase",...t)}reset(...e){this.runTerminalCommand("reset",...e)}resetCaches(...e){(0===e.length||e.includes("branches"))&&(this._branch=void 0)}resume(){this._suspended&&(this._suspended=!1,null!=this._pendingRepoChange&&this._fireChangeDebounced(),null!=this._pendingFileSystemChange&&this._fireFileSystemChangeDebounced?.())}revert(...e){this.runTerminalCommand("revert",...e)}richSearchCommits(e,t){return this.container.git.richSearchCommits(this.uri,e,t)}searchCommits(e,t){return this.container.git.searchCommits(this.uri,e,t)}async setRemoteAsDefault(e,t=!0){await this.container.storage.storeWorkspace("remote:default",t?e.name:void 0),this.fireChange(5,102)}get starred(){let e=this.container.storage.getWorkspace("starred:repositories");return null!=e&&!0===e[this.id]}star(e){return this.updateStarred(!0,e)}async stashApply(e,t){await this.container.git.stashApply(this.uri,e,t),this.fireChange(4)}async stashDelete(e,t){await this.container.git.stashDelete(this.uri,e,t),this.fireChange(4)}async stashRename(e,t,i,r){await this.container.git.stashRename(this.uri,e,t,i,r),this.fireChange(4)}async stashSave(e,t,i){await this.container.git.stashSave(this.uri,e,t,i),this.fireChange(4)}async switch(e,t){let{progress:i,...r}={progress:!0,...t};return i?n.window.withProgress({location:n.ProgressLocation.Notification,title:`Switching ${this.formattedName} to ${e}...`,cancellable:!1},()=>this.switchCore(e,r)):this.switchCore(e,r)}async switchCore(e,t){try{await this.container.git.checkout(this.uri,e,t),this.fireChange(-1)}catch(e){y.Yd.error(e),(0,h.W8)("Unable to switch to reference")}}toAbsoluteUri(e,t){let i=this.container.git.getAbsoluteUri(e,this.uri);return!(t?.validate??!0)||this.containsUri(i)?i:void 0}unstar(e){return this.updateStarred(!1,e)}async updateStarred(e,t){null!=t?await this.updateStarredCore("branches",t.id,e):await this.updateStarredCore("repositories",this.id,e),this.fireChange(103)}async updateStarredCore(e,t,i){let r=`starred:${e}`,s=this.container.storage.getWorkspace(r);s=(0,C.iC)(s,t,i),await this.container.storage.storeWorkspace(r,s),this.fireChange(103)}_etagFileSystem;get etagFileSystem(){return this._etagFileSystem}suspend(){this._suspended=!0}tag(...e){this.runTerminalCommand("tag",...e)}tagDelete(e){Array.isArray(e)||(e=[e]),this.runTerminalCommand("tag",...["--delete"],...e.map(e=>e.ref))}_fsWatcherDisposable;_fsWatchers=new Map;_fsChangeDelay=2500;watchFileSystem(e=2500){let t=(0,o.Vj)();if(this._fsWatchers.set(t,e),null==this._fsWatcherDisposable){let e=n.workspace.createFileSystemWatcher(new n.RelativePattern(this.uri,"**"));this._fsWatcherDisposable=n.Disposable.from(e,e.onDidChange(this.onFileSystemChanged,this),e.onDidCreate(this.onFileSystemChanged,this),e.onDidDelete(this.onFileSystemChanged,this)),this._etagFileSystem=Date.now()}return this.ensureMinFileSystemChangeDelay(),{dispose:()=>this.unWatchFileSystem(t)}}unWatchFileSystem(e){if("boolean"!=typeof e&&(this._fsWatchers.delete(e),0!==this._fsWatchers.size)){this.ensureMinFileSystemChangeDelay();return}this._etagFileSystem=void 0,this._fsChangeDelay=2500,this._fsWatchers.clear(),this._fsWatcherDisposable?.dispose(),this._fsWatcherDisposable=void 0}ensureMinFileSystemChangeDelay(){let e=(0,v.VV)(this._fsWatchers.values());e!==this._fsChangeDelay&&(this._fsChangeDelay=e,this._fireFileSystemChangeDebounced?.flush(),this._fireFileSystemChangeDebounced=void 0)}fireChange(...e){let t=(0,b.UH)();if(this._updatedAt=Date.now(),null==this._fireChangeDebounced&&(this._fireChangeDebounced=(0,w.Ds)(this.fireChangeCore.bind(this),250)),this._pendingRepoChange=this._pendingRepoChange?.with(e)??new U(this,e),this.onDidRepositoryChange(this,new U(this,e)),this._suspended){y.Yd.debug(t,`queueing suspended ${this._pendingRepoChange.toString(!0)}`);return}this._fireChangeDebounced()}fireChangeCore(){let e=this._pendingRepoChange;null!=e&&(this._pendingRepoChange=void 0,y.Yd.debug(`Repository(${this.id}) firing ${e.toString(!0)}`),this._onDidChange.fire(e))}fireFileSystemChange(e){let t=(0,b.UH)();this._updatedAt=Date.now(),null==this._fireFileSystemChangeDebounced&&(this._fireFileSystemChangeDebounced=(0,w.Ds)(this.fireFileSystemChangeCore.bind(this),this._fsChangeDelay)),null==this._pendingFileSystemChange&&(this._pendingFileSystemChange={repository:this,uris:[]});let i=this._pendingFileSystemChange;if(i.uris.push(e),this._suspended){y.Yd.debug(t,`queueing suspended fs changes=${i.uris.map(e=>e.fsPath).join(", ")}`);return}this._fireFileSystemChangeDebounced()}async fireFileSystemChangeCore(){let e=this._pendingFileSystemChange;if(null==e)return;this._pendingFileSystemChange=void 0;let t=await this.container.git.excludeIgnoredUris(this.uri,e.uris);0!==t.length&&(t.length!==e.uris.length&&(e={...e,uris:t}),y.Yd.debug(`Repository(${this.id}) firing fs changes=${e.uris.map(e=>e.fsPath).join(", ")}`),this._onDidChangeFileSystem.fire(e))}async runTerminalCommand(e,...t){await this.container.git.runGitCommandViaTerminal?.(this.uri,e,t,{execute:!0}),setTimeout(()=>this.fireChange(-1),2500)}};function M(e){return e instanceof W}$([(0,f.fF)({singleLine:!0})],W.prototype,"setupRepoWatchersCore",1),$([(0,f.fF)()],W.prototype,"onGitIgnoreChanged",1),$([(0,f.fF)()],W.prototype,"onRepositoryChanged",1),$([(0,f.cM)()],W.prototype,"access",1),$([(0,f.cM)()],W.prototype,"supports",1),$([(0,f.cM)()],W.prototype,"addRemote",1),$([(0,f.cM)()],W.prototype,"pruneRemote",1),$([(0,f.cM)()],W.prototype,"removeRemote",1),$([(0,f.cM)()],W.prototype,"branch",1),$([(0,f.cM)()],W.prototype,"branchDelete",1),$([(0,f.cM)()],W.prototype,"cherryPick",1),$([(0,m.H)(),(0,f.cM)()],W.prototype,"fetch",1),$([(0,m.H)()],W.prototype,"getLastFetched",1),$([(0,m.H)(),(0,f.cM)({exit:!0})],W.prototype,"getMainRepository",1),$([(0,f.cM)()],W.prototype,"createWorktree",1),$([(0,f.cM)()],W.prototype,"merge",1),$([(0,m.H)(),(0,f.cM)()],W.prototype,"pull",1),$([(0,m.H)(),(0,f.cM)()],W.prototype,"push",1),$([(0,f.cM)()],W.prototype,"rebase",1),$([(0,f.cM)()],W.prototype,"reset",1),$([(0,f.cM)({singleLine:!0})],W.prototype,"resetCaches",1),$([(0,f.cM)()],W.prototype,"revert",1),$([(0,f.fF)()],W.prototype,"richSearchCommits",1),$([(0,f.fF)()],W.prototype,"searchCommits",1),$([(0,m.H)(),(0,f.cM)()],W.prototype,"stashApply",1),$([(0,m.H)(),(0,f.cM)()],W.prototype,"stashDelete",1),$([(0,m.H)(),(0,f.cM)()],W.prototype,"stashRename",1),$([(0,m.H)(),(0,f.cM)()],W.prototype,"stashSave",1),$([(0,m.H)(),(0,f.cM)()],W.prototype,"switch",1),$([(0,f.cM)()],W.prototype,"tag",1),$([(0,f.cM)()],W.prototype,"tagDelete",1),$([(0,f.fF)()],W.prototype,"fireChange",1),$([(0,f.fF)()],W.prototype,"fireFileSystemChange",1),W=$([(0,f.hJ)((e,t)=>`${t}(${e.id})`)],W)},827:(e,t,i)=>{i.d(t,{Hk:()=>g,JB:()=>f,JP:()=>m});var r=i(5255),s=i(5140),n=i(4488),o=i(4627),a=i(5367),l=i(6450),h=i(439),c=i(7881),u=Object.defineProperty,d=Object.getOwnPropertyDescriptor,p=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?d(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&u(t,i,n),n};class g{constructor(e,t,i,r,s,n,o=!1){this.repoPath=e,this.branch=t,this.sha=i,this.files=r,this.state=s,this.upstream=n,this.rebasing=o,this.detached=(0,a.uz)(t),this.detached&&(this.branch=(0,a.Iq)(this.sha))}detached;get conflicts(){return this.files.filter(e=>e.conflicted)}get hasChanges(){return 0!==this.files.length}get hasConflicts(){return this.files.some(e=>e.conflicted)}get ref(){return this.detached?this.sha:this.branch}computeWorkingTreeStatus(){let e=0,t=0,i=0,r=0,s=0,n=0,o=0,a=0,l=0,h=[],u=[],d=[];for(let p of this.files){switch(p.conflictStatus){case void 0:break;case c.Vz.AddedByBoth:case c.Vz.AddedByUs:case c.Vz.AddedByThem:e++,u.push(p);break;case c.Vz.DeletedByBoth:case c.Vz.DeletedByUs:case c.Vz.DeletedByThem:t++;break;default:i++,h.push(p)}switch(p.indexStatus){case void 0:break;case c.NV.Added:r++,u.push(p);break;case c.NV.Deleted:a++;break;default:n++,u.push(p)}switch(p.workingTreeStatus){case void 0:case c.Bh.Ignored:break;case c.Bh.Added:case c.Bh.Untracked:s++,d.push(p);break;case c.Bh.Deleted:l++;break;default:o++,d.push(p)}}let p=e+i+t,g=r+n+a,m=s+o+l;return{conflicted:p,conflictedAddsAndChanges:h,conflictedStatus:p>0?`+${e} ~${i} -${t}`:"",staged:g,stagedStatus:g>0?`+${r} ~${n} -${a}`:"",stagedAddsAndChanges:u,unstaged:m,unstagedStatus:m>0?`+${s} ~${o} -${l}`:"",unstagedAddsAndChanges:d}}getDiffStatus(){let e={added:0,deleted:0,changed:0};if(0===this.files.length)return e;for(let t of this.files)switch(t.status){case"A":case"?":e.added++;break;case"D":e.deleted++;break;default:e.changed++}return e}getFormattedDiffStatus({compact:e,empty:t,expand:i,prefix:r="",separator:s=" ",suffix:n=""}={}){let{added:a,changed:l,deleted:h}=this.getDiffStatus();if(0===a&&0===l&&0===h)return t??"";if(i){let e="";return a&&(e+=`${(0,o._6)("file",a)} added`),l&&(e+=`${0===e.length?"":s}${(0,o._6)("file",l)} changed`),h&&(e+=`${0===e.length?"":s}${(0,o._6)("file",h)} deleted`),`${r}${e}${n}`}let c="";return e?(0!==a&&(c+=`+${a}`),0!==l&&(c+=`${0===c.length?"":s}~${l}`),0!==h&&(c+=`${0===c.length?"":s}-${h}`)):c+=`+${a}${s}~${l}${s}-${h}`,`${r}${c}${n}`}async getRemote(){if(null==this.upstream)return;let e=await s.W.instance.git.getRemotesWithProviders(this.repoPath);if(0===e.length)return;let t=(0,a.Lo)(this.upstream);return e.find(e=>e.name===t)}getUpstreamStatus(e){return m(this.upstream?{name:this.upstream,missing:!1}:void 0,this.state,e)}}function m(e,t,i){let s=!0,n=!1,a=!1,l="",h=" ",c="";if(null!=i&&({count:s=!0,expand:n=!1,icons:a=!1,prefix:l="",separator:h=" ",suffix:c=""}=i),null==e||0===t.behind&&0===t.ahead)return i?.empty??"";if(n){let i="";return e.missing?i="missing":(t.behind&&(i+=`${(0,o._6)("commit",t.behind,{infix:a?"$(arrow-down) ":void 0})} behind`),t.ahead&&(i+=`${0===i.length?"":h}${(0,o._6)("commit",t.ahead,{infix:a?"$(arrow-up) ":void 0})} ahead`,c.startsWith(` ${e.name.split("/")[0]}`)&&(i+=" of"))),`${l}${i}${c}`}let u=s&&!e.missing;return`${l}${u?t.behind:""}${u||0!==t.behind?r.NE.ArrowDown:""}${h}${u?t.ahead:""}${u||0!==t.ahead?r.NE.ArrowUp:""}${c}`}p([(0,n.H)()],g.prototype,"conflicts",1),p([(0,n.H)()],g.prototype,"hasConflicts",1),p([(0,n.H)()],g.prototype,"computeWorkingTreeStatus",1),p([(0,n.H)()],g.prototype,"getDiffStatus",1),p([(0,n.H)()],g.prototype,"getRemote",1);class f{constructor(e,t,i,r,s){if(this.repoPath=e,this.path=r,this.originalPath=s,null!=t&&null!=i)switch(t+i){case"??":this.workingTreeStatus=c.Bh.Untracked;break;case"!!":this.workingTreeStatus=c.Bh.Ignored;break;case"AA":this.conflictStatus=c.Vz.AddedByBoth;break;case"AU":this.conflictStatus=c.Vz.AddedByUs;break;case"UA":this.conflictStatus=c.Vz.AddedByThem;break;case"DD":this.conflictStatus=c.Vz.DeletedByBoth;break;case"DU":this.conflictStatus=c.Vz.DeletedByUs;break;case"UD":this.conflictStatus=c.Vz.DeletedByThem;break;case"UU":this.conflictStatus=c.Vz.ModifiedByBoth}if(null==this.conflictStatus){switch(t){case"A":this.indexStatus=c.NV.Added;break;case"D":this.indexStatus=c.NV.Deleted;break;case"M":this.indexStatus=c.NV.Modified;break;case"R":this.indexStatus=c.NV.Renamed;break;case"C":this.indexStatus=c.NV.Copied}switch(i){case"A":case"?":this.workingTreeStatus=c.Bh.Added;break;case"D":this.workingTreeStatus=c.Bh.Deleted;break;case"M":this.workingTreeStatus=c.Bh.Modified}}}conflictStatus;indexStatus;workingTreeStatus;get conflicted(){return null!=this.conflictStatus}get staged(){return null!=this.indexStatus}get status(){return this.conflictStatus??this.indexStatus??this.workingTreeStatus}get uri(){return s.W.instance.git.getAbsoluteUri(this.path,this.repoPath)}get wip(){return null!=this.workingTreeStatus}getFormattedDirectory(e=!1){return(0,c.OC)(this,e)}getFormattedPath(e={}){return(0,c.PM)(this,e)}getOcticon(){return(0,c.Qw)(this.status)}getStatusText(){return(0,c.K9)(this.status)}getPseudoCommits(e,t){let i=new Date;if(this.conflicted){let r=new c.K8(this.repoPath,this.path,this.status,this.originalPath,"HEAD",void 0,!1);return[new l.aM(e,this.repoPath,h.CL,new l._j("You",t?.email??void 0,i),new l._j("You",t?.email??void 0,i),"Uncommitted changes",["HEAD"],"Uncommitted changes",{file:r,files:[r]},void 0,[])]}let r=[],s=this.staged;if(this.wip){let n=s?h.pw:"HEAD",o=new c.K8(this.repoPath,this.path,this.status,this.originalPath,n,void 0,!1);r.push(new l.aM(e,this.repoPath,h.CL,new l._j("You",t?.email??void 0,i),new l._j("You",t?.email??void 0,i),"Uncommitted changes",[n],"Uncommitted changes",{file:o,files:[o]},void 0,[])),i.setMilliseconds(i.getMilliseconds()-1)}if(s){let s=new c.K8(this.repoPath,this.path,this.status,this.originalPath,"HEAD",void 0,!0);r.push(new l.aM(e,this.repoPath,h.pw,new l._j("You",t?.email??void 0,i),new l._j("You",t?.email??void 0,i),"Uncommitted changes",["HEAD"],"Uncommitted changes",{file:s,files:[s]},void 0,[]))}return r}getPseudoFileChanges(){if(this.conflicted)return[new c.K8(this.repoPath,this.path,this.status,this.originalPath,"HEAD",void 0,!1)];let e=[],t=this.staged;return this.wip&&e.push(new c.K8(this.repoPath,this.path,this.status,this.originalPath,t?h.pw:"HEAD",void 0,!1)),t&&e.push(new c.K8(this.repoPath,this.path,this.status,this.originalPath,"HEAD",void 0,!0)),e}}p([(0,n.H)()],f.prototype,"status",1),p([(0,n.H)()],f.prototype,"uri",1)},9502:(e,t,i)=>{i.d(t,{Pj:()=>m,YR:()=>g,YU:()=>d,gE:()=>p});var r=i(5140),s=i(5148),n=i(7512),o=i(4488),a=i(4336),l=i(4627),h=Object.defineProperty,c=Object.getOwnPropertyDescriptor,u=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?c(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&h(t,i,n),n};function d(e,t){return`${e}|tag/${t}`}class p{constructor(e,t,i,r,s,n){this.repoPath=e,this.name=t,this.sha=i,this.message=r,this.date=s,this.commitDate=n,this.id=d(e,t)}refType="tag";id;toString(){return`${(0,a.q4)(this)}(${this.id})`}get formattedDate(){return"absolute"===r.W.instance.TagDateFormatting.dateStyle?this.formatDate(r.W.instance.TagDateFormatting.dateFormat):this.formatDateFromNow()}get ref(){return this.name}formatCommitDate(e){return null!=this.commitDate?(0,n.p6)(this.commitDate,e??"MMMM Do, YYYY h:mma"):""}formatCommitDateFromNow(){return null!=this.commitDate?(0,n.Zh)(this.commitDate):""}formatDate(e){return null!=this.date?(0,n.p6)(this.date,e??"MMMM Do, YYYY h:mma"):""}formatDateFromNow(){return null!=this.date?(0,n.Zh)(this.date):""}getBasename(){let e=this.name.lastIndexOf("/");return -1!==e?this.name.substring(e+1):this.name}}function g(e){return e instanceof p}function m(e,t){switch((t={orderBy:s.D.get("sortTagsBy"),...t}).orderBy){case"date:asc":return e.sort((e,t)=>(e.date?.getTime()??0)-(t.date?.getTime()??0));case"name:asc":return e.sort((e,t)=>(0,l.dm)(e.name,t.name));case"name:desc":return e.sort((e,t)=>(0,l.dm)(t.name,e.name));default:return e.sort((e,t)=>(t.date?.getTime()??0)-(e.date?.getTime()??0))}}u([(0,o.H)(e=>e??"MMMM Do, YYYY h:mma")],p.prototype,"formatCommitDate",1),u([(0,o.H)(e=>e??"MMMM Do, YYYY h:mma")],p.prototype,"formatDate",1),u([(0,o.H)()],p.prototype,"getBasename",1)},3961:(e,t,i)=>{function r(e,t,i,r){return null!=e&&(null!=e.name||null!=e.email||null!=e.username)&&(null==e.name||e.name===t)&&(null==e.email||e.email===i)&&(null==e.username||e.username===r)}i.d(t,{o:()=>r})},2674:(e,t,i)=>{i.d(t,{K:()=>g,e:()=>p});var r=i(9496),s=i(5140),n=i(4488),o=i(5116),a=i(3700),l=i(4321),h=Object.defineProperty,c=Object.getOwnPropertyDescriptor,u=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?c(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&h(t,i,n),n};let d=class e{constructor(e,t,i,r,s,n,o,a){this.main=e,this.type=t,this.repoPath=i,this.uri=r,this.locked=s,this.prunable=n,this.sha=o,this.branch=a}static is(t){return t instanceof e}get opened(){return this.workspaceFolder?.uri.toString()===this.uri.toString()}get name(){switch(this.type){case"bare":return"(bare)";case"detached":return(0,l.zL)(this.sha);default:return this.branch||this.friendlyPath}}get friendlyPath(){return e.getFriendlyPath(this.uri)}get workspaceFolder(){return r.workspace.getWorkspaceFolder(this.uri)}_branch;getBranch(){return"branch"!==this.type||null==this.branch?Promise.resolve(void 0):(null==this._branch&&(this._branch=s.W.instance.git.getBranches(this.repoPath,{filter:e=>e.name===this.branch}).then(e=>e.values[0])),this._branch)}_status;getStatus(e){return"bare"===this.type?Promise.resolve(void 0):((null==this._status||e?.force)&&(this._status=s.W.instance.git.getStatusForRepo(this.uri.fsPath)),this._status)}static getFriendlyPath(e){let t=r.workspace.getWorkspaceFolder(e);if(null==t)return(0,a.AH)(e.fsPath);let i=(0,a.AH)((0,a.Gf)(t.uri.fsPath,e.fsPath));return 0===i.length?t.name:i}};u([(0,n.H)()],d.prototype,"friendlyPath",1),u([(0,n.H)()],d.prototype,"workspaceFolder",1);let p=d;async function g(e,t,i,r,s){for(let n of(null==i||Array.isArray(i)||(i=[i]),r??=await e.getWorktrees())){if(n.branch===t)return n;if(null!=i&&null!=n.branch){for await(let t of(s??=new o.X(t=>e.getBranches(null!=t?{paging:t}:void 0))).values())if(t.name===n.branch){if(t.upstream?.name!=null&&(i.includes(t.upstream.name)||t.upstream.name.startsWith("remotes/")&&i.includes(t.upstream.name.substring(8))))return n;break}}}}},4794:(e,t,i)=>{i.d(t,{Sk:()=>u,gK:()=>c,pW:()=>h});var r=i(6398),s=i(3050),n=(e,t)=>(t=Symbol[e])?t:Symbol.for("Symbol."+e),o=(e,t,i)=>{if(null!=t){var r;if("object"!=typeof t&&"function"!=typeof t)throw TypeError("Object expected");if(i&&(r=t[n("asyncDispose")]),void 0===r&&(r=t[n("dispose")]),"function"!=typeof r)throw TypeError("Object not disposable");e.push([i,r,t])}else i&&e.push([i]);return t},a=(e,t,i)=>{var r="function"==typeof SuppressedError?SuppressedError:function(e,t,i,r){return(r=Error(i)).name="SuppressedError",r.error=e,r.suppressed=t,r},s=e=>t=i?new r(e,t,"An error was suppressed during disposal"):(i=!0,e),n=r=>{for(;r=e.pop();)try{var o=r[1]&&r[1].call(r[2]);if(r[0])return Promise.resolve(o).then(n,e=>(s(e),n()))}catch(e){s(e)}if(i)throw t};return n()};let l=/^(.*)\t(.*)\s\((.*)\)$/gm;function h(e,t,i,n){var h=[];try{let a,c,d,p,g,m,f,w;let v=o(h,(0,r.k)(`Git.parseRemotes(${i})`,{log:!1,logLevel:"debug"}));if(!t)return[];let y=new Map;for(;w=l.exec(t),null!=w;)if([,a,c,d]=w,a=` ${a}`.substr(1),c=` ${c}`.substr(1),d=` ${d}`.substr(1),[p,g,m]=u(c),f=y.get(a),null==f)f=new s.ss(e,i,a,p,g,m,n(c,g,m),[{url:c,type:d}]),y.set(a,f);else{if(f.urls.push({url:c,type:d}),null!=f.provider&&"push"!==d)continue;let t=n(c,g,m);if(null==t)continue;f=new s.ss(e,i,a,p,g,m,t,f.urls),y.set(a,f)}return v?.stop({suffix:` parsed ${y.size} remotes`}),[...y.values()]}catch(e){var c=e,d=!0}finally{a(h,c,d)}}let c=/^(?:(git:\/\/)(.*?)\/|(https?:\/\/)(?:.*?@)?(.*?)\/|git@(.*):|(ssh:\/\/)(?:.*@)?(.*?)(?::.*?)?(?:\/|(?=~))|(?:.*?@)(.*?):)(.*)$/;function u(e){let t=c.exec(e);return null==t?["","",e]:[t[1]||t[3]||t[6],t[2]||t[4]||t[5]||t[7]||t[8],t[9].replace(/\.git\/?$/,"")]}},2075:(e,t,i)=>{i.d(t,{a:()=>y,g:()=>w});var r=i(9496),s=i(5255),n=i(7512),o=i(4488),a=i(8786),l=i(4627),h=i(8452),c=i(4321),u=i(2795),d=Object.defineProperty,p=Object.getOwnPropertyDescriptor;let g=/\b([^/\s]+\/[^/\s]+?)(?:\\)?#([0-9]+)\b(?!]\()/g,m=/^\/([^/]+)\/([^/]+?)\/blob(.+)$/i,f=/^L(\d+)(?:-L(\d+))?$/;class w extends u.x{constructor(e,t,i,r,s=!1){super(e,t,i,r,s)}get apiBaseUrl(){return this.custom?`${this.protocol}://${this.domain}/api/v3`:`https://api.${this.domain}`}_autolinks;get autolinks(){return void 0===this._autolinks&&(this._autolinks=[{prefix:"#",url:`${this.baseUrl}/issues/<num>`,title:`Open Issue or Pull Request #<num> on ${this.name}`,description:`${this.name} Issue or Pull Request #<num>`},{prefix:"gh-",url:`${this.baseUrl}/issues/<num>`,title:`Open Issue or Pull Request #<num> on ${this.name}`,ignoreCase:!0,description:`${this.name} Issue or Pull Request #<num>`},{tokenize:(e,t,i,r,o,c)=>"plaintext"===t?e:e.replace(g,(e,u,d)=>{let p;let g=(0,a.M)(`${this.protocol}://${this.domain}/${(0,l.I6)(u)}/issues/${d}`),m=` "Open Issue or Pull Request #${d} from ${u} on ${this.name}"`,f=`\0${i.size}\0`;"markdown"===t?i.set(f,`[${e}](${g}${m})`):"html"===t&&i.set(f,`<a href="${g}" title=${m}>${e}</a>`);let w=r?.get(d)?.[0];if(w?.value!=null){if(w.paused)null==c||o?.has(d)||(p=c.size+1,c.set(p,`[${(0,h.sy)()} ${this.name} Issue or Pull Request ${u}#${d} $(loading~spin)](${g}${m}")`));else{let t=w.value,i=(0,l.ry)(t.title.trim());null==c||o?.has(d)||(p=c.size+1,c.set(p,`[${(0,h.sy)(t)} **${i}**](${g}${m})\\
${s.NE.Space.repeat(5)}${e} ${t.state} ${(0,n.Zh)(t.closedDate??t.date)}`))}}else null==c||o?.has(d)||(p=c.size+1,c.set(p,`[${(0,h.sy)()} ${this.name} Issue or Pull Request ${u}#${d}](${g}${m})`));return f}),parse:(e,t)=>{let i,r,s;for(;null!=(s=g.exec(e));){[,i,r]=s;let[e,n]=i.split("/",2);t.set(r,{provider:this,id:r,prefix:`${i}#`,url:`${this.protocol}://${this.domain}/${i}/issues/${r}`,title:`Open Issue or Pull Request #<num> from ${i} on ${this.name}`,description:`${this.name} Issue or Pull Request ${i}#${r}`,descriptor:{key:this.remoteKey,owner:e,name:n}})}}}]),this._autolinks}get avatarUri(){let[e]=this.splitPath();return r.Uri.parse(`https://avatars.githubusercontent.com/${e}`)}get icon(){return"github"}get id(){return"github"}get gkProviderId(){var e;return(e=this.domain,(0,l.qq)(e,"github.com"))?"github":"githubEnterprise"}get name(){return this.formatName("GitHub")}get repoDesc(){let[e,t]=this.splitPath();return{key:this.remoteKey,owner:e,name:t}}async getLocalInfoFromRemoteUri(e,t,i){let r,s,n;if(t.authority!==this.domain||(i?.validate??!0)&&!t.path.startsWith(`/${this.path}/`))return;if(t.fragment){let e=f.exec(t.fragment);if(null!=e){let[,t,i]=e;t&&(r=parseInt(t,10),i&&(s=parseInt(i,10)))}}let o=m.exec(t.path);if(null==o)return;let[,,,a]=o,l=a.indexOf("/",1);if(-1!==l){let t=a.substring(1,l);if((0,c.D3)(t)){let t=e.toAbsoluteUri(a.substr(l),{validate:i?.validate});if(null!=t)return{uri:t,startLine:r,endLine:s}}}let h=new Map;l=a.length;do l=a.lastIndexOf("/",l-1),n=a.substring(1,l),h.set(n,a.substr(l));while(l>0)if(0!==h.size){let{values:t}=await e.getBranches({filter:e=>e.remote&&h.has(e.getNameWithoutRemote())});for(let n of t){let t=h.get(n.getNameWithoutRemote());if(null==t)continue;let o=e.toAbsoluteUri(t,{validate:i?.validate});if(null!=o)return{uri:o,startLine:r,endLine:s}}}}getUrlForBranches(){return this.encodeUrl(`${this.baseUrl}/branches`)}getUrlForBranch(e){return this.encodeUrl(`${this.baseUrl}/tree/${e}`)}getUrlForCommit(e){return this.encodeUrl(`${this.baseUrl}/commit/${e}`)}getUrlForComparison(e,t,i){return this.encodeUrl(`${this.baseUrl}/compare/${e}${i}${t}`)}getUrlForCreatePullRequest(e,t){if(e.remote.url===t.remote.url)return this.encodeUrl(`${this.baseUrl}/pull/new/${e.branch??"HEAD"}...${t.branch}`);let[i]=t.remote.path.split("/",1);return this.encodeUrl(`${this.baseUrl}/pull/new/${e.branch??"HEAD"}...${i}:${t.branch}`)}getUrlForFile(e,t,i,r){let s;return(s=null!=r?r.start.line===r.end.line?`#L${r.start.line}`:`#L${r.start.line}-L${r.end.line}`:"",i)?`${this.encodeUrl(`${this.baseUrl}/blob/${i}/${e}`)}${s}`:t?`${this.encodeUrl(`${this.baseUrl}/blob/${t}/${e}`)}${s}`:`${this.encodeUrl(`${this.baseUrl}?path=${e}`)}${s}`}}((e,t,i,r)=>{for(var s,n=r>1?void 0:r?p(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&d(t,i,n)})([(0,o.H)()],w.prototype,"repoDesc",1);let v=/^(?:(\d+)\+)?([a-zA-Z\d-]{1,39})@users\.noreply\.(.*)$/i;function y(e){let t=v.exec(e);if(null==t)return;let[,i,r,s]=t;return{userId:i,login:r,authority:s}}},2795:(e,t,i)=>{i.d(t,{x:()=>h});var r=i(9496),s=i(4488),n=i(8786),o=i(6503),a=Object.defineProperty,l=Object.getOwnPropertyDescriptor;class h{constructor(e,t,i="https",r,s=!1){this.domain=e,this.path=t,this.protocol=i,this.custom=s,this._name=r}_name;get autolinks(){return[]}get avatarUri(){}get displayPath(){return this.path}get icon(){return"remote"}get owner(){return this.splitPath()[0]}get remoteKey(){return this.domain?`${this.domain}/${this.path}`:this.path}get repoDesc(){return{owner:this.owner,name:this.repoName}}get repoName(){return this.splitPath()[1]}async copy(e){let t=this.url(e);null!=t&&await r.env.clipboard.writeText(t)}open(e){return this.openUrl(this.url(e))}url(e){switch(e.type){case o.J.Branch:return this.getUrlForBranch(e.branch);case o.J.Branches:return this.getUrlForBranches();case o.J.Commit:return this.getUrlForCommit(e.sha);case o.J.Comparison:return this.getUrlForComparison?.(e.base,e.compare,e.notation??"...");case o.J.CreatePullRequest:return this.getUrlForCreatePullRequest?.(e.base,e.compare);case o.J.File:return this.getUrlForFile(e.fileName,null!=e.branchOrTag?e.branchOrTag:void 0,void 0,e.range);case o.J.Repo:return this.getUrlForRepository();case o.J.Revision:return this.getUrlForFile(e.fileName,null!=e.branchOrTag?e.branchOrTag:void 0,null!=e.sha?e.sha:void 0,e.range);default:return}}get baseUrl(){return`${this.protocol}://${this.domain}/${this.path}`}formatName(e){return null!=this._name?this._name:`${e}${this.custom?` (${this.domain})`:""}`}splitPath(){let e=this.path.indexOf("/");return[this.path.substring(0,e),this.path.substring(e+1)]}getUrlForRepository(){return this.baseUrl}async openUrl(e){if(null!=e)return r.env.openExternal(e)}encodeUrl(e){return n.M(e)?.replace(/#/g,"%23")}}((e,t,i,r)=>{for(var s,n=r>1?void 0:r?l(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&a(t,i,n)})([(0,s.H)()],h.prototype,"remoteKey",1)},2500:(e,t,i)=>{i.d(t,{B:()=>Y,v:()=>q});var r=i(5148),s=i(4336),n=i(2795);let o=/\/_git\/?/i,a=/^DefaultCollection\//i,l=/^(.*?)\/(.*?)\/(.*)/,h=/^(ssh|vs-ssh)\./i,c=/^\/?v\d\//i,u=/path=([^&]+)/i,d=/line=(\d+)(?:&lineEnd=(\d+))?/;class p extends n.x{constructor(e,t,i,r,s=!1){if(h.test(e)){t=t.replace(c,""),e=e.replace(h,"");let i=l.exec(t);if(null!=i){let[,r,n,o]=i;s?(e=`${r}.${e}`,t=`${n}/_git/${o}`):t=`${r}/${n}/_git/${o}`}}super(e,t=decodeURIComponent(t),i,r)}_autolinks;get autolinks(){if(void 0===this._autolinks){let e=this.baseUrl.replace(o,"/");this._autolinks=[{prefix:"#",url:`${e}/_workitems/edit/<num>`,title:`Open Work Item #<num> on ${this.name}`,type:"issue",description:`${this.name} Work Item #<num>`},{prefix:"PR ",url:`${this.baseUrl}/pullrequest/<num>`,title:`Open Pull Request #<num> on ${this.name}`,type:"pullrequest",description:`${this.name} Pull Request #<num>`}]}return this._autolinks}get icon(){return"azdo"}get id(){return"azure-devops"}get gkProviderId(){return"azureDevops"}get name(){return"Azure DevOps"}_displayPath;get displayPath(){return void 0===this._displayPath&&(this._displayPath=this.path.replace(o,"/").replace(a,"")),this._displayPath}async getLocalInfoFromRemoteUri(e,t,i){let r,s;if(t.authority!==this.domain)return Promise.resolve(void 0);if(t.query){let e=d.exec(t.query);if(null!=e){let[,t,i]=e;t&&(r=parseInt(t,10),i&&(s=parseInt(i,10)))}}let n=u.exec(t.query);if(null==n)return Promise.resolve(void 0);let[,o]=n,a=e.toAbsoluteUri(o,{validate:i?.validate});return Promise.resolve(null!=a?{uri:a,startLine:r,endLine:s}:void 0)}getUrlForBranches(){return this.encodeUrl(`${this.baseUrl}/branches`)}getUrlForBranch(e){return this.encodeUrl(`${this.baseUrl}/?version=GB${e}&_a=history`)}getUrlForCommit(e){return this.encodeUrl(`${this.baseUrl}/commit/${e}`)}getUrlForComparison(e,t,i){return this.encodeUrl(`${this.baseUrl}/branchCompare?baseVersion=GB${e}&targetVersion=GB${t}`)}getUrlForFile(e,t,i,r){let s;return(s=null!=r?r.start.line===r.end.line?`&line=${r.start.line}&lineStartColumn=${r.start.character+1}&lineEndColumn=${r.end.character+1}`:`&line=${r.start.line}&lineEnd=${r.end.line}&lineStartColumn=${r.start.character+1}&lineEndColumn=${r.end.character+1}`:"",i)?this.encodeUrl(`${this.baseUrl}?path=${e}&version=GC${i}${s}&_a=contents`):t?this.encodeUrl(`${this.baseUrl}/?path=/${e}&version=GB${t}&_a=contents${s}`):this.encodeUrl(`${this.baseUrl}?path=/${e}${s}`)}}var g=i(4321);let m=/^\/([^/]+)\/([^/]+?)\/src(.+)$/i,f=/^lines-(\d+)(?::(\d+))?$/;class w extends n.x{constructor(e,t,i,r,s=!1){super(e,t,i,r,s)}_autolinks;get autolinks(){return void 0===this._autolinks&&(this._autolinks=[{prefix:"issue #",url:`${this.baseUrl}/issues/<num>`,title:`Open Issue #<num> on ${this.name}`,type:"issue",description:`${this.name} Issue #<num>`},{prefix:"pull request #",url:`${this.baseUrl}/pull-requests/<num>`,title:`Open Pull Request #<num> on ${this.name}`,type:"pullrequest",description:`${this.name} Pull Request #<num>`}]),this._autolinks}get icon(){return"bitbucket"}get id(){return"bitbucket"}get gkProviderId(){return"bitbucket"}get name(){return this.formatName("Bitbucket")}async getLocalInfoFromRemoteUri(e,t,i){let r,s,n;if(t.authority!==this.domain||(i?.validate??!0)&&!t.path.startsWith(`/${this.path}/`))return;if(t.fragment){let e=f.exec(t.fragment);if(null!=e){let[,t,i]=e;t&&(r=parseInt(t,10),i&&(s=parseInt(i,10)))}}let o=m.exec(t.path);if(null==o)return;let[,,,a]=o,l=a.indexOf("/",1);if(-1!==l){let t=a.substring(1,l);if((0,g.D3)(t)){let t=e.toAbsoluteUri(a.substr(l),{validate:i?.validate});if(null!=t)return{uri:t,startLine:r,endLine:s}}}let h=new Map;l=a.length;do l=a.lastIndexOf("/",l-1),n=a.substring(1,l),h.set(n,a.substr(l));while(l>0)if(0!==h.size){let{values:t}=await e.getBranches({filter:e=>e.remote&&h.has(e.getNameWithoutRemote())});for(let n of t){let t=h.get(n.getNameWithoutRemote());if(null==t)continue;let o=e.toAbsoluteUri(t,{validate:i?.validate});if(null!=o)return{uri:o,startLine:r,endLine:s}}}}getUrlForBranches(){return this.encodeUrl(`${this.baseUrl}/branches`)}getUrlForBranch(e){return this.encodeUrl(`${this.baseUrl}/branch/${e}`)}getUrlForCommit(e){return this.encodeUrl(`${this.baseUrl}/commits/${e}`)}getUrlForComparison(e,t,i){return this.encodeUrl(`${this.baseUrl}/branches/compare/${e}%0D${t}`).replace("%250D","%0D")}getUrlForFile(e,t,i,r){let s;return(s=null!=r?r.start.line===r.end.line?`#${e}-${r.start.line}`:`#${e}-${r.start.line}:${r.end.line}`:"",i)?`${this.encodeUrl(`${this.baseUrl}/src/${i}/${e}`)}${s}`:t?`${this.encodeUrl(`${this.baseUrl}/src/${t}/${e}`)}${s}`:`${this.encodeUrl(`${this.baseUrl}?path=${e}`)}${s}`}}let v=/^\/([^/]+)\/([^/]+?)\/src(.+)$/i,y=/^lines-(\d+)(?::(\d+))?$/;class b extends n.x{constructor(e,t,i,r,s=!1){super(e,t,i,r,s)}_autolinks;get autolinks(){return void 0===this._autolinks&&(this._autolinks=[{prefix:"issue #",url:`${this.baseUrl}/issues/<num>`,title:`Open Issue #<num> on ${this.name}`,type:"issue",description:`${this.name} Issue #<num>`},{prefix:"pull request #",ignoreCase:!0,url:`${this.baseUrl}/pull-requests/<num>`,title:`Open Pull Request #<num> on ${this.name}`,type:"pullrequest",description:`${this.name} Pull Request #<num>`}]),this._autolinks}get baseUrl(){let[e,t]=this.splitPath();return`${this.protocol}://${this.domain}/projects/${e}/repos/${t}`}splitPath(){if(this.path.startsWith("scm/")){let e=this.path.replace("scm/","").indexOf("/");return[this.path.substring(0,e),this.path.substring(e+1)]}return super.splitPath()}get icon(){return"bitbucket"}get id(){return"bitbucket-server"}get gkProviderId(){return"bitbucketServer"}get name(){return this.formatName("Bitbucket Server")}async getLocalInfoFromRemoteUri(e,t,i){let r,s,n;if(t.authority!==this.domain||(i?.validate??!0)&&!t.path.startsWith(`/${this.path}/`))return;if(t.fragment){let e=y.exec(t.fragment);if(null!=e){let[,t,i]=e;t&&(r=parseInt(t,10),i&&(s=parseInt(i,10)))}}let o=v.exec(t.path);if(null==o)return;let[,,,a]=o,l=a.indexOf("/",1);if(-1!==l){let t=a.substring(1,l);if((0,g.D3)(t)){let t=e.toAbsoluteUri(a.substr(l),{validate:i?.validate});if(null!=t)return{uri:t,startLine:r,endLine:s}}}let h=new Map;l=a.length;do l=a.lastIndexOf("/",l-1),n=a.substring(1,l),h.set(n,a.substr(l));while(l>0)if(0!==h.size){let{values:t}=await e.getBranches({filter:e=>e.remote&&h.has(e.getNameWithoutRemote())});for(let n of t){let t=h.get(n.getNameWithoutRemote());if(null==t)continue;let o=e.toAbsoluteUri(t,{validate:i?.validate});if(null!=o)return{uri:o,startLine:r,endLine:s}}}}getUrlForBranches(){return this.encodeUrl(`${this.baseUrl}/branches`)}getUrlForBranch(e){return this.encodeUrl(`${this.baseUrl}/commits?until=${e}`)}getUrlForCommit(e){return this.encodeUrl(`${this.baseUrl}/commits/${e}`)}getUrlForComparison(e,t,i){return this.encodeUrl(`${this.baseUrl}/branches/compare/${e}%0D${t}`).replace("%250D","%0D")}getUrlForFile(e,t,i,r){let s;return(s=null!=r?r.start.line===r.end.line?`#${r.start.line}`:`#${r.start.line}-${r.end.line}`:"",i)?`${this.encodeUrl(`${this.baseUrl}/browse/${e}?at=${i}`)}${s}`:t?`${this.encodeUrl(`${this.baseUrl}/browse/${e}?at=${t}`)}${s}`:`${this.encodeUrl(`${this.baseUrl}/browse/${e}`)}${s}`}}var C=i(4627);class A extends n.x{urls;constructor(e,t,i,r,s){super(e,t,r,s,!0),this.urls=i}get id(){return"custom"}get gkProviderId(){}get name(){return this.formatName("Custom")}getLocalInfoFromRemoteUri(e,t){return Promise.resolve(void 0)}getUrlForRepository(){return this.getUrl(this.urls.repository,this.getContext())}getUrlForBranches(){return this.getUrl(this.urls.branches,this.getContext())}getUrlForBranch(e){return this.getUrl(this.urls.branch,this.getContext({branch:e}))}getUrlForCommit(e){return this.getUrl(this.urls.commit,this.getContext({id:e}))}getUrlForComparison(e,t,i){if(null!=this.urls.comparison)return this.getUrl(this.urls.comparison,this.getContext({ref1:e,ref2:t,notation:i}))}getUrlForFile(e,t,i,r){let s,n,o;s=null!=r?r.start.line===r.end.line?(0,C.sX)(this.urls.fileLine,{line:r.start.line,line_encoded:r.start.line}):(0,C.sX)(this.urls.fileRange,{start:r.start.line,start_encoded:r.start.line,end:r.end.line,end_encoded:r.end.line}):"",i?(n=this.urls.fileInCommit,o=this.getContext({id:i,file:e,line:s})):t?(n=this.urls.fileInBranch,o=this.getContext({branch:t,file:e,line:s})):(n=this.urls.file,o=this.getContext({file:e,line:s}));let a=(0,C.sX)(n,o);if((0,C.Gg)(n).some(e=>e.key.endsWith("_encoded")))return a;let l=a.includes("#");if(a=this.encodeUrl(a),l){let e=a.lastIndexOf("%23");-1!==e&&(a=`${a.substring(0,e)}#${a.substring(e+3)}`)}return a}getUrl(e,t){let i=(0,C.sX)(e,t);return(0,C.Gg)(e).some(e=>e.key.endsWith("_encoded"))?i:this.encodeUrl(i)}getContext(e){let[t,i]=this.splitPath(),r={repo:this.path,repoBase:t,repoPath:i,...e??{}};for(let[e,t]of Object.entries(r))r[`${e}_encoded`]=encodeURIComponent(t);return r}}let P=/^\/([^/]+)\/\+(.+)$/i,D=/^(\d+)$/;class k extends n.x{constructor(e,t,i,r,s=!1,n=!0){n&&"ssh"!==i&&(t=t.replace(/^a\//,"")),super(e,t,i,r,s)}_autolinks;get autolinks(){return void 0===this._autolinks&&(this._autolinks=[{prefix:"Change-Id: ",url:`${this.baseReviewUrl}/q/<num>`,title:`Open Change #<num> on ${this.name}`,alphanumeric:!0,description:`${this.name} Change #<num>`}]),this._autolinks}get icon(){return"gerrit"}get id(){return"gerrit"}get gkProviderId(){}get name(){return this.formatName("Gerrit")}get baseUrl(){return`${this.protocol}://${this.domain}/plugins/gitiles/${this.path}`}get baseReviewUrl(){return`${this.protocol}://${this.domain}`}async getLocalInfoFromRemoteUri(e,t,i){let r;if(t.authority!==this.domain||(i?.validate??!0)&&!t.path.startsWith(`/${this.path}/`))return;if(t.fragment){let e=D.exec(t.fragment);if(null!=e){let[,t]=e;t&&(r=parseInt(t,10))}}let s=P.exec(t.path);if(null==s)return;let[,,n]=s,o=n.indexOf("/",1);if(-1!==o){let t=n.substring(1,o);if((0,g.D3)(t)||"HEAD"==t){let t=e.toAbsoluteUri(n.substr(o),{validate:i?.validate});if(null!=t)return{uri:t,startLine:r}}}if(n.startsWith("/refs/heads/")){let t;let s=n.substr(12),a=new Map;o=s.length;do o=s.lastIndexOf("/",o-1),t=s.substring(1,o),a.set(t,s.substr(o));while(o>0)if(0!==a.size){let{values:t}=await e.getBranches({filter:e=>e.remote&&a.has(e.getNameWithoutRemote())});for(let s of t){let t=a.get(s.getNameWithoutRemote());if(null==t)continue;let n=e.toAbsoluteUri(t,{validate:i?.validate});if(null!=n)return{uri:n,startLine:r}}}return}if(n.startsWith("/refs/tags/")){let t;let s=n.substr(11),a=new Map;o=s.length;do o=s.lastIndexOf("/",o-1),t=s.substring(1,o),a.set(t,s.substr(o));while(o>0)if(0!==a.size){let{values:t}=await e.getTags({filter:e=>a.has(e.name)});for(let s of t){let t=a.get(s.name);if(null==t)continue;let n=e.toAbsoluteUri(t,{validate:i?.validate});if(null!=n)return{uri:n,startLine:r}}}}}getUrlForBranches(){return this.encodeUrl(`${this.baseReviewUrl}/admin/repos/${this.path},branches`)}getUrlForBranch(e){return this.encodeUrl(`${this.baseUrl}/+/refs/heads/${e}`)}getUrlForCommit(e){return this.encodeUrl(`${this.baseReviewUrl}/q/${e}`)}getUrlForFile(e,t,i,r){let s=null!=r?`#${r.start.line}`:"";return i?`${this.encodeUrl(`${this.baseUrl}/+/${i}/${e}`)}${s}`:t?`${this.encodeUrl(`${this.getUrlForBranch(t)}/${e}`)}${s}`:`${this.encodeUrl(`${this.baseUrl}/+/HEAD/${e}`)}${s}`}}let S=/^\/([^/]+)\/([^/]+?)\/src(.+)$/i,R=/^L(\d+)(?:-L(\d+))?$/;class $ extends n.x{constructor(e,t,i,r,s=!1){super(e,t,i,r,s)}_autolinks;get autolinks(){return void 0===this._autolinks&&(this._autolinks=[{prefix:"#",url:`${this.baseUrl}/issues/<num>`,title:`Open Issue #<num> on ${this.name}`,type:"issue",description:`${this.name} Issue #<num>`}]),this._autolinks}get icon(){return"gitea"}get id(){return"gitea"}get gkProviderId(){}get name(){return this.formatName("Gitea")}async getLocalInfoFromRemoteUri(e,t,i){let r,s,n,o;if(t.authority!==this.domain||(i?.validate??!0)&&!t.path.startsWith(`/${this.path}/`))return;if(t.fragment){let e=R.exec(t.fragment);if(null!=e){let[,t,i]=e;t&&(r=parseInt(t,10),i&&(s=parseInt(i,10)))}}let a=S.exec(t.path);if(null==a)return;let[,,,l]=a;if(l.startsWith("/commit/")&&(n=8,-1!==(o=l.indexOf("/",n)))){let t=l.substring(n,o);if((0,g.D3)(t)){let t=e.toAbsoluteUri(l.substr(o),{validate:i?.validate});if(null!=t)return{uri:t,startLine:r,endLine:s}}}if(l.startsWith("/branch/")){let t;let a=new Map;o=n=8;do t=l.substring(n,o),a.set(t,l.substr(o)),o=l.indexOf("/",o+1);while(o<l.length&&-1!==o)if(0!==a.size){let{values:t}=await e.getBranches({filter:e=>e.remote&&a.has(e.getNameWithoutRemote())});for(let n of t){let t=a.get(n.getNameWithoutRemote());if(null==t)continue;let o=e.toAbsoluteUri(t,{validate:i?.validate});if(null!=o)return{uri:o,startLine:r,endLine:s}}}}}getUrlForBranches(){return this.encodeUrl(`${this.baseUrl}/branches`)}getUrlForBranch(e){return this.encodeUrl(`${this.baseUrl}/src/branch/${e}`)}getUrlForCommit(e){return this.encodeUrl(`${this.baseUrl}/commit/${e}`)}getUrlForComparison(e,t,i){return this.encodeUrl(`${this.baseUrl}/compare/${e}...${t}`)}getUrlForFile(e,t,i,r){let s;return(s=null!=r?r.start.line===r.end.line?`#L${r.start.line}`:`#L${r.start.line}-L${r.end.line}`:"",i)?`${this.encodeUrl(`${this.baseUrl}/src/commit/${i}/${e}`)}${s}`:t?`${this.encodeUrl(`${this.baseUrl}/src/branch/${t}/${e}`)}${s}`:`${this.encodeUrl(`${this.baseUrl}/src/${e}`)}${s}`}}var _=i(2075),I=i(5255),F=i(7512),x=i(4488),T=i(8786),O=i(8452),E=Object.defineProperty,B=Object.getOwnPropertyDescriptor;let U=/\b([^/\s]+\/[^/\s]+?)(?:\\)?#([0-9]+)\b(?!]\()/g,W=/\b([^/\s]+\/[^/\s]+?)(?:\\)?!([0-9]+)\b(?!]\()/g,M=/^\/([^/]+)\/([^/]+?)\/-\/blob(.+)$/i,L=/^L(\d+)(?:-(\d+))?$/;class N extends n.x{constructor(e,t,i,r,s=!1){super(e,t,i,r,s)}get apiBaseUrl(){return this.custom?`${this.protocol}://${this.domain}/api`:`https://${this.domain}/api`}_autolinks;get autolinks(){return void 0===this._autolinks&&(this._autolinks=[{prefix:"#",url:`${this.baseUrl}/-/issues/<num>`,title:`Open Issue #<num> on ${this.name}`,type:"issue",description:`${this.name} Issue #<num>`},{prefix:"!",url:`${this.baseUrl}/-/merge_requests/<num>`,title:`Open Merge Request !<num> on ${this.name}`,type:"pullrequest",description:`${this.name} Merge Request !<num>`},{tokenize:(e,t,i,r,s,n)=>"plaintext"===t?e:e.replace(U,(e,o,a)=>{let l;let h=(0,T.M)(`${this.protocol}://${this.domain}/${(0,C.I6)(o)}/-/issues/${a}`),c=` "Open Issue #${a} from ${o} on ${this.name}"`,u=`\0${i.size}\0`;"markdown"===t?i.set(u,`[${e}](${h}${c})`):"html"===t&&i.set(u,`<a href="${h}" title=${c}>${e}</a>`);let d=r?.get(a)?.[0];if(d?.value!=null){if(d.paused)null==n||s?.has(a)||(l=n.size+1,n.set(l,`[${(0,O.sy)()} GitLab Issue ${o}#${a} $(loading~spin)](${h}${c}")`));else{let t=d.value,i=(0,C.ry)(t.title.trim());null==n||s?.has(a)||(l=n.size+1,n.set(l,`[${(0,O.sy)(t)} **${i}**](${h}${c})\\
${I.NE.Space.repeat(5)}${e} ${t.state} ${(0,F.Zh)(t.closedDate??t.date)}`))}}else null==n||s?.has(a)||(l=n.size+1,n.set(l,`[${(0,O.sy)()} GitLab Issue ${o}#${a}](${h}${c})`));return u}),parse:(e,t)=>{let i,r,s;for(;null!=(s=U.exec(e));){[,i,r]=s;let[e,n]=i.split("/",2);t.set(r,{provider:this,id:r,prefix:`${i}#`,url:`${this.protocol}://${this.domain}/${i}/-/issues/${r}`,title:`Open Issue #<num> from ${i} on ${this.name}`,type:"issue",description:`${this.name} Issue ${i}#${r}`,descriptor:{key:this.remoteKey,owner:e,name:n}})}}},{tokenize:(e,t,i,r,s,n)=>"plaintext"===t?e:e.replace(W,(e,o,a)=>{let l;let h=(0,T.M)(`${this.protocol}://${this.domain}/${o}/-/merge_requests/${a}`),c=` "Open Merge Request !${a} from ${o} on ${this.name}"`,u=`\0${i.size}\0`;"markdown"===t?i.set(u,`[${e}](${h}${c})`):"html"===t&&i.set(u,`<a href="${h}" title=${c}>${e}</a>`);let d=r?.get(a)?.[0];if(d?.value!=null){if(d.paused)null==n||s?.has(a)||(l=n.size+1,n.set(l,`[${(0,O.sy)()} ${this.name} Merge Request ${o}!${a} $(loading~spin)](${h}${c}")`));else{let t=d.value,i=(0,C.ry)(t.title.trim());null==n||s?.has(a)||(l=n.size+1,n.set(l,`[${(0,O.sy)(t)} **${i}**](${h}${c})\\
${I.NE.Space.repeat(5)}${e} ${t.state} ${(0,F.Zh)(t.closedDate??t.date)}`))}}else null==n||s?.has(a)||(l=n.size+1,n.set(l,`[${(0,O.sy)()} ${this.name} Merge Request ${o}!${a}](${h}${c})`));return u}),parse:(e,t)=>{let i,r,s;for(;null!=(s=W.exec(e));){[,i,r]=s;let[e,n]=i.split("/",2);t.set(r,{provider:this,id:r,prefix:`${i}!`,url:`${this.protocol}://${this.domain}/${i}/-/merge_requests/${r}`,title:`Open Merge Request !<num> from ${i} on ${this.name}`,type:"pullrequest",description:`${this.name} Merge Request !${r} from ${i}`,descriptor:{key:this.remoteKey,owner:e,name:n}})}}}]),this._autolinks}get icon(){return"gitlab"}get id(){return"gitlab"}get gkProviderId(){var e;return(e=this.domain,(0,C.qq)(e,"gitlab.com"))?"gitlab":"gitlabSelfHosted"}get name(){return this.formatName("GitLab")}get repoDesc(){let[e,t]=this.splitPath();return{key:this.remoteKey,owner:e,name:t}}async getLocalInfoFromRemoteUri(e,t,i){let r,s,n;if(t.authority!==this.domain||(i?.validate??!0)&&!t.path.startsWith(`/${this.path}/`))return;if(t.fragment){let e=L.exec(t.fragment);if(null!=e){let[,t,i]=e;t&&(r=parseInt(t,10),i&&(s=parseInt(i,10)))}}let o=M.exec(t.path);if(null==o)return;let[,,,a]=o,l=a.indexOf("/",1);if(-1!==l){let t=a.substring(1,l);if((0,g.D3)(t)){let t=e.toAbsoluteUri(a.substr(l),{validate:i?.validate});if(null!=t)return{uri:t,startLine:r,endLine:s}}}let h=new Map;l=a.length;do l=a.lastIndexOf("/",l-1),n=a.substring(1,l),h.set(n,a.substr(l));while(l>0)if(0!==h.size){let{values:t}=await e.getBranches({filter:e=>e.remote&&h.has(e.getNameWithoutRemote())});for(let n of t){let t=h.get(n.getNameWithoutRemote());if(null==t)continue;let o=e.toAbsoluteUri(t,{validate:i?.validate});if(null!=o)return{uri:o,startLine:r,endLine:s}}}}getUrlForBranches(){return this.encodeUrl(`${this.baseUrl}/-/branches`)}getUrlForBranch(e){return this.encodeUrl(`${this.baseUrl}/-/tree/${e}`)}getUrlForCommit(e){return this.encodeUrl(`${this.baseUrl}/-/commit/${e}`)}getUrlForComparison(e,t,i){return this.encodeUrl(`${this.baseUrl}/-/compare/${e}${i}${t}`)}getUrlForFile(e,t,i,r){let s;return(s=null!=r?r.start.line===r.end.line?`#L${r.start.line}`:`#L${r.start.line}-${r.end.line}`:"",i)?`${this.encodeUrl(`${this.baseUrl}/-/blob/${i}/${e}`)}${s}`:t?`${this.encodeUrl(`${this.baseUrl}/-/blob/${t}/${e}`)}${s}`:`${this.encodeUrl(`${this.baseUrl}?path=${e}`)}${s}`}}((e,t,i,r)=>{for(var s,n=r>1?void 0:r?B(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&E(t,i,n)})([(0,x.H)()],N.prototype,"repoDesc",1);class H extends k{constructor(e,t,i,r,s=!1){super(e,t,i,r,s,!1)}get id(){return"google-source"}get gkProviderId(){}get name(){return this.formatName("Google Source")}get baseUrl(){return`${this.protocol}://${this.domain}/${this.path}`}get reviewDomain(){let[e,...t]=this.domain.split(".");return[`${e}-review`,...t].join(".")}get baseReviewUrl(){return`${this.protocol}://${this.reviewDomain}`}}let G=[{custom:!1,matcher:"bitbucket.org",creator:(e,t,i)=>new w(t,i)},{custom:!1,matcher:"github.com",creator:(e,t,i)=>new _.g(t,i)},{custom:!1,matcher:"gitlab.com",creator:(e,t,i)=>new N(t,i)},{custom:!1,matcher:/\bdev\.azure\.com$/i,creator:(e,t,i)=>new p(t,i)},{custom:!0,matcher:/^(.+\/(?:bitbucket|stash))\/scm\/(.+)$/i,creator:(e,t,i)=>new b(t,i)},{custom:!1,matcher:/\bgitlab\b/i,creator:(e,t,i)=>new N(t,i)},{custom:!1,matcher:/\bvisualstudio\.com$/i,creator:(e,t,i)=>new p(t,i,void 0,void 0,!0)},{custom:!1,matcher:/\bgitea\b/i,creator:(e,t,i)=>new $(t,i)},{custom:!1,matcher:/\bgerrithub\.io$/i,creator:(e,t,i)=>new k(t,i)},{custom:!1,matcher:/\bgooglesource\.com$/i,creator:(e,t,i)=>new H(t,i)}];function q(e){let t=[];if(e?.length)for(let i of e){let e;let r=function(e){switch(e.type){case"AzureDevOps":return(t,i,r)=>new p(i,r,e.protocol,e.name,!0);case"Bitbucket":return(t,i,r)=>new w(i,r,e.protocol,e.name,!0);case"BitbucketServer":return(t,i,r)=>new b(i,r,e.protocol,e.name,!0);case"Custom":return(t,i,r)=>new A(i,r,e.urls,e.protocol,e.name);case"Gerrit":return(t,i,r)=>new k(i,r,e.protocol,e.name,!0);case"GoogleSource":return(t,i,r)=>new H(i,r,e.protocol,e.name,!0);case"Gitea":return(t,i,r)=>new $(i,r,e.protocol,e.name,!0);case"GitHub":return(t,i,r)=>new _.g(i,r,e.protocol,e.name,!0);case"GitLab":return(t,i,r)=>new N(i,r,e.protocol,e.name,!0);default:return}}(i);if(null!=r){try{if(e=i.regex?RegExp(i.regex,"i"):i.domain?.toLowerCase(),null==e)throw Error("No matcher found")}catch(e){s.Yd.error(e,`Loading remote provider '${i.name??""}' failed`)}t.push({custom:!0,matcher:e,creator:r})}}return t.push(...G),t}function Y(e,t){return null==t&&(t=q(r.D.get("remotes",null))),(i,r,n)=>(function(e,t,i,r,n){try{let s=r.toLowerCase();for(let{custom:o,matcher:a,creator:l}of t){if("string"==typeof a){if(a===s)return l(e,r,n);continue}if(a.test(s))return l(e,r,n);if(!o)continue;let t=a.exec(i);if(null!=t)return l(e,t[1],t[2])}return}catch(e){s.Yd.error(e,"createRemoteProvider");return}})(e,t,i,r,n)}},6934:(e,t,i)=>{i.d(t,{FL:()=>a,KQ:()=>o,WY:()=>s,pD:()=>u,pU:()=>l,uP:()=>n,vx:()=>p});var r=i(4321);let s=new Set(["","=:","message:","@:","author:","#:","commit:","?:","file:","~:","change:"]);function n(e){return{query:e.pattern,matchAll:e.matchAll,matchCase:e.matchCase,matchRegex:e.matchRegex}}function o(e){return{pattern:e.query,matchAll:e.matchAll,matchCase:e.matchCase,matchRegex:e.matchRegex}}function a(e){return`${"query"in e?e.query:e.pattern}|${e.matchAll?"A":""}${e.matchCase?"C":""}${e.matchRegex?"R":""}`}function l(e){return e.map(e=>`#:${"string"==typeof e?(0,r.zL)(e):e.name}`).join(" ")}let h=new Map([["","message:"],["=:","message:"],["message:","message:"],["@:","author:"],["author:","author:"],["#:","commit:"],["commit:","commit:"],["?:","file:"],["file:","file:"],["~:","change:"],["change:","change:"]]),c=/(?:(?<op>=:|message:|@:|author:|#:|commit:|\?:|file:|~:|change:)\s?(?<value>".+?"|\S+}?))|(?<text>\S+)(?!(?:=|message|@|author|#|commit|\?|file|~|change):)/gi;function u(e){let t,i,s,n;let o=new Map;do{if(n=c.exec(e.query),n?.groups==null)break;if(t=h.get(n.groups.op),{value:i,text:s}=n.groups,s&&!h.has(s.trim())&&(t="@me"===s?"author:":(0,r.D3)(s)?"commit:":"message:",i=s),t&&i){let e=o.get(t);null==e&&(e=new Set,o.set(t,e)),e.add(i)}}while(null!=n)return o}let d=/"/g;function p(e,t){let i,r;let s=u(e),n=new Set,o=[],a=s.get("commit:");if(null!=a){for(let e of a)n.add(e.replace(d,""));i=n}else for([r,a]of(n.add("--all"),n.add(e.matchRegex?"--extended-regexp":"--fixed-strings"),e.matchRegex&&!e.matchCase&&n.add("--regexp-ignore-case"),s.entries()))switch(r){case"message:":for(let t of(e.matchAll&&n.add("--all-match"),a))t&&(t=t.replace(d,e.matchRegex?"\\b":""))&&n.add(`--grep=${t}`);break;case"author:":for(let i of a)if(i&&(i=i.replace(d,e.matchRegex?"\\b":""))){if("@me"===i){if(t?.name==null)continue;i=t.name}if(i.startsWith("@")){n.add(`--author=${i.slice(1)}`);continue}n.add(`--author=${i}`)}break;case"change:":for(let t of a)if(t){if(t.startsWith('"')&&!(t=t.replace(d,"")))continue;n.add(e.matchRegex?`-G${t}`:`-S${t}`)}break;case"file:":for(let t of a)if(t){if(t.startsWith('"')){if(!(t=t.replace(d,"")))continue;o.push(t)}else o.push(`${e.matchCase?"":":(icase)"}${t}`)}}return{args:[...n.values()],files:o,shas:i}}},1062:(e,t,i)=>{i.d(t,{jw:()=>g,nN:()=>f,yq:()=>m});var r=i(9496),s=i(1848),n=i(1744),o=i(5255),a=i(9338),l=i(7462),h=i(439),c=i(4321),u=i(2226),d=i(5148),p=i(7469);async function g(e,t,i,a,l){let u,p,g;let m=i.sha,f=null;async function v(){var r,s;let n;if(null==t.file)return;let o=a+1,u=t.lines.find(e=>e.line===o)??t.lines[0];if(t.isUncommitted)(0,c.rD)(m)&&(n=m);else if(null==(n=f=u.previousSha))return`\`\`\`diff
+ ${l.lineAt(a).text}
\`\`\``;let p=t.file.originalPath;null==p&&i.fsPath!==t.file.uri.fsPath&&(p=t.file.path),a=u.line-1;let g=await e.git.getDiffForLine(i,a,n,m);return null==g&&null==n&&m!==h.pw&&(g=await e.git.getDiffForLine(i,a,void 0,h.pw)),null!=g?(r=g,"hunk"===s||null==s&&"hunk"===d.D.get("hovers.changesDiff")?w(r.hunk):`\`\`\`diff${null==r.line.previous?"":`
- ${r.line.previous.trim()}`}${null==r.line.current?"":`
+ ${r.line.current.trim()}`}
\`\`\``):void 0}let y=await v();if(null==y)return;if(t.isUncommitted){let e=await t.getPreviousComparisonUrisForLine(a,m);if(e?.previous==null)return;u=`[$(compare-changes)](${s.V.getMarkdownCommandArgs({lhs:{sha:e.previous.sha??"",uri:e.previous.documentUri()},rhs:{sha:e.current.sha??"",uri:e.current.documentUri()},repoPath:t.repoPath,line:a})} "Open Changes")`,p=null==e.previous.sha||e.previous.isUncommitted?`  &nbsp;_${(0,c.zL)(e.previous.sha,{strings:{working:"Working Tree"}})}_ &nbsp;${o.NE.ArrowLeftRightLong}&nbsp; `:`  &nbsp;[$(git-commit) ${(0,c.zL)(e.previous.sha||"")}](${n.o.getMarkdownCommandArgs(e.previous.sha||"")} "Show Commit") &nbsp;${o.NE.ArrowLeftRightLong}&nbsp; `,g=null==e.current.sha||e.current.isUncommitted?`_${(0,c.zL)(e.current.sha,{strings:{working:"Working Tree"}})}_`:`[$(git-commit) ${(0,c.zL)(e.current.sha||"")}](${n.o.getMarkdownCommandArgs(e.current.sha||"")} "Show Commit")`}else u=`[$(compare-changes)](${s.V.getMarkdownCommandArgs(t,a)} "Open Changes")`,null===f&&(f=await t.getPreviousSha()),f&&(p=`  &nbsp;[$(git-commit) ${(0,c.zL)(f)}](${n.o.getMarkdownCommandArgs(f)} "Show Commit") &nbsp;${o.NE.ArrowLeftRightLong}&nbsp;`),g=`[$(git-commit) ${t.shortSha}](${n.o.getMarkdownCommandArgs(t.sha)} "Show Commit")`;u=`${y}
---

Changes${p??" added in "}${g} &nbsp;&nbsp;|&nbsp;&nbsp; ${u}`;let b=new r.MarkdownString(u,!0);return b.supportHtml=!0,b.isTrusted=!0,b}async function m(e,t,i,a){let h,c,u;let d=w(a);if(null==e)c="_Working Tree_",u="_Unsaved_";else{let r=await e.findFile(t);if(null==r)return;h=`[$(compare-changes)](${s.V.getMarkdownCommandArgs({lhs:{sha:e.sha,uri:l.YY.fromFile(r,t.repoPath,void 0,!0).toFileUri()},rhs:{sha:"",uri:t.toFileUri()},repoPath:t.repoPath,line:i})} "Open Changes")`,c=`[$(git-commit) ${e.shortSha}](${n.o.getMarkdownCommandArgs(e.sha)} "Show Commit")`,u="_Working Tree_"}h=`${d}
---

Local Changes  &nbsp;${c} &nbsp;${o.NE.ArrowLeftRightLong}&nbsp; ${u}${null==h?"":` &nbsp;&nbsp;|&nbsp;&nbsp; ${h}`}`;let p=new r.MarkdownString(h,!0);return p.supportHtml=!0,p.isTrusted=!0,p}async function f(e,t,i,s,n){let o,l;let h=await (0,u.Zo)(n?.remotes??e.git.getBestRemotesWithProviders(t.repoPath),n?.cancellation,n?.timeout);if(h.paused){if("cancelled"===h.reason)return}else o=h.value,[l]=o;let c=d.D.get("hovers"),g=l?.provider!=null&&(n?.autolinks||n?.autolinks!==!1&&c.autolinks.enabled&&c.autolinks.enhanced)&&a.i.has(c.detailsMarkdownFormat,"message"),m=l?.hasIntegration()&&!1!==l.maybeIntegrationConnected&&(n?.pullRequests||n?.pullRequests!==!1&&c.pullRequests.enabled)&&a.i.has(n.format,"pullRequest","pullRequestAgo","pullRequestAgoOrDate","pullRequestDate","pullRequestState"),[f,w,v,y]=await Promise.allSettled([g?(0,u.IN)(n?.enrichedAutolinks??t.getEnrichedAutolinks(l),n?.cancellation,n?.timeout):void 0,m?(0,u.Zo)(n?.pullRequest??t.getAssociatedPullRequest(l),n?.cancellation,n?.timeout):void 0,e.vsls.enabled?(0,p.HO)(e.vsls.getContactPresence(t.author.email),250,n?.cancellation):void 0,t.isUncommitted?t.getPreviousComparisonUrisForLine(s,i.sha):void 0,null==t.message?t.ensureFullDetails():void 0]);if(n?.cancellation?.isCancellationRequested)return;let b=(0,p.Sb)(f),C=(0,p.Sb)(w),A=(0,p.Sb)(v),P=(0,p.Sb)(y),D=await a.i.fromTemplateAsync(n.format,t,{enrichedAutolinks:b?.value==null||b.paused?void 0:b.value,dateFormat:null===n.dateFormat?"MMMM Do, YYYY h:mma":n.dateFormat,editor:{line:s,uri:i},getBranchAndTagTips:n?.getBranchAndTagTips,messageAutolinks:n?.autolinks||n?.autolinks!==!1&&c.autolinks.enabled,pullRequest:C?.value,presence:A,previousLineComparisonUris:P,outputFormat:"markdown",remotes:o}),k=new r.MarkdownString(D,!0);return k.supportHtml=!0,k.isTrusted=!0,k}function w(e){return`\`\`\`diff
${e.contents.trim()}
\`\`\``}},7925:(e,t,i)=>{i.d(t,{B8:()=>d,CO:()=>h,EB:()=>p,EZ:()=>f,G:()=>u,Lw:()=>v,Nl:()=>b,PS:()=>y,QP:()=>P,RR:()=>c,W8:()=>g,bi:()=>A,f3:()=>C,mm:()=>D,p1:()=>w,s$:()=>S,vF:()=>k,xs:()=>R,zk:()=>m});var r=i(9496),s=i(5255),n=i(6592),o=i(9529),a=i(5148),l=i(4336);function h(e){return e instanceof n.PZ?$("error",`Unable to show blame. Invalid revision (${e.revision}) specified in the blame.ignoreRevsFile in your Git config.`,"suppressBlameInvalidIgnoreRevsFileBadRevisionWarning"):$("error",`Unable to show blame. Invalid or missing blame.ignoreRevsFile (${e.fileName}) specified in your Git config.`,"suppressBlameInvalidIgnoreRevsFileWarning")}function c(e){return null==e?$("info","There is no previous commit.","suppressCommitHasNoPreviousCommitWarning"):$("info",`Commit ${e.shortSha} (${e.author.name}, ${e.formattedDate}) has no previous commit.`,"suppressCommitHasNoPreviousCommitWarning")}function u(e){return $("warn",`${e}. The commit could not be found.`,"suppressCommitNotFoundWarning")}async function d(e){let t={title:"Create Pull Request..."};return await $("info",`Would you like to create a Pull Request for branch '${e}'?`,"suppressCreatePullRequestPrompt",{title:"Don't Show Again"},t)===t}async function p(){let e={title:"Disable Debug Logging"};return await $("warn","GitLens debug logging is currently enabled. Unless you are reporting an issue, it is recommended to be disabled. Would you like to disable it?","suppressDebugLoggingWarning",{title:"Don't Show Again"},e)===e}async function g(e){l.Yd.enabled("error")?null!=await $("error",`${e}. See output channel for more details.`,void 0,null,{title:"Open Output Channel"})&&l.Yd.showOutputChannel():null!=await $("error",`${e}. If the error persists, please enable debug logging and try again.`,void 0,null,{title:"Enable Debug Logging"})&&(0,o.P0)(s.Gh.EnableDebugLogging)}function m(e){return $("warn",`${e}. The file is probably not under source control.`,"suppressFileNotUnderSourceControlWarning")}function f(){return $("error","GitLens requires Git to be enabled. Please re-enable Git — set `git.enabled` to true and reload.","suppressGitDisabledWarning")}function w(){return $("error","GitLens is unable to use Git. Your Git configuration seems to be invalid. Please resolve any issues with your Git configuration and reload.")}function v(){return $("error","GitLens was unable to find Git. Please make sure Git is installed. Also ensure that Git is either in the PATH, or that 'git.path' is pointed to its installed location.","suppressGitMissingWarning")}function y(e,t){return $("error",`GitLens requires a newer version of Git (>= ${t}) than is currently installed (${e}). Please install a more recent version of Git.`,"suppressGitVersionWarning")}function b(e){return $("error",`This GitLens pre-release version (${e}) has expired. Please upgrade to a more recent version.`)}function C(e){return $("warn",`${e}. The line has uncommitted changes.`,"suppressLineUncommittedWarning")}function A(e){return $("warn",`${e}. No repository could be found.`,"suppressNoRepositoryWarning")}function P(){return $("warn","Closing either the git-rebase-todo file or the Rebase Editor will start the rebase.","suppressRebaseSwitchToTextWarning")}function D(e){return $("error",`Rich integration with ${e} has been disconnected for this session, because of too many failed requests.`,"suppressIntegrationDisconnectedTooManyFailedRequestsWarning",void 0,{title:"OK"})}function k(e){return $("error",e,"suppressIntegrationRequestFailed500Warning",void 0,{title:"OK"})}function S(e){return $("error",`${e} request timed out.`,"suppressIntegrationRequestTimedOutWarning",void 0,{title:"OK"})}async function R(e){let t={title:"Switch to New Layout"};await $("info",`Upgraded to GitLens ${e} \u2014 [see what's new](https://help.gitkraken.com/gitlens/gitlens-release-notes-current/ "See what's new in GitLens ${e}").
We've reimagined and rearranged our views for greater focus and productivity, and recommend switching to the new layout \u2014 [learn more and tell us what you think](https://github.com/gitkraken/vscode-gitlens/discussions/2721 "Learn more about what's changed")!`,void 0,null,t)===t&&(0,o.P0)(s.Gh.ResetViewsLayout)}async function $(e,t,i,s={title:"Don't Show Again"},...n){let o;if(l.Yd.log(`ShowMessage(${e}, '${t}', ${i}, ${JSON.stringify(s)})`),null!=i&&a.D.get(`advanced.messages.${i}`)){l.Yd.log(`ShowMessage(${e}, '${t}', ${i}, ${JSON.stringify(s)}) skipped`);return}switch(null!=i&&null!==s&&n.push(s),e){case"info":o=await r.window.showInformationMessage(t,...n);break;case"warn":o=await r.window.showWarningMessage(t,...n);break;case"error":o=await r.window.showErrorMessage(t,...n)}if(null==i||null!==s&&o!==s||(l.Yd.log(`ShowMessage(${e}, '${t}', ${i}, ${JSON.stringify(s)}) don't show again requested`),await function(e){let t={...a.D.get("advanced.messages")};for(let[i,r]of(t[e]=!0,Object.entries(t)))!0!==r&&delete t[i];return a.D.update("advanced.messages",t,r.ConfigurationTarget.Global)}(i),o!==s))return l.Yd.log(`ShowMessage(${e}, '${t}', ${i}, ${JSON.stringify(s)}) returned ${null!=o?o.title:o}`),o}},9679:(e,t,i)=>{i.d(t,{l:()=>o});var r=i(9496),s=i(5140),n=i(5148);async function o(e,t){if(!n.D.get("cloudPatches.enabled")){let e={title:"Enable"};if(await r.window.showInformationMessage("Cloud Patches are currently disabled. Would you like to enable them?",{modal:!0},e,{title:"Cancel",isCloseAffordance:!0})!==e)return;await n.D.updateEffective("cloudPatches.enabled",!0)}return"create"===e.mode&&(t={...t,preserveFocus:!1,preserveVisibility:!1}),s.W.instance.patchDetailsView.show(t,e)}},6516:(e,t,i)=>{i.d(t,{Cx:()=>o,EE:()=>g,PY:()=>p,RE:()=>l,Z1:()=>w,_n:()=>y,aG:()=>f,cF:()=>C,dz:()=>v,fV:()=>h,gA:()=>b,jc:()=>a,kU:()=>d,tL:()=>c,ww:()=>m});var r,s,n=i(7512),o=((r=o||{}).Free="free",r.FreePlus="free+",r.Pro="pro",r.Teams="teams",r.Enterprise="enterprise",r),a=((s=a||{})[s.VerificationRequired=-1]="VerificationRequired",s[s.Free=0]="Free",s[s.FreeInPreviewTrial=1]="FreeInPreviewTrial",s[s.FreePreviewTrialExpired=2]="FreePreviewTrialExpired",s[s.FreePlusInTrial=3]="FreePlusInTrial",s[s.FreePlusTrialExpired=4]="FreePlusTrialExpired",s[s.Paid=5]="Paid",s);function l(e){let{account:t,plan:{actual:i,effective:r},previewTrial:s}=e;if(t?.verified===!1)return -1;if(i.id===r.id)switch(r.id){case"free":return null==s?0:2;case"free+":return 4;case"pro":case"teams":case"enterprise":return 5}switch(r.id){case"free":return null==s?0:1;case"free+":return 4;case"pro":return"free"===i.id?1:3;case"teams":case"enterprise":return 5}}function h(e,t,i,r,s,n,o=!1){return{id:e,name:c(e),bundle:t,cancelled:o,organizationId:r,trialReactivationCount:i,startedOn:(s??new Date).toISOString(),expiresOn:null!=n?n.toISOString():void 0}}function c(e){switch(e){case"free+":return"GitKraken Free";case"pro":return"GitKraken Pro";case"teams":return"GitKraken Teams";case"enterprise":return"GitKraken Enterprise";default:return"GitKraken"}}let u=new Map([[void 0,-1],["free",0],["free+",1],["pro",2],["teams",3],["enterprise",4]]);function d(e){return u.get(e)??-1}function p(e,t){return g(e.plan.effective.expiresOn,t)}function g(e,t){return null!=e?(0,n.hM)(Date.now(),new Date(e),t):void 0}function m(e){return f(e.plan.effective.id)}function f(e){return"free"!==e&&"free+"!==e}function w(e){let t=p(e);return null!=t&&t<=0}function v(e){return e.plan.actual.id!==e.plan.effective.id}function y(e){if(null==e.account||!v(e)||!1===b(e))return!1;let t=p(e);return null==t||t<=0}function b(e){let t=g(e.previewTrial?.expiresOn);return null!=t?t<=0:void 0}function C(e){}},718:(e,t,i)=>{i.d(t,{C:()=>a,L:()=>o});var r=i(9496),s=i(5148),n=i(2061);function o(){return(0,n.fw)("gitlens:plus:enabled",s.D.get("plusFeatures.enabled",void 0,!0))}async function a(){if(o())return!0;let e={title:"Enable"};return await r.window.showInformationMessage("Pro features are currently disabled. Would you like to enable them?",{modal:!0},e,{title:"Cancel",isCloseAffordance:!0})===e&&(await s.D.updateEffective("plusFeatures.enabled",!0),!0)}},4435:(e,t,i)=>{i.d(t,{FQ:()=>a,eb:()=>n,wz:()=>o});var r=i(9496),s=i(6516);async function n(e,t){for(;;){let i=await t.subscription.getSubscription();if(i.account?.verified===!1){let i={title:"Resend Verification"},s={title:"Cancel",isCloseAffordance:!0};if(await r.window.showWarningMessage(`${e}

You must verify your email before you can continue.`,{modal:!0},i,s)===i&&await t.subscription.resendVerification())continue;return!1}let n=i.plan.effective.id;if((0,s.aG)(n))break;if(null==i.account){let i={title:"Start Free GitKraken Trial"},s={title:"Cancel",isCloseAffordance:!0};if(await r.window.showWarningMessage(`${e}

Try our developer productivity and collaboration services free for 7 days.`,{modal:!0},i,s)===i&&await t.subscription.loginOrSignUp())continue}else{let i={title:"Upgrade to Pro"},s={title:"Cancel",isCloseAffordance:!0};await r.window.showWarningMessage(`${e}

Continue to use our developer productivity and collaboration services.`,{modal:!0},i,s)===i&&t.subscription.purchase()}return!1}return!0}async function o(e,t){for(;;){let i=await t.subscription.getSubscription();if(i.account?.verified===!1){let i={title:"Resend Verification"},s={title:"Cancel",isCloseAffordance:!0};if(await r.window.showWarningMessage(`${e}

You must verify your email before you can continue.`,{modal:!0},i,s)===i&&await t.subscription.resendVerification())continue;return!1}if(null!=i.account)break;let s={title:"Sign In / Sign Up"},n={title:"Cancel",isCloseAffordance:!0};if(!(await r.window.showWarningMessage(`${e}

Gain access to our developer productivity and collaboration services.`,{modal:!0},s,n)===s&&await t.subscription.loginOrSignUp()))return!1}return!0}async function a(e){if(e.storage.get("confirm:draft:storage",!1))return!0;for(;;){let t={title:"Continue"},i={title:"Cancel",isCloseAffordance:!0},s={title:"Learn More"},n={title:"Security"},o=await r.window.showInformationMessage("Cloud Patches are securely stored by GitKraken and can be accessed by anyone with the link and a GitKraken account.",{modal:!0},t,s,n,i);if(o===t)return e.storage.store("confirm:draft:storage",!0),!0;if(o===n){r.env.openExternal(r.Uri.parse("https://help.gitkraken.com/gitlens/security"));continue}if(o===s){r.env.openExternal(r.Uri.parse("https://www.gitkraken.com/solutions/cloud-patches"));continue}return!1}}},1907:(e,t,i)=>{i.d(t,{CH:()=>l,CL:()=>g,Jv:()=>u,Pv:()=>d,U1:()=>p,Xu:()=>h,_N:()=>c,qP:()=>m});var r,s,n,o,a=((r=a||{}).Direct="DIRECT",r.ProviderProject="PROVIDER_PROJECT",r);class l{constructor(e,t,i,r,s,n,o,a,l,h){this.container=e,this.id=t,this.name=i,this.organizationId=r,this.provider=s,this.repoRelation=n,this.current=o,this.azureInfo=a,this._repositoryDescriptors=l,this._localPath=h,this._disposable=this.container.git.onDidChangeRepositories(this.resetRepositoriesByName,this)}type="cloud";_repositoryDescriptors;_repositoriesByName;_localPath;_disposable;dispose(){this._disposable.dispose()}get shared(){return null!=this.organizationId}get localPath(){return this._localPath}resetRepositoriesByName(){this._repositoriesByName=void 0}async getRepositoriesByName(e){return(null==this._repositoriesByName||e?.force)&&(this._repositoriesByName=await this.container.workspaces.resolveWorkspaceRepositoriesByName(this.id,{resolveFromPath:!0,usePathMapping:!0})),this._repositoriesByName}async getRepositoryDescriptors(e){return(null==this._repositoryDescriptors||e?.force)&&(this._repositoryDescriptors=await this.container.workspaces.getCloudWorkspaceRepositories(this.id),this.resetRepositoriesByName()),this._repositoryDescriptors}async getRepositoryDescriptor(e){return(await this.getRepositoryDescriptors()).find(t=>t.name===e)}addRepositories(e){null==this._repositoryDescriptors?this._repositoryDescriptors=e:this._repositoryDescriptors=this._repositoryDescriptors.concat(e),this.resetRepositoriesByName()}removeRepositories(e){null!=this._repositoryDescriptors&&(this._repositoryDescriptors=this._repositoryDescriptors.filter(t=>!e.includes(t.name)),this.resetRepositoriesByName())}setLocalPath(e){this._localPath=e}}var h=((s=h||{}).GitHub="GITHUB",s.GitHubEnterprise="GITHUB_ENTERPRISE",s.GitLab="GITLAB",s.GitLabSelfHosted="GITLAB_SELF_HOSTED",s.Bitbucket="BITBUCKET",s.Azure="AZURE",s),c=((n=c||{}).GitHub="github",n.GitHubEnterprise="github_enterprise",n.GitLab="gitlab",n.GitLabSelfHosted="gitlab_self_hosted",n.Bitbucket="bitbucket",n.Azure="azure",n);let u={azure:"azure-devops",bitbucket:"bitbucket",github:"github",github_enterprise:"github",gitlab:"gitlab",gitlab_self_hosted:"gitlab"};var d=((o=d||{}).CurrentWindow="Current Window",o.ParentFolder="Parent Folder",o);let p=100,g=100;class m{constructor(e,t,i,r,s,n){this.container=e,this.id=t,this.name=i,this.repositoryDescriptors=r,this.current=s,this._localPath=n,this._disposable=this.container.git.onDidChangeRepositories(this.resetRepositoriesByName,this)}type="local";_localPath;_repositoriesByName;_disposable;dispose(){this._disposable.dispose()}get shared(){return!1}get localPath(){return this._localPath}resetRepositoriesByName(){this._repositoriesByName=void 0}async getRepositoriesByName(e){return(null==this._repositoriesByName||e?.force)&&(this._repositoriesByName=await this.container.workspaces.resolveWorkspaceRepositoriesByName(this.id,{resolveFromPath:!0,usePathMapping:!0})),this._repositoriesByName}getRepositoryDescriptors(){return Promise.resolve(this.repositoryDescriptors)}getRepositoryDescriptor(e){return Promise.resolve(this.repositoryDescriptors.find(t=>t.name===e))}setLocalPath(e){this._localPath=e}}},1857:(e,t,i)=>{i.d(t,{D:()=>d,h:()=>p});var r=i(9496),s=i(5140),n=i(5148),o=i(3105),a=i(7469),l=i(2509),h=i(9729),c=i(3599),u=i(1742);async function d(e,t,i,d){let p;let g=r.window.createQuickPick();function m(e){return null==e?[(0,c.fw)(c.Xe.Cancel)]:[...d?.showOtherReferences??[],...(0,o.UI)(e.commits.values(),e=>(0,u.YY)(e,d?.picked===e.ref,{compact:!0,icon:!0})),...e?.hasMore?[(0,c.fw)(c.Xe.LoadMore)]:[]]}async function f(){g.busy=!0;try{e=await (await e)?.more?.(n.D.get("advanced.maxListItems"));let t=m(e),i=-1;if(0!==g.activeItems.length){let e=g.activeItems[0];i=g.items.indexOf(e),(0,c.Gy)(e)&&i--}g.items=t,i&&(g.activeItems=[g.items[i]])}finally{g.busy=!1}}g.ignoreFocusOut=(0,l.hE)(),g.title=t,g.placeholder=i,g.matchOnDescription=!0,g.matchOnDetail=!0,(0,a.tI)(e)&&(g.busy=!0,g.show(),null==(e=await e)&&(g.placeholder="Unable to show commit history")),g.items=m(e),d?.picked&&(g.activeItems=g.items.filter(e=>!h.$w.is(e)&&e.picked));let w=[];d?.keys!=null&&0!==d.keys.length&&d?.onDidPressKey!==null&&((p=s.W.instance.keyboard.createScope(Object.fromEntries(d.keys.map(e=>[e,{onDidPressKey:e=>{if(0!==g.activeItems.length){let[t]=g.activeItems;null==t||(0,c.Gy)(t)||h.$w.is(t)||d.onDidPressKey(e,t)}}}])))).start(),w.push(p));try{let e=await new Promise(e=>{w.push(g.onDidHide(()=>e(void 0)),g.onDidAccept(()=>{if(0!==g.activeItems.length){let[t]=g.activeItems;if((0,c.Gy)(t)){if(t.directive===c.Xe.LoadMore){f();return}e(void 0);return}e(t)}}),g.onDidChangeValue(async e=>{null!=p&&(0!==e.length?await p.pause(["left","right"]):await p.resume())})),g.busy=!1,g.show()});if(null==e||(0,c.Gy)(e))return;if(e instanceof h.$w){await e.execute();return}return e.item}finally{g.dispose(),w.forEach(e=>void e.dispose())}}async function p(e,t,i,n){let d;let p=r.window.createQuickPick();p.ignoreFocusOut=(0,l.hE)(),p.title=t,p.placeholder=i,p.matchOnDescription=!0,p.matchOnDetail=!0,(0,a.tI)(e)&&(p.busy=!0,p.show(),e=await e),null!=e&&(p.items=[...n?.showOtherReferences??[],...(0,o.UI)(n?.filter!=null?(0,o.hX)(e.commits.values(),n.filter):e.commits.values(),e=>(0,u.YY)(e,n?.picked===e.ref,{compact:!0,icon:!0}))]),(null==e||p.items.length<=(n?.showOtherReferences?.length??0))&&(p.placeholder=null==e?"No stashes found":n?.empty??"No matching stashes found",p.items=[(0,c.fw)(c.Xe.Cancel)]),n?.picked&&(p.activeItems=p.items.filter(e=>!h.$w.is(e)&&e.picked));let g=[];n?.keys!=null&&0!==n.keys.length&&n?.onDidPressKey!==null&&((d=s.W.instance.keyboard.createScope(Object.fromEntries(n.keys.map(e=>[e,{onDidPressKey:e=>{if(0!==p.activeItems.length){let[t]=p.activeItems;null==t||(0,c.Gy)(t)||h.$w.is(t)||n.onDidPressKey(e,t)}}}])))).start(),g.push(d));try{let e=await new Promise(e=>{g.push(p.onDidHide(()=>e(void 0)),p.onDidAccept(()=>{if(0!==p.activeItems.length){let[t]=p.activeItems;if((0,c.Gy)(t)){e(void 0);return}e(t)}}),p.onDidChangeValue(async e=>{null!=d&&(0!==e.length?await d.pause(["left","right"]):await d.resume())})),p.busy=!1,p.show()});if(null==e||(0,c.Gy)(e))return;if(e instanceof h.$w){await e.execute();return}return e.item}finally{p.dispose(),g.forEach(e=>void e.dispose())}}},4731:(e,t,i)=>{i.d(t,{J:()=>c});var r=i(9496),s=i(3016),n=i(5255),o=i(7469),a=i(4627),l=i(2509),h=i(1742);async function c(e,t,i,c,u){let d=(0,o.PQ)(),p=[];try{let o=r.window.createQuickPick();p.push(o,o.onDidHide(()=>d.fulfill(void 0)),o.onDidAccept(()=>o.busy?void 0:d.fulfill(o.selectedItems.map(e=>e.item))),o.onDidTriggerButton(e=>{e===s.AI&&(o.canSelectMany?o.selectedItems=[]:d.fulfill([]))})),o.ignoreFocusOut=u?.ignoreFocusOut??(0,l.hE)(),o.title=u?.appendReposToTitle?e.git.openRepositoryCount<=1?i:`${i}${(0,a.$G)(`${(0,a.vk)(n.NE.Dot,2,2)}${t.formattedName}`,n.d$-i.length)}`:i,o.placeholder=c,o.matchOnDescription=!0,o.matchOnDetail=!0,o.canSelectMany=u?.multiselect??!0,o.buttons=u?.clearButton?[s.AI]:[],o.busy=!0,o.show();let g=await t.getContributors();if(!d.pending)return;let m=await Promise.all(g.map(e=>(0,h.RI)(e,u?.picked?.(e)??!1)));if(!d.pending)return;return o.items=m,o.canSelectMany?o.selectedItems=m.filter(e=>e.picked):o.activeItems=m.filter(e=>e.picked),o.busy=!1,await d.promise}finally{p.forEach(e=>void e.dispose())}}},3931:(e,t,i)=>{i.d(t,{A1:()=>T,CV:()=>C,EE:()=>_,Jw:()=>w,K6:()=>U,Lf:()=>f,NC:()=>b,OT:()=>y,PF:()=>g,QP:()=>B,Wt:()=>O,Y4:()=>P,ZO:()=>x,aU:()=>S,do:()=>E,eG:()=>R,lN:()=>F,lp:()=>D,m5:()=>v,nl:()=>$,o$:()=>A,rl:()=>W,sQ:()=>I,xL:()=>k,zr:()=>m});var r=i(9496),s=i(3016),n=i(5255),o=i(5140),a=i(9311),l=i(6897),h=i(9338),c=i(7881),u=i(3700),d=i(4627),p=i(9729);class g extends p.$w{constructor(e,t){super({label:e.summary,description:`${h.i.fromTemplate("${author}, ${ago}  $(git-commit)  ${id}",e)}${t?.unpublished?"  (unpublished)":""}`,detail:`${t?.file!=null?`$(file) ${(0,u.EZ)(t.file.path)}${t.file.formatStats({expand:!0,separator:", ",prefix:` ${n.NE.Dot} `})}`:`$(files) ${e.formatStats({expand:!0,separator:", ",empty:"No files changed"})}`}${t?.hint!=null?`${(0,d.vk)(n.NE.Dash,4,2,n.NE.Space)}${t.hint}`:""}`,alwaysShow:!0,picked:t?.picked??!0,buttons:[s._9,s.Nv]},void 0,void 0,{suppressKeyPress:!0}),this.commit=e}get sha(){return this.commit.sha}}class m extends p.$w{constructor(e,t,i){super({label:`${(0,d.vk)((0,c.Qw)(t.status),0,2)}${(0,u.EZ)(t.path)}`,description:(0,c.OC)(t,!0),picked:i}),this.commit=e,this.file=t}get sha(){return this.commit.sha}execute(e){return l.vw(this.file,this.commit,e)}}class f extends p.$w{constructor(e,t,i){super(i??`$(folder-opened) Browse Repository from${t?.before?" Before":""} Here${t?.openInNewWindow?" in New Window":""}`),this.commit=e,this.executeOptions=t}execute(e){return(0,a.g)(this.commit.getGitUri(),{before:this.executeOptions?.before,openInNewWindow:this.executeOptions?.openInNewWindow})}}class w extends p.$w{constructor(e,t){super(t??"$(compare-changes) Compare with HEAD"),this.commit=e}execute(e){return o.W.instance.searchAndCompareView.compare(this.commit.repoPath,this.commit.ref,"HEAD")}}class v extends p.$w{constructor(e,t){super(t??"$(compare-changes) Compare with Working Tree"),this.commit=e}execute(e){return o.W.instance.searchAndCompareView.compare(this.commit.repoPath,this.commit.ref,"")}}class y extends p.$w{constructor(e,t){super(t??"$(copy) Copy SHA"),this.commit=e}execute(){return l.$H(this.commit)}async onDidPressKey(e){await super.onDidPressKey(e),r.window.showInformationMessage("Commit SHA copied to the clipboard")}}class b extends p.$w{constructor(e,t){super(t??"$(copy) Copy Message"),this.commit=e}execute(){return l.SJ(this.commit)}async onDidPressKey(e){await super.onDidPressKey(e),r.window.showInformationMessage(`${this.commit.stashName?"Stash":"Commit"} Message copied to the clipboard`)}}class C extends p.$w{constructor(e,t){super(t??"$(git-compare) Open All Changes"),this.commit=e}execute(e){return l.Gp(this.commit,e)}}class A extends p.$w{constructor(e,t){super(t??"$(git-compare) Open All Changes (difftool)"),this.commit=e}execute(){return l.wr(this.commit)}}class P extends p.$w{constructor(e,t){super(t??"$(git-compare) Open All Changes with Working Tree"),this.commit=e}execute(e){return l.Ou(this.commit,e)}}class D extends p.$w{constructor(e,t,i){super(i??"$(git-compare) Open Changes"),this.commit=e,this.file=t}execute(e){return l.vw(this.file,this.commit,e)}}class k extends p.$w{constructor(e,t,i){super(i??"$(git-compare) Open Changes (difftool)"),this.commit=e,this.file=t}execute(){return l.Xy(this.file,this.commit)}}class S extends p.$w{constructor(e,t,i){super(i??"$(git-compare) Open Changes with Working File"),this.commit=e,this.file=t}execute(e){return l.ce(this.file,this.commit,e)}}class R extends p.$w{constructor(e,t){super(t??"$(git-compare) Open Directory Compare"),this.commit=e}execute(){return l.tc(this.commit)}}class $ extends p.$w{constructor(e,t){super(t??"$(git-compare) Open Directory Compare with Working Tree"),this.commit=e}execute(){return l.Os(this.commit)}}class _ extends p.$w{constructor(e,t){super(t??"$(eye) Open Details"),this.commit=e}execute(e){return l.Fw(this.commit,{preserveFocus:e?.preserveFocus})}}class I extends p.$w{constructor(e,t){super(t??"$(gitlens-graph) Open in Commit Graph"),this.commit=e}execute(e){return l.GM(this.commit,{preserveFocus:e?.preserveFocus})}}class F extends p.$w{constructor(e,t){super(t??"$(files) Open Files"),this.commit=e}execute(e){return l.aE(this.commit)}}class x extends p.$w{constructor(e,t,i){super(i??"$(file) Open File"),this.commit=e,this.file=t}execute(e){return l.ZB(this.file,this.commit,e)}}class T extends p.$w{constructor(e,t){super(t??"$(files) Open Files at Revision"),this.commit=e}execute(e){return l.Dh(this.commit)}}class O extends p.$w{constructor(e,t,i){super(i??"$(file) Open File at Revision"),this.commit=e,this.file=t}execute(e){return l.YS(this.file,this.commit,e)}}class E extends p.$w{constructor(e,t,i){super(i??"Apply Changes"),this.commit=e,this.file=t}async execute(){return l.zb(this.file,this.commit)}}class B extends p.$w{constructor(e,t,i){super(i??{label:"Restore",description:"aka checkout"}),this.commit=e,this.file=t}execute(){return l.Hl(this.file,this.commit)}}class U extends p.$w{constructor(e,t){super(t??"$(files) Open All Changed Files",n.Gh.OpenChangedFiles,[{uris:e.map(e=>e.uri)}])}}class W extends p.$w{constructor(e,t){super(t??"$(files) Open Changed & Close Unchanged Files",n.Gh.OpenOnlyChangedFiles,[{uris:e.map(e=>e.uri)}])}}},9729:(e,t,i)=>{i.d(t,{$w:()=>n,fz:()=>s,qv:()=>o});var r=i(9496);function s(e){return{kind:r.QuickPickItemKind.Separator,label:e??""}}class n{constructor(e,t,i,r){this.command=t,this.args=i,this.options=r,this.command=t,this.args=i,"string"==typeof e?this.label=e:Object.assign(this,e)}static fromCommand(e,t,i){return new n("string"==typeof e?{label:e}:e,t,null==i?[]:[i])}static is(e){return e instanceof n}label;description;detail;execute(e){return void 0===this.command?Promise.resolve(void 0):r.commands.executeCommand(this.command,...this.args??[])}async onDidPressKey(e){if(this.options?.suppressKeyPress)return;let t=this.execute({preserveFocus:!0,preview:!1});this.options?.onDidPressKey?.(e,t),await t}}class o extends n{constructor(e,t){super(e,void 0,void 0),this.action=t}async execute(e){return this.action(e)}}},3599:(e,t,i)=>{i.d(t,{Gy:()=>a,Xe:()=>s,fw:()=>o,wX:()=>n});var r,s=((r=s||{})[r.Back=0]="Back",r[r.Cancel=1]="Cancel",r[r.LoadMore=2]="LoadMore",r[r.Noop=3]="Noop",r[r.RequiresVerification=4]="RequiresVerification",r[r.ExtendTrial=5]="ExtendTrial",r[r.RequiresPaidSubscription=6]="RequiresPaidSubscription",r[r.StartPreviewTrial=7]="StartPreviewTrial",r);function n(e){return"number"==typeof e&&null!=s[e]}function o(e,t,i){let r=i?.label,s=i?.detail;if(null==r)switch(e){case 0:r="Back";break;case 1:r="Cancel";break;case 2:r="Load more";break;case 3:r="Try again";break;case 7:r="Preview Pro",s="Preview Pro for 3-days to use this on privately hosted repos";break;case 5:r="Start Free GitKraken Trial",s="Continue to use this on privately hosted repos, free for an additional 7 days";break;case 4:r="Resend Verification Email",s="You must verify your email before you can continue";break;case 6:r="Upgrade to Pro",s="A paid plan is required to use this on privately hosted repos"}return{label:r,description:i?.description,detail:s,alwaysShow:!0,picked:t,directive:e}}function a(e){return null!=e&&"directive"in e}},1742:(e,t,i)=>{i.d(t,{E0:()=>C,FO:()=>y,MH:()=>b,RE:()=>g,RI:()=>f,RP:()=>w,Wv:()=>p,YY:()=>m,vl:()=>v});var r=i(2967),s=i(5255),n=i(5140),o=i(3148),a=i(6450),l=i(4321),h=i(3050),c=i(7512),u=i(4627),d=i(9729);class p extends d.$w{constructor(e,t){super(e,s.Gh.GitCommands,[t],{suppressKeyPress:!0})}executeSteps(e){return(0,r.I)(n.W.instance,this.args[0],e)}}async function g(e,t,i){let r="";if(i?.type===!0?r=!0===i.current&&e.current?"current branch":"branch":i?.type==="remote"?e.remote&&(r="remote branch"):i?.current===!0&&e.current&&(r="current branch"),i?.status&&!e.remote&&null!=e.upstream){let t=s.NE.Dash;if(e.upstream.missing)t=s.NE.Warning;else{let i=await e.getRemote();if(null!=i){let e,r;for(let{type:t}of i.urls)if("fetch"===t){if(e=!0,r)break}else if("push"===t&&(r=!0,e))break;e&&r?t=s.NE.ArrowsRightLeft:r?t=s.NE.ArrowRight:e&&(t=s.NE.ArrowLeft)}}let i=`${e.getTrackingStatus({suffix:`${s.NE.Space} `})}${t}${s.NE.Space} ${e.upstream.name}`;r=`${r?`${r}${s.NE.Space.repeat(2)}${i}`:i}`}i?.ref&&(e.sha&&(r=r?`${r} $(git-commit)${s.NE.Space}${(0,l.zL)(e.sha)}`:`$(git-commit)${s.NE.Space}${(0,l.zL)(e.sha)}`),void 0!==e.date&&(r=r?`${r}${(0,u.vk)(s.NE.Dot,2,2)}${e.formattedDate}`:e.formattedDate));let n=i?.checked||i?.checked==null&&i?.current==="checkmark"&&e.current;return{label:`$(git-branch)${s.NE.Space}${e.starred?`$(star-full)${s.NE.Space}`:""}${e.name}${n?(0,u.vk)("$(check)",2):""}`,description:r,alwaysShow:i?.alwaysShow,buttons:i?.buttons,picked:t??e.current,item:e,current:e.current,ref:e.name,remote:e.remote}}function m(e,t,i){if((0,a.G2)(e)){let r=null==e.number?"":`${e.number}: `;return i?.compact?{label:`${i.icon?`$(archive)${s.NE.Space}`:""}${r}${e.summary}`,description:`${e.formattedDate}${(0,u.vk)(s.NE.Dot,2,2)}${e.formatStats({compact:!0})}`,alwaysShow:i.alwaysShow,buttons:i.buttons,picked:t,item:e}:{label:`${i?.icon?`$(archive)${s.NE.Space}`:""}${r}${e.summary}`,description:"",detail:`${s.NE.Space.repeat(2)}${e.formattedDate}${(0,u.vk)(s.NE.Dot,2,2)}${e.formatStats({compact:!0})}`,alwaysShow:i?.alwaysShow,buttons:i?.buttons,picked:t,item:e}}return i?.compact?{label:`${i.icon?`$(git-commit)${s.NE.Space}`:""}${e.summary}`,description:`${e.author.name}, ${e.formattedDate}${(0,u.vk)("$(git-commit)",2,1)}${e.shortSha}${(0,u.vk)(s.NE.Dot,2,2)}${e.formatStats({compact:!0})}`,alwaysShow:i.alwaysShow,buttons:i.buttons,picked:t,item:e}:{label:`${i?.icon?`$(git-commit)${s.NE.Space}`:""}${e.summary}`,description:"",detail:`${s.NE.Space.repeat(2)}${e.author.name}, ${e.formattedDate}${(0,u.vk)("$(git-commit)",2,1)}${e.shortSha}${(0,u.vk)(s.NE.Dot,2,2)}${e.formatStats({compact:!0})}`,alwaysShow:i?.alwaysShow,buttons:i?.buttons,picked:t,item:e}}async function f(e,t,i){return{label:e.label,description:e.current?"you":e.email,alwaysShow:i?.alwaysShow,buttons:i?.buttons,picked:t,item:e,iconPath:await e.getAvatarUri()}}function w(e,t,i,r){let n;return""===e?{label:`${r?.icon?`$(file-directory)${s.NE.Space}`:""}Working Tree`,description:"",alwaysShow:r?.alwaysShow,buttons:r?.buttons,picked:i,item:(0,l.xB)(e,t,{refType:"revision",name:"Working Tree"}),current:!1,ref:e,remote:!1}:"HEAD"===e?{label:`${r?.icon?`$(git-branch)${s.NE.Space}`:""}HEAD`,description:"",alwaysShow:r?.alwaysShow,buttons:r?.buttons,picked:i,item:(0,l.xB)(e,t,{refType:"revision",name:"HEAD"}),current:!1,ref:e,remote:!1}:("string"==typeof e?n=(0,l.xB)(e,t):e=(n=e).ref,(0,l.yk)(e))?{label:`Range ${n.name}`,description:"",alwaysShow:r?.alwaysShow,buttons:r?.buttons,picked:i,item:n,current:!1,ref:e,remote:!1}:{label:`Commit ${n.name}`,description:r?.ref?`$(git-commit)${s.NE.Space}${e}`:"",alwaysShow:r?.alwaysShow,buttons:r?.buttons,picked:i,item:n,current:!1,ref:e,remote:!1}}function v(e,t,i){let r="";if(i?.type&&(r="remote"),i?.upstream){let t=(0,h.jv)(e);r=r?`${r}${(0,u.vk)(s.NE.Dot,2,2)}${t}`:t}return{label:`$(cloud)${s.NE.Space}${e.name}${i?.checked?(0,u.vk)("$(check)",2):""}`,description:r,alwaysShow:i?.alwaysShow,buttons:i?.buttons,picked:t,item:e}}async function y(e,t,i){let r;(i?.branch||i?.status)&&(r=await e.getStatus());let n="";if(i?.branch&&null!=r&&(n=r.branch),i?.status&&null!=r){let e="";0!==r.files.length&&(e=r.getFormattedDiffStatus({compact:!0,prefix:(0,u.vk)(s.NE.Dot,2,2)}));let t=r.getUpstreamStatus({prefix:n?`${s.NE.Space} `:""}),i=`${t}${e}`;i&&(n=`${n?`${n}${i}`:i}`)}if(i?.fetched){let t=await e.getLastFetched();if(0!==t){let e=`Last fetched ${(0,c.Zh)(new Date(t))}`;n=`${n?`${n}${(0,u.vk)(s.NE.Dot,2,2)}${e}`:e}`}}return{label:e.formattedName,description:n,alwaysShow:i?.alwaysShow,buttons:i?.buttons,picked:t,item:e,repoPath:e.path}}function b(e,t,i){let r="";if(i?.type&&(r="tag"),i?.ref&&(r=`${r}${(0,u.vk)("$(git-commit)",r?2:0,1)}${(0,l.zL)(e.sha)}`,r=`${r?`${r}${(0,u.vk)(s.NE.Dot,2,2)}`:""}${e.formattedDate}`),i?.message){let t=(0,o.X)(e.message);r=r?`${r}${(0,u.vk)(s.NE.Dot,2,2)}${t}`:t}return{label:`$(tag)${s.NE.Space}${e.name}${i?.checked?(0,u.vk)("$(check)",2):""}`,description:r,alwaysShow:i?.alwaysShow,buttons:i?.buttons,picked:t,item:e,current:!1,ref:e.name,remote:!1}}function C(e,t,i,r){let n,o,a="";switch(r?.type&&(a="worktree"),r?.status!=null&&(a+=r.status.hasChanges?(0,u.vk)(`Uncommited changes (${r.status.getFormattedDiffStatus()})`,a?2:0,0):(0,u.vk)("No changes",a?2:0,0)),e.type){case"bare":o="(bare)",n="$(folder)";break;case"branch":o=e.branch,n="$(git-branch)";break;case"detached":o=(0,l.zL)(e.sha),n="$(git-commit)"}return{label:`${n}${s.NE.Space}${o}${r?.checked?(0,u.vk)("$(check)",2):""}`,description:a,detail:r?.path?i?`${s.NE.Warning} Unable to locate $(folder) ${e.friendlyPath}`:`In $(folder) ${e.friendlyPath}`:void 0,alwaysShow:r?.alwaysShow,buttons:r?.buttons,picked:t,item:e,opened:e.opened,hasChanges:r?.status?.hasChanges}}},3636:(e,t,i)=>{i.d(t,{H:()=>m,V:()=>f});var r,s=i(9496),n=i(3016),o=i(847),a=i(5255),l=i(5140),h=i(3401),c=i(6897),u=i(6713),d=i(4321),p=i(2509),g=i(1742),m=((r=m||{})[r.Branches=1]="Branches",r[r.Tags=2]="Tags",r[r.WorkingTree=4]="WorkingTree",r[r.HEAD=8]="HEAD",r[r.BranchesAndTags=3]="BranchesAndTags",r);async function f(e,t,i,r={}){let g,m;let f=s.window.createQuickPick();f.ignoreFocusOut=(0,p.hE)(),f.title=t,f.placeholder=null!=r.allowEnteringRefs?`${i}${a.NE.Space.repeat(3)}(or enter a reference using #)`:i,f.matchOnDescription=!0;let v=[];r?.keys!=null&&0!==r.keys.length&&r?.onDidPressKey!==null&&((g=l.W.instance.keyboard.createScope(Object.fromEntries(r.keys.map(e=>[e,{onDidPressKey:e=>{0!==f.activeItems.length&&r.onDidPressKey(e,f)}}])))).start(),v.push(g));let y=new s.CancellationTokenSource,b=w(e,r);r.autoPick&&(b=b.then(e=>(e.length<=1&&(m=e[0],y.cancel()),e))),f.busy=!0,f.show();let C=(0,o.v$)(l.W.instance.git.getRepository(e),{buttons:[n.Nv],ranges:r?.allowEnteringRefs&&"boolean"!=typeof r.allowEnteringRefs?r.allowEnteringRefs.ranges:void 0});f.items=await b,f.busy=!1;try{let e=await new Promise(e=>{v.push(y.token.onCancellationRequested(()=>f.hide()),f.onDidHide(()=>e(void 0)),f.onDidAccept(()=>{0!==f.activeItems.length&&e(f.activeItems[0])}),f.onDidChangeValue(async e=>{r.allowEnteringRefs&&!await C(f,e)&&(f.items=await b),null!=g&&(0!==e.length?await g.pause(["left","right"]):await g.resume())}),f.onDidTriggerItemButton(({button:e,item:{item:t}})=>{e===n.Nv&&((0,d.UR)(t)?(0,h.ay)(t,{select:!0,expand:!0}):(0,d.gA)(t)?(0,u.ay)(t,{select:!0,expand:!0}):(0,d.FT)(t)&&(0,c.Fw)(t,{pin:!1,preserveFocus:!0}))}))});if(null==e&&null!=m&&(e=m),null==e)return;return e.item}finally{f.dispose(),v.forEach(e=>void e.dispose())}}async function w(e,{picked:t,filter:i,include:r,sort:s}){r=r??3;let a=await (0,o.B$)(l.W.instance.git.getRepository(e),r?["branches","tags"]:r?["branches"]:r?["tags"]:[],{buttons:[n.Nv],filter:i,picked:t,sort:s??{branches:{current:!1},tags:{}}});if(t){let e=a.findIndex(e=>e.ref===t);-1!==e&&a.unshift(...a.splice(e,1))}return 8&r&&a.unshift((0,g.RP)("HEAD",e,void 0,{icon:!0})),4&r&&a.unshift((0,g.RP)("",e,void 0,{icon:!0})),a}},5009:(e,t,i)=>{i.d(t,{az:()=>f,cY:()=>w,eO:()=>m});var r=i(9496),s=i(3016),n=i(5255),o=i(5140),a=i(5367),l=i(3050),h=i(6503),c=i(7469),u=i(2509),d=i(9729);class p extends d.$w{constructor(){super({label:"See how to configure a custom remote provider..."})}async execute(){await r.env.openExternal(r.Uri.parse("https://help.gitkraken.com/gitlens/gitlens-settings/#remote-provider-integration-settings"))}}class g extends d.$w{constructor(e,t,i,r){super({label:`$(repo) ${e.provider.path}`,description:e.name,buttons:r}),this.remote=e,this.resource=t,this.clipboard=i}async execute(){let e=this.resource;if(e.type===h.J.Comparison)(0,a.Lo)(e.base)===this.remote.name&&(e={...e,base:(0,a.S3)(e.base)}),(0,a.Lo)(e.compare)===this.remote.name&&(e={...e,compare:(0,a.S3)(e.compare)});else if(e.type===h.J.CreatePullRequest){let t=e.base.branch;if(null==t&&null==(t=await o.W.instance.git.getDefaultBranchName(this.remote.repoPath,this.remote.name))&&this.remote.hasIntegration()){let e=o.W.instance.integrations.getByRemote(this.remote),i=await e?.getDefaultBranch?.(this.remote.provider.repoDesc);t=i?.name}e={...e,base:{branch:t,remote:{path:this.remote.path,url:this.remote.url}}}}else if(e.type===h.J.File&&null!=e.branchOrTag&&("bitbucket"===this.remote.provider.id||"bitbucket-server"===this.remote.provider.id)){let{branchOrTag:t}=e,[i,r]=await Promise.allSettled([o.W.instance.git.getBranches(this.remote.repoPath,{filter:e=>e.name===t||e.getNameWithoutRemote()===t}),o.W.instance.git.getTags(this.remote.repoPath,{filter:e=>e.name===t})]),s=c.Sb(i)?.values[0]?.sha??c.Sb(r)?.values[0]?.sha;s&&(e={...e,type:h.J.Revision,sha:s})}await (this.clipboard?this.remote.provider.copy(e):this.remote.provider.open(e))}setAsDefault(){return this.remote.setAsDefault(!0)}}class m extends d.$w{constructor(e,t){let i=l.ss.getHighlanderProviders(e);super(`$(copy) Copy Link to ${(0,h.C)(t)} for ${i?.length?i[0].name:"Remote"}${i?.length===1?"":n.NE.Ellipsis}`,n.Gh.OpenOnRemote,[{resource:t,remotes:e,clipboard:!0}])}async onDidPressKey(e){await super.onDidPressKey(e),r.window.showInformationMessage("URL copied to the clipboard")}}class f extends d.$w{constructor(e,t){let i=l.ss.getHighlanderProviders(e);super(`$(link-external) Open ${(0,h.C)(t)} on ${i?.length===1?i[0].name:`${i?.length?i[0].name:"Remote"}${n.NE.Ellipsis}`}`,n.Gh.OpenOnRemote,[{resource:t,remotes:e,clipboard:!1}])}}async function w(e,t,i,n,o){let a;let{autoPick:l,clipboard:h,setDefault:c}={autoPick:!1,clipboard:!1,setDefault:!0,...o};if(0===n.length)a=[new p],t="No auto-detected or configured remote providers found";else{if("default"===l&&n.length>1){let e=n.find(e=>e.default);null!=e&&(n=[e])}a=n.map(e=>new g(e,i,h,c?[s.ip]:void 0))}if(l&&1===n.length)return a[0];let d=r.window.createQuickPick();d.ignoreFocusOut=(0,u.hE)();let m=[];try{let i=await new Promise(i=>{m.push(d.onDidHide(()=>i(void 0)),d.onDidAccept(()=>{0!==d.activeItems.length&&i(d.activeItems[0])}),d.onDidTriggerItemButton(async e=>{e.button===s.ip&&e.item instanceof g&&(await e.item.setAsDefault(),i(e.item))})),d.title=e,d.placeholder=t,d.matchOnDetail=!0,d.items=a,d.show()});if(null==i)return;return i}finally{d.dispose(),m.forEach(e=>void e.dispose())}}},635:(e,t,i)=>{i.d(t,{E2:()=>d,hM:()=>c,rf:()=>p,vJ:()=>u});var r=i(9496),s=i(5140),n=i(2800),o=i(3105),a=i(2509),l=i(9729),h=i(1742);async function c(e,t,i,r,n){let o=s.W.instance.git.getBestRepository(e,t);if(null==o||n?.filter==null||await n.filter(o)||(o=void 0),null!=o)return o;let a=await d(i,r,n);if(a instanceof l.$w){await a.execute();return}return a?.item}async function u(e,t,i,r){let n;if(null==(n=null==i?s.W.instance.git.highlander:await s.W.instance.git.getOrOpenRepository(i))||r?.filter==null||await r.filter(n)||(n=void 0),null!=n)return n;let o=await d(e,t,r);if(o instanceof l.$w){await o.execute();return}return o?.item}async function d(e,t="Choose a repository",i){let l;if(null==i||Array.isArray(i)||null!=i.filter||(i=void 0),null==i||Array.isArray(i))l=await Promise.all([...(0,o.UI)(i??s.W.instance.git.openRepositories,e=>(0,h.FO)(e,void 0,{branch:!0,status:!0}))]);else{let{filter:e}=i;l=await (0,n.sj)(s.W.instance.git.openRepositories,async t=>await e(t)?(0,h.FO)(t,void 0,{branch:!0,status:!0}):void 0)}if(0===l.length)return;let c=r.window.createQuickPick();c.ignoreFocusOut=(0,a.hE)();let u=[];try{let i=await new Promise(i=>{u.push(c.onDidHide(()=>i(void 0)),c.onDidAccept(()=>{0!==c.activeItems.length&&i(c.activeItems[0])})),c.title=e,c.placeholder=t,c.matchOnDescription=!0,c.matchOnDetail=!0,c.items=l,c.show()});if(null==i)return;return i}finally{c.dispose(),u.forEach(e=>void e.dispose())}}async function p(e,t="Choose a repository",i){let l;if(null==i||Array.isArray(i)||null!=i.filter||(i=void 0),null==i||Array.isArray(i))l=await Promise.all([...(0,o.UI)(i??s.W.instance.git.openRepositories,e=>(0,h.FO)(e,void 0,{branch:!0,status:!0}))]);else{let{filter:e}=i;l=await (0,n.sj)(s.W.instance.git.openRepositories,async t=>await e(t)?(0,h.FO)(t,void 0,{branch:!0,status:!0}):void 0)}if(0===l.length)return[];let c=r.window.createQuickPick();c.ignoreFocusOut=(0,a.hE)();let u=[];try{let i=await new Promise(i=>{u.push(c.onDidHide(()=>i(void 0)),c.onDidAccept(()=>i(c.selectedItems))),c.title=e,c.placeholder=t,c.matchOnDescription=!0,c.matchOnDetail=!0,c.items=l,c.canSelectMany=!0,c.selectedItems=l,c.show()});if(null==i)return[];return i}finally{c.dispose(),u.forEach(e=>void e.dispose())}}},2133:(e,t,i)=>{i.d(t,{YW:()=>l,x8:()=>c});var r=i(7338),s=i(5255),n=i(7462),o=i(3700),a=i(1526);function l(e){let{path:t}=h(e);return t}function h(e){let t;switch(e.scheme.toLowerCase()){case s.sN.File:return{path:t=(0,o.AH)(e.fsPath),ignoreCase:!r.IJ};case s.sN.Git:return{path:t=47===(t=e.path).charCodeAt(t.length-1)?t.slice(1,-1):t.slice(1),ignoreCase:!r.IJ};case s.sN.GitLens:{t=e.path;let i=(0,n.uj)(e.authority);return null==i.uncPath||t.startsWith(i.uncPath)||(t=`${i.uncPath}${e.path}`),{path:t=47===t.charCodeAt(t.length-1)?t.slice(1,-1):t.startsWith("//")?t:t.slice(1),ignoreCase:!r.IJ}}case s.sN.Virtual:case s.sN.GitHub:{t=47===(t=e.path).charCodeAt(t.length-1)?t.slice(1,-1):t.slice(1);let i=e.authority?.split("+",1)[0];return{path:i?`${i}/${t}`:t,ignoreCase:!1}}case s.sN.Vsls:case s.sN.VslsScc:return{path:t=47===(t=(0,o.IC)(e.path)).charCodeAt(t.length-1)?t.slice(1,-1):t.slice(1),ignoreCase:!1};case s.sN.PRs:{t=47===(t=e.path).charCodeAt(t.length-1)?t.slice(1,-1):t.slice(1);let i=e.authority?.split("+",1)[0];if(i===s.sN.GitHub)return{path:i?`${i}/${t}`:t,ignoreCase:!1};return{path:t,ignoreCase:!r.IJ}}default:return{path:t=47===(t=e.path).charCodeAt(t.length-1)?t.slice(1,-1):t.slice(1),ignoreCase:!1}}}class c{_trie;_count=0;constructor(){this._trie=new a.QF(h)}get count(){return this._count}add(e){let t=this._trie.set(e.uri,e);return t&&this._count++,t}clear(){this._count=0,this._trie.clear()}forEach(e,t){for(let i of this._trie.getDescendants())e.call(t,i)}get(e){return this._trie.get(e)}getClosest(e){return this._trie.getClosest(e)}has(e){return this._trie.has(e)}remove(e,t=!0){let i=this._trie.delete(e,t);return i&&this._count--,i}values(){return this._trie.getDescendants()}}},2800:(e,t,i)=>{i.d(t,{DZ:()=>o,GI:()=>p,IP:()=>s,Mo:()=>g,Qy:()=>u,XI:()=>c,h8:()=>m,jV:()=>d,lx:()=>f,qr:()=>l,sj:()=>a,uw:()=>w,vM:()=>h,zx:()=>n});var r=i(3105);function s(e){let t=0;for(let i of e)t+=i.length;return t}function n(e){return null==e?void 0:Array.isArray(e)?e:[e]}function o(e,t){let i=0;return e.reduce((e,r)=>{let s=t(r,i++);return null!=s&&e.push(s),e},[])}async function a(e,t){let i=[];for(let r of e){let e=await t(r);null!=e&&i.push(e)}return i}function l(e,t){let i=e.length;for(;i--;)if(t(e[i],i,e))return i;return -1}function h(e,t){return e.reduce((e,i)=>{let r=t(i),s=e[r];return void 0===s?e[r]=[i]:s.push(i),e},Object.create(null))}function c(e,t){return e.reduce((e,i)=>{let r=t(i),s=e.get(r);return void 0===s?e.set(r,[i]):s.push(i),e},new Map)}function u(e,t,i){return e.reduce((e,r)=>{let s=i(r);if(null!=s){let i=t(r),n=e.get(i);void 0===n?e.set(i,[s]):n.push(s)}return e},new Map)}function d(e,t){let i=[],r=e.length;t:for(let s of e[0]){let n=r-1;for(;n--;)if(!e[n+1].some(e=>t(e,s)))break t;i.some(e=>t(e,s))||i.push(s)}return i}function p(e){return"string"==typeof e[0]}function g(e,t,i,r=!1,s){let n={name:"",relativePath:"",children:new Map,descendants:[]},o=e.reduce((e,r)=>{let s=e,n="";for(let e of t(r)){n=i(n,e),void 0===s.children&&(s.children=new Map);let t=s.children.get(e);void 0===t&&(t={name:e,relativePath:n,parent:s,children:void 0,descendants:void 0},s.children.set(e,t)),void 0===s.descendants&&(s.descendants=[]),s.descendants.push(r),s=t}return s.value=r,e},n);return r&&(o=function e(t,i,r=!0,s){if(void 0===t.children)return t;let n=[...t.children.values()];for(let t of n)e(t,i,!1,s);if(!r&&1===n.length){let e=n[0];(void 0===e.value||s?.(e.value))&&(t.name=i(t.name,e.name),t.relativePath=e.relativePath,t.children=e.children,t.descendants=e.descendants,t.value=e.value)}return t}(o,i,!0,s)),o}function m(e,t){return(0,r.v_)(new Set(e),t)}function f(e,t){return t<0?[e,[]]:[e.slice(0,t),e.slice(t)]}function w(e,t,i){return[...e.reduce((e,r)=>{let s=t(r),n=e.get(s);if(void 0===n)e.set(s,r);else{let t=i(n,r);void 0!==t&&e.set(s,t)}return e},new Map).values()]}},2226:(e,t,i)=>{i.d(t,{Ac:()=>o,IN:()=>c,T0:()=>l,Zo:()=>a,io:()=>h});var r=i(9496),s=i(3105),n=i(7469);class o{cancellation=new r.CancellationTokenSource;timer;constructor(e){this.timer=setTimeout(()=>this.cancellation.cancel(),e)}dispose(){clearTimeout(this.timer),this.cancellation.dispose()}cancel(){clearTimeout(this.timer),this.cancellation.cancel()}get token(){return this.cancellation.token}}function a(e,t,i,r){let s,o;if(!(0,n.tI)(e))return Promise.resolve({value:e,paused:!1});if(null==t&&null==i)return e.then(e=>({value:e,paused:!1}));let a=Promise.race([e.then(e=>(s?.dispose(),o?.dispose(),t?.isCancellationRequested)?{value:Promise.resolve(e),paused:!0,reason:"cancelled"}:{value:e,paused:!1}),new Promise(r=>{let n=t=>{s?.dispose(),o?.dispose(),r({value:e,paused:!0,reason:t})};if(s=t?.onCancellationRequested(()=>n("cancelled")),null!=i){if("number"==typeof i){let e=setTimeout(()=>n("timedout"),i);o={dispose:()=>clearTimeout(e)}}else o=i.onCancellationRequested(()=>n("timedout"))}})]);return null==r?a:a.then(e=>(e.paused&&setTimeout(()=>r(e),0),e))}async function l(e,t,i,r,n){let l;if(0===e.size)return e;null!=r&&"number"==typeof r&&(r=(l=new o(r)).token);let h=await Promise.all((0,s.UI)(e,([e,s])=>a(s.catch(e=>!t&&e instanceof Error?e:void 0),i,r).then(t=>[e,t])));if(l?.dispose(),null!=n&&h.some(([,e])=>e.paused)){async function c(){let e=new Map;for(let[t,i]of h)e.set(t,{value:i.paused?await i.value:i.value,paused:!1});return e}let e=h.some(([,e])=>e.paused&&"cancelled"===e.reason);n({value:c(),paused:!0,reason:e?"cancelled":"timedout"})}return new Map(h)}async function h(e,t,i,r){let n;if(0===e.size)return e;null!=i&&"number"==typeof i&&(i=(n=new o(i)).token);let l=await Promise.all((0,s.UI)(e,([e,[r,...s]])=>null==r?[e,[void 0,...s]]:a(r.catch(()=>void 0),t,i).then(t=>[e,[t,...s]])));if(n?.dispose(),null!=r&&l.some(([,[e]])=>e?.paused??!1)){async function h(){let e=new Map;for(let[t,[i,...r]]of l)e.set(t,[{value:i?.paused?await i.value:i?.value,paused:!1},...r]);return e}let e=l.some(([,[e]])=>e?.paused&&"cancelled"===e.reason);r({value:h(),paused:!0,reason:e?"cancelled":"timedout"})}return new Map(l)}async function c(e,t,i,r){let s;null!=i&&"number"==typeof i&&(i=(s=new o(i)).token);let n=e.then(e=>null==e?e:h(e,t,i,r));n.then(()=>s?.dispose());let l=await a(e,t,i);return l.paused?{value:n,paused:l.paused,reason:l.reason}:{value:await n,paused:!1}}},9529:(e,t,i)=>{i.d(t,{$$:()=>u,P0:()=>m,SI:()=>p,WD:()=>l,Zv:()=>v,_N:()=>d,b2:()=>y,dO:()=>w,fA:()=>g,j$:()=>f,vg:()=>c,xR:()=>h});var r=i(9496),s=i(5255),n=i(5140),o=i(9701);let a=[];function l(){return e=>{a.push(e)}}function h(e,t,i){return r.commands.registerCommand(e,function(...i){n.W.instance.telemetry.sendEvent("command",{command:e}),t.call(this,...i)},i)}function c(e,t,i){return r.commands.registerCommand(e,function(...i){n.W.instance.telemetry.sendEvent("command",{command:e,webview:(0,o.s4)(i[0])?i[0].webview:"<missing>"}),t.call(this,...i)},i)}function u(e){return a.map(t=>new t(e))}function d(e){return e}function p(e,t){return r.commands.executeCommand(`${s.Gh.ActionPrefix}${e}`,{...t,type:e})}function g(e,t,...i){return{command:e,title:t,arguments:i}}function m(e,...t){return r.commands.executeCommand(e,...t)}function f(e,t,...i){return{command:e,title:t,arguments:i}}function w(e,...t){return"setContext"!=e&&"vscode.executeDocumentSymbolProvider"!==e&&"vscode.diff"!==e&&"vscode.open"!==e&&n.W.instance.telemetry.sendEvent("command/core",{command:e}),r.commands.executeCommand(e,...t)}function v(e,...t){return n.W.instance.telemetry.sendEvent("command/core",{command:e}),r.commands.executeCommand(e,...t)}function y(e,t,i){return r.commands.executeCommand(e,t,i)}},4298:(e,t,i)=>{i.d(t,{n:()=>s});class r{}new class extends r{equals(e,t,i={usePosition:!1}){return e===t||null!=e&&null!=t&&(!i.usePosition||e.viewColumn===t.viewColumn)&&e.document===t.document}};let s=new class extends r{equals(e,t,i={exact:!1}){return e===t||null!=e&&null!=t&&(i.exact?e.toString()===t.toString():e.scheme===t.scheme&&e.fsPath===t.fsPath)}}},5148:(e,t,i)=>{i.d(t,{D:()=>a,V:()=>o});var r=i(9496),s=i(5255),n=i(9967);class o{static configure(e){e.subscriptions.push(r.workspace.onDidChangeConfiguration(a.onConfigurationChanged,a))}_onDidChange=new r.EventEmitter;get onDidChange(){return this._onDidChange.event}_onDidChangeAny=new r.EventEmitter;get onDidChangeAny(){return this._onDidChangeAny.event}onConfigurationChanged(e){this._onDidChangeAny.fire(e),e.affectsConfiguration(s.m1)&&(this._overrides?.onDidChange!=null&&(e=this._overrides.onDidChange(e)),this._onDidChange.fire(e))}_overrides;applyOverrides(e){this._overrides=e}clearOverrides(){null!=this._overrides&&(this._overrides.get=void 0,this._overrides.getAll=void 0,queueMicrotask(()=>this._overrides=void 0))}get(e,t,i,n){let o=void 0===i?r.workspace.getConfiguration(s.m1,t).get(e):r.workspace.getConfiguration(s.m1,t).get(e,i);return n||this._overrides?.get==null?o:this._overrides.get(e,o)}getAll(e){let t=r.workspace.getConfiguration().get(s.m1);return e||this._overrides?.getAll==null?t:this._overrides.getAll(t)}getAny(e,t,i){return void 0===i?r.workspace.getConfiguration(void 0,t).get(e):r.workspace.getConfiguration(void 0,t).get(e,i)}changed(e,t,i){return null==e||(Array.isArray(t)?t.some(t=>e.affectsConfiguration(`${s.m1}.${t}`,i)):e.affectsConfiguration(`${s.m1}.${t}`,i))}changedAny(e,t,i){return null==e||(Array.isArray(t)?t.some(t=>e.affectsConfiguration(t,i)):e.affectsConfiguration(t,i))}inspect(e,t){return r.workspace.getConfiguration(s.m1,t).inspect(void 0===e?s.m1:e)}inspectAny(e,t){return r.workspace.getConfiguration(void 0,t).inspect(e)}isUnset(e,t){let i=this.inspect(e,t);return void 0===i.workspaceFolderValue&&void 0===i.workspaceValue&&void 0===i.globalValue}async migrate(e,t,i){let s=this.inspect(e);if(void 0===s)return!1;let n=!1;return void 0!==s.globalValue&&(await this.update(t,null!=i.migrationFn?i.migrationFn(s.globalValue):s.globalValue,r.ConfigurationTarget.Global),n=!0),void 0!==s.workspaceValue&&(await this.update(t,null!=i.migrationFn?i.migrationFn(s.workspaceValue):s.workspaceValue,r.ConfigurationTarget.Workspace),n=!0),void 0!==s.workspaceFolderValue&&(await this.update(t,null!=i.migrationFn?i.migrationFn(s.workspaceFolderValue):s.workspaceFolderValue,r.ConfigurationTarget.WorkspaceFolder),n=!0),n||void 0===i.fallbackValue||(await this.update(t,i.fallbackValue,r.ConfigurationTarget.Global),n=!0),n}async migrateIfMissing(e,t,i){let s=this.inspect(e);if(void 0===s)return;let n=this.inspect(t);void 0!==s.globalValue&&n?.globalValue===void 0&&await this.update(t,null!=i.migrationFn?i.migrationFn(s.globalValue):s.globalValue,r.ConfigurationTarget.Global),void 0!==s.workspaceValue&&n?.workspaceValue===void 0&&await this.update(t,null!=i.migrationFn?i.migrationFn(s.workspaceValue):s.workspaceValue,r.ConfigurationTarget.Workspace),void 0!==s.workspaceFolderValue&&n?.workspaceFolderValue===void 0&&await this.update(t,null!=i.migrationFn?i.migrationFn(s.workspaceFolderValue):s.workspaceFolderValue,r.ConfigurationTarget.WorkspaceFolder)}matches(e,t,i){return e===t}name(e){return e}update(e,t,i){return r.workspace.getConfiguration(s.m1).update(e,t,i)}updateAny(e,t,i,s){return r.workspace.getConfiguration(void 0,i===r.ConfigurationTarget.Global?void 0:s).update(e,t,i)}updateEffective(e,t){let i=this.inspect(e);return void 0!==i.workspaceFolderValue?t===i.workspaceFolderValue?Promise.resolve(void 0):this.update(e,t,r.ConfigurationTarget.WorkspaceFolder):void 0!==i.workspaceValue?t===i.workspaceValue?Promise.resolve(void 0):this.update(e,t,r.ConfigurationTarget.Workspace):i.globalValue===t||void 0===i.globalValue&&t===i.defaultValue?Promise.resolve(void 0):this.update(e,(0,n.wy)(t,i.defaultValue)?void 0:t,r.ConfigurationTarget.Global)}}let a=new o},2061:(e,t,i)=>{i.d(t,{fw:()=>l,v:()=>h,ve:()=>a});var r=i(9496),s=i(9529);let n=new Map,o=new r.EventEmitter,a=o.event;function l(e,t){return n.get(e)??t}async function h(e,t){n.get(e)!==t&&(n.set(e,t),await (0,s.dO)("setContext",e,t),o.fire(e))}},7512:(e,t,i)=>{let r,s,n,o;i.d(t,{Cz:()=>d,IH:()=>p,Zh:()=>g,hM:()=>f,p6:()=>m});let a=/(?<literal>\[.*?\])|(?<year>YYYY|YY)|(?<month>M{1,4})|(?<day>Do|DD?)|(?<weekday>d{2,4})|(?<hour>HH?|hh?)|(?<minute>mm?)|(?<second>ss?)|(?<fractionalSecond>SSS)|(?<dayPeriod>A|a)|(?<timeZoneName>ZZ?)/g,l=/(?<dateStyle>full|long|medium|short)(?:\+(?<timeStyle>full|long|medium|short))?/,h=[["year",629856e5,31536e6,"yr"],["month",2628e6,2628e6,"mo"],["week",6048e5,6048e5,"wk"],["day",864e5,864e5,"d"],["hour",36e5,36e5,"h"],["minute",6e4,6e4,"m"],["second",1e3,1e3,"s"]],c=new Map,u=new Map;function d(e){s="string"==typeof e?"system"===e||0===e.trim().length?void 0:[e]:e??void 0,n=void 0,o=void 0,c.clear(),u.clear(),r=void 0}function p(e,t){let i=new Date(e.getTime());for(let[e,r]of Object.entries(t))if(r)switch(e){case"years":i.setFullYear(i.getFullYear()+r);break;case"months":i.setMonth(i.getMonth()+r);break;case"days":i.setDate(i.getDate()+r);break;case"hours":i.setHours(i.getHours()+r);break;case"minutes":i.setMinutes(i.getMinutes()+r);break;case"seconds":i.setSeconds(i.getSeconds()+r)}return i}function g(e,t){let i=("number"==typeof e?e:e.getTime())-new Date().getTime();for(let[e,a,l,c]of h){let h=Math.abs(i);if(h>=a||1e3===a){if(t){if(null==r&&(r=null!=o?o.resolvedOptions().locale:null!=n?n.resolvedOptions().locale:(o=new Intl.RelativeTimeFormat(s,{localeMatcher:"best fit",numeric:"always",style:"narrow"})).resolvedOptions().locale),"en"===r||r?.startsWith("en-")){let e=Math.round(h/l);return`${e}${c}`}return null==o&&(o=new Intl.RelativeTimeFormat(s,{localeMatcher:"best fit",numeric:"always",style:"narrow"})),o.format(Math.round(i/l),e)}return null==n&&(n=new Intl.RelativeTimeFormat(s,{localeMatcher:"best fit",numeric:"auto",style:"long"})),n.format(Math.round(i/l),e)}}return""}function m(e,t,i,r=!0){t=t??void 0;let n=`${i??""}:${t}`,o=c.get(n);if(null==o){let e;let h=function(e){if(null==e)return{localeMatcher:"best fit",dateStyle:"full",timeStyle:"short"};let t=l.exec(e);if(t?.groups!=null){let{dateStyle:e,timeStyle:i}=t.groups;return{localeMatcher:"best fit",dateStyle:e||"full",timeStyle:i||void 0}}let i={localeMatcher:"best fit"};for(let{groups:t}of e.matchAll(a))if(null!=t)for(let e in t){let r=t[e];if(null!=r)switch(e){case"year":i.year=4===r.length?"numeric":"2-digit";break;case"month":switch(r.length){case 4:i.month="long";break;case 3:i.month="short";break;case 2:i.month="2-digit";break;case 1:i.month="numeric"}break;case"day":"DD"===r?i.day="2-digit":i.day="numeric";break;case"weekday":switch(r.length){case 4:i.weekday="long";break;case 3:i.weekday="short";break;case 2:i.weekday="narrow"}break;case"hour":i.hour=2===r.length?"2-digit":"numeric",i.hour12="hh"===r||"h"===r;break;case"minute":i.minute=2===r.length?"2-digit":"numeric";break;case"second":i.second=2===r.length?"2-digit":"numeric";break;case"fractionalSecond":i.fractionalSecondDigits=3;break;case"dayPeriod":i.dayPeriod="narrow",i.hour12=!0,i.hourCycle="h12";break;case"timeZoneName":i.timeZoneName=2===r.length?"long":"short"}}return i}(t);e=null==i?s:"system"===i?void 0:[i],o=new Intl.DateTimeFormat(e,h),r&&c.set(n,o)}if(null==t||l.test(t))return o.format(e);let h=o.formatToParts(e);return t.replace(a,(t,n,o,a,l,u,d,p,g,m,f,v,y,b,C)=>{if(null!=n)return n.substring(1,n.length-1);for(let t in C){let n=C[t];if(null==n)continue;let o=h.find(e=>e.type===t);if("Do"===n&&o?.type==="day")return function(e){let t=e%100;return`${e}${w[(t-20)%10]??w[t]??"th"}`}(Number(o.value));if("a"===n&&o?.type==="dayPeriod"){let t=(function(e){let t=`${i??""}:time:${e}`,n=c.get(t);if(null==n){let o;o=null==i?s:"system"===i?void 0:[i],n=new Intl.DateTimeFormat(o,{localeMatcher:"best fit",timeStyle:e}),r&&c.set(t,n)}return n})("short").formatToParts(e).find(e=>"dayPeriod"===e.type);return` ${(t??o)?.value??""}`}return o?.value??""}return""})}function f(e,t,i){let r=("number"==typeof t?t:t.getTime())-("number"==typeof e?e:e.getTime());switch(i){case"days":return Math.floor(r/864e5);case"hours":return Math.floor(r/36e5);case"minutes":return Math.floor(r/6e4);case"seconds":return Math.floor(r/1e3);default:return r}}let w=["th","st","nd","rd"]},5432:(e,t,i)=>{i.d(t,{H:()=>n});var r=i(7469),s=i(9610);function n(e){return(t,i,n)=>{let o;if("function"==typeof n.value?o=n.value:"function"==typeof n.get&&(o=n.get),null==o)throw Error("Not supported");let a=`$gate$${i}`;n.value=function(...t){let i=(0,s.S)(a,e,...t);Object.prototype.hasOwnProperty.call(this,i)||Object.defineProperty(this,i,{configurable:!1,enumerable:!1,writable:!0,value:void 0});let n=this[i];if(void 0===n){let e;try{if(e=o.apply(this,t),null==e||!(0,r.tI)(e))return e;this[i]=n=e.then(e=>(this[i]=void 0,e)).catch(e=>{throw this[i]=void 0,e})}catch(e){throw this[i]=void 0,e}}return n}}}},4241:(e,t,i)=>{i.d(t,{cM:()=>p,fF:()=>d,hJ:()=>u});var r=i(4372),s=i(9796),n=i(4336),o=i(8227),a=i(6004),l=i(7469),h=i(4627);let c=Symbol("logInstanceNameFn");function u(e){return t=>{t[c]=e}}function d(e){return p(e,!0)}function p(e,t=!1){let i,u,d,p;let g=0,m=!1,f=!1,w=!0;null!=e&&({args:i,enter:u,exit:d,prefix:p,logThreshold:g=0,scoped:m=!0,singleLine:f=!1,timed:w=!0}=e),g>0&&(f=!0,w=!0),w&&(m=!0);let v=n.Yd.isDebugging,y=t?n.Yd.debug:n.Yd.log,b=v?"debug":"info";return(e,t,C)=>{let A,P;if("function"==typeof C.value?(A=C.value,P="value"):"function"==typeof C.get&&(A=C.get,P="get"),null==A||null==P)throw Error("Not supported");let D=!1!==i?(0,s.ZS)(A):[];C[P]=function(...e){let s,C;if(!v&&!n.Yd.enabled(b))return A.apply(this,e);let P=(0,a.OD)(),k=this!=null?this.constructor?.[c]?.(this,n.q4(this))??(0,n.q4)(this):void 0,S=k?m?`[${P.toString(16).padStart(5)}] ${k}.${t}`:`${k}.${t}`:t;null!=p&&(S=p({id:P,instance:this,instanceName:k??"",name:t,prefix:S},...e)),m&&(s={scopeId:P,prefix:S},(0,a.DS)(P,s));let R=null!=u?u(...e):"";if(!1===i||0===e.length)C="",f||y.call(n.Yd,`${S}${R}`);else{let t,r,s,o;C="";let a=-1;for(o of e){if(r=D[++a],null!=(t=i?.[a])){if("boolean"==typeof t)continue;if(C.length>0&&(C+=", "),"string"==typeof t){C+=t;continue}s=String(t(o))}else C.length>0&&(C+=", "),s=n.Yd.toLoggable(o);C+=r?`${r}=${s}`:s}f||y.call(n.Yd,C?`${S}${R}(${C})`:`${S}${R}`)}if(f||w||null!=d){let t;let i=w?(0,r.a)():void 0,c=e=>{let t=void 0!==i?` [${(0,h.qk)(i)}ms]`:"";f?n.Yd.error(e,C?`${S}${R}(${C})`:`${S}${R}`,s?.exitDetails?`failed${s.exitDetails}${t}`:`failed${t}`):n.Yd.error(e,S,s?.exitDetails?`failed${s.exitDetails}${t}`:`failed${t}`),m&&(0,a.Fp)(P)};try{t=A.apply(this,e)}catch(e){throw c(e),e}let u=e=>{let t,r,l,c;if(null!=i?(t=(0,h.qk)(i))>o.O?(r=n.Yd.warn,l=` [*${t}ms] (slow)`):(r=y,l=` [${t}ms]`):(l="",r=y),null!=d){if("function"==typeof d)try{c=d(e)}catch(e){c=`@log.exit error: ${e}`}else!0===d&&(c=`returned ${n.Yd.toLoggable(e)}`)}else s?.exitFailed?(c=s.exitFailed,r=n.Yd.error):c="completed";f?(0===g||t>g)&&r.call(n.Yd,C?`${S}${R}(${C}) ${c}${s?.exitDetails||""}${l}`:`${S}${R} ${c}${s?.exitDetails||""}${l}`):r.call(n.Yd,C?`${S}(${C}) ${c}${s?.exitDetails||""}${l}`:`${S} ${c}${s?.exitDetails||""}${l}`),m&&(0,a.Fp)(P)};return null!=t&&(0,l.tI)(t)?t.then(u,c):u(t),t}return A.apply(this,e)}}}},4488:(e,t,i)=>{i.d(t,{H:()=>s});var r=i(9610);function s(e){return(t,i,s)=>{let n,o,a;if("function"==typeof s.value)n=s.value,o="value";else if("function"==typeof s.get)n=s.get,o="get";else throw Error("Not supported");if(null==n)throw Error("Not supported");let l=`$memoize$${i}`;s[o]=function(...t){let i=(0,r.S)(l,e,...t);return Object.prototype.hasOwnProperty.call(this,i)?a=this[i]:(Object.defineProperty(this,i,{configurable:!1,enumerable:!1,writable:!1,value:a=n.apply(this,t)}),a)}}}},9610:(e,t,i)=>{i.d(t,{S:()=>u});var r=i(9496),s=i(5140),n=i(5367),o=i(6450),a=i(9502),l=i(7707);function h(e,t){return""===e||null==t||"object"!=typeof t?t:t instanceof Error?String(t):t instanceof r.Uri?"sha"in t&&t.sha?`${t.sha}:${t.toString()}`:t.toString():(0,n.BF)(t)||(0,o.f_)(t)||(0,a.YR)(t)||(0,l.FZ)(t)?t.toString():(0,s.N)(t)?"<container>":t}function c(...e){if(0===e.length)return"";if(1!==e.length)return JSON.stringify(e,h);let t=e[0];if(null==t)return"";switch(typeof t){case"string":return t;case"number":case"boolean":case"undefined":case"symbol":case"bigint":return String(t);default:if(t instanceof Error)return String(t);if(t instanceof r.Uri){if("sha"in t&&"string"==typeof t.sha&&t.sha)return`${t.sha}:${t.toString()}`;return t.toString()}if((0,n.BF)(t)||(0,o.f_)(t)||(0,a.YR)(t)||(0,l.FZ)(t))return t.toString();if((0,s.N)(t))return"<container>";return JSON.stringify(t,h)}}function u(e,t,...i){let r;if(0===i.length)return e;if(null!=t)try{r=t(...i)}catch{r=c(...i)}else r=c(...i);return`${e}$${r}`}},8786:(e,t,i)=>{function r(e){if(null!=e)return encodeURI(e.replace(/%20/g," "))}i.d(t,{M:()=>r})},2185:(e,t,i)=>{i.d(t,{D$:()=>a,IH:()=>s,ue:()=>o});var r=i(9496);function s(e){return(t,i)=>{let r=e(e=>(r.dispose(),t.call(i,e)));return r}}let n=(e,t)=>t(e);function o(e,t=n){let i,r;let s=!0;return{get pending(){return s},promise:new Promise((n,o)=>{i=()=>{s=!1,i=void 0,o()},r=e(async e=>{try{await t(e,n,o),s=!1}catch(e){s=!1,o(e)}})}).then(e=>(r.dispose(),e),e=>{throw r.dispose(),e}),cancel:()=>i?.()}}function a(e,t,i,s){let n;let o=new WeakRef(i),a=e(e=>{let i=o.deref();null!=i?t.call(i,e):n.dispose()});return n=null==s?a:r.Disposable.from(a,...s)}},1774:(e,t,i)=>{i.d(t,{d:()=>n});var r=i(3700),s=i(4627);function n(e,t){let i=(0,r.M)(e),n=(0,r.EZ)(i);if(t?.truncateTo!=null&&n.length>=t.truncateTo)return(0,s.ro)(n,t.truncateTo);if(t?.suffix){if(null!=t.truncateTo&&n.length+t.suffix.length>=t.truncateTo)return`${(0,s.ro)(n,t.truncateTo-t.suffix.length)}${t.suffix}`;n+=t.suffix}if(t?.fileOnly)return n;let o=(0,r.Fd)(i,t?.relativeTo);return o?(n=`/${n}`,t?.truncateTo!=null&&n.length+o.length>=t.truncateTo)?`${(0,s.AO)(o,t.truncateTo-n.length)}${n}`:`${o}${n}`:n}},9796:(e,t,i)=>{function r(e,t){let i,r,s,n,o;function a(e){let i=e-(r??0);return null==r||i>=t||i<0}function l(){let e=Date.now();a(e)?h():o=setTimeout(l,t-(e-(r??0)))}function h(){return(o=void 0,i)?function(){let t=i,r=s;return i=s=void 0,n=e.apply(r,t)}():(i=s=void 0,n)}function c(...e){let h=Date.now(),u=a(h);return(i=e,s=this,r=h,u&&null==o)?o=setTimeout(l,t):null==o&&(o=setTimeout(l,t)),n}return c.cancel=function(){null!=o&&clearTimeout(o),i=r=s=o=void 0},c.flush=function(){return null!=o?h():n},c.pending=function(){return null!=o},c}i.d(t,{DH:()=>c,Ds:()=>r,IH:()=>h,NX:()=>d,ZS:()=>a,df:()=>u,is:()=>l});let s=/\(([\s\S]*)\)/,n=/(\/\*([\s\S]*?)\*\/|([^:]|^)\/\/(.*)$)/gm,o=/\s?=.*$/;function a(e){if("function"!=typeof e)throw Error("Not supported");if(0===e.length)return[];let t=Function.prototype.toString.call(e),i=(t=(t=t.replace(n,"")||t).slice(0,t.indexOf("{"))).indexOf("("),r=t.indexOf(")");i=i>=0?i+1:0,r=r>0?r:t.indexOf("="),t=t.slice(i,r),t=`(${t})`;let a=s.exec(t);return null!=a?a[1].split(",").map(e=>e.trim().replace(o,"")):[]}function l(e,t,i){return null==t?null!=e:"function"==typeof t?t(e):void 0===i?void 0!==e[t]:e[t]===i}function h(e){let t;let i=!1;return function(...r){return i||(i=!0,t=e.apply(this,r),e=void 0),t}}function c(e,t){let i;return i=setInterval(e,t),{dispose:()=>{null!=i&&(clearInterval(i),i=void 0)}}}async function u(e,t,i){for(let r of t)try{await e.apply(i,r)}catch{}}function d(e,t){return e>=t?e*e+e+t:e+t*t}},3105:(e,t,i)=>{function r(e,t){if(null==e)return 0;let i=0;for(let r of e)(null==t||t(r))&&i++;return i}function*s(e,t){if(void 0===t)for(let t of e)null!=t&&(yield t);else for(let i of e)t(i)&&(yield i)}function*n(e,t){for(let i of e){let e=t(i);null!=e&&(yield e)}}function o(e,t){for(let i of e)if(t(i))return i}function a(e){return e[Symbol.iterator]().next().value}function*l(e,t){for(let i of e)yield*t(i)}function h(e,t){let i=e[Symbol.iterator](),r=i.next();if(r.done)return"";let s=String(r.value);for(;!(r=i.next()).done;)s+=`${t}${r.value}`;return s}function c(e){let t;for(t of e);return t}function*u(e,t){for(let i of e)yield t(i)}function d(e,t){let i=Number.POSITIVE_INFINITY;if(null==t)for(let t of e)t<i&&(i=t);else for(let r of e){let e=t(r);e<i&&(i=e)}return i}function p(e,t){for(let i of e)if(t(i))return!0;return!1}function g(e,t,i){let r=new Map;for(let s of e){let e=t(s),n=r.get(e);if(void 0===n)r.set(e,s);else{let t=i(n,s);void 0!==t&&r.set(e,t)}}return r.values()}i.d(t,{DZ:()=>n,G:()=>p,Ps:()=>a,QX:()=>r,UI:()=>u,VS:()=>l,VV:()=>d,Z$:()=>c,hX:()=>s,sE:()=>o,uw:()=>g,v_:()=>h})},8227:(e,t,i)=>{i.d(t,{O:()=>r});let r=500},6004:(e,t,i)=>{i.d(t,{DS:()=>h,Fp:()=>n,OD:()=>l,QR:()=>a,UH:()=>o,lH:()=>c});let r=new Map,s=0;function n(e){r.delete(e)}function o(){return r.get(s)}function a(e,t){if(null!=t)return{scopeId:t.scopeId,prefix:`${t.prefix}${e}`};let i=l();return{scopeId:i,prefix:`[${String(i).padStart(5)}] ${e}`}}function l(){return 1073741824===s&&(s=0),++s}function h(e,t){r.set(e,t)}function c(e,t,i){null!=e&&(e.exitDetails=t,null!=i&&(e.exitFailed=i))}},4336:(e,t,i)=>{i.d(t,{Nu:()=>l,Yd:()=>n,q4:()=>a});var r,s=((r=s||{})[r.Off=0]="Off",r[r.Error=1]="Error",r[r.Warn=2]="Warn",r[r.Info=3]="Info",r[r.Debug=4]="Debug",r);let n=new class{output;provider;configure(e,t,i=!1){this.provider=e,this._isDebugging=i,this.logLevel=t}enabled(e){return this.level>=o(e)}_isDebugging=!1;get isDebugging(){return this._isDebugging}level=0;_logLevel="off";get logLevel(){return this._logLevel}set logLevel(e){this._logLevel=e,this.level=o(this._logLevel),"off"===e?(this.output?.dispose?.(),this.output=void 0):this.output=this.output??this.provider.createChannel(this.provider.name)}get timestamp(){return`[${new Date().toISOString().replace(/T/," ").slice(0,-1)}]`}debug(e,...t){let i;(!(this.level<4)||this.isDebugging)&&("string"==typeof e?i=e:(i=t.shift(),null!=e&&(i=`${e.prefix} ${i??""}`)),this.isDebugging&&console.log(this.timestamp,`[${this.provider.name}]`,i??"",...t),null==this.output||this.level<4||this.output.appendLine(`${this.timestamp} ${i??""}${this.toLoggableParams(!0,t)}`))}error(e,t,...i){let r;if(!(this.level<1)||this.isDebugging){if(null==(r=null==t||"string"==typeof t?t:`${t.prefix} ${i.shift()??""}`)){let t=e instanceof Error?e.stack:void 0;if(t){let e=/.*\s*?at\s(.+?)\s/.exec(t);null!=e&&(r=e[1])}}this.isDebugging&&(null!=e?console.error(this.timestamp,`[${this.provider.name}]`,r??"",...i,e):console.error(this.timestamp,`[${this.provider.name}]`,r??"",...i)),null==this.output||this.level<1||this.output.appendLine(`${this.timestamp} ${r??""}${this.toLoggableParams(!1,i)}${null!=e?`
${String(e)}`:""}`)}}log(e,...t){let i;(!(this.level<3)||this.isDebugging)&&("string"==typeof e?i=e:(i=t.shift(),null!=e&&(i=`${e.prefix} ${i??""}`)),this.isDebugging&&console.log(this.timestamp,`[${this.provider.name}]`,i??"",...t),null==this.output||this.level<3||this.output.appendLine(`${this.timestamp} ${i??""}${this.toLoggableParams(!1,t)}`))}warn(e,...t){let i;(!(this.level<2)||this.isDebugging)&&("string"==typeof e?i=e:(i=t.shift(),null!=e&&(i=`${e.prefix} ${i??""}`)),this.isDebugging&&console.warn(this.timestamp,`[${this.provider.name}]`,i??"",...t),null==this.output||this.level<2||this.output.appendLine(`${this.timestamp} ${i??""}${this.toLoggableParams(!1,t)}`))}showOutputChannel(e){this.output?.show?.(e)}toLoggable(e,t){if("object"!=typeof e)return String(e);if(Array.isArray(e))return`[${e.map(e=>this.toLoggable(e,t)).join(", ")}]`;let i=this.provider.toLoggable?.(e);if(null!=i)return i;try{return JSON.stringify(e,t)}catch{return"<error>"}}toLoggableParams(e,t){if(0===t.length||e&&this.level<4&&!this.isDebugging)return"";let i=t.map(e=>this.toLoggable(e)).join(", ");return 0!==i.length?` \u2014 ${i}`:""}};function o(e){switch(e){case"off":default:return 0;case"error":return 1;case"warn":return 2;case"info":return 3;case"debug":return 4}}function a(e){let t;if("function"==typeof e){if(e.prototype?.constructor==null)return e.name;t=e.prototype.constructor.name??""}else t=e.constructor?.name??"";let i=t.indexOf("_");return -1===i?t:t.substr(i+1)}let l={enabled:e=>n.enabled(e)||n.isDebugging,log:(e,t,i,...r)=>{switch(e){case"error":n.error("",t,i,...r);break;case"warn":n.warn(t,i,...r);break;case"info":n.log(t,i,...r);break;default:n.debug(t,i,...r)}}}},9967:(e,t,i)=>{function r(e,t){if(e===t)return!0;if(null==e||null==t)return!1;let i=typeof e;return(i!==typeof t||"string"!==i&&"number"!==i&&"boolean"!==i)&&JSON.stringify(e)===JSON.stringify(t)}function s(e,t){let i=t?.skipPaths?.length?t?.prefix?t.skipPaths.map(e=>`${t.prefix}.${e}`):t.skipPaths:void 0,r=t?.skipNulls??!1,s=t?.stringify??!1,n=Object.create(null);return!function e(n,o,a){if(!i?.includes(o)){if(Object(a)!==a)null==a?r||(n[o]=s?"all"==s?JSON.stringify(a):a??null:a):"string"==typeof a?n[o]=a:s?n[o]="number"==typeof a||"boolean"==typeof a?a:JSON.stringify(a):n[o]=a;else if(Array.isArray(a)){let i=a.length;if(0===i)return;if(t?.arrays==="join")n[o]=a.join(",");else for(let t=0;t<i;t++)e(n,`${o}[${t}]`,a[t])}else{let t=Object.entries(a);if(0===t.length)return;for(let[i,r]of t)e(n,o?`${o}.${i}`:i,r)}}}(n,t?.prefix??"",e),n}function n(e,t,i){if(null==e&&(e=Object.create(null)),null!=i&&("boolean"!=typeof i||i))"object"==typeof i?e[t]={...i}:e[t]=i;else{let{[t]:i,...r}=e;e=r}return e}i.d(t,{iC:()=>n,wy:()=>r,xH:()=>s})},5116:(e,t,i)=>{i.d(t,{X:()=>r});class r{constructor(e){this.fetch=e}cached;async *values(){if(null!=this.cached)for(let e of this.cached.values)yield e;let e=this.cached;for(;null==e||e.paging?.more;)for(let t of(e=await this.fetch(e?.paging),null==this.cached?this.cached=e:(this.cached.values.push(...e.values),this.cached.paging=e.paging),e.values))yield t}}},3700:(e,t,i)=>{i.d(t,{AH:()=>C,B9:()=>g,DZ:()=>r.extname,EZ:()=>r.basename,Fd:()=>D,Gf:()=>P,IC:()=>d,M:()=>m,Mh:()=>y,QY:()=>A,RQ:()=>r.join,SG:()=>w,UG:()=>f,XX:()=>r.dirname,YP:()=>v,tD:()=>p,tE:()=>b,uo:()=>k});var r=i(1017),s=i(9496),n=i(7338),o=i(5255);let a=/(?<=^\/?)([A-Z])(?=:\/)/,l=/^([a-zA-Z][\w+.-]+):/,h=/\\/g,c=/^[/|\\]~(?:\d+?|external)(?:[/|\\]|$)/,u=/^[/|\\]~(?:\d+?|external)(?:[/|\\]|$)/;function d(e){var t,i;if("string"==typeof e&&b(e)&&(e=s.Uri.parse(e)),"string"==typeof e)return(t=e,c.test(t))?e:(e=C(e),`/~0${47===e.charCodeAt(0)?e:`/${e}`}`);let r=e.fsPath;return(i=r,c.test(i))?e:(r=C(r),e.with({path:`/~0${47===r.charCodeAt(0)?r:`/${r}`}`}))}function p(e){return u.test(e)}function g(e,t,i,r){let s;if(0===e.length||0===t.length)return 0;(r??!n.IJ)&&(e=e.toLowerCase(),t=t.toLowerCase());let o=0;for(let r=0;r<e.length&&(s=e[r])===t[r];r++)s===i&&(o=r);return o}function m(e){if("string"==typeof e){if(!l.test(e))return C(e);e=s.Uri.parse(e,!0)}return C(e.scheme===o.sN.File?e.fsPath:e.path)}function f(e){return l.exec(e)?.[1]}function w(e,t){return("string"==typeof t&&47!==(t=C(t)).charCodeAt(0)&&(t=`/${t}`),"string"==typeof e&&47!==(e=C(e)).charCodeAt(0)&&(e=`/${e}`),"string"==typeof t)?1===t.length||("string"==typeof e?e:e.path).startsWith(47===t.charCodeAt(t.length-1)?t:`${t}/`):"string"==typeof e?1===t.path.length||e.startsWith(47===t.path.charCodeAt(t.path.length-1)?t.path:`${t.path}/`):t.scheme===e.scheme&&t.authority===e.authority&&(1===t.path.length||e.path.startsWith(47===t.path.charCodeAt(t.path.length-1)?t.path:`${t.path}/`))}function v(e){return!b(e)&&(0,r.isAbsolute)(e)}function y(e){return"*"===(0,r.basename)(e)}function b(e){return l.test(e)}function C(e){return e&&(47!==(e=e.replace(h,"/")).charCodeAt(e.length-1)||n.ED&&3===e.length&&":"===e[1]||(e=e.slice(0,-1)),n.ED&&(e=e.replace(a,e=>e.toLowerCase()))),e}function A(e,t,i){return(i||null==i&&!n.IJ)&&(e=e.toLowerCase(),t=t.toLowerCase()),C(e)===C(t)}function P(e,t,i){e=l.test(e)?s.Uri.parse(e,!0).path:C(e),t=l.test(t)?s.Uri.parse(t,!0).path:C(t);let r=g(`${t}/`,`${e}/`,"/",i);return r>0?t.substring(r+1):t}function D(e,t){let i=(0,r.dirname)(e);if(!i||"."===i||i===t)return"";if(!t)return i;let[s]=k(i,t);return s}function k(e,t,i=!1,n){if(e=m(e),t){let i;t=l.test(t)?m(i=s.Uri.parse(t,!0)):C(t);let r=g(`${t}/`,`${e}/`,"/",n);r>0?(t=e.substring(0,r),e=e.substring(r+1)):47===e.charCodeAt(0)&&(e=e.slice(1)),null!=i&&(t=i.with({path:t}).toString())}else t=C(i?(0,r.dirname)(e):""),e=i?(0,r.basename)(e):e;return[e,t]}},7469:(e,t,i)=>{function r(...e){return new Promise((t,i)=>{let r,s=!1,n=e=>{s=!0,t(e)},o=t=>{!s&&(null==r?r=[t]:r.push(t),e.length-r.length<1&&i(new p(r)))};for(let t of e)t.then(n,o)})}async function*s(e){let t=new Map(e.map((e,t)=>[t,e.then(e=>({index:t,value:e,status:"fulfilled"}),e=>({index:t,reason:e,status:"rejected"}))]));for(;t.size;){let e=await Promise.race(t.values());t.delete(e.index),yield e}}i.d(t,{Dc:()=>u,HO:()=>o,PK:()=>n,PQ:()=>a,Sb:()=>h,Yj:()=>r,ag:()=>d,rX:()=>s,tI:()=>c,xy:()=>l});class n extends Error{constructor(e,t){super(t),this.promise=e}}function o(e,t,i,r){return null==t&&null==i?e:new Promise((s,o)=>{let a,l,h=!1,c=t=>{a?.dispose(),l?.dispose(),h||(r?.onDidCancel!=null?r.onDidCancel(s,o,t):o(new n(e,r?.cancelMessage??("cancelled"===t?"CANCELLED":"TIMED OUT"))))};if(a=i?.onCancellationRequested(()=>c("cancelled")),null!=t){if("number"==typeof t){let e=setTimeout(()=>c("timedout"),t);l={dispose:()=>clearTimeout(e)}}else l=t.onCancellationRequested(()=>c("timedout"))}e.then(()=>{h=!0,a?.dispose(),l?.dispose(),s(e)},e=>{h=!0,a?.dispose(),l?.dispose(),o(e)})})}function a(){let e={pending:!0,promise:void 0,fulfill:void 0,cancel:void 0};return e.promise=new Promise((t,i)=>{e.fulfill=function(i){e.pending=!1,t(i)},e.cancel=function(){e.pending=!1,i()}}),e}function l(e){return e?.pending?e.promise:void 0}function h(e,t){return e?.status==="fulfilled"?e.value:t}function c(e){return null!=e&&(e instanceof Promise||"function"==typeof e?.then)}function u(e){return new Promise(t=>setTimeout(t,e))}function d(){return new Promise(e=>queueMicrotask(e))}class p extends Error{constructor(e){super(`AggregateError(${e.length})
${e.map(e=>`	${String(e)}`).join("\n")}`),this.errors=e,Error.captureStackTrace?.(this,p)}}},6398:(e,t,i)=>{i.d(t,{k:()=>a,u:()=>o});var r=i(4372),s=i(4336),n=i(6004);Symbol.dispose??=Symbol("Symbol.dispose"),Symbol.asyncDispose??=Symbol("Symbol.asyncDispose");class o{logScope;logLevel;logProvider;_time;get startTime(){return this._time}_stopped=!1;constructor(e,t,...i){let o;if(this.logScope=null!=e&&"string"!=typeof e?e:(0,n.QR)(e??""),o="boolean"==typeof t?.log?t.log?{}:void 0:t?.log??{},this.logLevel=t?.logLevel??"info",this.logProvider=t?.provider??s.Nu,this._time=(0,r.a)(),null!=o){if(!this.logProvider.enabled(this.logLevel))return;i.length?this.logProvider.log(this.logLevel,this.logScope,`${o.message??""}${o.suffix??""}`,...i):this.logProvider.log(this.logLevel,this.logScope,`${o.message??""}${o.suffix??""}`)}}[Symbol.dispose](){this.stop()}elapsed(){let[e,t]=(0,r.a)(this._time);return 1e3*e+Math.floor(t/1e6)}log(e){this.logCore(e,!1)}restart(e){this.logCore(e,!0),this._time=(0,r.a)(),this._stopped=!1}stop(e){this._stopped||(this.restart(e),this._stopped=!0)}logCore(e,t){if(!this.logProvider.enabled(this.logLevel))return;if(!t){this.logProvider.log(this.logLevel,this.logScope,`${e?.message??""}${e?.suffix??""}`);return}let[i,s]=(0,r.a)(this._time),n=1e3*i+Math.floor(s/1e6),o=e?.message??"";this.logProvider.log(n>250?"warn":this.logLevel,this.logScope,`${o?`${o} `:""}[${n}ms]${e?.suffix??""}`)}}function a(e,t,...i){return(t?.provider??s.Nu).enabled(t?.logLevel??"info")?new o(e,t,...i):void 0}},4627:(e,t,i)=>{let r,s,n;i.d(t,{US:()=>l,kC:()=>h,zY:()=>c,TT:()=>p,j_:()=>g,QC:()=>V,se:()=>m,qq:()=>u,ry:()=>C,yI:()=>P,qk:()=>D,UM:()=>k,sC:()=>R,Gg:()=>F,dz:()=>Y,sX:()=>x,Qu:()=>T,vk:()=>B,Q_:()=>U,eh:()=>W,_6:()=>M,dm:()=>d,pW:()=>L,$G:()=>N,AO:()=>H,ro:()=>G,I6:()=>A});var o=i(4372),a=i(5255);function l(e){return Buffer.from(e).toString("base64")}function h(e){return`${e[0].toLocaleUpperCase()}${e.slice(1)}`}function c(e,t){null==r&&(r=new Intl.Collator(void 0,{sensitivity:"accent"}));let i=r.compare(e,t);return 0===i?0:i>0?1:-1}function u(e,t){return null==e&&null==t||null!=e&&null!=t&&0===c(e,t)}function d(e,t){return null==s&&(s=new Intl.Collator(void 0,{numeric:!0,sensitivity:"base"})),s.compare(e,t)}function p(e,t,i=0,r=e.length,s=0,n=t.length){for(;i<r&&s<n;i++,s++){let r=e.charCodeAt(i),n=t.charCodeAt(s);if(r<n)return -1;if(r>n)return 1}let o=r-i,a=n-s;return o<a?-1:o>a?1:0}function g(e,t,i=0,r=e.length,s=0,n=t.length){for(;i<r&&s<n;i++,s++){let o=e.charCodeAt(i),a=t.charCodeAt(s);if(o===a)continue;let l=o-a;if(!(32===l&&E(a))&&!(-32===l&&E(o))){if(O(o)&&O(a))return l;return p(e.toLowerCase(),t.toLowerCase(),i,r,s,n)}}let o=r-i,a=n-s;return o<a?-1:o>a?1:0}function m(e){return e?.replace(/[<>&"]/g,e=>{switch(e){case"<":return"&lt;";case">":return"&gt;";case"&":return"&amp;";case'"':return"&quot;";default:return e}})}let f=/[\\`*_{}[\]()#+\-.!]/g,w=/\\([\\`*_{}[\]()#+\-.!])/g,v=/^===/gm,y=/^\u200b===/gm,b=/\r?\n/g;function C(e,t={}){return(e=e.replace(f,"\\$&").replace(v,"​==="),t.quoted)?e.trim().replace(b,"	\\\n>  "):e}function A(e){return e.replace(w,"$1").replace(y,"===")}function P(e){return e.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&")}function D(e){let[t,i]=(0,o.a)(e);return 1e3*t+Math.floor(i/1e6)}function*k(e,t="\n"){let i;if("string"==typeof e){let i=0;for(;i<e.length;){let r=e.indexOf(t,i);-1===r&&(r=e.length),yield e.substring(i,r),i=r+1}return}let r=0;for(let s of e){r++,i&&(s=i+s,i=void 0);let n=0;for(;n<s.length;){let o=s.indexOf(t,n);if(-1===o){if(r===e.length)o=s.length;else{i=s.substring(n);break}}yield s.substring(n,o),n=o+1}}}let S=["¹","²","³","⁴","⁵","⁶","⁷","⁸","⁹"];function R(e){return S[e-1]??""}let $=/\$\{(?:'.*?[^\\]'|\W*)?(\w*?)(?:'.*?[^\\]'|[\W\d]*)\}/g,_=new Map;function I(e){return 95===e||e>=97&&e<=122||e>=65&&e<=90||e>=48&&e<=57}function F(e){let t=_.get(e);if(null!=t)return t;t=[];let i=e.length,r=0;for(;r<i;){let i=e.indexOf("${",r);if(-1===i)break;let s=e.indexOf("}",i);if(-1===s)break;let n=i+2,o="",a="",l="",h=!1,c="right",u="";if("'"===e[n]){let t=++n;if(-1===(n=e.indexOf("'",n)))break;t!==n&&(a=e.slice(t,n)),n++}else if(!I(e.charCodeAt(n))){let t=n++;for(;n<s&&!I(e.charCodeAt(n));)n++;t!==n&&(a=e.slice(t,n))}for(;n<s;){let t=e.charCodeAt(n);if(I(t))o+=e[n++];else{if(124!==t)break;for(;n<s;){if((t=e.charCodeAt(++n))>=48&&t<=57){l+=e[n];continue}63===t?(h=!0,n++):45===t&&(c="left",n++);break}}}if(n<s){if("'"===e[n]){let t=++n;if(-1===(n=e.indexOf("'",n)))break;t!==n&&(u=e.slice(t,n)),n++}else if(!I(e.charCodeAt(n))){let t=n++;for(;n<s&&!I(e.charCodeAt(n));)n++;t!==n&&(u=e.slice(t,n))}}r=s+1,t.push({key:o,start:i,end:r,options:{prefix:a||void 0,suffix:u||void 0,truncateTo:l?parseInt(l,10):void 0,collapseWhitespace:h,padDirection:c}})}return _.set(e,t),t}function x(e,t){if(null==e||0===e.length)return e;if(null==t)return e.replace($,"");let i=F(e);if(0===i.length)return e;let r=0,s="";for(let n of i)s+=e.slice(r,n.start)+(t[n.key]??""),r=n.end;return r<e.length&&(s+=e.slice(r)),s}async function T(e,t){let i;if(null==e||0===e.length)return e;if(null==t)return e.replace($,"");let r=F(e);if(0===r.length)return e;let s=0,n="";for(let o of r)null!=(i=t[o.key])&&"object"==typeof i&&"function"==typeof i.then&&(i=await i),n+=e.slice(s,o.start)+(i??""),s=o.end;return s<e.length&&(n+=e.slice(s)),n}function O(e){return e>=a.mN.a&&e<=a.mN.z}function E(e){return e>=a.mN.A&&e<=a.mN.Z}function B(e,t=0,i=0,r=" "){return 0===t&&0===i?e:`${0===t?"":r.repeat(t)}${e}${0===i?"":r.repeat(i)}`}function U(e,t,i=" ",r){let s=t-(r??Y(e));return s<=0?e:i.repeat(s)+e}function W(e,t,i=" ",r){let s=t-(r??Y(e));return s<=0?e:e+i.repeat(s)}function M(e,t,i){if(null==i)return`${t} ${e}${1===t?"":"s"}`;let r=1===t?e:i.plural??`${e}s`;return i.only?r:`${0===t?i.zero??t:i.format?.(t)??t}${i.infix??" "}${r}`}function L(e,t){let i=e.indexOf(t);if(-1===i)return[e];let r=e.substring(0,i),s=e.substring(i+t.length);return null!=s?[r,s]:[r]}function N(e,t,i="…",r){if(!e)return e;if(t<=1)return i;if((r=r??Y(e))<=t)return e;if(r===e.length)return`${e.substring(0,t-1)}${i}`;let s=Math.floor(t/(r/e.length)),n=Y(e.substring(0,s));for(;n<t;)n+=Y(e[s++]);return n>=t&&s--,`${e.substring(0,s)}${i}`}function H(e,t,i="…",r){if(!e)return e;if(t<=1)return i;if((r=r??Y(e))<=t)return e;if(r===e.length)return`${i}${e.substring(r-t)}`;let s=Math.floor(t/(r/e.length)),n=Y(e.substring(0,s));for(;n<t;)n+=Y(e[s++]);return n>=t&&s--,`${i}${e.substring(e.length-s)}`}function G(e,t,i="…"){if(!e)return e;if(t<=1)return i;let r=Y(e);return r<=t?e:`${e.slice(0,Math.floor(t/2)-1)}${i}${e.slice(r-Math.ceil(t/2))}`}let q=/[^\x20-\x7F\u00a0\u2026]/;function Y(e){if(null==e||0===e.length)return 0;if(!q.test(e))return e.length;if(null==n&&(n=function({onlyFirst:e=!1}={}){return RegExp("[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)|(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))",e?void 0:"g")}()),0===(e=e.replace(n,"")).length)return 0;let t=0,i=0,r=0,s=[...e];for(let e=0;e<s.length;e++){let n=s[e].codePointAt(0);if(!(n<=31)&&(!(n>=127)||!(n<=159))&&(!(n>=768)||!(n<=879))){if(n>=128512&&n<=128591||n>=127744&&n<=128511||n>=128640&&n<=128767||n>=9728&&n<=9983||n>=9984&&n<=10175||n>=65024&&n<=65039||n>=129280&&n<=129535||n>=65024&&n<=65039||n>=8400&&n<=8447){if(n>=127995&&n<=127999)continue;i++,t+=2;continue}if(8205===n){r++,t-=2;continue}n>65535&&e++,t+=n>=4352&&(n<=4447||9001===n||9002===n||n>=11904&&n<=12871&&12351!==n||n>=12880&&n<=19903||n>=19968&&n<=42182||n>=43360&&n<=43388||n>=44032&&n<=55203||n>=63744&&n<=64255||n>=65040&&n<=65049||n>=65072&&n<=65131||n>=65281&&n<=65376||n>=65504&&n<=65510||n>=110592&&n<=110593||n>=127488&&n<=127569||n>=131072&&n<=262141)?2:1}}let o=i-r;return o>1&&(t+=o-1),t}let j={};function V(e){return null==e||""===e?"":function(e,t,i){let r,s,n,o,a,l,h;let c=[],u=4,d=4,p=3,g="",m=[],f={val:i(0),position:t,index:1};for(r=0;r<3;r+=1)c[r]=r;for(n=0,a=4,l=1;l!=a;)o=f.val&f.position,f.position>>=1,0==f.position&&(f.position=t,f.val=i(f.index++)),n|=(o>0?1:0)*l,l<<=1;let w=String.fromCharCode;switch(n){case 0:for(n=0,a=256,l=1;l!=a;)o=f.val&f.position,f.position>>=1,0==f.position&&(f.position=t,f.val=i(f.index++)),n|=(o>0?1:0)*l,l<<=1;h=w(n);break;case 1:for(n=0,a=65536,l=1;l!=a;)o=f.val&f.position,f.position>>=1,0==f.position&&(f.position=t,f.val=i(f.index++)),n|=(o>0?1:0)*l,l<<=1;h=w(n);break;case 2:return""}for(c[3]=h,s=h,m.push(h);;){if(f.index>e)return"";for(n=0,a=Math.pow(2,p),l=1;l!=a;)o=f.val&f.position,f.position>>=1,0==f.position&&(f.position=t,f.val=i(f.index++)),n|=(o>0?1:0)*l,l<<=1;switch(h=n){case 0:for(n=0,a=256,l=1;l!=a;)o=f.val&f.position,f.position>>=1,0==f.position&&(f.position=t,f.val=i(f.index++)),n|=(o>0?1:0)*l,l<<=1;c[d++]=w(n),h=d-1,u--;break;case 1:for(n=0,a=65536,l=1;l!=a;)o=f.val&f.position,f.position>>=1,0==f.position&&(f.position=t,f.val=i(f.index++)),n|=(o>0?1:0)*l,l<<=1;c[d++]=w(n),h=d-1,u--;break;case 2:return m.join("")}if(0==u&&(u=Math.pow(2,p),p++),c[h])g=c[h];else{if(h!==d)return;g=s+s.charAt(0)}m.push(g),c[d++]=s+g.charAt(0),u--,s=g,0==u&&(u=Math.pow(2,p),p++)}}(e.length,32,t=>(function(e,t){if(!j[e]){j[e]={};for(let t=0;t<e.length;t++)j[e][e.charAt(t)]=t}return j[e][t]})("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",e.charAt(t)))??""}},1526:(e,t,i)=>{i.d(t,{QF:()=>a,bM:()=>h,u$:()=>d});var r=i(7338),s=i(3105),n=i(3700);function o(e){return 47===(e=(0,n.AH)(e)).charCodeAt(0)&&(e=e.slice(1)),e}class a{constructor(e){this.normalize=e,this.trie=new h}trie;clear(){this.trie.clear()}delete(e,t=!0){let{path:i,ignoreCase:r}=this.normalize(e);return this.trie.delete(i,r,t)}get(e){let{path:t,ignoreCase:i}=this.normalize(e);return this.trie.get(t,i)}getChildren(e){let{path:t,ignoreCase:i}=this.normalize(e);return this.trie.getChildren(t,i)}getClosest(e,t,i){let{path:r,ignoreCase:s}=this.normalize(e);return this.trie.getClosest(r,t,i,s)}getDescendants(e,t){if(null==e)return this.trie.getDescendants();let{path:i,ignoreCase:r}=this.normalize(e);return this.trie.getDescendants(i,t,r)}has(e){let{path:t,ignoreCase:i}=this.normalize(e);return this.trie.has(t,i)}set(e,t){let{path:i,ignoreCase:r}=this.normalize(e);return this.trie.set(i,t,r)}}class l{constructor(e){this.path=e}value;children}class h{constructor(e=o){this.normalize=e,this.root=new l("")}root;clear(){this.root.children=void 0}delete(e,t,i=!0){let s,n;for(let i of(e=this.normalize(e),t=t??!r.IJ,e.split("/"))){let e=(s??this.root).children?.get(t?i.toLowerCase():i);if(null==e)return!1;n=s??this.root,s=e}return!!s?.value&&(i&&c(s.value),s.value=void 0,(null==s.children||0===s.children.size)&&n?.children!=null&&(n.children.delete(t?s.path.toLowerCase():s.path),0===n.children.size&&(n.children=void 0)),!0)}get(e,t){return this.getCore(e,t)}getCore(e,t){let i;for(let s of(e=this.normalize(e),t=t??!r.IJ,e.split("/"))){let e=(i??this.root).children?.get(t?s.toLowerCase():s);if(null==e)return;i=e}return i?.value}getChildren(e,t){let i;if(e=this.normalize(e),t=t??!r.IJ,e)for(let r of e.split("/")){let e=(i??this.root).children?.get(t?r.toLowerCase():r);if(null==e)return[];i=e}else i=this.root;return i?.children==null?[]:[...(0,s.DZ)(i.children.values(),e=>e.value||void 0)]}getClosest(e,t,i,s){let n,o;for(let t of(e=this.normalize(e),s=s??!r.IJ,e.split("/"))){n?.value&&(!i||i?.(n.value))&&(o=n);let e=(n??this.root).children?.get(s?t.toLowerCase():t);if(null==e)break;n=e}return!t&&n?.value&&(!i||i?.(n.value))?n.value:o?.value}*getDescendants(e,t,i){let s;e=e?this.normalize(e):"",i=i??!r.IJ;let n="";if(e)for(let t of e.split("/")){let e=(s??this.root).children?.get(i?t.toLowerCase():t);if(null==e)return;s=e,n+=`${e.path}/`}else s=this.root;s?.children!=null&&(yield*function* e(i,r,s){for(let n of i.values()){let i=r?`${r}/${n.path}`:n.path;n.value&&(!t||t?.(n.value))&&(yield n.value),null!=n.children&&(yield*e(n.children,i,s))}}(s.children,"",n))}has(e,t){return null!=this.getCore(e,t)}set(e,t,i){e=this.normalize(e),i=i??!r.IJ;let s=this.root;for(let t of e.split("/")){let e=i?t.toLowerCase():t,r=s.children?.get(e);null==r&&(null==s.children&&(s.children=new Map),r=new l(t),s.children.set(e,r)),s=r}let n=null==s.value;return n||s.value===t||c(s.value),s.value=t,n}}function c(e){null!=e&&"object"==typeof e&&"dispose"in e&&"function"==typeof e.dispose&&e.dispose()}class u{constructor(e){this.path=e}children}class d{constructor(e=o){this.normalize=e,this.root=new u("")}root;clear(){this.root.children=void 0}has(e,t){let i;for(let s of(e=this.normalize(e),t=t??!r.IJ,e.split("/"))){let e=(i??this.root).children?.get(t?s.toLowerCase():s);if(null==e)return!1;i=e}return null!=i}set(e,t){e=this.normalize(e),t=t??!r.IJ;let i=this.root;for(let r of e.split("/")){let e=t?r.toLowerCase():r,s=i.children?.get(e);null==s&&(null==i.children&&(i.children=new Map),s=new u(r),i.children.set(e,s)),i=s}}}},2509:(e,t,i)=>{i.d(t,{$S:()=>v,$_:()=>p,$o:()=>y,GC:()=>b,GR:()=>d,JM:()=>w,PH:()=>A,_L:()=>g,aW:()=>m,bM:()=>P,gn:()=>R,hE:()=>f,ic:()=>k,lN:()=>D,pt:()=>C,qM:()=>S,s5:()=>u});var r=i(9496),s=i(5255),n=i(7462),o=i(9529),a=i(5148),l=i(4336),h=i(3700),c=i(4550);function u(e){let t=e.toString();return r.workspace.textDocuments.find(e=>e.uri.toString()===t)}async function d(e,t){let i=function(e){let t=r.window.activeTextEditor,i=e.toString();for(let e of[...null!=t?[t]:[],...r.window.visibleTextEditors])if(e.document.uri.toString()===i&&e?.viewColumn!=null)return e}(e);return null!=i?(t?.preserveFocus||await r.window.showTextDocument(i.document,{...t,viewColumn:i.viewColumn}),i):P(e,{viewColumn:r.window.activeTextEditor?.viewColumn,...t})}function p(e){let t=new Map(e.map(e=>[e.toString(),e]));for(let e of r.window.visibleTextEditors)e?.viewColumn!=null&&t.delete(e.document.uri.toString());for(let e of t.values())(0,o.dO)("vscode.open",e,{background:!0,preview:!1})}function g(){let e;switch(r.env.appName){case"Visual Studio Code - Insiders":e="code-insiders --wait --reuse-window";break;case"Visual Studio Code - Exploration":e="code-exploration --wait --reuse-window";break;case"VSCodium":e="codium --wait --reuse-window";break;default:e="code --wait --reuse-window"}return e}function m(e){let t=r.window.activeTextEditor;return null!=t&&t.document===e?t:void 0}function f(){return!a.D.get("advanced.quickPick.closeOnFocusOut")}function w(e){if(0===r.window.visibleTextEditors.length)return!1;if(null==e)return r.window.visibleTextEditors.some(e=>A(e));let t=e.toString();return r.window.visibleTextEditors.some(e=>e.document.uri.toString()===t&&A(e))}function v(e){let t=r.window.activeTextEditor;return null!=t&&t.document===e}function y(e){return e.kind===r.ColorThemeKind.Dark||e.kind===r.ColorThemeKind.HighContrast}function b(e){return e.kind===r.ColorThemeKind.Light||e.kind===r.ColorThemeKind.HighContrastLight}function C(e){return e.scheme===s.sN.Virtual||e.scheme===s.sN.GitHub}function A(e){let t=e.document.uri.scheme;return t!==s.sN.DebugConsole&&t!==s.sN.Output&&t!==s.sN.Terminal}async function P(e,t={}){let{rethrow:i,...a}=t;try{if((0,n.uy)(e)&&(e=e.documentUri()),e.scheme===s.sN.GitLens&&s.ZY[(0,h.DZ)(e.fsPath)]){await (0,o.dO)("vscode.open",e);return}let t=await r.workspace.openTextDocument(e);return r.window.showTextDocument(t,{preserveFocus:!1,preview:!0,viewColumn:r.ViewColumn.Active,...a})}catch(t){if((t?.toString()??"").includes("File seems to be binary and cannot be opened as text")){await (0,o.dO)("vscode.open",e);return}if(i)throw t;l.Yd.error(t,"openEditor");return}}async function D(e,t,i,s=!0){s&&null==r.window.tabGroups.activeTabGroup.activeTab&&(s=!1),await (0,o.dO)("workbench.action.openWalkthrough",{category:`${e}#${t}`,step:i?`${e}#${t}#${i}`:void 0},s)}function k(e,t={location:"currentWindow"}){if(t?.location==="addToWorkspace"){let i=r.workspace.workspaceFolders?.length??0;return void r.workspace.updateWorkspaceFolders(i,0,{uri:e,name:t?.name})}(0,o.dO)("vscode.openFolder",e,{forceNewWindow:t?.location==="newWindow"})}async function S(e){await (0,o.dO)("revealFileInOS",e)}function R(e){return"input-prompt-links"===e&&(0,c.L5)(r.version,">= 1.76")}},4550:(e,t,i)=>{i.d(t,{L5:()=>o,mL:()=>n,qu:()=>s});var r=i(4627);function s(e,t){return("string"==typeof e&&(e=n(e)),"string"==typeof t&&(t=n(t)),e.major>t.major)?1:e.major<t.major?-1:e.minor>t.minor?1:e.minor<t.minor?-1:e.patch>t.patch?1:e.patch<t.patch?-1:void 0===e.pre&&void 0!==t.pre?1:void 0!==e.pre&&void 0===t.pre?-1:void 0!==e.pre&&void 0!==t.pre?(0,r.zY)(e.pre,t.pre):0}function n(e){let[t,i]=e.split("-"),[r,s,n]=t.split(".");return{major:"string"==typeof r?parseInt(r,10):r,minor:"string"==typeof s?parseInt(s,10):s,patch:null==n?0:"string"==typeof n?parseInt(n,10):n,pre:i}}function o(e,t){if(null==e)return!1;let[i,r]=t.split(" ");if("="===i)return 0===s(e,r);if(">"===i)return s(e,r)>0;if(">="===i)return s(e,r)>=0;if("<"===i)return 0>s(e,r);if("<="===i)return 0>=s(e,r);throw Error(`Unknown operator: ${i}`)}},9701:(e,t,i)=>{function r(e){return null!=e&&"webview"in e&&null!=e.webview}function s(e){return null!=e&&"webview"in e&&null!=e.webview&&"webviewItem"in e}function n(e){return null!=e&&"webview"in e&&null!=e.webview&&"webviewItemGroup"in e}function o(e){return JSON.stringify(e)}i.d(t,{BH:()=>o,dH:()=>n,s4:()=>r,tM:()=>s})},6700:(e,t,i)=>{i.d(t,{p:()=>v,r:()=>y});var r=i(9496),s=i(7462),n=i(3646),o=i(5148),a=i(2061),l=i(2185),h=i(9796),c=i(2509),u=i(439),d=i(4336);class p{constructor(e,t,i,r){this.document=e,this.dirty=t,this._eventDelegates=i,this.container=r}static async create(e,t,i,r){let s=new p(e,t,i,r);return await s.initialize(),s}_onDidBlameStateChange=new r.EventEmitter;get onDidBlameStateChange(){return this._onDidBlameStateChange.event}state;_disposable;_disposed=!1;_uri;dispose(){this.state=void 0,this._disposed=!0,this._disposable?.dispose()}initializing=!0;async initialize(){let e=this.document.uri;this._uri=await s.YY.fromUri(e),this._disposed||await this.update(),this.initializing=!1}_forceDirtyStateChangeOnNextDocumentChange=!1;get forceDirtyStateChangeOnNextDocumentChange(){return this._forceDirtyStateChangeOnNextDocumentChange}_hasRemotes=!1;get hasRemotes(){return this._hasRemotes}get isBlameable(){return null==this._blameFailed&&this._isTracked}_isDirtyIdle=!1;get isDirtyIdle(){return this._isDirtyIdle}set isDirtyIdle(e){this._isDirtyIdle=e}get isRevision(){return null!=this._uri&&!!this._uri.sha&&this._uri.sha!==u.Ii}_isTracked=!1;get isTracked(){return this._isTracked}get lineCount(){return this.document.lineCount}get uri(){return this._uri}async activate(){this._requiresUpdate&&await this.update(),(0,a.v)("gitlens:activeFileStatus",this.getStatus())}is(e){return e===this.document}_updateDebounced;refresh(e){this._requiresUpdate=!0,this._blameFailed=void 0,this._isDirtyIdle=!1,null!=this.state&&(this.state=void 0,d.Yd.log(`Reset state for '${this.document.uri.toString(!0)}', reason=${e}`)),"repo-changed"===e&&(0,c.$S)(this.document)&&(null==this._updateDebounced&&(this._updateDebounced=(0,h.Ds)(this.update.bind(this),250)),this._updateDebounced())}_blameFailed;setBlameFailure(e){let t=this.isBlameable;this._blameFailed=e,t&&(0,c.$S)(this.document)&&this.update({forceBlameChange:!0})}resetForceDirtyStateChangeOnNextDocumentChange(){this._forceDirtyStateChangeOnNextDocumentChange=!1}setForceDirtyStateChangeOnNextDocumentChange(){this._forceDirtyStateChangeOnNextDocumentChange=!0}_requiresUpdate=!0;async update(e){if(this._requiresUpdate=!1,this._disposed||null==this._uri){this._hasRemotes=!1,this._isTracked=!1;return}this._isDirtyIdle=!1;let t=(0,c.aW)(this.document),i=e?.forceBlameChange?void 0:this.isBlameable,r=this.container.git.getRepository(this._uri);if(null==r?(this._isTracked=!1,this._hasRemotes=!1):[this._isTracked,this._hasRemotes]=await Promise.all([this.container.git.isTracked(this._uri),r.hasRemotes()]),null!=t){let e=this.isBlameable;if((0,a.v)("gitlens:activeFileStatus",this.getStatus()),!this.initializing&&i!==e){let i={editor:t,document:this,blameable:e};this._onDidBlameStateChange.fire(i),this._eventDelegates.onDidBlameStateChange(i)}}}getStatus(){let e="";return this.isTracked&&(e+="tracked|"),this.isBlameable&&(e+="blameable|"),this.isRevision&&(e+="revision|"),this.hasRemotes&&(e+="remotes|"),e||void 0}}class g{constructor(e){this.container=e,this._disposable=r.Disposable.from((0,l.IH)(e.onReady)(this.onReady,this),o.D.onDidChange(this.onConfigurationChanged,this),r.window.onDidChangeActiveTextEditor(this.onActiveTextEditorChanged,this),r.workspace.onDidChangeTextDocument((0,h.Ds)(this.onTextDocumentChanged,50),this),r.workspace.onDidCloseTextDocument(this.onTextDocumentClosed,this),r.workspace.onDidSaveTextDocument(this.onTextDocumentSaved,this),this.container.git.onDidChangeRepositories(this.onRepositoriesChanged,this),this.container.git.onDidChangeRepository(this.onRepositoryChanged,this)),this._dirtyIdleTriggerDelay=o.D.get("advanced.blame.delayAfterEdit")}_onDidChangeBlameState=new r.EventEmitter;get onDidChangeBlameState(){return this._onDidChangeBlameState.event}_onDidChangeContent=new r.EventEmitter;get onDidChangeContent(){return this._onDidChangeContent.event}_onDidChangeDirtyState=new r.EventEmitter;get onDidChangeDirtyState(){return this._onDidChangeDirtyState.event}_onDidTriggerDirtyIdle=new r.EventEmitter;get onDidTriggerDirtyIdle(){return this._onDidTriggerDirtyIdle.event}_dirtyIdleTriggerDelay;_disposable;_documentMap=new Map;dispose(){this._disposable.dispose(),this.clear()}onReady(){this.onConfigurationChanged(),this.onActiveTextEditorChanged(r.window.activeTextEditor)}_timer;onActiveTextEditorChanged(e){if(null!=e&&!(0,c.PH)(e))return;if(null!=this._timer&&(clearTimeout(this._timer),this._timer=void 0),null==e){this._timer=setTimeout(()=>{this._timer=void 0,(0,a.v)("gitlens:activeFileStatus",void 0)},250);return}let t=this._documentMap.get(e.document);if(null!=t){t.then(e=>e.activate(),()=>{});return}this.addCore(e.document)}onConfigurationChanged(e){null!=e&&(o.D.changed(e,"blame.ignoreWhitespace")||o.D.changed(e,"advanced.caching.enabled"))&&this.refreshDocuments(),o.D.changed(e,"advanced.blame.delayAfterEdit")&&(this._dirtyIdleTriggerDelay=o.D.get("advanced.blame.delayAfterEdit"),this._dirtyIdleTriggeredDebounced=void 0)}onRepositoriesChanged(e){this.refreshDocuments({addedOrChangedRepoPaths:e.added.length?new Set(e.added.map(e=>e.path.toLowerCase())):void 0,removedRepoPaths:e.removed.length?new Set(e.removed.map(e=>e.path.toLowerCase())):void 0})}onRepositoryChanged(e){e.changed(n.I6.Index,n.I6.Heads,n.I6.Status,n.I6.Unknown,n.du.Any)&&this.refreshDocuments({addedOrChangedRepoPaths:new Set([e.repository.path])})}async onTextDocumentChanged(e){let{scheme:t}=e.document.uri;if(!this.container.git.supportedSchemes.has(t))return;let i=await (this._documentMap.get(e.document)??this.addCore(e.document));i.refresh("doc-changed");let s=e.document.isDirty,n=r.window.activeTextEditor;null!=this._dirtyIdleTriggeredDebounced&&(s?this._dirtyIdleTriggeredDebounced({editor:n,document:i}):this._dirtyIdleTriggeredDebounced.cancel()),n?.document===e.document&&this._onDidChangeContent.fire({editor:n,document:i,contentChanges:e.contentChanges}),(i.forceDirtyStateChangeOnNextDocumentChange||i.dirty!==s)&&(i.resetForceDirtyStateChangeOnNextDocumentChange(),i.dirty=s,null!=n&&n.document===e.document&&this.fireDocumentDirtyStateChanged({editor:n,document:i,dirty:i.dirty}))}onTextDocumentClosed(e){this.remove(e)}async onTextDocumentSaved(e){let t=this._documentMap.get(e);if(null!=t){(await t).update({forceBlameChange:!0});return}(0,c.$S)(e)&&this.addCore(e)}async add(e){let t;if((0,s.uy)(e))try{t=await r.workspace.openTextDocument(e.documentUri())}catch(s){let i=s?.toString()??"";if(r.env.language.startsWith("en")){if(i.includes("File seems to be binary and cannot be opened as text"))t=new f(e);else if(i.includes("File not found")||i.includes("Unable to read file")||i.includes("Unable to resolve non-existing file"))t=new w(e);else throw s}else if(i.includes("cannot open"))t=new w(e);else throw s}else t=e instanceof r.Uri?await r.workspace.openTextDocument(e):e;return this.addCore(t)}async addCore(e){let t=p.create(e,!1,{onDidBlameStateChange:e=>this._onDidChangeBlameState.fire(e)},this.container);return this._documentMap.set(e,t),t}async clear(){for(let e of this._documentMap.values())(await e).dispose();this._documentMap.clear()}get(e){if(e instanceof r.Uri){let t=(0,c.s5)(e);if(null==t)return;e=t}return this._documentMap.get(e)}async getOrAdd(e){return e instanceof r.Uri&&(e=(0,c.s5)(e)??e),this.get(e)??this.add(e)}has(e){if(e instanceof r.Uri){let t=(0,c.s5)(e);if(null==t)return!1;e=t}return this._documentMap.has(e)}async remove(e,t){let i;null!=t&&(i=this._documentMap.get(e)),this._documentMap.delete(e),(t??await i)?.dispose()}_dirtyIdleTriggeredDebounced;_dirtyStateChangedDebounced;fireDocumentDirtyStateChanged(e){if(e.dirty){queueMicrotask(()=>{this._dirtyStateChangedDebounced?.cancel(),r.window.activeTextEditor===e.editor&&this._onDidChangeDirtyState.fire(e)}),this._dirtyIdleTriggerDelay>0&&(null==this._dirtyIdleTriggeredDebounced&&(this._dirtyIdleTriggeredDebounced=(0,h.Ds)(e=>{this._dirtyIdleTriggeredDebounced?.pending()||(e.document.isDirtyIdle=!0,this._onDidTriggerDirtyIdle.fire(e))},this._dirtyIdleTriggerDelay)),this._dirtyIdleTriggeredDebounced({editor:e.editor,document:e.document}));return}null==this._dirtyStateChangedDebounced&&(this._dirtyStateChangedDebounced=(0,h.Ds)(e=>{r.window.activeTextEditor===e.editor&&this._onDidChangeDirtyState.fire(e)},250)),this._dirtyStateChangedDebounced(e)}async refreshDocuments(e){if(0!==this._documentMap.size)for await(let t of this._documentMap.values()){let i=t.uri.repoPath?.toLocaleLowerCase();null!=i&&(e?.removedRepoPaths?.has(i)?this.remove(t.document,t):(null==e||e?.addedOrChangedRepoPaths?.has(i))&&t.refresh("repo-changed"))}}}class m{constructor(e){this.gitUri=e,this.uri=e.documentUri(),this.eol=r.EndOfLine.LF,this.fileName=this.uri.fsPath,this.isClosed=!1,this.isDirty=!1,this.isUntitled=!1,this.languageId="",this.lineCount=0,this.version=0}eol;fileName;isClosed;isDirty;isUntitled;languageId;lineCount;uri;version;getText(e){throw Error("Method not supported.")}getWordRangeAtPosition(e,t){throw Error("Method not supported.")}lineAt(e){throw Error("Method not supported.")}offsetAt(e){throw Error("Method not supported.")}positionAt(e){throw Error("Method not supported.")}save(){throw Error("Method not supported.")}validatePosition(e){throw Error("Method not supported.")}validateRange(e){throw Error("Method not supported.")}}class f extends m{}class w extends m{}class v{blameCache=new Map;diffCache=new Map;logCache=new Map;clearBlame(e){if(null==e){this.blameCache.clear();return}this.blameCache.delete(e)}clearDiff(e){if(null==e){this.diffCache.clear();return}this.diffCache.delete(e)}clearLog(e){if(null==e){this.logCache.clear();return}this.logCache.delete(e)}getBlame(e){return this.blameCache.get(e)}getDiff(e){return this.diffCache.get(e)}getLog(e){return this.logCache.get(e)}setBlame(e,t){if(null==t){this.blameCache.delete(e);return}this.blameCache.set(e,t)}setDiff(e,t){if(null==t){this.diffCache.delete(e);return}this.diffCache.set(e,t)}setLog(e,t){if(null==t){this.logCache.delete(e);return}this.logCache.set(e,t)}}class y extends g{async resetCache(e,t){let i=this.get(e);if(null!=i)switch(t){case"blame":(await i).state?.clearBlame();break;case"diff":(await i).state?.clearDiff();break;case"log":(await i).state?.clearLog()}}}},4043:(e,t,i)=>{i.d(t,{$k:()=>h,$x:()=>c,VE:()=>l,WA:()=>p,_n:()=>o,eT:()=>g,gn:()=>m,l5:()=>a,lX:()=>u,mg:()=>d});var r,s,n,o=((r=o||{}).Branch="b",r.Commit="c",r.Comparison="compare",r.Draft="drafts",r.Repository="r",r.Tag="t",r.Workspace="workspace",r);let a=["drafts","workspace"],l=[];function h(e){switch(e){case"b":return"Branch";case"c":return"Commit";case"compare":return"Comparison";case"drafts":return"Cloud Patch";case"r":return"Repository";case"t":return"Tag";case"workspace":return"Workspace";default:return"Unknown"}}function c(e){switch(e){case"branch":return"b";case"revision":return"c";case"tag":return"t";default:return"r"}}function u(e){let[,t,i,r,s,...n]=e.path.split("/");if("link"!==t)return;let o=new URLSearchParams(e.query);switch(i){case"r":{let e,t,i,a=o.get("url")??void 0;null!=a&&(a=decodeURIComponent(a));let l=o.get("path")??void 0;if(null!=l&&(l=decodeURIComponent(l)),!a&&!l)return;if(null==s)return{type:"r",mainId:r,remoteUrl:a,repoPath:l};if(null==n||0===n.length)return;let h=n.join("/");if("compare"===s){let r=h.split(/(\.\.\.|\.\.)/);if(3!==r.length)return;e=r[0],t=r[2],null!=(i=o.get("prRepoUrl")??void 0)&&(i=decodeURIComponent(i))}else e=h;return{type:s,mainId:r,remoteUrl:a,repoPath:l,targetId:e,secondaryTargetId:t,secondaryRemoteUrl:i}}case"drafts":{if(null==r||r.match(/^v\d+$/))return;let e=o.get("patch")??void 0;return null!=e&&(e=decodeURIComponent(e)),{type:"drafts",targetId:r,secondaryTargetId:e}}case"workspace":return{type:"workspace",mainId:r};default:return}}var d=((s=d||{})[s.Idle=0]="Idle",s[s.AccountCheck=1]="AccountCheck",s[s.PlanCheck=2]="PlanCheck",s[s.TypeMatch=3]="TypeMatch",s[s.RepoMatch=4]="RepoMatch",s[s.CloneOrAddRepo=5]="CloneOrAddRepo",s[s.OpeningRepo=6]="OpeningRepo",s[s.AddedRepoMatch=7]="AddedRepoMatch",s[s.RemoteMatch=8]="RemoteMatch",s[s.AddRemote=9]="AddRemote",s[s.TargetMatch=10]="TargetMatch",s[s.Fetch=11]="Fetch",s[s.FetchedTargetMatch=12]="FetchedTargetMatch",s[s.OpenGraph=13]="OpenGraph",s[s.OpenComparison=14]="OpenComparison",s[s.OpenDraft=15]="OpenDraft",s[s.OpenWorkspace=16]="OpenWorkspace",s),p=((n=p||{})[n.AccountCheckPassed=0]="AccountCheckPassed",n[n.DeepLinkEventFired=1]="DeepLinkEventFired",n[n.DeepLinkCancelled=2]="DeepLinkCancelled",n[n.DeepLinkResolved=3]="DeepLinkResolved",n[n.DeepLinkStored=4]="DeepLinkStored",n[n.DeepLinkErrored=5]="DeepLinkErrored",n[n.LinkIsRepoType=6]="LinkIsRepoType",n[n.LinkIsDraftType=7]="LinkIsDraftType",n[n.LinkIsWorkspaceType=8]="LinkIsWorkspaceType",n[n.OpenRepo=9]="OpenRepo",n[n.PlanCheckPassed=10]="PlanCheckPassed",n[n.RepoMatched=11]="RepoMatched",n[n.RepoMatchedInLocalMapping=12]="RepoMatchedInLocalMapping",n[n.RepoMatchFailed=13]="RepoMatchFailed",n[n.RepoAdded=14]="RepoAdded",n[n.RepoOpened=15]="RepoOpened",n[n.RemoteMatched=16]="RemoteMatched",n[n.RemoteMatchFailed=17]="RemoteMatchFailed",n[n.RemoteMatchUnneeded=18]="RemoteMatchUnneeded",n[n.RemoteAdded=19]="RemoteAdded",n[n.TargetMatched=20]="TargetMatched",n[n.TargetsMatched=21]="TargetsMatched",n[n.TargetMatchFailed=22]="TargetMatchFailed",n[n.TargetFetched=23]="TargetFetched",n);let g={0:{1:1,2:0},1:{0:2,5:0,2:0},2:{10:3,5:0,2:0},3:{5:0,2:0,6:4,7:15,8:16},4:{5:0,11:8,12:5,13:5},5:{9:6,15:8,5:0,2:0,4:0},6:{14:7,5:0,2:0},7:{11:8,5:0},8:{5:0,16:10,17:9,18:10},9:{19:10,5:0,2:0},10:{5:0,20:13,21:14,22:11},11:{23:12,5:0,2:0},12:{20:13,21:14,5:0},13:{3:0,5:0},14:{3:0,5:0},15:{3:0,5:0},16:{3:0,5:0}},m={0:{message:"Done.",increment:100},1:{message:"Checking account...",increment:1},2:{message:"Checking plan...",increment:2},3:{message:"Matching link type...",increment:5},4:{message:"Finding a matching repository...",increment:10},5:{message:"Adding repository...",increment:20},6:{message:"Opening repository...",increment:30},7:{message:"Finding a matching repository...",increment:40},8:{message:"Finding a matching remote...",increment:50},9:{message:"Adding remote...",increment:60},10:{message:"finding a matching target...",increment:70},11:{message:"Fetching...",increment:80},12:{message:"Finding a matching target...",increment:90},13:{message:"Opening graph...",increment:95},14:{message:"Opening comparison...",increment:95},15:{message:"Opening cloud patch...",increment:95},16:{message:"Opening workspace...",increment:95}}},9165:(e,t,i)=>{i.d(t,{y:()=>h});var r=i(4241),s=i(5517),n=i(7707),o=Object.defineProperty,a=Object.getOwnPropertyDescriptor,l=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?a(t,i):t,l=e.length-1;l>=0;l--)(s=e[l])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&o(t,i,n),n};class h extends n.Re{_children;get children(){return this._children}set children(e){this._children!==e&&((0,s.Qu)(this._children,e),this._children=e)}dispose(){super.dispose(),this.children=void 0}refresh(e=!1){e&&(this.children=void 0)}}l([(0,r.fF)()],h.prototype,"dispose",1),l([(0,r.fF)()],h.prototype,"refresh",1)},5010:(e,t,i)=>{i.d(t,{v:()=>f});var r=i(9496),s=i(5255),n=i(3050),o=i(3646),a=i(5432),l=i(4241),h=i(2185),c=i(4627),u=i(8583),d=i(7707),p=Object.defineProperty,g=Object.getOwnPropertyDescriptor,m=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?g(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&p(t,i,n),n};class f extends u.C{constructor(e,t,i,r,s,n){super("repo-folder",e,t,i),this.parent=i,this.repo=r,this.options=n,this.updateContext({repository:this.repo}),this._uniqueId=(0,d.tO)(this.type,this.context),this.splatted=s}splatted=!0;_child;get child(){return this._child}set child(e){this._child!==e&&(this._child?.dispose(),this._child=e)}dispose(){super.dispose(),this.child=void 0}get id(){return this._uniqueId}toClipboard(){return this.repo.path}get repoPath(){return this.repo.path}async getTreeItem(){this.splatted=!1;let e=await this.repo.getBranch(),t=(e?.state.ahead??0)>0,i=(e?.state.behind??0)>0,a=t||i||this.repo.starred||this.view.container.git.isRepositoryForEditor(this.repo),l=new r.TreeItem(this.repo.formattedName??this.uri.repoPath??"",a?r.TreeItemCollapsibleState.Expanded:r.TreeItemCollapsibleState.Collapsed);if(l.contextValue=`${d.Td.RepositoryFolder}${this.repo.starred?"+starred":""}`,t&&(l.contextValue+="+ahead"),i&&(l.contextValue+="+behind"),"commits"===this.view.type&&this.view.state.filterCommits.get(this.repo.id)?.length&&(l.contextValue+="+filtered"),null!=e&&this.options?.showBranchAndLastFetched){let t;let i=await this.repo.getLastFetched()??0,a=e.getTrackingStatus();if(l.description=`${a?`${a}${(0,c.vk)(s.NE.Dot,1,1)}`:""}${e.name}${i?`${(0,c.vk)(s.NE.Dot,1,1)}Last fetched ${o._j.formatLastFetched(i)}`:""}`,null!=e.upstream){let i=n.ss.getHighlanderProviders(await this.view.container.git.getRemotesWithProviders(e.repoPath));t=i?.length?i[0].name:void 0}else{let i=await e.getRemote();t=i?.provider?.name}l.tooltip=new r.MarkdownString(`${this.repo.formattedName??this.uri.repoPath??""}${i?`${(0,c.vk)(s.NE.Dash,2,2)}Last fetched ${o._j.formatLastFetched(i,!1)}`:""}${this.repo.formattedName?`
${this.uri.repoPath}`:""}

Current branch $(git-branch) ${e.name}${null!=e.upstream?` is ${e.getTrackingStatus({empty:e.upstream.missing?`missing upstream $(git-branch) ${e.upstream.name}`:`up to date with $(git-branch) ${e.upstream.name}${t?` on ${t}`:""}`,expand:!0,icons:!0,separator:", ",suffix:` $(git-branch) ${e.upstream.name}${t?` on ${t}`:""}`})}`:`hasn't been published to ${t??"a remote"}`}`,!0)}else l.tooltip=`${this.repo.formattedName?`${this.repo.formattedName}
${this.uri.repoPath}`:this.uri.repoPath??""}`;return l}async getSplattedChild(){return null==this.child&&await this.getChildren(),this.child}async refresh(e=!1){super.refresh(e),await this.child?.triggerChange(e,!1,this),await this.ensureSubscription()}async star(){await this.repo.star()}async unstar(){await this.repo.unstar()}subscribe(){return(0,h.D$)(this.repo.onDidChange,this.onRepositoryChanged,this)}etag(){return this.repo.etag}onRepositoryChanged(e){if(e.changed(o.I6.Closed,o.du.Any)){this.dispose(),this.parent?.triggerChange(!0);return}if(e.changed(o.I6.Opened,o.du.Any)||e.changed(o.I6.Starred,o.du.Any)){this.parent?.triggerChange(!0);return}this.changed(e)&&(!this.loaded||this.repo.orderByLastFetched?this.parent??this:this).triggerChange(!0)}}m([(0,l.fF)()],f.prototype,"dispose",1),m([(0,a.H)(),(0,l.fF)()],f.prototype,"refresh",1),m([(0,l.cM)()],f.prototype,"star",1),m([(0,l.cM)()],f.prototype,"unstar",1),m([(0,l.fF)()],f.prototype,"subscribe",1),m([(0,l.fF)({args:{0:e=>e.toString()}})],f.prototype,"onRepositoryChanged",1)},8583:(e,t,i)=>{i.d(t,{C:()=>d});var r=i(9496),s=i(5432),n=i(4241),o=i(2185),a=i(9165),l=i(7707),h=Object.defineProperty,c=Object.getOwnPropertyDescriptor,u=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?c(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&h(t,i,n),n};class d extends a.y{disposable;subscription;loaded=!1;constructor(e,t,i,s){super(e,t,i,s);let n=[(0,o.D$)(this.view.onDidChangeVisibility,this.onVisibilityChanged,this)];(0,l.ub)(this.view)&&n.push((0,o.D$)(this.view.onDidChangeAutoRefresh,this.onAutoRefreshChanged,this));let a=this.getTreeItem;this.getTreeItem=function(){return this.loaded=!0,this.ensureSubscription(),a.apply(this)};let h=this.getChildren;this.getChildren=function(){return this.loaded=!0,this.ensureSubscription(),h.apply(this)},this.disposable=r.Disposable.from(...n)}dispose(){super.dispose(),this.unsubscribe(),this.disposable?.dispose()}async triggerChange(e=!1,t=!1){this.loaded&&!this._disposed&&(e&&!this.view.visible&&(this._pendingReset=e),await super.triggerChange(e,t))}_canSubscribe=!0;get canSubscribe(){return this._canSubscribe&&!this._disposed}set canSubscribe(e){this._canSubscribe!==e&&(this._canSubscribe=e,this.ensureSubscription(),e&&this.triggerChange())}_etag;_pendingReset=!1;get requiresResetOnVisible(){let e=this._pendingReset;this._pendingReset=!1;let t=this.etag();return t!==this._etag&&(this._etag=t,e=!0),e}async unsubscribe(){if(this._etag=this.etag(),null!=this.subscription){let e=this.subscription;this.subscription=void 0,(await e)?.dispose()}}onAutoRefreshChanged(){this.onVisibilityChanged({visible:this.view.visible})}onVisibilityChanged(e){this.ensureSubscription(),e.visible&&this.triggerChange(this.requiresResetOnVisible)}async ensureSubscription(){if(!this.canSubscribe||!this.view.visible||(0,l.ub)(this.view)&&!this.view.autoRefresh){await this.unsubscribe();return}null==this.subscription&&(this.subscription=Promise.resolve(this.subscribe()),await this.subscription)}async resetSubscription(){await this.unsubscribe(),await this.ensureSubscription()}}u([(0,n.fF)()],d.prototype,"dispose",1),u([(0,s.H)((e,t)=>`${e}|${t}`),(0,n.fF)()],d.prototype,"triggerChange",1),u([(0,n.fF)()],d.prototype,"unsubscribe",1),u([(0,n.fF)()],d.prototype,"onAutoRefreshChanged",1),u([(0,n.fF)()],d.prototype,"onVisibilityChanged",1),u([(0,s.H)(),(0,n.fF)()],d.prototype,"ensureSubscription",1),u([(0,s.H)(),(0,n.fF)()],d.prototype,"resetSubscription",1)},5209:(e,t,i)=>{i.d(t,{T:()=>s,w:()=>n});var r=i(7707);class s extends r.Re{constructor(e,t,i,r,s){super(e,t,i,r),this.parent=r,this.file=s}get repoPath(){return this.uri.repoPath}toString(){return`${super.toString()}:${this.file.path}`}}function n(e){return e instanceof s}},7707:(e,t,i)=>{i.d(t,{FZ:()=>y,LD:()=>f,On:()=>g,Re:()=>p,Td:()=>u,kP:()=>w,pp:()=>v,tO:()=>d,ub:()=>m});var r,s=i(5432),n=i(4241),o=i(9796),a=i(4336),l=Object.defineProperty,h=Object.getOwnPropertyDescriptor,c=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?h(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&l(t,i,n),n},u=((r=u||{}).ActiveFileHistory="gitlens:history:active:file",r.ActiveLineHistory="gitlens:history:active:line",r.AutolinkedItems="gitlens:autolinked:items",r.AutolinkedIssue="gitlens:autolinked:issue",r.AutolinkedItem="gitlens:autolinked:item",r.Branch="gitlens:branch",r.Branches="gitlens:branches",r.BranchStatusAheadOfUpstream="gitlens:status-branch:upstream:ahead",r.BranchStatusBehindUpstream="gitlens:status-branch:upstream:behind",r.BranchStatusMissingUpstream="gitlens:status-branch:upstream:missing",r.BranchStatusNoUpstream="gitlens:status-branch:upstream:none",r.BranchStatusSameAsUpstream="gitlens:status-branch:upstream:same",r.BranchStatusFiles="gitlens:status-branch:files",r.Commit="gitlens:commit",r.Commits="gitlens:commits",r.Compare="gitlens:compare",r.CompareBranch="gitlens:compare:branch",r.ComparePicker="gitlens:compare:picker",r.ComparePickerWithRef="gitlens:compare:picker:ref",r.CompareResults="gitlens:compare:results",r.CompareResultsCommits="gitlens:compare:results:commits",r.Contributor="gitlens:contributor",r.Contributors="gitlens:contributors",r.DateMarker="gitlens:date-marker",r.Draft="gitlens:draft",r.File="gitlens:file",r.FileHistory="gitlens:history:file",r.Folder="gitlens:folder",r.LineHistory="gitlens:history:line",r.Merge="gitlens:merge",r.MergeConflictCurrentChanges="gitlens:merge-conflict:current",r.MergeConflictIncomingChanges="gitlens:merge-conflict:incoming",r.Message="gitlens:message",r.MessageSignIn="gitlens:message:signin",r.Pager="gitlens:pager",r.PullRequest="gitlens:pullrequest",r.Rebase="gitlens:rebase",r.Reflog="gitlens:reflog",r.ReflogRecord="gitlens:reflog-record",r.Remote="gitlens:remote",r.Remotes="gitlens:remotes",r.Repositories="gitlens:repositories",r.Repository="gitlens:repository",r.RepositoryFolder="gitlens:repo-folder",r.ResultsFile="gitlens:file:results",r.ResultsFiles="gitlens:results:files",r.SearchAndCompare="gitlens:searchAndCompare",r.SearchResults="gitlens:search:results",r.SearchResultsCommits="gitlens:search:results:commits",r.Stash="gitlens:stash",r.Stashes="gitlens:stashes",r.StatusFileCommits="gitlens:status:file:commits",r.StatusFiles="gitlens:status:files",r.StatusAheadOfUpstream="gitlens:status:upstream:ahead",r.StatusBehindUpstream="gitlens:status:upstream:behind",r.StatusMissingUpstream="gitlens:status:upstream:missing",r.StatusNoUpstream="gitlens:status:upstream:none",r.StatusSameAsUpstream="gitlens:status:upstream:same",r.Tag="gitlens:tag",r.Tags="gitlens:tags",r.UncommittedFiles="gitlens:uncommitted:files",r.Workspace="gitlens:workspace",r.WorkspaceMissingRepository="gitlens:workspaceMissingRepository",r.Workspaces="gitlens:workspaces",r.Worktree="gitlens:worktree",r.Worktrees="gitlens:worktrees",r);function d(e,t){let i="";return t.root&&(i+="/root"),null!=t.workspace&&(i+=`/ws/${t.workspace.id}`),null!=t.wsRepositoryDescriptor&&(i+=`/wsrepo/${t.wsRepositoryDescriptor.id}`),null!=t.repository&&(i+=`/repo/${t.repository.id}`),null!=t.worktree&&(i+=`/worktree/${t.worktree.uri.path}`),null!=t.remote&&(i+=`/remote/${t.remote.name}`),null!=t.tag&&(i+=`/tag/${t.tag.id}`),null!=t.branch&&(i+=`/branch/${t.branch.id}`),null!=t.branchStatus&&(i+=`/branch-status/${t.branchStatus.upstream??"-"}`),null!=t.branchStatusUpstreamType&&(i+=`/branch-status-direction/${t.branchStatusUpstreamType}`),null!=t.status&&(i+=`/status/${t.status}`),null!=t.reflog&&(i+=`/reflog/${t.reflog.sha}+${t.reflog.selector}+${t.reflog.command}+${t.reflog.commandArgs??""}+${t.reflog.date.getTime()}`),null!=t.contributor&&(i+=`/contributor/${t.contributor.id??`${t.contributor.username}+${t.contributor.email}+${t.contributor.name}`}`),null!=t.autolinksId&&(i+=`/autolinks/${t.autolinksId}`),null!=t.comparisonId&&(i+=`/comparison/${t.comparisonId}`),null!=t.searchId&&(i+=`/search/${t.searchId}`),null!=t.commit&&(i+=`/commit/${t.commit.sha}`),null!=t.file&&(i+=`/file/${t.file.path}+${t.file.status}`),null!=t.draft&&(i+=`/draft/${t.draft.id}`),`gitlens://viewnode/${e}${i}`}let p=class{constructor(e,t,i,r){this.type=e,this.view=i,this.parent=r,this._uri=t}is(e){return this.type===e}_uniqueId;splatted=!1;_disposed=!1;dispose(){this._disposed=!0}get id(){return this._uniqueId}_context;get context(){return this._context??this.parent?.context??{}}updateContext(e,t=!1){this._context=this.getNewContext(e,t)}getNewContext(e,t=!1){return{...t?this.parent?.context:this.context,...e}}toString(){let e=this.id;return`${(0,a.q4)(this)}${null!=e?`(${e})`:""}`}_uri;get uri(){return this._uri}getParent(){return this.parent?.splatted?this.parent?.getParent():this.parent}getCommand(){}triggerChange(e=!1,t=!1,i){return this._disposed?Promise.resolve():this.splatted&&null!=this.parent&&this.parent!==i?this.parent.triggerChange(e,t):this.view.refreshNode(this,e,t)}deleteState(e){if(null==this.id)throw Error("Id is required to delete state");this.view.nodeState.deleteState(this.id,e)}getState(e){if(null==this.id)throw Error("Id is required to get state");return this.view.nodeState.getState(this.id,e)}storeState(e,t,i){if(null==this.id)throw Error("Id is required to store state");this.view.nodeState.storeState(this.id,e,t,i)}};function g(e){return(0,o.is)(e,"loadMore")}function m(e){return(0,o.is)(e,"onDidChangeAutoRefresh")}function f(e){return"function"==typeof e.edit}function w(e){return"function"==typeof e.dismissNode}function v(e){return null!=e&&"repoPath"in e&&"string"==typeof e.repoPath?e.repoPath:void 0}function y(e,t){return null!=e&&e instanceof p&&(null==t||e.type===t)}c([(0,n.fF)()],p.prototype,"dispose",1),c([(0,s.H)((e,t,i)=>`${e}|${t}|${i?.toString()}`),(0,n.fF)()],p.prototype,"triggerChange",1),p=c([(0,n.hJ)((e,t)=>`${t}${null!=e.id?`(${e.id})`:""}`)],p)},2610:(e,t,i)=>{i.d(t,{R:()=>a,b:()=>o});var r=i(4321),s=i(5209),n=i(7707);class o extends n.Re{constructor(e,t,i,r){super(e,t,i,r),this.parent=r}get repoPath(){return this.uri.repoPath}toString(){return`${super.toString()}:${(0,r.Wh)(this.ref,!1)}`}}class a extends s.T{toString(){return`${super.toString()}:${this.file.path}`}}},1185:(e,t,i)=>{i.d(t,{Z:()=>h});var r=i(9496),s=i(7462),n=i(8452),o=i(7512),a=i(7469),l=i(7707);class h extends l.Re{constructor(e,t,i,r,n){super("autolink",s.YY.fromRepoPath(i),e,t),this.parent=t,this.repoPath=i,this.item=r,this.enrichedItem=n,this._uniqueId=(0,l.tO)(`${this.type}+${r.id}`,this.context)}get id(){return this._uniqueId}toClipboard(){return this.item.url}getChildren(){return[]}getTreeItem(){let e=this.enrichedItem,t=(0,a.tI)(e);if(t&&e.then(e=>{this.enrichedItem=e,this.view.triggerNodeChange(this)}),t||null==e){let e=this.item,{provider:i}=e,s=new r.TreeItem(e.description??`Autolink ${e.prefix}${e.id}`,r.TreeItemCollapsibleState.None);return s.description=i?.name??"Custom",s.iconPath=new r.ThemeIcon(t?"loading~spin":null==e.type?"link":"pullrequest"===e.type?"git-pull-request":"issues"),s.contextValue=l.Td.AutolinkedItem,s.tooltip=new r.MarkdownString(`${e.description?`Autolinked ${e.description}`:`${null==e.type?"Autolinked":"pullrequest"===e.type?"Autolinked Pull Request":"Autolinked Issue"} ${e.prefix}${e.id}`} \\
[${e.url}](${e.url}${null!=e.title?` "${e.title}"`:""})`),s}let i=(0,o.Zh)(e.closedDate??e.date),s=new r.TreeItem(`${e.id}: ${e.title}`,r.TreeItemCollapsibleState.None);s.description=i,s.iconPath=(0,n.xX)(e),s.contextValue="pullrequest"===e.type?l.Td.PullRequest:l.Td.AutolinkedIssue;let h=` "Open ${"pullrequest"===e.type?"Pull Request":"Issue"} \\#${e.id} on ${e.provider.name}"`,c=new r.MarkdownString(`${(0,n.sy)(e)} [**${e.title.trim()}**](${e.url}${h}) \\
[#${e.id}](${e.url}${h}) was ${e.closed?"closed":"opened"} ${i}`,!0);return c.supportHtml=!0,c.isTrusted=!0,s.tooltip=c,s}}},2601:(e,t,i)=>{i.d(t,{R:()=>d,q:()=>u});var r=i(9496),s=i(5255),n=i(6373),o=i(7462),a=i(7881),l=i(3700),h=i(7707),c=i(2610);class u extends c.R{constructor(e,t,i,r,s,n){super(e,o.YY.fromFile(r,s.repoPath,s.sha),t,i,r),this.commit=s,this.options=n,this.updateContext({commit:s,file:r}),this._uniqueId=(0,h.tO)(e,this.context)}get id(){return this._uniqueId}toClipboard(){return this.file.path}get priority(){return 0}get ref(){return this.commit}getChildren(){return[]}async getTreeItem(){if(null==this.commit.file){let e=await this.commit.getCommitForFile(this.file);if(null==e){let e=await this.view.container.git.getLogForFile(this.repoPath,this.file.path,{limit:2,ref:this.commit.sha});null!=e&&(this.commit=e.commits.get(this.commit.sha)??this.commit)}else this.commit=e}let e=new r.TreeItem(this.label,r.TreeItemCollapsibleState.None);if(e.id=this.id,e.contextValue=this.contextValue,e.description=this.description,"type"===this.view.config.files.icon)e.resourceUri=r.Uri.from({scheme:s.sN.Git,authority:"gitlens-view",path:this.uri.path,query:JSON.stringify({path:this.uri.fsPath,ref:this.uri.sha,decoration:`gitlens-view://commit-file/status/${this.file.status}`})});else{e.resourceUri=r.Uri.parse(`gitlens-view://commit-file/status/${this.file.status}`);let t=(0,a.tK)(this.file.status);e.iconPath={dark:this.view.container.context.asAbsolutePath((0,l.RQ)("images","dark",t)),light:this.view.container.context.asAbsolutePath((0,l.RQ)("images","light",t))}}return e.tooltip=this.tooltip,e.command=this.getCommand(),this._label=void 0,e}get contextValue(){return this.commit.isUncommitted?this.commit.isUncommittedStaged?`${h.Td.File}+staged`:`${h.Td.File}+unstaged`:`${h.Td.File}+committed${this.options?.branch?.current?"+current":""}${this.options?.branch?.current&&this.options.branch.sha===this.commit.ref?"+HEAD":""}${this.options?.unpublished?"+unpublished":""}`}get description(){return n.o.fromTemplate(this.view.config.formats.files.description,this.file,{relativePath:this.relativePath})}_folderName;get folderName(){return void 0===this._folderName&&(this._folderName=(0,l.Fd)(this.uri.relativePath)),this._folderName}_label;get label(){return void 0===this._label&&(this._label=n.o.fromTemplate(this.view.config.formats.files.label,this.file,{relativePath:this.relativePath})),this._label}_relativePath;get relativePath(){return this._relativePath}set relativePath(e){this._relativePath=e,this._label=void 0}get tooltip(){let e=n.o.fromTemplate(`\${file}\${'&nbsp;&nbsp;\u2022&nbsp;&nbsp;'changesDetail}\${'&nbsp;\\
'directory}&nbsp;

\${status}\${ (originalPath)}`,this.file),t=new r.MarkdownString(e,!0);return t.supportHtml=!0,t.isTrusted=!0,t}getCommand(){let e;e=this.commit.lines.length?this.commit.lines[0].line-1:this.options?.selection?.active.line??0;let t={commit:this.commit,uri:o.YY.fromFile(this.file,this.commit.repoPath),line:e,showOptions:{preserveFocus:!0,preview:!0}};return{title:"Open Changes with Previous Revision",command:s.Gh.DiffWithPrevious,arguments:[void 0,t]}}}class d extends u{constructor(e,t,i,r,s){super("commit-file",e,t,i,r,s)}}},2925:(e,t,i)=>{i.d(t,{D:()=>A});var r=i(9496),s=i(5255),n=i(9338),o=i(2800),a=i(2226),l=i(5148),h=i(2061),c=i(4241),u=i(3700),d=i(7469),p=i(4627),g=i(5517),m=i(7707),f=i(2610),w=i(2601),v=i(4481),y=i(2060),b=Object.defineProperty,C=Object.getOwnPropertyDescriptor;class A extends f.b{constructor(e,t,i,r,s,n,o={}){super("commit",i.getGitUri(),e,t),this.commit=i,this.unpublished=r,this.branch=s,this.getBranchAndTagTips=n,this._options=o,this.updateContext({commit:i}),this._uniqueId=(0,m.tO)(this.type,this.context)}dispose(){super.dispose(),this.children=void 0}get id(){return this._uniqueId}toClipboard(){return`${this.commit.shortSha}: ${this.commit.summary}`}get isTip(){return(this.branch?.current&&this.branch.sha===this.commit.ref)??!1}get ref(){return this.commit}_children;get children(){return this._children}set children(e){this._children!==e&&((0,g.Qu)(this._children,e),this._children=e)}async getChildren(){if(null==this.children){let e,t;let i=this.commit,r=[];if("tags"!==this.view.type&&!this.unpublished&&(0,h.fw)("gitlens:hasConnectedRemotes")&&this.view.config.pullRequests.enabled&&this.view.config.pullRequests.showForCommits&&void 0===(t=this.getState("pullRequest"))&&void 0===this.getState("pendingPullRequest")){e=(0,d.PQ)();let t=this.getAssociatedPullRequest(i);queueMicrotask(async()=>{await e?.promise;let r=!1,s=setTimeout(()=>{r=!0,this.view.triggerNodeChange(this)},250),n=await t;clearTimeout(s),null!=n&&null!=this.children&&this.children.unshift(new y.Z(this.view,this,n,i)),(r||null!=n)&&this.view.triggerNodeChange(this)})}for(let e of(await i.getCommitsForFiles()))r.push(new w.R(this.view,this,e.file,e));if("list"!==this.view.config.files.layout){let e=(0,o.Mo)(r,e=>e.uri.relativePath.split("/"),(...e)=>(0,u.AH)((0,u.RQ)(...e)),this.view.config.files.compact);r=new v.Y(this.view,this,e,this.repoPath,"",void 0).getChildren()}else r.sort((e,t)=>(0,p.dm)(e.label,t.label));null!=t&&r.unshift(new y.Z(this.view,this,t,i)),this.children=r,setTimeout(()=>e?.fulfill(),1)}return this.children}async getTreeItem(){let e=n.i.fromTemplate(this.view.config.formats.commits.label,this.commit,{dateFormat:l.D.get("defaultDateFormat"),getBranchAndTagTips:e=>this.getBranchAndTagTips?.(e,{compact:!0}),messageTruncateAtNewLine:!0}),t=new r.TreeItem(e,this._options.expand?r.TreeItemCollapsibleState.Expanded:r.TreeItemCollapsibleState.Collapsed);t.id=this.id,t.contextValue=`${m.Td.Commit}${this.branch?.current?"+current":""}${this.isTip?"+HEAD":""}${this.unpublished?"+unpublished":""}`,t.description=n.i.fromTemplate(this.view.config.formats.commits.description,this.commit,{dateFormat:l.D.get("defaultDateFormat"),getBranchAndTagTips:e=>this.getBranchAndTagTips?.(e,{compact:!0}),messageTruncateAtNewLine:!0});let i=this.getState("pendingPullRequest");return t.iconPath=null!=i?new r.ThemeIcon("loading~spin"):this.unpublished?new r.ThemeIcon("arrow-up",new r.ThemeColor("gitlens.unpublishedCommitIconColor")):this.view.config.avatars?await this.commit.getAvatarUri({defaultStyle:l.D.get("defaultGravatarsStyle")}):void 0,t}getCommand(){let e={commit:this.commit,uri:this.uri,line:0,showOptions:{preserveFocus:!0,preview:!0}};return{title:"Open Changes with Previous Revision",command:s.Gh.DiffWithPrevious,arguments:[void 0,e]}}refresh(e){super.refresh?.(e),this.children=void 0,e&&this.deleteState()}async resolveTreeItem(e){return null==e.tooltip&&(e.tooltip=await this.getTooltip()),e}async getAssociatedPullRequest(e,t){let i=this.getState("pullRequest");if(void 0!==i)return Promise.resolve(i??void 0);let r=this.getState("pendingPullRequest");return null==r?(r=e.getAssociatedPullRequest(t),this.storeState("pendingPullRequest",r),i=await r,this.storeState("pullRequest",i??null),this.deleteState("pendingPullRequest"),i):r}async getTooltip(){let e,t;let[i,s]=await Promise.allSettled([this.view.container.git.getBestRemotesWithProviders(this.commit.repoPath),null==this.commit.message?this.commit.ensureFullDetails():void 0]),o=(0,d.Sb)(i,[]),[h]=o;if(h?.hasIntegration()){let[i,r]=await Promise.allSettled([(0,a.IN)(this.commit.getEnrichedAutolinks(h)),this.getAssociatedPullRequest(this.commit,h)]);e=d.Sb(i)?.value,t=(0,d.Sb)(r)}let c=await n.i.fromTemplateAsync(this.getTooltipTemplate(),this.commit,{enrichedAutolinks:e,dateFormat:l.D.get("defaultDateFormat"),getBranchAndTagTips:this.getBranchAndTagTips,messageAutolinks:!0,messageIndent:4,pullRequest:t,outputFormat:"markdown",remotes:o,unpublished:this.unpublished}),u=new r.MarkdownString(c,!0);return u.supportHtml=!0,u.isTrusted=!0,u}getTooltipTemplate(){return this.view.config.formats.commits.tooltip}}((e,t,i,r)=>{for(var s,n=r>1?void 0:r?C(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&b(t,i,n)})([(0,c.fF)()],A.prototype,"dispose",1)},21:(e,t,i)=>{i.d(t,{$h:()=>h,AE:()=>l,Gd:()=>u});var r=i(9496),s=i(5255),n=i(7462),o=i(5148),a=i(7707);class l extends a.Re{constructor(e,t,i,r,s,o,a){super("message",n.Wj,e,t),this.parent=t,this._message=i,this._description=r,this._tooltip=s,this._iconPath=o,this._contextValue=a}getChildren(){return[]}getTreeItem(){let e=new r.TreeItem(this._message,r.TreeItemCollapsibleState.None);return e.contextValue=this._contextValue??a.Td.Message,e.description=this._description,e.tooltip=this._tooltip,e.iconPath=this._iconPath,e}}class h extends l{constructor(e,t,i,r,s,n,o){super(e,t,r,s,n,o),this.parent=t,this._command=i}getTreeItem(){let e=super.getTreeItem();return e instanceof r.TreeItem?(e.command=this._command,e):e.then(e=>(e.command=this._command,e))}}class c extends a.Re{constructor(e,t,i,r,s){super("pager",n.Wj,e,t),this.message=i,this.previousNode=r,this.options=s}async loadAll(){let e=await this.options?.getCount?.()??0;return this.view.loadMoreNodeChildren(this.parent,e>5e3?5e3:0,this.previousNode,this.options?.context)}loadMore(){return this.view.loadMoreNodeChildren(this.parent,this.options?.pageSize??o.D.get("views.pageItemLimit"),this.previousNode,this.options?.context)}getChildren(){return[]}getTreeItem(){let e=new r.TreeItem(this.message,r.TreeItemCollapsibleState.None);return e.contextValue=a.Td.Pager,e.command=this.getCommand(),e}getCommand(){return{title:"Load more",command:"gitlens.views.loadMoreChildren",arguments:[this]}}}class u extends c{constructor(e,t,i,r){super(e,t,r?.message??(r?.pageSize===0?`Load all ${s.NE.Space}${s.NE.Dash}${s.NE.Space} this may take a while`:"Load more"),i,r)}}},5538:(e,t,i)=>{i.d(t,{fc:()=>b,iS:()=>C,k7:()=>D,uL:()=>A,vK:()=>P});var r=i(9496),s=i(3951),n=i(7462),o=i(4321),a=i(5432),l=i(4241),h=i(2185),c=i(7469),u=i(4627),d=i(8583),p=i(7707),g=i(5988),m=i(812),f=Object.defineProperty,w=Object.getOwnPropertyDescriptor,v=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?w(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&f(t,i,n),n};let y=0;class b extends d.C{constructor(e,t,i,r,s,o=0){super("compare-results",n.YY.fromRepoPath(i),e,t),this.parent=t,this.repoPath=i,this._ref=r,this._compareWith=s,this._storedAt=o,this._instanceId=y++,this.updateContext({comparisonId:`${r.ref}+${s.ref}+${this._instanceId}`,storedComparisonId:this.getStorageId()}),this._uniqueId=(0,p.tO)(this.type,this.context),0===this._storedAt&&(this._storedAt=Date.now(),this.store(!0))}_instanceId;get id(){return this._uniqueId}etag(){return this._storedAt}get order(){return this._storedAt}get ahead(){return{ref1:this._compareWith.ref||"HEAD",ref2:this._ref.ref}}get behind(){return{ref1:this._ref.ref,ref2:this._compareWith.ref||"HEAD"}}get compareRef(){return this._ref}get compareWithRef(){return this._compareWith}_isFiltered;get filterByAuthors(){let e=this.getState("filterCommits"),t=!!e?.length;return null!=this._isFiltered&&this._isFiltered!==t&&this.updateContext({comparisonFiltered:t}),this._isFiltered=t,e}subscribe(){return(0,h.D$)(this.view.onDidChangeNodesCheckedState,this.onNodesCheckedStateChanged,this)}onNodesCheckedStateChanged(e){let t=C(this.getStorageId());e.items.some(([e])=>e.id?.startsWith(t))&&this.store(!0)}dismiss(){this.remove(!0)}async getChildren(){if(null==this.children){let e=this.ahead,t=this.behind,i=await this.view.container.git.getAheadBehindCommitCount(this.repoPath,[(0,o.oI)(t.ref1||"HEAD",t.ref2,"...")],{authors:this.filterByAuthors}),r=await this.view.container.git.getMergeBase(this.repoPath,t.ref1,t.ref2,{forkPoint:!0})??await this.view.container.git.getMergeBase(this.repoPath,t.ref1,t.ref2),s=[new g.J(this.view,this,this.repoPath,"Behind",{query:this.getCommitsQuery((0,o.oI)(t.ref1,t.ref2,"..")),comparison:t,direction:"behind",files:{ref1:""===t.ref1?"":r??t.ref1,ref2:t.ref2,query:this.getBehindFilesQuery.bind(this)}},{description:(0,u._6)("commit",i?.behind??0),expand:!1}),new g.J(this.view,this,this.repoPath,"Ahead",{query:this.getCommitsQuery((0,o.oI)(e.ref1,e.ref2,"..")),comparison:e,direction:"ahead",files:{ref1:r??e.ref1,ref2:e.ref2,query:this.getAheadFilesQuery.bind(this)}},{description:(0,u._6)("commit",i?.ahead??0),expand:!1})];this.filterByAuthors?.length||s.push(new m.V(this.view,this,this.repoPath,this._compareWith.ref,this._ref.ref,this.getFilesQuery.bind(this),void 0,{expand:!1})),this.children=s}return this.children}getTreeItem(){let e;if(this.view.container.git.repositoryCount>1){let t=this.repoPath?this.view.container.git.getRepository(this.repoPath):void 0;e=t?.formattedName??this.repoPath}let t=new r.TreeItem(`Comparing ${this._ref.label??(0,o.zL)(this._ref.ref,{strings:{working:"Working Tree"}})} with ${this._compareWith.label??(0,o.zL)(this._compareWith.ref,{strings:{working:"Working Tree"}})}`,r.TreeItemCollapsibleState.Collapsed);return t.id=this.id,t.contextValue=`${p.Td.CompareResults}${""===this._ref.ref?"+working":""}${this.filterByAuthors?.length?"+filtered":""}`,t.description=e,t.iconPath=new r.ThemeIcon("compare-changes"),t}async getDiffRefs(){return Promise.resolve([this._compareWith.ref,this._ref.ref])}clearReviewed(){P(this.view,this.getStorageId()),this.store()}async swap(){if(""===this._ref.ref){r.window.showErrorMessage("Cannot swap comparisons with the working tree");return}let e=this.getStorageId(),t=this._ref;this._ref=this._compareWith,this._compareWith=t,await this.replace(e,!0),this.children=void 0,this.view.triggerNodeChange(this.parent),queueMicrotask(()=>this.view.reveal(this,{expand:!0,focus:!0,select:!0}))}async getAheadFilesQuery(){return this.getAheadBehindFilesQuery((0,o.oI)(this._compareWith?.ref||"HEAD",this._ref.ref||"HEAD","..."),""===this._ref.ref)}async getBehindFilesQuery(){return this.getAheadBehindFilesQuery((0,o.oI)(this._ref.ref||"HEAD",this._compareWith.ref||"HEAD","..."),!1)}async getAheadBehindFilesQuery(e,t){let[i,r,s,n]=await Promise.allSettled([this.view.container.git.getDiffStatus(this.repoPath,e),t?this.view.container.git.getDiffStatus(this.repoPath,"HEAD"):void 0,this.view.container.git.getChangedFilesCount(this.repoPath,e),t?this.view.container.git.getChangedFilesCount(this.repoPath,"HEAD"):void 0]),o=(0,c.Sb)(i)??[],a=(0,c.Sb)(s);if(t){let e=(0,c.Sb)(r);if(null!=e){if(0===o.length)o=e??[];else for(let t of e){let e=o.findIndex(e=>e.path===t.path);-1!==e?o.splice(e,1,t):o.push(t)}}let t=(0,c.Sb)(n);null!=t&&(a=null==a?t:{additions:a.additions+t.additions,deletions:a.deletions+t.deletions,changedFiles:o.length,approximated:!0})}return{label:`${(0,u._6)("file",o.length,{zero:"No"})} changed`,files:o,stats:a}}getCommitsQuery(e){let t=this.repoPath;return async i=>{let r=await this.view.container.git.getLog(t,{limit:i,ref:e,authors:this.filterByAuthors}),s={log:r,hasMore:r?.hasMore??!0};return s.hasMore&&(s.more=async e=>{s.log=await s.log?.more?.(e)??s.log,s.hasMore=s.log?.hasMore??!0}),s}}async getFilesQuery(){let e;if(""===this._compareWith.ref)throw Error("Cannot get files for comparisons of a ref with working tree");e=""===this._ref.ref?this._compareWith.ref:`${this._compareWith.ref}..${this._ref.ref}`;let[t,i]=await Promise.allSettled([this.view.container.git.getDiffStatus(this.repoPath,e),this.view.container.git.getChangedFilesCount(this.repoPath,e)]),r=(0,c.Sb)(t)??[];return{label:`${(0,u._6)("file",r.length,{zero:"No"})} changed`,files:r,stats:(0,c.Sb)(i)}}getStorageId(){return(0,s.FB)(`${this.repoPath}|${this._ref.ref}|${this._compareWith.ref}`,"base64")}remove(e=!1){return P(this.view,this.getStorageId()),this.view.updateStorage(this.getStorageId(),void 0,e)}async replace(e,t=!1){return P(this.view,e),await this.view.updateStorage(e,void 0,t),this.store(t)}store(e=!1){let t=this.getStorageId(),i=A(this.view,t);return this.view.updateStorage(t,{type:"comparison",timestamp:this._storedAt,path:this.repoPath,ref1:{label:this._ref.label,ref:this._ref.ref},ref2:{label:this._compareWith.label,ref:this._compareWith.ref},checkedFiles:i.length>0?i:void 0},e)}}function C(e){return`${e}|`}function A(e,t){let i=[];for(let[s,n]of e.nodeState.get(C(t),"checked"))n===r.TreeItemCheckboxState.Checked&&i.push(s);return i}function P(e,t){e.nodeState.delete(C(t),"checked")}function D(e,t){if(t?.length)for(let i of t)e.nodeState.storeState(i,"checked",r.TreeItemCheckboxState.Checked,!0)}v([(0,a.H)(),(0,l.fF)()],b.prototype,"getDiffRefs",1),v([(0,l.cM)()],b.prototype,"clearReviewed",1),v([(0,l.cM)()],b.prototype,"swap",1)},9719:(e,t,i)=>{i.d(t,{C:()=>v,m:()=>w});var r=i(9496),s=i(5255),n=i(9338),o=i(6373),a=i(7462),l=i(7881),h=i(2226),c=i(5148),u=i(3700),d=i(7469),p=i(7707),g=i(2610),m=i(7692),f=i(4167);class w extends g.R{constructor(e,t,i,r,s={}){super("file-commit",a.YY.fromFile(i,r.repoPath,r.sha),e,t,i),this.commit=r,this._options=s}toClipboard(){return`${this.commit.shortSha}: ${this.commit.summary}`}get isTip(){return(this._options.branch?.current&&this._options.branch.sha===this.commit.ref)??!1}get ref(){return this.commit}async getChildren(){if(!this.commit.file?.hasConflicts)return[];let[e,t]=await Promise.allSettled([this.view.container.git.getMergeStatus(this.commit.repoPath),this.view.container.git.getRebaseStatus(this.commit.repoPath)]),i=(0,d.Sb)(e),r=(0,d.Sb)(t);return null==i&&null==r?[]:[new m.l(this.view,this,i??r,this.file),new f.w(this.view,this,i??r,this.file)]}async getTreeItem(){if(null==this.commit.file){let e=await this.commit.getCommitForFile(this.file);if(null==e){let e=await this.view.container.git.getLogForFile(this.repoPath,this.file.path,{limit:2,ref:this.commit.sha});null!=e&&(this.commit=e.commits.get(this.commit.sha)??this.commit)}else this.commit=e}let e=new r.TreeItem(n.i.fromTemplate(this.view.config.formats.commits.label,this.commit,{dateFormat:c.D.get("defaultDateFormat"),getBranchAndTagTips:e=>this._options.getBranchAndTagTips?.(e,{compact:!0}),messageTruncateAtNewLine:!0}),this.commit.file?.hasConflicts?r.TreeItemCollapsibleState.Expanded:r.TreeItemCollapsibleState.None);if(e.contextValue=this.contextValue,e.description=n.i.fromTemplate(this.view.config.formats.commits.description,this.commit,{dateFormat:c.D.get("defaultDateFormat"),getBranchAndTagTips:e=>this._options.getBranchAndTagTips?.(e,{compact:!0}),messageTruncateAtNewLine:!0}),e.resourceUri=r.Uri.parse(`gitlens-view://commit-file/status/${this.file.status}`),!this.commit.isUncommitted&&this.view.config.avatars&&(e.iconPath=this._options.unpublished?new r.ThemeIcon("arrow-up",new r.ThemeColor("gitlens.unpublishedCommitIconColor")):await this.commit.getAvatarUri({defaultStyle:c.D.get("defaultGravatarsStyle")})),null==e.iconPath){let t=(0,l.tK)(this.file.status);e.iconPath={dark:this.view.container.context.asAbsolutePath((0,u.RQ)("images","dark",t)),light:this.view.container.context.asAbsolutePath((0,u.RQ)("images","light",t))}}return e.command=this.getCommand(),e}get contextValue(){return this.commit.isUncommitted?this.commit.file?.hasConflicts?`${p.Td.File}+conflicted`:this.commit.isUncommittedStaged?`${p.Td.File}+staged`:`${p.Td.File}+unstaged`:`${p.Td.File}+committed${this._options.branch?.current?"+current":""}${this.isTip?"+HEAD":""}${this._options.unpublished?"+unpublished":""}`}getCommand(){let e;if(e=this.commit.lines.length?this.commit.lines[0].line-1:this._options.selection?.active.line??0,this.commit.file?.hasConflicts)return{title:"Open Changes",command:s.Gh.DiffWith,arguments:[{lhs:{sha:"MERGE_HEAD",uri:a.YY.fromFile(this.file,this.repoPath,void 0,!0)},rhs:{sha:"HEAD",uri:a.YY.fromFile(this.file,this.repoPath)},repoPath:this.repoPath,line:0,showOptions:{preserveFocus:!1,preview:!1}}]};let t={commit:this.commit,uri:a.YY.fromFile(this.file,this.commit.repoPath),line:e,showOptions:{preserveFocus:!0,preview:!0}};return{title:"Open Changes with Previous Revision",command:s.Gh.DiffWithPrevious,arguments:[void 0,t]}}async resolveTreeItem(e){return null==e.tooltip&&(e.tooltip=await this.getTooltip()),e}async getConflictBaseUri(){if(!this.commit.file?.hasConflicts)return;let e=await this.view.container.git.getMergeBase(this.repoPath,"MERGE_HEAD","HEAD");return a.YY.fromFile(this.file,this.repoPath,e??"HEAD")}async getTooltip(){let e=await v(this.view.container,this.commit,this.file,this.view.config.formats.commits.tooltipWithStatus,{getBranchAndTagTips:this._options.getBranchAndTagTips,unpublished:this._options.unpublished}),t=new r.MarkdownString(e,!0);return t.supportHtml=!0,t.isTrusted=!0,t}}async function v(e,t,i,r,s){let a,l;let[u,p]=await Promise.allSettled([e.git.getBestRemotesWithProviders(t.repoPath),null==t.message?t.ensureFullDetails():void 0]),g=(0,d.Sb)(u,[]),[m]=g;if(m?.hasIntegration()){let[e,i]=await Promise.allSettled([(0,h.IN)(t.getEnrichedAutolinks(m)),t.getAssociatedPullRequest(m)]);a=d.Sb(e)?.value,l=(0,d.Sb)(i)}let f=o.o.fromTemplate(`\${status}\${ (originalPath)}\${'&nbsp;&nbsp;\u2022&nbsp;&nbsp;'changesDetail}`,i);return n.i.fromTemplateAsync(r.replace("{{slot-status}}",f),t,{enrichedAutolinks:a,dateFormat:c.D.get("defaultDateFormat"),getBranchAndTagTips:s?.getBranchAndTagTips,messageAutolinks:!0,messageIndent:4,pullRequest:l,outputFormat:"markdown",remotes:g,unpublished:s?.unpublished})}},4481:(e,t,i)=>{i.d(t,{Y:()=>a});var r=i(9496),s=i(7462),n=i(4627),o=i(7707);class a extends o.Re{constructor(e,t,i,r,n,a,l){super("folder",s.YY.fromRepoPath(r),e,t),this.parent=t,this.root=i,this.repoPath=r,this.folderName=n,this.relativePath=a,this.containsWorkingFiles=l,this._uniqueId=(0,o.tO)(`${this.type}+${a??n}`,this.context)}priority=1;get id(){return this._uniqueId}toClipboard(){return this.folderName}getChildren(){let e;if(void 0===this.root.descendants||void 0===this.root.children)return[];if("list"===a.getFileNesting(this.view.config.files,this.root.descendants,void 0===this.relativePath))this.root.descendants.forEach(e=>e.relativePath=this.root.relativePath),e=this.root.descendants;else for(let t of(e=[],this.root.children.values())){if(void 0===t.value){e.push(new a(this.view,this.folderName?this:this.parent,t,this.repoPath,t.name,t.relativePath,this.containsWorkingFiles));continue}t.value.parent=this.folderName?this:this.parent,t.value.relativePath=this.root.relativePath,e.push(t.value)}return e.sort((e,t)=>(e instanceof a?-1:1)-(t instanceof a?-1:1)||e.priority-t.priority||(0,n.dm)(e.label,t.label)),e}getTreeItem(){let e=new r.TreeItem(this.label,r.TreeItemCollapsibleState.Expanded);return e.id=this.id,e.contextValue=o.Td.Folder,this.containsWorkingFiles&&(e.contextValue+="+working"),e.iconPath=r.ThemeIcon.Folder,e.tooltip=this.label,e}get label(){return this.folderName}static getFileNesting(e,t,i){let r=e.layout||"auto";if("auto"===r){if(i||e.compact){let i=e.threshold||5;if(t.length<=i)return"list"}return"tree"}return r}}},4741:(e,t,i)=>{i.d(t,{E:()=>o});var r=i(7707),s=i(21);let n=[[0,"Less than a week ago"],[7,"Over a week ago"],[25,"Over a month ago"],[77,"Over 3 months ago"]];function*o(e,t,i,{show:o}={show:!0}){let a;if(!t.view.config.showRelativeDateMarkers||!o)return yield*e;let l=i??0,h=Date.now(),c=!0;for(let i of e){if(l<n.length){let[e,o]=n[l];if(void 0===a){let t=new Date(h);a=t.setDate(t.getDate()-e)}let u=new Date(i.commit.committer.date).setUTCHours(0,0,0,0);if(u<=a){for(;l<n.length-1;){[e]=n[l+1];let t=new Date(h);if(u>t.setDate(t.getDate()-e))break;l++,a=void 0,[,o]=n[l]}c||(yield new s.AE(t.view,t,"",o,void 0,void 0,r.Td.DateMarker)),l++,a=void 0}}c=!1,yield i}}},7692:(e,t,i)=>{i.d(t,{l:()=>u});var r=i(9496),s=i(5255),n=i(7462),o=i(4321),a=i(9529),l=i(5148),h=i(7707),c=i(9719);class u extends h.Re{constructor(e,t,i,r){super("conflict-current-changes",n.YY.fromFile(r,i.repoPath,"HEAD"),e,t),this.parent=t,this.status=i,this.file=r}_commit;async getCommit(){return null==this._commit&&(this._commit=this.view.container.git.getCommit(this.status.repoPath,"HEAD")),this._commit}getChildren(){return[]}async getTreeItem(){let e=await this.getCommit(),t=new r.TreeItem("Current changes",r.TreeItemCollapsibleState.None);return t.contextValue=h.Td.MergeConflictCurrentChanges,t.description=`${(0,o.Wh)(this.status.current,{expand:!1,icon:!1})}${null!=e?` (${(0,o.Wh)(e,{expand:!1,icon:!1})})`:" (HEAD)"}`,t.iconPath=this.view.config.avatars?await e?.getAvatarUri({defaultStyle:l.D.get("defaultGravatarsStyle")})??new r.ThemeIcon("diff"):new r.ThemeIcon("diff"),t.command=this.getCommand(),t}getCommand(){return null==this.status.mergeBase?(0,a.j$)("vscode.open","Open Revision",this.view.container.git.getRevisionUri("HEAD",this.file.path,this.status.repoPath)):(0,a.fA)(s.Gh.DiffWith,"Open Changes",{lhs:{sha:this.status.mergeBase,uri:n.YY.fromFile(this.file,this.status.repoPath,void 0,!0),title:`${this.file.path} (merge-base)`},rhs:{sha:"HEAD",uri:n.YY.fromFile(this.file,this.status.repoPath),title:`${this.file.path} (${(0,o.Wh)(this.status.current,{expand:!1,icon:!1})})`},repoPath:this.status.repoPath,line:0,showOptions:{preserveFocus:!0,preview:!0}})}async resolveTreeItem(e){return null==e.tooltip&&(e.tooltip=await this.getTooltip()),e}async getTooltip(){let e=await this.getCommit(),t=new r.MarkdownString(`Current changes on ${(0,o.Wh)(this.status.current,{label:!1})}\\
$(file)${s.NE.Space}${this.file.path}`,!0);if(null==e)return t;let i=await (0,c.C)(this.view.container,e,this.file,this.view.config.formats.commits.tooltipWithStatus);return t.appendMarkdown(`

${i}`),t.isTrusted=!0,t}}},4167:(e,t,i)=>{i.d(t,{w:()=>u});var r=i(9496),s=i(5255),n=i(7462),o=i(4321),a=i(9529),l=i(5148),h=i(7707),c=i(9719);class u extends h.Re{constructor(e,t,i,r){super("conflict-incoming-changes",n.YY.fromFile(r,i.repoPath,i.HEAD.ref),e,t),this.parent=t,this.status=i,this.file=r}_commit;async getCommit(){if(null==this._commit){let e="rebase"===this.status.type?this.status.steps.current.commit?.ref:this.status.HEAD.ref;if(null==e)return;this._commit=this.view.container.git.getCommit(this.status.repoPath,e)}return this._commit}getChildren(){return[]}async getTreeItem(){let e=await this.getCommit(),t=new r.TreeItem("Incoming changes",r.TreeItemCollapsibleState.None);return t.contextValue=h.Td.MergeConflictIncomingChanges,t.description=`${(0,o.Wh)(this.status.incoming,{expand:!1,icon:!1})}${"rebase"===this.status.type?` (${(0,o.Wh)(this.status.steps.current.commit,{expand:!1,icon:!1})})`:` (${(0,o.Wh)(this.status.HEAD,{expand:!1,icon:!1})})`}`,t.iconPath=this.view.config.avatars?await e?.getAvatarUri({defaultStyle:l.D.get("defaultGravatarsStyle")})??new r.ThemeIcon("diff"):new r.ThemeIcon("diff"),t.command=this.getCommand(),t}getCommand(){return null==this.status.mergeBase?(0,a.j$)("vscode.open","Open Revision",this.view.container.git.getRevisionUri(this.status.HEAD.ref,this.file.path,this.status.repoPath)):(0,a.fA)(s.Gh.DiffWith,"Open Changes",{lhs:{sha:this.status.mergeBase,uri:n.YY.fromFile(this.file,this.status.repoPath,void 0,!0),title:`${this.file.path} (merge-base)`},rhs:{sha:this.status.HEAD.ref,uri:n.YY.fromFile(this.file,this.status.repoPath),title:`${this.file.path} (${null!=this.status.incoming?(0,o.Wh)(this.status.incoming,{expand:!1,icon:!1}):"incoming"})`},repoPath:this.status.repoPath,line:0,showOptions:{preserveFocus:!0,preview:!0}})}async resolveTreeItem(e){return null==e.tooltip&&(e.tooltip=await this.getTooltip()),e}async getTooltip(){let e=await this.getCommit(),t=new r.MarkdownString(`Incoming changes from ${(0,o.Wh)(this.status.incoming,{label:!1})}\\
$(file)${s.NE.Space}${this.file.path}`,!0);if(null==e)return t.appendMarkdown("rebase"===this.status.type?`

${(0,o.Wh)(this.status.steps.current.commit,{capitalize:!0,label:!1})}`:`

${(0,o.Wh)(this.status.HEAD,{capitalize:!0,label:!1})}`),t;let i=await (0,c.C)(this.view.container,e,this.file,this.view.config.formats.commits.tooltipWithStatus);return t.appendMarkdown(`

${i}`),t.isTrusted=!0,t}}},2060:(e,t,i)=>{i.d(t,{Z:()=>l});var r=i(9496),s=i(7462),n=i(5367),o=i(8452),a=i(7707);class l extends a.Re{constructor(e,t,i,r){let o,l;"string"==typeof r?l=r:(l=r.repoPath,o=r),super("pullrequest",s.YY.fromRepoPath(l),e,t),this.parent=t,this.pullRequest=i,null!=o&&(o instanceof n.XI?this.updateContext({branch:o}):this.updateContext({commit:o})),this._uniqueId=(0,a.tO)(this.type,this.context),this.repoPath=l}repoPath;get id(){return this._uniqueId}toClipboard(){return this.pullRequest.url}getChildren(){return[]}getTreeItem(){let e=new r.TreeItem(`#${this.pullRequest.id}: ${this.pullRequest.title}`,r.TreeItemCollapsibleState.None);e.id=this.id,e.contextValue=a.Td.PullRequest,e.description=`${this.pullRequest.state}, ${this.pullRequest.formatDateFromNow()}`,e.iconPath=(0,o.xX)(this.pullRequest);let t=new r.MarkdownString("",!0);t.supportHtml=!0,t.isTrusted=!0,null!=this.context.commit&&t.appendMarkdown(`Commit \`$(git-commit) ${this.context.commit.shortSha}\` was introduced by $(git-pull-request) PR #${this.pullRequest.id}

`);let i=` "Open Pull Request \\#${this.pullRequest.id} on ${this.pullRequest.provider.name}"`;return t.appendMarkdown(`${(0,o.sy)(this.pullRequest)} [**${this.pullRequest.title.trim()}**](${this.pullRequest.url}${i}) \\
[#${this.pullRequest.id}](${this.pullRequest.url}${i}) by [@${this.pullRequest.author.name}](${this.pullRequest.author.url} "Open @${this.pullRequest.author.name} on ${this.pullRequest.provider.name}") was ${this.pullRequest.state.toLowerCase()} ${this.pullRequest.formatDateFromNow()}`),e.tooltip=t,e}}},5988:(e,t,i)=>{i.d(t,{J:()=>S});var r=i(9496),s=i(7462),n=i(6450),o=i(5148),a=i(5432),l=i(4241),h=i(3105),c=i(7469),u=i(7707),d=i(4092),p=i(2226),g=i(9165),m=i(1185),f=i(21),w=i(2060);let v=0;class y extends g.y{constructor(e,t,i,r,n){super("autolinks",s.YY.fromRepoPath(i),e,t),this.parent=t,this.repoPath=i,this.log=r,this.expand=n,this._instanceId=v++,this.updateContext({autolinksId:String(this._instanceId)}),this._uniqueId=(0,u.tO)(this.type,this.context)}_instanceId;get id(){return this._uniqueId}async getChildren(){if(null==this.children){let e;let t=[...this.log.commits.values()];if(t.length){let i=await this.view.container.git.getBestRemoteWithProvider(this.repoPath),r=t.map(e=>e.message).join("\n"),[s]=await Promise.allSettled([this.view.container.autolinks.getEnrichedAutolinks(r,i).then(e=>null!=e?(0,p.io)(e,void 0,250):void 0)]),n=(0,c.Sb)(s);n?.size&&(e=[...n.values()].map(([e,t])=>null!=e&&d.i7.is(e?.value)?new w.Z(this.view,this,e.value,this.log.repoPath):new m.Z(this.view,this,this.repoPath,t,e?.value)))}e?.length||(e=[new f.AE(this.view,this,"No autolinked issues or pull requests could be found.")]),this.log.hasMore&&e.push(new f.Gd(this.view,this.parent,e[e.length-1],{context:{expandAutolinks:!0},message:"Load more commits to search for autolinks"})),this.children=e}return this.children}getTreeItem(){let e=new r.TreeItem("Autolinked Issues and Pull Requests",this.expand?r.TreeItemCollapsibleState.Expanded:r.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.contextValue=u.Td.AutolinkedItems,e}}var b=i(2925),C=i(4741),A=i(812),P=i(1101),D=Object.defineProperty,k=Object.getOwnPropertyDescriptor;class S extends u.Re{constructor(e,t,i,r,n,o,a){super("results-commits",s.YY.fromRepoPath(i),e,t),this.parent=t,this.repoPath=i,this._label=r,this._results=n,this._options=o,null!=n.direction&&this.updateContext({branchStatusUpstreamType:n.direction}),this._uniqueId=(0,u.tO)(this.type,this.context),this.limit=this.view.getNodeLastKnownLimit(this),this._options={expand:!0,...o},null!=a&&(this.splatted=a)}limit;get id(){return this._uniqueId}get ref1(){return this._results.comparison?.ref1}get ref2(){return this._results.comparison?.ref2}get isComparisonFiltered(){return this.context.comparisonFiltered}_onChildrenCompleted;async getChildren(){this._onChildrenCompleted?.cancel(),this._onChildrenCompleted=(0,c.PQ)();let{log:e}=await this.getCommitsQueryResults();if(null==e)return[];let[t]=await Promise.all([this.view.container.git.getBranchesAndTagsTipsFn(this.uri.repoPath)]),i=[new y(this.view,this,this.uri.repoPath,e,this._expandAutolinks)];this._expandAutolinks=!1;let{files:r}=this._results;null==r||this.isComparisonFiltered||i.push(new A.V(this.view,this,this.uri.repoPath,r.ref1,r.ref2,r.query,this._results.direction,{expand:!1}));let s={expand:this._options.expand&&1===e.count};return i.push(...(0,C.E)((0,h.UI)(e.commits.values(),e=>(0,n.G2)(e)?new P.i(this.view,this,e,{icon:!0}):new b.D(this.view,this,e,void 0,void 0,t,s)),this,void 0,{show:e.count>1})),e.hasMore&&i.push(new f.Gd(this.view,this,i[i.length-1])),this._onChildrenCompleted.fulfill(),i}async getTreeItem(){let e,t;if(this._results.deferred)e=this._label,t=r.TreeItemCollapsibleState.Collapsed;else try{let i;({label:e,log:i}=await (0,c.HO)(this.getCommitsQueryResults(),100)),t=null==i||0===i.count?r.TreeItemCollapsibleState.None:this._options.expand||1===i.count?r.TreeItemCollapsibleState.Expanded:r.TreeItemCollapsibleState.Collapsed}catch(e){e instanceof c.PK&&setTimeout(async()=>{await e.promise;try{await this._onChildrenCompleted?.promise}catch{}setTimeout(()=>void this.triggerChange(!1),1)},1),t=r.TreeItemCollapsibleState.Collapsed}let i=new r.TreeItem(e??this._label,t);return i.id=this.id,i.contextValue=null!=this._results.comparison?u.Td.CompareResultsCommits:u.Td.SearchResultsCommits,i.description=this._options.description,i}refresh(e=!1){e&&(this._commitsQueryResults=void 0,this._commitsQueryResultsPromise=void 0,this.getCommitsQueryResults())}_commitsQueryResultsPromise;async getCommitsQueryResults(){if(null==this._commitsQueryResultsPromise){this._commitsQueryResultsPromise=this._results.query(this.limit??o.D.get("advanced.maxSearchItems"));let e=await this._commitsQueryResultsPromise;this._commitsQueryResults=e,this._hasMore=e.hasMore,this._results.deferred&&(this._results.deferred=!1,this.parent.triggerChange(!1))}return this._commitsQueryResultsPromise}_commitsQueryResults;maybeGetCommitsQueryResults(){return this._commitsQueryResults}_hasMore=!0;get hasMore(){return this._hasMore}_expandAutolinks=!1;async loadMore(e,t){let i=await this.getCommitsQueryResults();null!=i&&i.hasMore&&(null!=t&&"expandAutolinks"in t&&(this._expandAutolinks=!!t.expandAutolinks),await i.more?.(e??this.view.config.pageItemLimit),this.limit=i.log?.count,this.triggerChange(!1))}}((e,t,i,r)=>{for(var s,n=r>1?void 0:r?k(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&D(t,i,n)})([(0,a.H)(),(0,l.fF)()],S.prototype,"refresh",1)},202:(e,t,i)=>{i.d(t,{C:()=>p});var r=i(9496),s=i(5255),n=i(6373),o=i(7462),a=i(7881),l=i(4321),h=i(3700),c=i(7707),u=i(2610),d=i(5538);class p extends u.R{constructor(e,t,i,r,s,n,a){super("results-file",o.YY.fromFile(r,i,s||n),e,t,r),this.ref1=s,this.ref2=n,this.direction=a,this.updateContext({file:r}),null!=this.context.storedComparisonId?this._uniqueId=`${(0,d.iS)(this.context.storedComparisonId)}${this.direction}|${r.path}`:this._uniqueId=(0,c.tO)(this.type,this.context)}toClipboard(){return this.file.path}get ref(){return(0,l.xB)(this.ref1||this.ref2,this.uri.repoPath)}getChildren(){return[]}getTreeItem(){let e=new r.TreeItem(this.label,r.TreeItemCollapsibleState.None);e.contextValue=c.Td.ResultsFile,e.description=this.description,e.tooltip=n.o.fromTemplate(`\${file}
\${directory}/

\${status}\${ (originalPath)}`,this.file);let t=(0,a.tK)(this.file.status);return e.iconPath={dark:this.view.container.context.asAbsolutePath((0,h.RQ)("images","dark",t)),light:this.view.container.context.asAbsolutePath((0,h.RQ)("images","light",t))},e.command=this.getCommand(),e.checkboxState={state:this.getState("checked")??r.TreeItemCheckboxState.Unchecked,tooltip:"Mark as Reviewed"},e}_description;get description(){return void 0===this._description&&(this._description=n.o.fromTemplate(this.view.config.formats.files.description,this.file,{relativePath:this.relativePath})),this._description}_folderName;get folderName(){return void 0===this._folderName&&(this._folderName=(0,h.Fd)(this.uri.relativePath)),this._folderName}_label;get label(){return void 0===this._label&&(this._label=n.o.fromTemplate(this.view.config.formats.files.label,this.file,{relativePath:this.relativePath})),this._label}_relativePath;get relativePath(){return this._relativePath}set relativePath(e){this._relativePath=e,this._label=void 0,this._description=void 0}get priority(){return 0}getCommand(){let e={lhs:{sha:this.ref1,uri:("R"===this.file.status||"C"===this.file.status)&&"behind"===this.direction?o.YY.fromFile(this.file,this.uri.repoPath,this.ref2,!0):this.uri},rhs:{sha:this.ref2,uri:("R"===this.file.status||"C"===this.file.status)&&"behind"!==this.direction?o.YY.fromFile(this.file,this.uri.repoPath,this.ref2,!0):this.uri},repoPath:this.uri.repoPath,line:0,showOptions:{preserveFocus:!0,preview:!0}};return{title:"Open Changes",command:s.Gh.DiffWith,arguments:[e]}}}},812:(e,t,i)=>{i.d(t,{V:()=>y,W:()=>v});var r,s=i(9496),n=i(7462),o=i(2800),a=i(5432),l=i(4241),h=i(3105),c=i(3700),u=i(7469),d=i(4627),p=i(7707),g=i(4481),m=i(202),f=Object.defineProperty,w=Object.getOwnPropertyDescriptor,v=((r=v||{})[r.Left=0]="Left",r[r.Right=1]="Right",r);class y extends p.Re{constructor(e,t,i,r,s,o,a,l){super("results-files",n.YY.fromRepoPath(i),e,t),this.parent=t,this.repoPath=i,this.ref1=r,this.ref2=s,this._filesQuery=o,this.direction=a,this._options=l,null!=this.direction&&this.updateContext({branchStatusUpstreamType:this.direction}),this._uniqueId=(0,p.tO)(this.type,this.context),this._options={expand:!0,...l}}get id(){return this._uniqueId}get filter(){return this.getState("filter")}set filter(e){this.filter!==e&&(this.storeState("filter",e,!0),this._filterResults=void 0,this.triggerChange(!1))}get filterable(){return null!=this.filter||this.ref1!==this.ref2&&void 0===this.direction}getFilterContextValue(){switch(this.filter){case 0:return"+filtered~left";case 1:return"+filtered~right";default:return""}}async getChildren(){let e=await this.getFilesQueryResults(),t=(null!=this.filter?e.filtered?.get(this.filter):void 0)??e.files;if(null==t)return[];let i=[...(0,h.UI)(t,e=>new m.C(this.view,this,this.repoPath,e,this.ref1,this.ref2,this.direction))];if("list"!==this.view.config.files.layout){let e=(0,o.Mo)(i,e=>e.uri.relativePath.split("/"),(...e)=>(0,c.AH)((0,c.RQ)(...e)),this.view.config.files.compact);i=new g.Y(this.view,this,e,this.repoPath,"",void 0).getChildren()}else i.sort((e,t)=>e.priority-t.priority||(0,d.dm)(e.label,t.label));return i}async getTreeItem(){let e,t,i,r,n,o;let a=this.filter;try{let l=await (0,u.HO)(this.getFilesQueryResults(),100);e=l.label,null==a&&null!=l.stats&&(t=`${(0,d._6)("addition",l.stats.additions)} (+), ${(0,d._6)("deletion",l.stats.deletions)} (-)${l.stats.approximated?" *approximated":""}`,o=`${e}, ${t}`),null!=a?(t="Filtered",o=`${e} &mdash; ${t}`,r=l.filtered?.get(a),null==r&&(e="files changed",i=new s.ThemeIcon("ellipsis"),n=s.TreeItemCollapsibleState.Collapsed,this._filterResults?.then(()=>queueMicrotask(()=>this.triggerChange(!1))))):r=l.files,void 0===n&&(n=null==r||0===r.length?s.TreeItemCollapsibleState.None:this._options.expand?s.TreeItemCollapsibleState.Expanded:s.TreeItemCollapsibleState.Collapsed)}catch(t){t instanceof u.PK&&t.promise.then(()=>queueMicrotask(()=>this.triggerChange(!1))),e="files changed",i=new s.ThemeIcon("ellipsis"),n=s.TreeItemCollapsibleState.Collapsed}let l=new s.TreeItem(`${null!=a&&null!=r?`Showing ${r.length} of `:""}${e}`,n);return l.description=t,l.id=this.id,l.iconPath=i,l.contextValue=`${p.Td.ResultsFiles}${this.filterable?"+filterable":""}${this.getFilterContextValue()}`,l.tooltip=o,l}refresh(e=!1){e&&(this.deleteState("filter"),this._filterResults=void 0,this._filesQueryResults=this._filesQuery())}_filesQueryResults;_filterResults;async getFilesQueryResults(){void 0===this._filesQueryResults&&(this._filesQueryResults=this._filesQuery());let e=await this._filesQueryResults;return null!=e.files&&this.filterable&&null!=this.filter&&e.filtered?.get(this.filter)==null&&(void 0===this._filterResults&&(this._filterResults=this.filterResults(this.filter,e)),await this._filterResults),e}async filterResults(e,t){let i;let r=0===this.filter?this.ref2:this.ref1,s=await this.view.container.git.getMergeBase(this.repoPath,this.ref1||"HEAD",this.ref2||"HEAD");if(null!=s){let e=await this.view.container.git.getDiffStatus(this.uri.repoPath,`${s}..${r}`);null!=e&&(i=new Set(e.map(e=>e.path)))}else{let e=await this.view.container.git.getCommit(this.uri.repoPath,r||"HEAD");e?.files!=null&&(i=new Set(e.files.map(e=>e.path)))}null==t.filtered&&(t.filtered=new Map),t.filtered.set(e,null==i?[]:t.files.filter(e=>i.has(e.path)))}}((e,t,i,r)=>{for(var s,n=r>1?void 0:r?w(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&f(t,i,n)})([(0,a.H)(),(0,l.fF)()],y.prototype,"refresh",1)},4655:(e,t,i)=>{i.d(t,{V:()=>f});var r=i(9496),s=i(3951),n=i(9311),o=i(7462),a=i(6934),l=i(5432),h=i(4241),c=i(4627),u=i(7707),d=i(5988),p=Object.defineProperty,g=Object.getOwnPropertyDescriptor;let m=0;class f extends u.Re{constructor(e,t,i,r,s,n,l=0){super("search-results",o.YY.fromRepoPath(i),e,t),this.parent=t,this.repoPath=i,this._search=r,this._labels=s,this._searchQueryOrLog=n,this._storedAt=l,this._instanceId=m++,this.updateContext({searchId:`${(0,a.FL)(this._search)}+${this._instanceId}`}),this._uniqueId=(0,u.tO)(this.type,this.context),0===this._storedAt&&(this._storedAt=Date.now(),this.store(!0))}_instanceId;get id(){return this._uniqueId}get order(){return this._storedAt}get search(){return this._search}dismiss(){this.remove(!0)}_resultsNode;ensureResults(){if(null==this._resultsNode){let e;null==this._searchQueryOrLog?(e=!0,this._searchQueryOrLog=this.getSearchQuery({label:this._labels.queryLabel})):"function"!=typeof this._searchQueryOrLog&&(this._searchQueryOrLog=this.getSearchQuery({label:this._labels.queryLabel},this._searchQueryOrLog)),this._resultsNode=new d.J(this.view,this,this.repoPath,this._labels.label,{query:this._searchQueryOrLog,deferred:e},{expand:!1},!0)}return this._resultsNode}async getChildren(){return this.ensureResults().getChildren()}async getTreeItem(){let e=await this.ensureResults().getTreeItem();if(e.id=this.id,e.contextValue=u.Td.SearchResults,this.view.container.git.repositoryCount>1){let t=this.view.container.git.getRepository(this.repoPath);e.description=t?.formattedName??this.repoPath}return e.iconPath=new r.ThemeIcon("search"),e}get hasMore(){return this.ensureResults().hasMore}async loadMore(e){return this.ensureResults().loadMore(e)}async edit(e){if(null==e){await (0,n.m)({command:"search",prefillOnly:!0,state:{repo:this.repoPath,...this.search,showResultsInSideBar:this}});return}let t=this.getStorageId();this._search=e.pattern,this._labels=e.labels,this._searchQueryOrLog=e.log,this._resultsNode=void 0,await this.replace(t,!0),this.triggerChange(!1),queueMicrotask(()=>this.view.reveal(this,{expand:!0,focus:!0,select:!0}))}refresh(e=!1){this._resultsNode?.refresh(e)}getSearchLabel(e,t){if("string"==typeof e)return e;let i=t?.count??0,r=void 0===e.resultsType?{singular:"search result",plural:"search results"}:e.resultsType;return`${(0,c._6)(r.singular,i,{format:e=>t?.hasMore?`${e}+`:void 0,plural:r.plural,zero:"No"})} ${e.label}`}getSearchQuery(e,t){let i=!0;return async r=>{t=await (t??this.view.container.git.richSearchCommits(this.repoPath,this.search)),i||t?.query==null||(t=await t.query(r)),i=!1;let s={label:this.getSearchLabel(e.label,t),log:t,hasMore:t?.hasMore??!1};return s.hasMore&&(s.more=async t=>{s.log=await s.log?.more?.(t)??s.log,s.label=this.getSearchLabel(e.label,s.log),s.hasMore=s.log?.hasMore??!0}),s}}getStorageId(){return(0,s.FB)(`${this.repoPath}|${(0,a.FL)(this.search)}`,"base64")}remove(e=!1){return this.view.updateStorage(this.getStorageId(),void 0,e)}async replace(e,t=!1){return await this.view.updateStorage(e,void 0,t),this.store(t)}store(e=!1){return this.view.updateStorage(this.getStorageId(),{type:"search",timestamp:this._storedAt,path:this.repoPath,labels:this._labels,search:(0,a.KQ)(this.search)},e)}}((e,t,i,r)=>{for(var s,n=r>1?void 0:r?g(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&p(t,i,n)})([(0,l.H)(),(0,h.fF)()],f.prototype,"refresh",1)},2758:(e,t,i)=>{i.d(t,{y:()=>n});var r=i(7707),s=i(2601);class n extends s.q{constructor(e,t,i,r){super("stash-file",e,t,i,r)}get contextValue(){return`${r.Td.File}+stashed`}}},1101:(e,t,i)=>{i.d(t,{i:()=>p});var r=i(9496),s=i(9338),n=i(2800),o=i(5148),a=i(3700),l=i(4627),h=i(7707),c=i(2610),u=i(4481),d=i(2758);class p extends c.b{constructor(e,t,i,r){super("stash",i.getGitUri(),e,t),this.parent=t,this.commit=i,this.options=r,this.updateContext({commit:i}),this._uniqueId=(0,h.tO)(this.type,this.context)}get id(){return this._uniqueId}toClipboard(){return this.commit.stashName}get ref(){return this.commit}async getChildren(){let e=(await this.commit.getCommitsForFiles()).map(e=>new d.y(this.view,this,e.file,e));if("list"!==this.view.config.files.layout){let t=(0,n.Mo)(e,e=>e.uri.relativePath.split("/"),(...e)=>(0,a.AH)((0,a.RQ)(...e)),this.view.config.files.compact);e=new u.Y(this.view,this,t,this.repoPath,"",void 0).getChildren()}else e.sort((e,t)=>(0,l.dm)(e.label,t.label));return e}getTreeItem(){let e=new r.TreeItem(s.i.fromTemplate(this.view.config.formats.stashes.label,this.commit,{messageTruncateAtNewLine:!0,dateFormat:o.D.get("defaultDateFormat")}),r.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.description=s.i.fromTemplate(this.view.config.formats.stashes.description,this.commit,{messageTruncateAtNewLine:!0,dateFormat:o.D.get("defaultDateFormat")}),e.contextValue=h.Td.Stash,this.options?.icon&&(e.iconPath=new r.ThemeIcon("archive")),e.tooltip=s.i.fromTemplate(`\${'On 'stashOnRef
}\${ago} (\${date})

\${message}`,this.commit,{dateFormat:o.D.get("defaultDateFormat")}),e}}},6586:(e,t,i)=>{i.d(t,{q:()=>p});var r=i(9496),s=i(5255),n=i(6373),o=i(7462),a=i(7881),l=i(3700),h=i(4627),c=i(5209),u=i(7707),d=i(9719);class p extends c.T{commits;_direction;_hasStagedChanges;_hasUnstagedChanges;constructor(e,t,i,r,s,n="ahead"){let a,l=!1,h=!1;for(let e of s)if(e.isUncommitted){if(e.isUncommittedStaged){l=!0,h||(a=e.sha);break}a=void 0,h=!0}else if(h)break;else{a=e.sha;break}super("status-file",o.YY.fromFile(i,r,a),e,t,i),this.commits=s,this._direction=n,this._hasStagedChanges=l,this._hasUnstagedChanges=h}toClipboard(){return this.fileName}get fileName(){return this.file.path}getChildren(){return this.commits.map(e=>new d.m(this.view,this,this.file,e))}getTreeItem(){let e=new r.TreeItem(this.label,r.TreeItemCollapsibleState.None);if(e.description=this.description,(this._hasStagedChanges||this._hasUnstagedChanges)&&1===this.commits.length)e.contextValue=u.Td.File,this._hasStagedChanges?(e.contextValue+="+staged",e.tooltip=n.o.fromTemplate(`\${file}
\${directory}/

\${status}\${ (originalPath)} in Index (staged)`,this.file)):(e.contextValue+="+unstaged",e.tooltip=n.o.fromTemplate(`\${file}
\${directory}/

\${status}\${ (originalPath)} in Working Tree`,this.file)),e.resourceUri=this.view.container.git.getAbsoluteUri(this.file.path,this.repoPath),e.iconPath=r.ThemeIcon.File,e.command=this.getCommand();else{if(e.collapsibleState=r.TreeItemCollapsibleState.Collapsed,this._hasStagedChanges||this._hasUnstagedChanges)e.contextValue=u.Td.File,this._hasStagedChanges&&this._hasUnstagedChanges?e.contextValue+="+staged+unstaged":this._hasStagedChanges?e.contextValue+="+staged":e.contextValue+="+unstaged",e.resourceUri=this.view.container.git.getAbsoluteUri(this.file.path,this.repoPath),e.iconPath=r.ThemeIcon.File;else{e.contextValue=u.Td.StatusFileCommits;let t=(0,a.tK)(this.file.status);e.iconPath={dark:this.view.container.context.asAbsolutePath((0,l.RQ)("images","dark",t)),light:this.view.container.context.asAbsolutePath((0,l.RQ)("images","light",t))}}e.tooltip=n.o.fromTemplate(`\${file}
\${directory}/

\${status}\${ (originalPath)} in ${this.getChangedIn()}`,this.file),e.command=this.getCommand()}return this._label=void 0,this._description=void 0,e}_description;get description(){return null==this._description&&(this._description=n.o.fromTemplate(this.view.config.formats.files.description,{...this.file,commit:this.commit},{relativePath:this.relativePath})),this._description}_folderName;get folderName(){return null==this._folderName&&(this._folderName=(0,l.Fd)(this.uri.relativePath)),this._folderName}_label;get label(){return null==this._label&&(this._label=n.o.fromTemplate(this.view.config.formats.files.label,{...this.file,commit:this.commit},{relativePath:this.relativePath})),this._label}get commit(){return this.commits[0]}get priority(){return this._hasStagedChanges&&!this._hasUnstagedChanges?-3:this._hasStagedChanges?-2:this._hasUnstagedChanges?-1:0}_relativePath;get relativePath(){return this._relativePath}set relativePath(e){this._relativePath=e,this._label=void 0,this._description=void 0}getChangedIn(){let e=[],t=0;return this._hasUnstagedChanges&&(t++,e.push("Working Tree")),this._hasStagedChanges&&(t++,e.push("Index (staged)")),this.commits.length>t&&(t=this.commits.length-t),t>0&&e.push((0,h._6)("commit",t)),e.length>2&&(e[e.length-1]=`and ${e[e.length-1]}`),e.join(e.length>2?", ":" and ")}getCommand(){if((this._hasStagedChanges||this._hasUnstagedChanges)&&1===this.commits.length){let e={commit:this.commit,uri:o.YY.fromFile(this.file,this.repoPath),line:0,showOptions:{preserveFocus:!0,preview:!0}};return{title:"Open Changes with Previous Revision",command:s.Gh.DiffWithPrevious,arguments:[void 0,e]}}let e="behind"===this._direction?this.commits[0]:this.commits[this.commits.length-1],t=e.files?.find(e=>e.path===this.file.path)??this.file,i={lhs:{sha:"behind"===this._direction?e.sha:`${e.sha}^`,uri:o.YY.fromFile(t,this.repoPath,void 0,!0)},rhs:{sha:"",uri:o.YY.fromFile(this.file,this.repoPath)},repoPath:this.repoPath,line:0,showOptions:{preserveFocus:!0,preview:!0}};return{title:"Open Changes",command:s.Gh.DiffWith,arguments:[i]}}}},5517:(e,t,i)=>{i.d(t,{Qu:()=>y,_H:()=>w});var r=i(9496),s=i(2540),n=i(9529),o=i(5148),a=i(4241),l=i(2185),h=i(9796),c=i(4336),u=i(6004),d=i(7469),p=i(7707),g=Object.defineProperty,m=Object.getOwnPropertyDescriptor,f=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?m(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&g(t,i,n),n};class w{constructor(e,t,i,s){if(this.container=e,this.type=t,this.name=i,this.trackingFeature=s,this.disposables.push((0,l.IH)(e.onReady)(this.onReady,this)),this.container.debugging||o.D.get("debug")){let e=function(e,t,i){null==e.tooltip&&(e.tooltip=new r.MarkdownString(null!=e.label&&"string"!=typeof e.label?e.label.label:e.label??"")),"string"==typeof e.tooltip?e.tooltip=`${e.tooltip}

---
context: ${e.contextValue}
node: ${t.toString()}${null!=i?`
parent: ${i.toString()}`:""}`:e.tooltip.appendMarkdown(`

---

context: \`${e.contextValue}\`\\
node: \`${t.toString()}\`${null!=i?`\\
parent: \`${i.toString()}\``:""}`)},t=this.getTreeItem;this.getTreeItem=async function(i){let r=await t.apply(this,[i]);return null==i.resolveTreeItem&&e(r,i,i.getParent()),r};let i=this.resolveTreeItem;this.resolveTreeItem=async function(t,r){return e(t=await i.apply(this,[t,r]),r,r.getParent()),t}}this.disposables.push(...this.registerCommands())}get id(){return`gitlens.views.${this.type}`}_onDidInitialize=new r.EventEmitter;initialized=!1;_onDidChangeTreeData=new r.EventEmitter;get onDidChangeTreeData(){return this._onDidChangeTreeData.event}_onDidChangeSelection=new r.EventEmitter;get onDidChangeSelection(){return this._onDidChangeSelection.event}_onDidChangeVisibility=new r.EventEmitter;get onDidChangeVisibility(){return this._onDidChangeVisibility.event}_onDidChangeNodeCollapsibleState=new r.EventEmitter;get onDidChangeNodeCollapsibleState(){return this._onDidChangeNodeCollapsibleState.event}_onDidChangeNodesCheckedState=new r.EventEmitter;get onDidChangeNodesCheckedState(){return this._onDidChangeNodesCheckedState.event}disposables=[];root;tree;_lastKnownLimits=new Map;dispose(){this._nodeState?.dispose(),this._nodeState=void 0,r.Disposable.from(...this.disposables).dispose()}onReady(){this.initialize({canSelectMany:this.canSelectMany,showCollapseAll:this.showCollapseAll}),queueMicrotask(()=>this.onConfigurationChanged())}get canReveal(){return!0}get canSelectMany(){return this.container.prereleaseOrDebugging&&o.D.get("views.experimental.multiSelect.enabled",void 0,!1)}_nodeState;get nodeState(){return null==this._nodeState&&(this._nodeState=new v),this._nodeState}get showCollapseAll(){return!0}filterConfigurationChanged(e){if(!o.D.changed(e,"views"))return!1;if(o.D.changed(e,`views.${this.configKey}`))return!0;for(let t of s.TA)if(o.D.changed(e,`views.${t}`))return!0;return!1}get badge(){return this.tree?.badge}set badge(e){null!=this.tree&&(this.tree.badge=e)}_title;get title(){return this._title}set title(e){this._title=e,null!=this.tree&&(this.tree.title=e)}_description;get description(){return this._description}set description(e){this._description=e,null!=this.tree&&(this.tree.description=e)}_message;get message(){return this._message}set message(e){this._message=e,null!=this.tree&&(this.tree.message=e)}getQualifiedCommand(e){return`gitlens.views.${this.type}.${e}`}onConfigurationChanged(e){null!=e&&null!=this.root&&this.refresh(!0)}initialize(e={}){this.tree=r.window.createTreeView(this.id,{...e,treeDataProvider:this}),this.disposables.push(o.D.onDidChange(e=>{this.filterConfigurationChanged(e)&&(this._config=void 0,this.onConfigurationChanged(e))},this),this.tree,this.tree.onDidChangeSelection((0,h.Ds)(this.onSelectionChanged,250),this),this.tree.onDidChangeVisibility((0,h.Ds)(this.onVisibilityChanged,250),this),this.tree.onDidChangeCheckboxState(this.onCheckboxStateChanged,this),this.tree.onDidCollapseElement(this.onElementCollapsed,this),this.tree.onDidExpandElement(this.onElementExpanded,this)),null!=this._title?this.tree.title=this._title:this._title=this.tree.title,null!=this._description&&(this.tree.description=this._description),null!=this._message&&(this.tree.message=this._message)}ensureRoot(e=!1){return(null==this.root||e)&&(this.root=this.getRoot()),this.root}getChildren(e){if(null!=e)return e.getChildren();let t=this.ensureRoot().getChildren();return this.initialized||((0,d.tI)(t)?t.then(()=>{this.initialized||(this.initialized=!0,setTimeout(()=>this._onDidInitialize.fire(),1))}):(this.initialized=!0,setTimeout(()=>this._onDidInitialize.fire(),1))),t}getParent(e){return e.getParent()}getTreeItem(e){return e.getTreeItem()}resolveTreeItem(e,t){return t.resolveTreeItem?.(e)??e}onElementCollapsed(e){this._onDidChangeNodeCollapsibleState.fire({...e,state:r.TreeItemCollapsibleState.Collapsed})}onElementExpanded(e){this._onDidChangeNodeCollapsibleState.fire({...e,state:r.TreeItemCollapsibleState.Expanded})}onCheckboxStateChanged(e){try{for(let[t,i]of e.items){if(null==t.id)throw Error("Id is required for checkboxes");t.storeState("checked",i,!0)}}finally{this._onDidChangeNodesCheckedState.fire(e)}}onSelectionChanged(e){this._onDidChangeSelection.fire(e),this.notifySelections()}onVisibilityChanged(e){e.visible&&this.container.usage.track(`${this.trackingFeature}:shown`),this._onDidChangeVisibility.fire(e),e.visible&&this.notifySelections()}notifySelections(){let e=this.selection?.[0];null!=e&&((e.is("commit")||e.is("stash")||e.is("file-commit")||e.is("commit-file")||e.is("stash-file"))&&this.container.events.fire("commit:selected",{commit:e.commit,interaction:"passive",preserveFocus:!0,preserveVisibility:!0},{source:this.id}),(e.is("file-commit")||e.is("commit-file")||e.is("stash-file"))&&this.container.events.fire("file:selected",{uri:e.uri,preserveFocus:!0,preserveVisibility:!0},{source:this.id}))}get activeSelection(){if(null!=this.tree&&null!=this.root)return this.tree.selection[0]}get selection(){return null==this.tree||null==this.root?[]:this.tree.selection}get visible(){return this.tree?.visible??!1}async findNode(e,t){let i=(0,u.UH)();async function r(){try{return await this.findNodeCoreBFS(e,this.ensureRoot(),t?.allowPaging??!1,t?.canTraverse,t?.maxDepth??2,t?.token)}catch(e){c.Yd.error(e,i);return}}return this.initialized?r.call(this):(this.show({preserveFocus:!0}),new Promise(e=>(0,l.IH)(this._onDidInitialize.event)(()=>e(r.call(this)),this)))}async findNodeCoreBFS(e,t,i,r,s,n){let a,l;let h=[t,void 0],c=o.D.get("advanced.maxListItems"),u=0;for(;h.length>1&&!n?.isCancellationRequested;){if(null==(a=h.shift())){if(u++,h.push(void 0),u>s)break;continue}if(e(a))return a;if(null!=r){let e=r(a);if((0,d.tI)(e)){if(!await e)continue}else if(!e)continue}if(0!==(l=await a.getChildren()).length){for(;null!=a&&!(0,p.On)(a);)a=await a.getSplattedChild?.();if(null!=a&&(0,p.On)(a)){let t=l.find(e);if(null!=t)return t;if(i&&a.hasMore)for(;;){if(n?.isCancellationRequested)return;if(await this.loadMoreNodeChildren(a,c),null!=(t=(await (0,d.HO)(Promise.resolve(a.getChildren()),6e4,n,{onDidCancel:e=>e([])})).find(e)))return t;if(!a.hasMore)break}continue}h.push(...l)}}}async ensureRevealNode(e,t){let i=[],r=e;for(;null!=r;)i.push(r),r=r.getParent();for(let e of(i.length>1&&i.pop(),i.reverse()))try{await this.reveal(e,t)}catch{}}async refresh(e=!1){e&&this.nodeState.reset(),await this.root?.refresh?.(e),this.triggerNodeChange()}async refreshNode(e,t=!1,i=!1){let r=await e.refresh?.(t);(i||!0!==r)&&this.triggerNodeChange(e)}async reveal(e,t){if(null!=this.tree)try{await this.tree.reveal(e,t)}catch(e){c.Yd.error(e)}}async show(e){let t=(0,u.UH)();try{await (0,n.dO)(`${this.id}.focus`,e)}catch(e){c.Yd.error(e,t)}}getNodeLastKnownLimit(e){return this._lastKnownLimits.get(e.id)}async loadMoreNodeChildren(e,t,i,r){null!=i&&await this.reveal(i,{select:!0}),await e.loadMore(t,r),this._lastKnownLimits.set(e.id,e.limit)}resetNodeLastKnownLimit(e){this._lastKnownLimits.delete(e.id)}triggerNodeChange(e){this._onDidChangeTreeData.fire(null!=e&&e!==this.root?e:void 0)}_config;get config(){if(null==this._config){let e={...o.D.get("views")};for(let t of s.S4)delete e[t];this._config={...e,...o.D.get("views")[this.configKey]}}return this._config}}f([(0,a.cM)({args:{0:"<function>",1:e=>`options=${JSON.stringify({...e,canTraverse:void 0,token:void 0})}`}})],w.prototype,"findNode",1),f([(0,a.fF)()],w.prototype,"refresh",1),f([(0,a.fF)({args:{0:e=>e.toString()}})],w.prototype,"refreshNode",1),f([(0,a.cM)({args:{0:e=>e.toString()}})],w.prototype,"reveal",1),f([(0,a.cM)()],w.prototype,"show",1),f([(0,a.fF)({args:{0:e=>e.toString(),2:e=>e?.toString()}})],w.prototype,"loadMoreNodeChildren",1),f([(0,a.fF)({args:{0:e=>e.toString()},singleLine:!0})],w.prototype,"resetNodeLastKnownLimit",1),f([(0,a.fF)({args:{0:e=>e?.toString()}})],w.prototype,"triggerNodeChange",1);class v{_store;_stickyStore;dispose(){this.reset(),this._stickyStore?.clear(),this._stickyStore=void 0}reset(){this._store?.clear(),this._store=void 0}delete(e,t){for(let i of[this._store,this._stickyStore])if(null!=i)for(let[r,s]of i)r.startsWith(e)&&(s.delete(t),0===s.size&&i.delete(r))}deleteState(e,t){if(null==t)this._store?.delete(e),this._stickyStore?.delete(e);else for(let i of[this._store,this._stickyStore]){if(null==i)continue;let r=i.get(e);null!=r&&(r.delete(t),0===r.size&&i.delete(e))}}get(e,t){let i=new Map;for(let r of[this._store,this._stickyStore])if(null!=r)for(let[s,n]of r)s.startsWith(e)&&n.has(t)&&i.set(s,n.get(t));return i}getState(e,t){return this._stickyStore?.get(e)?.get(t)??this._store?.get(e)?.get(t)}storeState(e,t,i,r){let s;r?(null==this._stickyStore&&(this._stickyStore=new Map),s=this._stickyStore):(null==this._store&&(this._store=new Map),s=this._store);let n=s.get(e);null!=n?n.set(t,i):s.set(e,new Map([[t,i]]))}}function y(e,t){if(e?.length)for(let i of e)t?.includes(i)||i.dispose()}},5798:(e,t,i)=>{i.d(t,{M5:()=>a,Mb:()=>c,NM:()=>f,TB:()=>w,W2:()=>l,bo:()=>p,dp:()=>h,eP:()=>g,jH:()=>n,ke:()=>s,mq:()=>o,n:()=>d,qi:()=>u});class r{constructor(e,t=!1,i=!1){this.method=e,this.reset=t,this.pack=i}_}class s extends r{}class n extends r{}function o(e,t,i){e.method===t.method&&i(t.params,e)}let a=new s("webview/ready"),l=new s("webview/focus"),h=new s("command/execute"),c=new s("configuration/preview"),u=new s("configuration/update"),d=new n("configuration/didChange"),p=new n("configuration/didPreview"),g=new n("webview/didOpenAnchor"),m=["rebaseEditor.enabled","currentLine.useUncommittedChangesFormat"];function f(e){return m.includes(e)}function w(e,t){}},6260:(e,t,i)=>{i.d(t,{wU:()=>b,Q5:()=>C,qW:()=>A,Db:()=>P,OY:()=>D});var r=i(9496),s=i(3951),n=i(2226),o=i(9529),a=i(2061),l=i(4241),h=i(4336),c=i(6004),u=i(7469),d=i(6398),p=i(5798),g=Object.defineProperty,m=Object.getOwnPropertyDescriptor,f=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?m(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&g(t,i,n),n};let w=new TextDecoder("utf8"),v=new TextEncoder,y=0,b=class{constructor(e,t,i,s,n,o){this.container=e,this._commandRegistrar=t,this.descriptor=i,this.instanceId=s,this.parent=n,this.id=i.id,this.webview=n.webview;let a="onDidChangeViewState"in n;this._isEditor=a,this._originalTitle=i.title,n.title=i.title,this._initializing=o(e,this).then(e=>{if(this.provider=e,this._disposed){e.dispose();return}this.disposable=r.Disposable.from(r.window.onDidChangeWindowState(this.onWindowStateChanged,this),n.webview.onDidReceiveMessage(this.onMessageReceivedCore,this),a?n.onDidChangeViewState(({webviewPanel:{visible:e,active:t}})=>this.onParentVisibilityChanged(e,t)):n.onDidChangeVisibility(()=>this.onParentVisibilityChanged(this.visible,this.active)),n.onDidDispose(this.onParentDisposed,this),...this.provider.registerCommands?.()??[],this.provider)})}static async create(e,t,i,r,s,n){let o=new b(e,t,i,r,s,n);return await o.initialize(),o}_onDidDispose=new r.EventEmitter;get onDidDispose(){return this._onDidDispose.event}id;_ready=!1;get ready(){return this._ready}disposable;provider;webview;_disposed=!1;dispose(){this._disposed=!0,A(this.descriptor.contextKeyPrefix),this.provider?.onFocusChanged?.(!1),this.provider?.onVisibilityChanged?.(!1),this._ready=!1,this._onDidDispose.fire(),this.disposable?.dispose()}registerWebviewCommand(e,t){return this._commandRegistrar.registerCommand(this.provider,this.id,this.instanceId,e,t)}_initializing;async initialize(){null!=this._initializing&&(await this._initializing,this._initializing=void 0)}_isEditor;isEditor(){return this._isEditor}isView(){return!this._isEditor}get active(){return"active"in this.parent?!this._disposed&&this.parent.active:!this._disposed&&void 0}get badge(){return"badge"in this.parent?this.parent.badge:void 0}set badge(e){if("badge"in this.parent)this.parent.badge=e;else throw Error("The 'badge' property not supported on Webview parent")}_description;get description(){return"description"in this.parent?this.parent.description:this._description}set description(e){"description"in this.parent&&(this.parent.description=e),this._description=e}_originalTitle;get originalTitle(){return this._originalTitle}get title(){return this.parent.title??this._originalTitle}set title(e){this.parent.title=e}get visible(){return!this._disposed&&this.parent.visible}canReuseInstance(e,...t){if(this.isEditor())return(e?.column==null||e.column===this.parent.viewColumn)&&this.provider.canReuseInstance?.(...t)}getSplitArgs(){return this.isEditor()?this.provider.getSplitArgs?.()??[]:[]}async show(e,t,...i){null==t&&(t={});let s=this.provider.onShowing?.(e,t,...i);if(null!=s){if((0,u.tI)(s)){if(await s===!1)return}else if(!1===s)return}e&&(this.webview.html=await this.getHtml(this.webview)),this.isEditor()?e||this.parent.reveal(t.column??this.parent.viewColumn??this.descriptor.column??r.ViewColumn.Beside,t.preserveFocus??!1):this.isView()&&(await (0,o.dO)(`${this.id}.focus`,t),e&&this.provider.onVisibilityChanged?.(!0)),P(this.descriptor.contextKeyPrefix)}get baseWebviewState(){return{webviewId:this.id,webviewInstanceId:this.instanceId,timestamp:Date.now()}}_cspNonce=(0,s.Vu)();get cspNonce(){return this._cspNonce}asWebviewUri(e){return this.webview.asWebviewUri(e)}async refresh(e){e&&this.clearPendingIpcNotifications(),this.provider.onRefresh?.(e);let t=this._ready;this._ready=!1;let i=await this.getHtml(this.webview);if(e&&(this.webview.html=""),this.webview.html===i){t&&(this._ready=!0);return}this.webview.html=i}onParentDisposed(){this.dispose()}onMessageReceivedCore(e){if(null!=e)switch(e.method){case p.M5.method:(0,p.mq)(p.M5,e,()=>{this._ready=!0,this.sendPendingIpcNotifications(),this.provider.onReady?.()});break;case p.W2.method:(0,p.mq)(p.W2,e,e=>{this.onViewFocusChanged(e)});break;case p.dp.method:(0,p.mq)(p.dp,e,e=>{null!=e.args?(0,o.P0)(e.command,...e.args):(0,o.P0)(e.command)});break;default:this.provider.onMessageReceived?.(e)}}onViewFocusChanged(e){P(this.descriptor.contextKeyPrefix),this.provider.onFocusChanged?.(e.focused)}onParentVisibilityChanged(e,t){this.descriptor.webviewHostOptions?.retainContextWhenHidden!==!0&&(e?this._ready?this.sendPendingIpcNotifications():null!=this.provider.onReloaded?(this.clearPendingIpcNotifications(),this.provider.onReloaded()):this.refresh():this._ready=!1),e?(this.container.usage.track(`${this.descriptor.trackingFeature}:shown`),P(this.descriptor.contextKeyPrefix),null==t||(this.provider.onActiveChanged?.(t),t||this.provider.onFocusChanged?.(!1))):(A(this.descriptor.contextKeyPrefix),null!=t&&this.provider.onActiveChanged?.(!1),this.provider.onFocusChanged?.(!1)),this.provider.onVisibilityChanged?.(e)}onWindowStateChanged(e){this.visible&&this.provider.onWindowFocusChanged?.(e.focused)}getRootUri(){return this.container.context.extensionUri}_webRoot;getWebRoot(){return null==this._webRoot&&(this._webRoot=this.asWebviewUri(this.getWebRootUri()).toString()),this._webRoot}_webRootUri;getWebRootUri(){return null==this._webRootUri&&(this._webRootUri=r.Uri.joinPath(this.getRootUri(),"dist","webviews")),this._webRootUri}async getHtml(e){let t=this.getWebRootUri(),i=r.Uri.joinPath(t,this.descriptor.fileName),[s,n,o,a,l]=await Promise.all([r.workspace.fs.readFile(i),this.provider.includeBootstrap?.(),this.provider.includeHead?.(),this.provider.includeBody?.(),this.provider.includeEndOfBody?.()]);return C(w.decode(s),this.id,this.instanceId,e.cspSource,this._cspNonce,this.asWebviewUri(this.getRootUri()).toString(),this.getWebRoot(),this.isEditor()?"editor":"view",n,o,a,l)}nextIpcId(){return 1073741824===y?y=1:y++,`host:${y}`}async notify(e,t,i){let r;if(e.pack&&null!=t){let i=(0,c.UH)(),s=(0,d.k)((0,c.QR)(` serializing msg=${e.method}`,i),{log:!1,logLevel:"debug"});r=v.encode(JSON.stringify(t)),s?.stop()}let s={id:this.nextIpcId(),method:e.method,params:r??t,packed:null!=r,completionId:i},n=await this.postMessage(s);return n?this._pendingIpcNotifications.clear():this.addPendingIpcNotificationCore(e,s),n}async postMessage(e){let t,i;if(!this._ready)return Promise.resolve(!1);let s=(0,c.UH)(),o=Promise.race([this.webview.postMessage(e).then(e=>(clearTimeout(t),e),e=>(clearTimeout(t),h.Yd.error(s,e),!1)),new Promise(e=>{t=setTimeout(()=>{(0,c.lH)(s,void 0,"TIMEDOUT"),e(!1)},3e4)})]);if(this.isView()){let e=await (0,n.Zo)(o,void 0,100);i=e.paused?await r.window.withProgress({location:{viewId:this.id}},()=>e.value):e.value}else i=await o;return i}_pendingIpcNotifications=new Map;addPendingIpcNotification(e,t,i){this.addPendingIpcNotificationCore(e,t.get(e)?.bind(i))}addPendingIpcNotificationCore(e,t){e.reset&&this._pendingIpcNotifications.clear(),null!=t&&this._pendingIpcNotifications.set(e,t)}clearPendingIpcNotifications(){this._pendingIpcNotifications.clear()}sendPendingIpcNotifications(){if(!this._ready||0===this._pendingIpcNotifications.size)return;let e=new Map(this._pendingIpcNotifications);for(let t of(this._pendingIpcNotifications.clear(),e.values()))"function"==typeof t?t():this.postMessage(t)}};function C(e,t,i,r,s,n,o,a,l,h,c,u){return e.replace(/#{(head|body|endOfBody|webviewId|webviewInstanceId|placement|cspSource|cspNonce|root|webroot)}/g,(e,d)=>{switch(d){case"head":return h??"";case"body":return c??"";case"endOfBody":return`${null!=l?`<script type="text/javascript" nonce="${s}">window.bootstrap=${JSON.stringify(l)};</script>`:""}${u??""}`;case"webviewId":return t;case"webviewInstanceId":return i??"";case"placement":return a;case"cspSource":return r;case"cspNonce":return s;case"root":return n;case"webroot":return o;default:return""}})}function A(e){(0,a.v)(`${e}:visible`,!1)}function P(e){(0,a.v)(`${e}:visible`,!0)}function D(e,t,i,s=!1){let n=!1;for(let[o,a]of Object.entries(i)){let i=e[o];!s&&(i instanceof r.Uri||a instanceof r.Uri)&&i?.toString()===a?.toString()||!s&&i===a&&(void 0!==a||o in e)&&(null==t||!(o in t))||(null==t&&(t={}),t[o]=a,n=!0)}return[n,t]}f([(0,l.fF)({args:!1})],b.prototype,"show",1),f([(0,l.fF)()],b.prototype,"refresh",1),f([(0,l.fF)()],b.prototype,"onParentDisposed",1),f([(0,l.fF)({args:{0:e=>null!=e?`${e.id}, method=${e.method}`:"<undefined>"}})],b.prototype,"onMessageReceivedCore",1),f([(0,l.fF)({args:{0:e=>`focused=${e.focused}, inputFocused=${e.inputFocused}`}})],b.prototype,"onViewFocusChanged",1),f([(0,l.fF)()],b.prototype,"onParentVisibilityChanged",1),f([(e,t,i)=>{let r;if("function"==typeof i.value?r=i.value:"function"==typeof i.get&&(r=i.get),void 0===r)throw Error("Not supported");let s=`$serialize$${t}`;i.value=function(...e){Object.prototype.hasOwnProperty.call(this,s)||Object.defineProperty(this,s,{configurable:!1,enumerable:!1,writable:!0,value:void 0});let t=this[s],i=async()=>await r.apply(this,e);return t=null==t?i():t.then(i,i),this[s]=t,t}},(0,l.fF)({args:!1,enter:e=>`(${e.id}|${e.method}${e.completionId?`+${e.completionId}`:""})`})],b.prototype,"postMessage",1),b=f([(0,l.hJ)(e=>`WebviewController(${e.id}${null!=e.instanceId?`|${e.instanceId}`:""})`)],b)},620:(e,t,i)=>{i.d(t,{V:()=>w,W:()=>b});var r=i(9496),s=i(3951),n=i(718),o=i(9529),a=i(4241),l=i(3105),h=i(4336),c=i(6004),u=i(9701);class d{_commandRegistrations=new Map;dispose(){this._commandRegistrations.forEach(({subscription:e})=>void e.dispose())}registerCommand(e,t,i,r,s){let n=this._commandRegistrations.get(r);if(null==n){let e=new Map;n={subscription:(0,o.vg)(r,(...t)=>{let i=t[0];if(!(0,u.s4)(i))return;let s=i.webviewInstance?`${i.webview}:${i.webviewInstance}`:i.webview,n=e.get(s);if(null==n)throw Error(`Unable to find Command '${r}' registration for Webview '${s}'`);n.callback.call(n.thisArg,i)},this),handlers:e},this._commandRegistrations.set(r,n)}let a=i?`${t}:${i}`:t;if(n.handlers.has(a))throw Error(`Command '${r}' has already been registered for Webview '${a}'`);return n.handlers.set(a,{callback:s,thisArg:e}),{dispose:()=>{n.handlers.delete(a),0===n.handlers.size&&(this._commandRegistrations.delete(r),n.subscription.dispose())}}}}var p=i(6260),g=Object.defineProperty,m=Object.getOwnPropertyDescriptor,f=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?m(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&g(t,i,n),n};class w{constructor(e){this.container=e,this.disposables.push(this._commandRegistrar=new d)}disposables=[];_commandRegistrar;_panels=new Map;_views=new Map;dispose(){this.disposables.forEach(e=>void e.dispose())}registerWebviewView(e,t,i){let s=(0,c.QR)(`WebviewView(${e.id})`),a={descriptor:e};this._views.set(e.id,a);let l=[];l.push(r.window.registerWebviewViewProvider(e.id,{resolveWebviewView:async(i,o,c)=>{if(a.descriptor.plusFeature&&(!await (0,n.C)()||c.isCancellationRequested))return;h.Yd.debug(s,"Resolving view"),i.webview.options={enableCommandUris:!0,enableScripts:!0,localResourceRoots:[r.Uri.file(this.container.context.extensionPath)],...e.webviewOptions},i.title=e.title;let u=await p.wU.create(this.container,this._commandRegistrar,e,void 0,i,t);a.controller?.dispose(),a.controller=u,l.push(u.onDidDispose(()=>{h.Yd.debug(s,"Disposing view"),a.pendingShowArgs=void 0,a.controller=void 0}),u);let[d,g]=a.pendingShowArgs??[];a.pendingShowArgs=void 0,null==g&&b(o)&&(g=[{state:o.state}]),h.Yd.debug(s,"Showing view"),await u.show(!0,d,...g??[])}},null!=e.webviewHostOptions?{webviewOptions:e.webviewHostOptions}:void 0));let u=r.Disposable.from(...l);return this.disposables.push(u),{id:e.id,get ready(){return a.controller?.ready??!1},get visible(){return a.controller?.visible??!1},dispose:function(){u.dispose()},refresh:function(e){return null!=a.controller?a.controller.refresh(e):Promise.resolve()},show:async function(t,...r){if(h.Yd.debug(s,"Showing view"),null!=a.controller)return a.controller.show(!1,t,...r);a.pendingShowArgs=[t,r],null!=i&&await i?.(...r),(0,o.dO)(`${e.id}.focus`,t)}}}registerWebviewPanel(e,t,i){let a;let u=(0,c.QR)(`WebviewPanel(${t.id})`),d={descriptor:t};this._panels.set(t.id,d);let g=[],{container:m,_commandRegistrar:f}=this;async function w(e,...t){let{descriptor:o}=d;if(o.plusFeature&&!await (0,n.C)())return;m.usage.track(`${o.trackingFeature}:shown`);let l=e?.column??o.column??r.ViewColumn.Beside;l===r.ViewColumn.Beside&&null==r.window.tabGroups.activeTabGroup.activeTab&&(l=r.ViewColumn.Active);let c=y(d,e,...t);if(null==c){let n;null!=a?(h.Yd.debug(u,"Restoring panel"),n=a,a=void 0):(h.Yd.debug(u,"Creating panel"),n=r.window.createWebviewPanel(o.id,o.title,{viewColumn:l,preserveFocus:e?.preserveFocus??!1},{enableCommandUris:!0,enableScripts:!0,localResourceRoots:[r.Uri.file(m.context.extensionPath)],...o.webviewOptions,...o.webviewHostOptions})),n.iconPath=r.Uri.file(m.context.asAbsolutePath(o.iconPath)),c=await p.wU.create(m,f,o,o.allowMultipleInstances?(0,s.Vj)():void 0,n,i),d.controllers??=new Map,d.controllers.set(c.instanceId,c),g.push(c.onDidDispose(()=>{h.Yd.debug(u,`Disposing panel (${c.instanceId})`),d.controllers?.delete(c.instanceId)}),c),h.Yd.debug(u,`Showing panel (${c.instanceId})`),await c.show(!0,e,...t)}else h.Yd.debug(u,`Showing existing panel (${c.instanceId})`),await c.show(!1,e,...t)}async function b(e,t){a=e,h.Yd.debug(u,`Deserializing panel state=${null!=t?"<state>":"undefined"}`),await w({column:e.viewColumn,preserveFocus:!0,preserveInstance:!1},...null!=t?[{state:t}]:[])}let C=r.Disposable.from(...g,r.window.registerWebviewPanelSerializer(t.id,{deserializeWebviewPanel:b}),(0,o.xR)(e.id,(t,...i)=>w({...e.options,...t},...i),this));return this.disposables.push(C),{id:t.id,get instances(){if(!d.controllers?.size)return[];return(0,l.UI)(d.controllers.values(),e=>v(e))},getActiveInstance:function(){if(!d.controllers?.size)return;let e=(0,l.sE)(d.controllers.values(),e=>e.active??!1);return null!=e?v(e):void 0},getBestInstance:function(e,...t){let i=y(d,e,...t);return null!=i?v(i):void 0},splitActiveInstance:function(e){let t=null!=d.controllers?(0,l.sE)(d.controllers.values(),e=>e.active??!1):void 0,i=t?.getSplitArgs()??[];return w({...e,preserveInstance:!1},...i)},dispose:function(){C.dispose()},show:w}}}function v(e){return{id:e.id,instanceId:e.instanceId,ready:e.ready,active:e.active??!1,visible:e.visible,canReuseInstance:function(t,...i){return e.canReuseInstance(t,...i)},close:function(){e.parent.dispose()},dispose:function(){e.dispose()},refresh:function(t){return e.refresh(t)},show:function(t,...i){return e.show(!1,t,...i)}}}function y(e,t,...i){let r;if(e.controllers?.size){if(e.descriptor.allowMultipleInstances){if(t?.preserveInstance!==!1&&(t?.preserveInstance!=null&&"string"==typeof t.preserveInstance&&(r=e.controllers.get(t.preserveInstance)),null==r)){let s,n;for(let o of[...e.controllers.values()].sort((e,t)=>(e.active?-1:1)-(t.active?-1:1))){n??=o,o.active&&(s=o);let e=o.canReuseInstance(t,...i);if(!0===e){r=o;break}!1===e&&(n===o&&(n=void 0),s===o&&(s=void 0))}null==r&&t?.preserveInstance===!0&&(r=s??n)}}else r=l.Ps(e.controllers)?.[1]}return r}function b(e){return null!=e&&"object"==typeof e&&"state"in e&&null!=e.state&&"object"==typeof e.state}f([(0,a.fF)({args:{0:e=>e.id,1:!1,2:!1},singleLine:!0})],w.prototype,"registerWebviewView",1),f([(0,a.fF)({args:{0:e=>e.id,1:e=>e.id,2:!1,3:!1},singleLine:!0})],w.prototype,"registerWebviewPanel",1)},9146:function(e,t,i){var r=this&&this.__awaiter||function(e,t,i,r){return new(i||(i=Promise))(function(s,n){function o(e){try{l(r.next(e))}catch(e){n(e)}}function a(e){try{l(r.throw(e))}catch(e){n(e)}}function l(e){var t;e.done?s(e.value):((t=e.value)instanceof i?t:new i(function(e){e(t)})).then(o,a)}l((r=r.apply(e,t||[])).next())})},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});let n=s(i(1808)),o=s(i(4404)),a=s(i(7310)),l=s(i(9491)),h=s(i(1957)),c=i(8054),u=s(i(9829)),d=h.default("https-proxy-agent:agent");class p extends c.Agent{constructor(e){var t;let i;if(!(i="string"==typeof e?a.default.parse(e):e))throw Error("an HTTP(S) proxy server `host` and `port` must be specified!");d("creating new HttpsProxyAgent instance: %o",i),super(i);let r=Object.assign({},i);this.secureProxy=i.secureProxy||"string"==typeof(t=r.protocol)&&/^https:?$/i.test(t),r.host=r.hostname||r.host,"string"==typeof r.port&&(r.port=parseInt(r.port,10)),!r.port&&r.host&&(r.port=this.secureProxy?443:80),!this.secureProxy||"ALPNProtocols"in r||(r.ALPNProtocols=["http 1.1"]),r.host&&r.path&&(delete r.path,delete r.pathname),this.proxy=r}callback(e,t){return r(this,void 0,void 0,function*(){let i;let{proxy:r,secureProxy:s}=this;s?(d("Creating `tls.Socket`: %o",r),i=o.default.connect(r)):(d("Creating `net.Socket`: %o",r),i=n.default.connect(r));let a=Object.assign({},r.headers),h=`${t.host}:${t.port}`,c=`CONNECT ${h} HTTP/1.1\r
`;r.auth&&(a["Proxy-Authorization"]=`Basic ${Buffer.from(r.auth).toString("base64")}`);let{host:p,port:m,secureEndpoint:f}=t;for(let e of(!f&&80===m||f&&443===m||(p+=`:${m}`),a.Host=p,a.Connection="close",Object.keys(a)))c+=`${e}: ${a[e]}\r
`;let w=u.default(i);i.write(`${c}\r
`);let{statusCode:v,buffered:y}=yield w;if(200===v){if(e.once("socket",g),t.secureEndpoint){d("Upgrading socket connection to TLS");let e=t.servername||t.host;return o.default.connect(Object.assign(Object.assign({},function(e,...t){let i;let r={};for(i in e)t.includes(i)||(r[i]=e[i]);return r}(t,"host","hostname","path","port")),{socket:i,servername:e}))}return i}i.destroy();let b=new n.default.Socket({writable:!1});return b.readable=!0,e.once("socket",e=>{d("replaying proxy buffer for failed request"),l.default(e.listenerCount("data")>0),e.push(y),e.push(null)}),b})}}function g(e){e.resume()}t.default=p},6018:function(e,t,i){var r;let s=(this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}})(i(9146));function n(e){return new s.default(e)}(r=n||(n={})).HttpsProxyAgent=s.default,r.prototype=s.default.prototype,e.exports=n},9829:function(e,t,i){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});let s=r(i(1957)).default("https-proxy-agent:parse-proxy-response");t.default=function(e){return new Promise((t,i)=>{let r=0,n=[];function o(){let i=e.read();i?function(e){n.push(e),r+=e.length;let i=Buffer.concat(n,r);if(-1===i.indexOf("\r\n\r\n")){s("have not received end of HTTP headers yet..."),o();return}let a=i.toString("ascii",0,i.indexOf("\r\n")),l=+a.split(" ")[1];s("got proxy server response: %o",a),t({statusCode:l,buffered:i})}(i):e.once("readable",o)}function a(e){s("onclose had error %o",e)}function l(){s("onend")}e.on("error",function t(r){e.removeListener("end",l),e.removeListener("error",t),e.removeListener("close",a),e.removeListener("readable",o),s("onerror %o",r),i(r)}),e.on("close",a),e.on("end",l),o()})}},1957:(e,t,i)=>{function r(){return function(){}}i.r(t),i.d(t,{default:()=>r})},8897:(e,t,i)=>{t.URL=i(7310).URL},9496:e=>{e.exports=require("vscode")},9491:e=>{e.exports=require("assert")},4300:e=>{e.exports=require("buffer")},2361:e=>{e.exports=require("events")},3685:e=>{e.exports=require("http")},5687:e=>{e.exports=require("https")},1808:e=>{e.exports=require("net")},2037:e=>{e.exports=require("os")},1017:e=>{e.exports=require("path")},4074:e=>{e.exports=require("perf_hooks")},7282:e=>{e.exports=require("process")},2781:e=>{e.exports=require("stream")},1576:e=>{e.exports=require("string_decoder")},4404:e=>{e.exports=require("tls")},7310:e=>{e.exports=require("url")},5206:e=>{e.exports=require("zlib")},6292:(e,t,i)=>{let r;i.r(t),i.d(t,{AbortError:()=>j,FetchError:()=>g,Headers:()=>I,Request:()=>Y,Response:()=>U,default:()=>Z});var s=i(2781),n=i(3685),o=i(7310),a=i(8897),l=i(5687),h=i(5206);let c=s.Readable,u=Symbol("buffer"),d=Symbol("type");class p{constructor(){this[d]="";let e=arguments[0],t=arguments[1],i=[];if(e){let t=Number(e.length);for(let r=0;r<t;r++){let t;let s=e[r];(t=s instanceof Buffer?s:ArrayBuffer.isView(s)?Buffer.from(s.buffer,s.byteOffset,s.byteLength):s instanceof ArrayBuffer?Buffer.from(s):s instanceof p?s[u]:Buffer.from("string"==typeof s?s:String(s))).length,i.push(t)}}this[u]=Buffer.concat(i);let r=t&&void 0!==t.type&&String(t.type).toLowerCase();r&&!/[^\u0020-\u007E]/.test(r)&&(this[d]=r)}get size(){return this[u].length}get type(){return this[d]}text(){return Promise.resolve(this[u].toString())}arrayBuffer(){let e=this[u];return Promise.resolve(e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength))}stream(){let e=new c;return e._read=function(){},e.push(this[u]),e.push(null),e}toString(){return"[object Blob]"}slice(){let e;let t=this.size,i=arguments[0],r=arguments[1];e=void 0===i?0:i<0?Math.max(t+i,0):Math.min(i,t);let s=Math.max((void 0===r?t:r<0?Math.max(t+r,0):Math.min(r,t))-e,0),n=this[u].slice(e,e+s),o=new p([],{type:arguments[2]});return o[u]=n,o}}function g(e,t,i){Error.call(this,e),this.message=e,this.type=t,i&&(this.code=this.errno=i.code),Error.captureStackTrace(this,this.constructor)}Object.defineProperties(p.prototype,{size:{enumerable:!0},type:{enumerable:!0},slice:{enumerable:!0}}),Object.defineProperty(p.prototype,Symbol.toStringTag,{value:"Blob",writable:!1,enumerable:!1,configurable:!0}),g.prototype=Object.create(Error.prototype),g.prototype.constructor=g,g.prototype.name="FetchError";try{r=require("encoding").convert}catch(e){}let m=Symbol("Body internals"),f=s.PassThrough;function w(e){var t=this,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=i.size,n=i.timeout;null==e?e=null:y(e)?e=Buffer.from(e.toString()):b(e)||Buffer.isBuffer(e)||("[object ArrayBuffer]"===Object.prototype.toString.call(e)?e=Buffer.from(e):ArrayBuffer.isView(e)?e=Buffer.from(e.buffer,e.byteOffset,e.byteLength):e instanceof s||(e=Buffer.from(String(e)))),this[m]={body:e,disturbed:!1,error:null},this.size=void 0===r?0:r,this.timeout=void 0===n?0:n,e instanceof s&&e.on("error",function(e){let i="AbortError"===e.name?e:new g(`Invalid response body while trying to fetch ${t.url}: ${e.message}`,"system",e);t[m].error=i})}function v(){var e=this;if(this[m].disturbed)return w.Promise.reject(TypeError(`body used already for: ${this.url}`));if(this[m].disturbed=!0,this[m].error)return w.Promise.reject(this[m].error);let t=this.body;if(null===t)return w.Promise.resolve(Buffer.alloc(0));if(b(t)&&(t=t.stream()),Buffer.isBuffer(t))return w.Promise.resolve(t);if(!(t instanceof s))return w.Promise.resolve(Buffer.alloc(0));let i=[],r=0,n=!1;return new w.Promise(function(s,o){let a;e.timeout&&(a=setTimeout(function(){n=!0,o(new g(`Response timeout while trying to fetch ${e.url} (over ${e.timeout}ms)`,"body-timeout"))},e.timeout)),t.on("error",function(t){"AbortError"===t.name?(n=!0,o(t)):o(new g(`Invalid response body while trying to fetch ${e.url}: ${t.message}`,"system",t))}),t.on("data",function(t){if(!n&&null!==t){if(e.size&&r+t.length>e.size){n=!0,o(new g(`content size at ${e.url} over limit: ${e.size}`,"max-size"));return}r+=t.length,i.push(t)}}),t.on("end",function(){if(!n){clearTimeout(a);try{s(Buffer.concat(i,r))}catch(t){o(new g(`Could not create Buffer from response body for ${e.url}: ${t.message}`,"system",t))}}})})}function y(e){return"object"==typeof e&&"function"==typeof e.append&&"function"==typeof e.delete&&"function"==typeof e.get&&"function"==typeof e.getAll&&"function"==typeof e.has&&"function"==typeof e.set&&("URLSearchParams"===e.constructor.name||"[object URLSearchParams]"===Object.prototype.toString.call(e)||"function"==typeof e.sort)}function b(e){return"object"==typeof e&&"function"==typeof e.arrayBuffer&&"string"==typeof e.type&&"function"==typeof e.stream&&"function"==typeof e.constructor&&"string"==typeof e.constructor.name&&/^(Blob|File)$/.test(e.constructor.name)&&/^(Blob|File)$/.test(e[Symbol.toStringTag])}function C(e){let t,i;let r=e.body;if(e.bodyUsed)throw Error("cannot clone body after it is used");return r instanceof s&&"function"!=typeof r.getBoundary&&(t=new f,i=new f,r.pipe(t),r.pipe(i),e[m].body=t,r=i),r}function A(e){if(null===e)return null;if("string"==typeof e)return"text/plain;charset=UTF-8";if(y(e))return"application/x-www-form-urlencoded;charset=UTF-8";if(b(e))return e.type||null;if(Buffer.isBuffer(e))return null;if("[object ArrayBuffer]"===Object.prototype.toString.call(e))return null;if(ArrayBuffer.isView(e))return null;else if("function"==typeof e.getBoundary)return`multipart/form-data;boundary=${e.getBoundary()}`;else if(e instanceof s)return null;else return"text/plain;charset=UTF-8"}function P(e){let t=e.body;return null===t?0:b(t)?t.size:Buffer.isBuffer(t)?t.length:t&&"function"==typeof t.getLengthSync&&(t._lengthRetrievers&&0==t._lengthRetrievers.length||t.hasKnownLength&&t.hasKnownLength())?t.getLengthSync():null}w.prototype={get body(){return this[m].body},get bodyUsed(){return this[m].disturbed},arrayBuffer(){return v.call(this).then(function(e){return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)})},blob(){let e=this.headers&&this.headers.get("content-type")||"";return v.call(this).then(function(t){return Object.assign(new p([],{type:e.toLowerCase()}),{[u]:t})})},json(){var e=this;return v.call(this).then(function(t){try{return JSON.parse(t.toString())}catch(t){return w.Promise.reject(new g(`invalid json response body at ${e.url} reason: ${t.message}`,"invalid-json"))}})},text(){return v.call(this).then(function(e){return e.toString()})},buffer(){return v.call(this)},textConverted(){var e=this;return v.call(this).then(function(t){return function(e,t){let i,s;if("function"!=typeof r)throw Error("The package `encoding` must be installed to use the textConverted() function");let n=t.get("content-type"),o="utf-8";return n&&(i=/charset=([^;]*)/i.exec(n)),s=e.slice(0,1024).toString(),!i&&s&&(i=/<meta.+?charset=(['"])(.+?)\1/i.exec(s)),!i&&s&&(!(i=/<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(s))&&(i=/<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(s))&&i.pop(),i&&(i=/charset=(.*)/i.exec(i.pop()))),!i&&s&&(i=/<\?xml.+?encoding=(['"])(.+?)\1/i.exec(s)),i&&("gb2312"===(o=i.pop())||"gbk"===o)&&(o="gb18030"),r(e,"UTF-8",o).toString()}(t,e.headers)})}},Object.defineProperties(w.prototype,{body:{enumerable:!0},bodyUsed:{enumerable:!0},arrayBuffer:{enumerable:!0},blob:{enumerable:!0},json:{enumerable:!0},text:{enumerable:!0}}),w.mixIn=function(e){for(let t of Object.getOwnPropertyNames(w.prototype))if(!(t in e)){let i=Object.getOwnPropertyDescriptor(w.prototype,t);Object.defineProperty(e,t,i)}},w.Promise=global.Promise;let D=/[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/,k=/[^\t\x20-\x7e\x80-\xff]/;function S(e){if(e=`${e}`,D.test(e)||""===e)throw TypeError(`${e} is not a legal HTTP header name`)}function R(e){if(e=`${e}`,k.test(e))throw TypeError(`${e} is not a legal HTTP header value`)}function $(e,t){for(let i in t=t.toLowerCase(),e)if(i.toLowerCase()===t)return i}let _=Symbol("map");class I{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:void 0;if(this[_]=Object.create(null),e instanceof I){let t=e.raw();for(let e of Object.keys(t))for(let i of t[e])this.append(e,i);return}if(null==e);else if("object"==typeof e){let t=e[Symbol.iterator];if(null!=t){if("function"!=typeof t)throw TypeError("Header pairs must be iterable");let i=[];for(let t of e){if("object"!=typeof t||"function"!=typeof t[Symbol.iterator])throw TypeError("Each header pair must be iterable");i.push(Array.from(t))}for(let e of i){if(2!==e.length)throw TypeError("Each header pair must be a name/value tuple");this.append(e[0],e[1])}}else for(let t of Object.keys(e)){let i=e[t];this.append(t,i)}}else throw TypeError("Provided initializer must be an object")}get(e){S(e=`${e}`);let t=$(this[_],e);return void 0===t?null:this[_][t].join(", ")}forEach(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:void 0,i=F(this),r=0;for(;r<i.length;){var s=i[r];let n=s[0],o=s[1];e.call(t,o,n,this),i=F(this),r++}}set(e,t){e=`${e}`,t=`${t}`,S(e),R(t);let i=$(this[_],e);this[_][void 0!==i?i:e]=[t]}append(e,t){e=`${e}`,t=`${t}`,S(e),R(t);let i=$(this[_],e);void 0!==i?this[_][i].push(t):this[_][e]=[t]}has(e){return S(e=`${e}`),void 0!==$(this[_],e)}delete(e){S(e=`${e}`);let t=$(this[_],e);void 0!==t&&delete this[_][t]}raw(){return this[_]}keys(){return T(this,"key")}values(){return T(this,"value")}[Symbol.iterator](){return T(this,"key+value")}}function F(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"key+value";return Object.keys(e[_]).sort().map("key"===t?function(e){return e.toLowerCase()}:"value"===t?function(t){return e[_][t].join(", ")}:function(t){return[t.toLowerCase(),e[_][t].join(", ")]})}I.prototype.entries=I.prototype[Symbol.iterator],Object.defineProperty(I.prototype,Symbol.toStringTag,{value:"Headers",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(I.prototype,{get:{enumerable:!0},forEach:{enumerable:!0},set:{enumerable:!0},append:{enumerable:!0},has:{enumerable:!0},delete:{enumerable:!0},keys:{enumerable:!0},values:{enumerable:!0},entries:{enumerable:!0}});let x=Symbol("internal");function T(e,t){let i=Object.create(O);return i[x]={target:e,kind:t,index:0},i}let O=Object.setPrototypeOf({next(){if(!this||Object.getPrototypeOf(this)!==O)throw TypeError("Value of `this` is not a HeadersIterator");var e=this[x];let t=e.target,i=e.kind,r=e.index,s=F(t,i);return r>=s.length?{value:void 0,done:!0}:(this[x].index=r+1,{value:s[r],done:!1})}},Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));Object.defineProperty(O,Symbol.toStringTag,{value:"HeadersIterator",writable:!1,enumerable:!1,configurable:!0});let E=Symbol("Response internals"),B=n.STATUS_CODES;class U{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};w.call(this,e,t);let i=t.status||200,r=new I(t.headers);if(null!=e&&!r.has("Content-Type")){let t=A(e);t&&r.append("Content-Type",t)}this[E]={url:t.url,status:i,statusText:t.statusText||B[i],headers:r,counter:t.counter}}get url(){return this[E].url||""}get status(){return this[E].status}get ok(){return this[E].status>=200&&this[E].status<300}get redirected(){return this[E].counter>0}get statusText(){return this[E].statusText}get headers(){return this[E].headers}clone(){return new U(C(this),{url:this.url,status:this.status,statusText:this.statusText,headers:this.headers,ok:this.ok,redirected:this.redirected})}}w.mixIn(U.prototype),Object.defineProperties(U.prototype,{url:{enumerable:!0},status:{enumerable:!0},ok:{enumerable:!0},redirected:{enumerable:!0},statusText:{enumerable:!0},headers:{enumerable:!0},clone:{enumerable:!0}}),Object.defineProperty(U.prototype,Symbol.toStringTag,{value:"Response",writable:!1,enumerable:!1,configurable:!0});let W=Symbol("Request internals"),M=o.URL||a.URL,L=o.parse,N=o.format;function H(e){return/^[a-zA-Z][a-zA-Z\d+\-.]*:/.exec(e)&&(e=new M(e).toString()),L(e)}let G="destroy"in s.Readable.prototype;function q(e){return"object"==typeof e&&"object"==typeof e[W]}class Y{constructor(e){let t,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};q(e)?t=H(e.url):(t=e&&e.href?H(e.href):H(`${e}`),e={});let r=i.method||e.method||"GET";if(r=r.toUpperCase(),(null!=i.body||q(e)&&null!==e.body)&&("GET"===r||"HEAD"===r))throw TypeError("Request with GET/HEAD method cannot have body");let s=null!=i.body?i.body:q(e)&&null!==e.body?C(e):null;w.call(this,s,{timeout:i.timeout||e.timeout||0,size:i.size||e.size||0});let n=new I(i.headers||e.headers||{});if(null!=s&&!n.has("Content-Type")){let e=A(s);e&&n.append("Content-Type",e)}let o=q(e)?e.signal:null;if("signal"in i&&(o=i.signal),null!=o&&!function(e){let t=e&&"object"==typeof e&&Object.getPrototypeOf(e);return!!(t&&"AbortSignal"===t.constructor.name)}(o))throw TypeError("Expected signal to be an instanceof AbortSignal");this[W]={method:r,redirect:i.redirect||e.redirect||"follow",headers:n,parsedURL:t,signal:o},this.follow=void 0!==i.follow?i.follow:void 0!==e.follow?e.follow:20,this.compress=void 0!==i.compress?i.compress:void 0===e.compress||e.compress,this.counter=i.counter||e.counter||0,this.agent=i.agent||e.agent}get method(){return this[W].method}get url(){return N(this[W].parsedURL)}get headers(){return this[W].headers}get redirect(){return this[W].redirect}get signal(){return this[W].signal}clone(){return new Y(this)}}function j(e){Error.call(this,e),this.type="aborted",this.message=e,Error.captureStackTrace(this,this.constructor)}w.mixIn(Y.prototype),Object.defineProperty(Y.prototype,Symbol.toStringTag,{value:"Request",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(Y.prototype,{method:{enumerable:!0},url:{enumerable:!0},headers:{enumerable:!0},redirect:{enumerable:!0},clone:{enumerable:!0},signal:{enumerable:!0}}),j.prototype=Object.create(Error.prototype),j.prototype.constructor=j,j.prototype.name="AbortError";let V=o.URL||a.URL,Q=s.PassThrough,z=function(e,t){let i=new V(t).hostname,r=new V(e).hostname;return i===r||"."===i[i.length-r.length-1]&&i.endsWith(r)};function K(e,t){if(!K.Promise)throw Error("native promise missing, set fetch.Promise to your favorite alternative");return w.Promise=K.Promise,new K.Promise(function(i,r){var o;let a,c;let u=new Y(e,t),d=function(e){let t=e[W].parsedURL,i=new I(e[W].headers);if(i.has("Accept")||i.set("Accept","*/*"),!t.protocol||!t.hostname)throw TypeError("Only absolute URLs are supported");if(!/^https?:$/.test(t.protocol))throw TypeError("Only HTTP(S) protocols are supported");if(e.signal&&e.body instanceof s.Readable&&!G)throw Error("Cancellation of streamed requests with AbortSignal is not supported in node < 8");let r=null;if(null==e.body&&/^(POST|PUT)$/i.test(e.method)&&(r="0"),null!=e.body){let t=P(e);"number"==typeof t&&(r=String(t))}r&&i.set("Content-Length",r),i.has("User-Agent")||i.set("User-Agent","node-fetch/1.0 (+https://github.com/bitinn/node-fetch)"),e.compress&&!i.has("Accept-Encoding")&&i.set("Accept-Encoding","gzip,deflate");let n=e.agent;return"function"==typeof n&&(n=n(t)),Object.assign({},t,{method:e.method,headers:function(e){let t=Object.assign({__proto__:null},e[_]),i=$(e[_],"Host");return void 0!==i&&(t[i]=t[i][0]),t}(i),agent:n})}(u),p=("https:"===d.protocol?l:n).request,m=u.signal,f=null,w=function(){let e=new j("The user aborted a request.");r(e),u.body&&u.body instanceof s.Readable&&J(u.body,e),f&&f.body&&f.body.emit("error",e)};if(m&&m.aborted){w();return}let v=function(){w(),C()},y=p(d);function C(){y.abort(),m&&m.removeEventListener("abort",v),clearTimeout(a)}m&&m.addEventListener("abort",v),u.timeout&&y.once("socket",function(e){a=setTimeout(function(){r(new g(`network timeout at: ${u.url}`,"request-timeout")),C()},u.timeout)}),y.on("error",function(e){r(new g(`request to ${u.url} failed, reason: ${e.message}`,"system",e)),f&&f.body&&J(f.body,e),C()}),o=function(e){(!m||!m.aborted)&&f&&f.body&&J(f.body,e)},y.on("socket",function(e){c=e}),y.on("response",function(e){let t=e.headers;"chunked"!==t["transfer-encoding"]||t["content-length"]||e.once("close",function(e){if(c&&c.listenerCount("data")>0&&!e){let e=Error("Premature close");e.code="ERR_STREAM_PREMATURE_CLOSE",o(e)}})}),14>parseInt(process.version.substring(1))&&y.on("socket",function(e){e.addListener("close",function(t){let i=e.listenerCount("data")>0;if(f&&i&&!t&&!(m&&m.aborted)){let e=Error("Premature close");e.code="ERR_STREAM_PREMATURE_CLOSE",f.body.emit("error",e)}})}),y.on("response",function(e){clearTimeout(a);let t=function(e){let t=new I;for(let i of Object.keys(e))if(!D.test(i)){if(Array.isArray(e[i]))for(let r of e[i])k.test(r)||(void 0===t[_][i]?t[_][i]=[r]:t[_][i].push(r));else k.test(e[i])||(t[_][i]=[e[i]])}return t}(e.headers);if(K.isRedirect(e.statusCode)){let n=t.get("Location"),o=null;try{o=null===n?null:new V(n,u.url).toString()}catch(e){if("manual"!==u.redirect){r(new g(`uri requested responds with an invalid redirect URL: ${n}`,"invalid-redirect")),C();return}}switch(u.redirect){case"error":r(new g(`uri requested responds with a redirect, redirect mode is set to error: ${u.url}`,"no-redirect")),C();return;case"manual":if(null!==o)try{t.set("Location",o)}catch(e){r(e)}break;case"follow":var s;if(null===o)break;if(u.counter>=u.follow){r(new g(`maximum redirect reached at: ${u.url}`,"max-redirect")),C();return}let a={headers:new I(u.headers),follow:u.follow,counter:u.counter+1,agent:u.agent,compress:u.compress,method:u.method,body:u.body,signal:u.signal,timeout:u.timeout,size:u.size};if(!z(u.url,o)||(s=u.url,new V(o).protocol!==new V(s).protocol))for(let e of["authorization","www-authenticate","cookie","cookie2"])a.headers.delete(e);if(303!==e.statusCode&&u.body&&null===P(u)){r(new g("Cannot follow redirect with body being a readable stream","unsupported-redirect")),C();return}(303===e.statusCode||(301===e.statusCode||302===e.statusCode)&&"POST"===u.method)&&(a.method="GET",a.body=void 0,a.headers.delete("content-length")),i(K(new Y(o,a))),C();return}}e.once("end",function(){m&&m.removeEventListener("abort",v)});let n=e.pipe(new Q),o={url:u.url,status:e.statusCode,statusText:e.statusMessage,headers:t,size:u.size,timeout:u.timeout,counter:u.counter},l=t.get("Content-Encoding");if(!u.compress||"HEAD"===u.method||null===l||204===e.statusCode||304===e.statusCode){i(f=new U(n,o));return}let c={flush:h.Z_SYNC_FLUSH,finishFlush:h.Z_SYNC_FLUSH};if("gzip"==l||"x-gzip"==l){i(f=new U(n=n.pipe(h.createGunzip(c)),o));return}if("deflate"==l||"x-deflate"==l){let t=e.pipe(new Q);t.once("data",function(e){i(f=new U(n=(15&e[0])==8?n.pipe(h.createInflate()):n.pipe(h.createInflateRaw()),o))}),t.on("end",function(){f||i(f=new U(n,o))});return}if("br"==l&&"function"==typeof h.createBrotliDecompress){i(f=new U(n=n.pipe(h.createBrotliDecompress()),o));return}i(f=new U(n,o))}),function(e,t){let i=t.body;null===i?e.end():b(i)?i.stream().pipe(e):Buffer.isBuffer(i)?(e.write(i),e.end()):i.pipe(e)}(y,u)})}function J(e,t){e.destroy?e.destroy(t):(e.emit("error",t),e.end())}K.isRedirect=function(e){return 301===e||302===e||303===e||307===e||308===e},K.Promise=global.Promise;let Z=K}},n={};function o(e){var t=n[e];if(void 0!==t)return t.exports;var i=n[e]={exports:{}};return s[e].call(i.exports,i,i.exports,o),i.exports}o.m=s,o.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return o.d(t,{a:t}),t},t=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,o.t=function(i,r){if(1&r&&(i=this(i)),8&r||"object"==typeof i&&i&&(4&r&&i.__esModule||16&r&&"function"==typeof i.then))return i;var s=Object.create(null);o.r(s);var n={};e=e||[null,t({}),t([]),t(t)];for(var a=2&r&&i;"object"==typeof a&&!~e.indexOf(a);a=t(a))Object.getOwnPropertyNames(a).forEach(e=>n[e]=()=>i[e]);return n.default=()=>i,o.d(s,n),s},o.d=(e,t)=>{for(var i in t)o.o(t,i)&&!o.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},o.f={},o.e=e=>Promise.all(Object.keys(o.f).reduce((t,i)=>(o.f[i](e,t),t),[])),o.u=e=>"feature-"+({10:"commitDetails",177:"home",278:"annotations-heatmap",429:"encoding",449:"gitlab",457:"github",477:"codelens",519:"annotations-blame",521:"focus",537:"patchDetails",571:"settings",773:"welcome",786:"graph",809:"account",817:"annotations-changes",831:"timeline",913:"telemetry"})[e]+".js",o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i={898:1},r=e=>{var t=e.modules,r=e.ids,s=e.runtime;for(var n in t)o.o(t,n)&&(o.m[n]=t[n]);s&&s(o);for(var a=0;a<r.length;a++)i[r[a]]=1},o.f.require=(e,t)=>{i[e]||r(require("./"+o.u(e)))};var a={};(()=>{o.r(a),o.d(a,{activate:()=>rN,deactivate:()=>rH});var e,t=o(9496),i=o(4372),r=o(7338),s=o(5140),n=o(8294);Object.freeze({dispose:()=>{}});class l{#i;constructor(e){this.#i=e}registerActionRunner(e,t){if(t.name===n.vj)throw Error(`Cannot use the reserved name '${n.vj}'`);return"hover.commandHelp"===e&&(e="hover.commands"),this.#i.actionRunners.register(e,t)}}var h=o(2540),c=o(5255),u=o(7462),d=o(5367),p=o(6450),g=o(3646),m=o(9502),f=o(7925),w=o(9529),v=o(5148),y=o(2061),b=o(7512),C=o(2185),A=o(4336),P=o(9967),D=o(6398),k=o(4241),S=Object.defineProperty,R=Object.getOwnPropertyDescriptor,$=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?R(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&S(t,i,n),n};class _{constructor(e){this.context=e,this._disposable=this.context.secrets.onDidChange(e=>this._onDidChangeSecrets.fire(e))}_onDidChange=new t.EventEmitter;get onDidChange(){return this._onDidChange.event}_onDidChangeSecrets=new t.EventEmitter;get onDidChangeSecrets(){return this._onDidChangeSecrets.event}_disposable;dispose(){this._disposable.dispose()}get(e,t){return this.context.globalState.get(`${c.m1}:${e}`,t)}async delete(e){await this.context.globalState.update(`${c.m1}:${e}`,void 0),this._onDidChange.fire({key:e,workspace:!1})}async deleteWithPrefix(e){let t=`${c.m1}:${e}`,i=`${t}:`;for(let e of this.context.globalState.keys())(e===t||e.startsWith(i))&&(await this.context.globalState.update(e,void 0),this._onDidChange.fire({key:e,workspace:!1}))}async store(e,t){await this.context.globalState.update(`${c.m1}:${e}`,t),this._onDidChange.fire({key:e,workspace:!1})}async getSecret(e){return this.context.secrets.get(e)}async deleteSecret(e){return this.context.secrets.delete(e)}async storeSecret(e,t){return this.context.secrets.store(e,t)}getWorkspace(e,t){return this.context.workspaceState.get(`${c.m1}:${e}`,t)}async deleteWorkspace(e){await this.context.workspaceState.update(`${c.m1}:${e}`,void 0),this._onDidChange.fire({key:e,workspace:!0})}async deleteWorkspaceWithPrefix(e){let t=`${c.m1}:${e}`,i=`${t}:`;for(let e of this.context.workspaceState.keys())(e===t||e.startsWith(i))&&(await this.context.workspaceState.update(e,void 0),this._onDidChange.fire({key:e,workspace:!0}))}async storeWorkspace(e,t){await this.context.workspaceState.update(`${c.m1}:${e}`,t),this._onDidChange.fire({key:e,workspace:!0})}}$([(0,k.fF)({logThreshold:50})],_.prototype,"get",1),$([(0,k.fF)({logThreshold:250})],_.prototype,"delete",1),$([(0,k.fF)({logThreshold:250})],_.prototype,"deleteWithPrefix",1),$([(0,k.fF)({args:{1:!1},logThreshold:250})],_.prototype,"store",1),$([(0,k.fF)({args:!1,logThreshold:250})],_.prototype,"getSecret",1),$([(0,k.fF)({args:!1,logThreshold:250})],_.prototype,"deleteSecret",1),$([(0,k.fF)({args:!1,logThreshold:250})],_.prototype,"storeSecret",1),$([(0,k.fF)({logThreshold:25})],_.prototype,"getWorkspace",1),$([(0,k.fF)({logThreshold:250})],_.prototype,"deleteWorkspace",1),$([(0,k.fF)({logThreshold:250})],_.prototype,"deleteWorkspaceWithPrefix",1),$([(0,k.fF)({args:{1:!1},logThreshold:250})],_.prototype,"storeWorkspace",1);var I=o(4550),F=o(7707),x=o(9311),T=o(7139),O=Object.defineProperty,E=Object.getOwnPropertyDescriptor;let B=class extends T.mY{constructor(e){super(c.Gh.AddAuthors),this.container=e}execute(e){let t;return e?.rootUri!=null&&(t=this.container.git.getRepository(e.rootUri)),(0,x.m)({command:"co-authors",state:{repo:t,contributors:void 0}})}};B=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?E(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&O(t,i,n),n})([(0,w.WD)()],B);var U=o(3700),W=o(2509),M=Object.defineProperty,L=Object.getOwnPropertyDescriptor;let N=class extends T.pu{constructor(e){super([c.Gh.BrowseRepoAtRevision,c.Gh.BrowseRepoAtRevisionInNewWindow,c.Gh.BrowseRepoBeforeRevision,c.Gh.BrowseRepoBeforeRevisionInNewWindow]),this.container=e}preExecute(e,t){switch(e.command){case c.Gh.BrowseRepoAtRevisionInNewWindow:t={...t,before:!1,openInNewWindow:!0};break;case c.Gh.BrowseRepoBeforeRevision:t={...t,before:!0,openInNewWindow:!1};break;case c.Gh.BrowseRepoBeforeRevisionInNewWindow:t={...t,before:!0,openInNewWindow:!0}}return this.execute(e.editor,e.uri,t)}async execute(e,t,i){i={...i};try{if(null==i.uri){if(t=(0,T.SX)(t,e),null==t)return}else t=i.uri;let r=await u.YY.fromUri(t);if(null==r.sha)return;let s=i?.before?await this.container.git.resolveReference(r.repoPath,`${r.sha}^`):r.sha;t=this.container.git.getRevisionUri(s,r.repoPath,r.repoPath),r=u.YY.fromRevisionUri(t),(0,W.ic)(t,{location:i.openInNewWindow?"newWindow":"addToWorkspace",name:`${(0,U.EZ)(r.repoPath)} @ ${r.shortSha}`}),i.openInNewWindow||(0,w.dO)("workbench.files.action.focusFilesExplorer")}catch(e){A.Yd.error(e,"BrowseRepoAtRevisionCommand"),(0,f.W8)("Unable to open the repository at the specified revision")}}};N=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?L(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&M(t,i,n),n})([(0,w.WD)()],N);var H=o(635),G=o(4298),q=Object.defineProperty,Y=Object.getOwnPropertyDescriptor;let j=class extends T.mY{constructor(e){super(c.Gh.CloseUnchangedFiles),this.container=e}async execute(e){e={...e};try{if(null==e.uris){let i=await (0,H.vJ)("Close All Unchanged Files");if(null==i)return;let r=await this.container.git.getStatusForRepo(i.uri);if(null==r){t.window.showWarningMessage("Unable to close unchanged files");return}e.uris=r.files.map(e=>e.uri)}let i=0===e.uris.length;for(let r of t.window.tabGroups.all)for(let s of r.tabs)if(s.input instanceof t.TabInputText||s.input instanceof t.TabInputCustom||s.input instanceof t.TabInputNotebook){let r=s.input.uri;(i||!e.uris.some(e=>G.n.equals(e,r)))&&t.window.tabGroups.close(s,!0)}else if(s.input instanceof t.TabInputTextDiff||s.input instanceof t.TabInputNotebookDiff){let r=s.input.modified;(i||!e.uris.some(e=>G.n.equals(e,r)))&&t.window.tabGroups.close(s,!0)}}catch(e){A.Yd.error(e,"CloseUnchangedFilesCommand"),(0,f.W8)("Unable to close all unchanged files")}}};j=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?Y(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&q(t,i,n),n})([(0,w.WD)()],j);var V=Object.defineProperty,Q=Object.getOwnPropertyDescriptor;let z=class extends T.pu{constructor(e){super([c.Gh.CompareWith,c.Gh.CompareHeadWith,c.Gh.CompareWorkingWith,c.Gh.Deprecated_DiffHeadWith,c.Gh.Deprecated_DiffWorkingWith]),this.container=e}preExecute(e,t){switch(e.command){case c.Gh.CompareWith:t={...t};break;case c.Gh.CompareHeadWith:case c.Gh.Deprecated_DiffHeadWith:(t={...t}).ref1="HEAD";break;case c.Gh.CompareWorkingWith:case c.Gh.Deprecated_DiffWorkingWith:(t={...t}).ref1=""}return this.execute(e.editor,e.uri,t)}async execute(e,t,i){t=(0,T.SX)(t,e),i={...i};try{let r;switch(i.ref1){case null:r="Compare";break;case"":r="Compare Working Tree with";break;case"HEAD":r="Compare HEAD with";break;default:r=`Compare ${i.ref1} with`}let s=(await H.hM(t,e,r))?.path;if(!s)return;null!=i.ref1&&null!=i.ref2?await this.container.searchAndCompareView.compare(s,i.ref1,i.ref2):this.container.searchAndCompareView.selectForCompare(s,i.ref1,{prompt:!0})}catch(e){A.Yd.error(e,"CompareWithCommmand"),(0,f.W8)("Unable to open comparison")}}};z=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?Q(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&V(t,i,n),n})([(0,w.WD)()],z);var K=Object.defineProperty,J=Object.getOwnPropertyDescriptor;let Z=class extends T.pu{constructor(e){super(c.Gh.CopyCurrentBranch),this.container=e}async execute(e,i){let r=null!=(i=(0,T.SX)(i,e))?await u.YY.fromUri(i):void 0,s=await (0,H.hM)(r,e,"Copy Current Branch Name");if(null!=s)try{let e=await s.getBranch();e?.name&&await t.env.clipboard.writeText(e.name)}catch(e){A.Yd.error(e,"CopyCurrentBranchCommand"),(0,f.W8)("Unable to copy current branch name")}}};Z=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?J(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&K(t,i,n),n})([(0,w.WD)()],Z);var X=o(3016),ee=o(1742);async function et(e,i="Choose a remote",r,s){let n;let o=[];if(0===r.length)i="No remotes found";else{if(s?.autoPick==="default"&&r.length>1){let e=r.find(e=>e.default);null!=e&&(r=[e])}let e={upstream:!0,buttons:s?.setDefault?[X.ip]:void 0};for(let t of r)o.push((0,ee.vl)(t,void 0,e)),t.name===s?.picked&&(n=o[o.length-1])}if(s?.autoPick&&1===r.length)return o[0];let a=t.window.createQuickPick();a.ignoreFocusOut=(0,W.hE)();let l=[];try{let t=await new Promise(t=>{l.push(a.onDidHide(()=>t(void 0)),a.onDidAccept(()=>{0!==a.activeItems.length&&t(a.activeItems[0])}),a.onDidTriggerItemButton(async e=>{e.button===X.ip&&(await e.item.item.setAsDefault(),t(e.item))})),a.title=e,a.placeholder=i,a.matchOnDetail=!0,a.items=o,null!=n&&(a.activeItems=[n]),a.show()});if(null==t)return;return t}finally{a.dispose(),l.forEach(e=>void e.dispose())}}var ei=o(4043),er=Object.defineProperty,es=Object.getOwnPropertyDescriptor;let en=class extends T.pu{constructor(e){super([c.Gh.CopyDeepLinkToBranch,c.Gh.CopyDeepLinkToCommit,c.Gh.CopyDeepLinkToRepo,c.Gh.CopyDeepLinkToTag,c.Gh.CopyDeepLinkToComparison,c.Gh.CopyDeepLinkToWorkspace]),this.container=e}preExecute(e,t){return null==t&&((0,T.en)(e)?t={refOrRepoPath:e.node.commit}:(0,T.Qo)(e)?t=e.command===c.Gh.CopyDeepLinkToRepo?{refOrRepoPath:e.node.branch.repoPath,remote:e.node.branch.getRemoteName()}:{refOrRepoPath:e.node.branch}:(0,T._5)(e)?t={refOrRepoPath:e.node.tag}:(0,T.C$)(e)?t={refOrRepoPath:e.node.remote.repoPath,remote:e.node.remote.name}:(0,T.F4)(e)?t={refOrRepoPath:e.node.uri.fsPath,compareRef:e.node.compareRef,compareWithRef:e.node.compareWithRef}:(0,T.Bu)(e)&&(t={workspaceId:e.node.workspace.id})),this.execute(e.editor,e.uri,t)}async execute(e,t,i){let r,s;if(null!=(i={...i}).workspaceId){try{await this.container.deepLinks.copyDeepLinkUrl(i.workspaceId)}catch(e){A.Yd.error(e,"CopyDeepLinkCommand"),(0,f.W8)("Unable to copy link")}return}if(i?.refOrRepoPath==null){let i=null!=(t=(0,T.SX)(t,e))?await u.YY.fromUri(t):void 0;r=ei._n.Repository,s=(await H.hM(i,e,`Copy Link to ${ei.$k(r)}`))?.path}else"string"==typeof i.refOrRepoPath?(r=null==i.compareRef?ei._n.Repository:ei._n.Comparison,s=i.refOrRepoPath,i.refOrRepoPath=void 0):(r=(0,ei.$x)(i.refOrRepoPath.refType),s=i.refOrRepoPath.repoPath);if(s){if(!i.remote&&i.refOrRepoPath?.refType==="branch"&&(i.refOrRepoPath.remote||i.refOrRepoPath.upstream?.name!=null)){let[e,t]=(0,d.$q)(i.refOrRepoPath);null!=e&&null!=t&&(i.remote=t,i.prePickRemote=!0)}try{let e;let t=await this.container.git.getRemotes(s,{sort:!0}),n=t.find(e=>e.default);if(i.remote&&!i.prePickRemote)e=t.find(e=>e.name===i?.remote);else if(null!=n)e=n;else{let s=await et(`Copy Link to ${(0,ei.$k)(r)}`,"Choose which remote to copy the link for",t,{autoPick:!0,picked:i.remote,setDefault:!0});if(null==s)return;e=s.item}if(null==e)return;null==i.refOrRepoPath?await this.container.deepLinks.copyDeepLinkUrl(s,e.url,i.compareRef,i.compareWithRef):await this.container.deepLinks.copyDeepLinkUrl(i.refOrRepoPath,e.url)}catch(e){A.Yd.error(e,"CopyDeepLinkCommand"),(0,f.W8)("Unable to copy link")}}}};en=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?es(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&er(t,i,n),n})([(0,w.WD)()],en);var eo=o(6897),ea=o(3105),el=Object.defineProperty,eh=Object.getOwnPropertyDescriptor;let ec=class extends T.pu{constructor(e){super(c.Gh.CopyMessageToClipboard),this.container=e}async preExecute(e,t){return(0,T.en)(e)?((t={...t}).sha=e.node.commit.sha,null!=e.node.commit.message&&await e.node.commit.ensureFullDetails(),t.message=e.node.commit.message,this.execute(e.editor,e.node.commit.file?.uri??e.node.commit.getRepository()?.uri,t)):(0,T.Qo)(e)?((t={...t}).sha=e.node.branch.sha,this.execute(e.editor,e.node.uri,t)):(0,T._5)(e)?((t={...t}).sha=e.node.tag.sha,this.execute(e.editor,e.node.uri,t)):this.execute(e.editor,e.uri,t)}async execute(e,i,r){i=(0,T.SX)(i,e),r={...r};try{if(!r.message){let t;if(null!=r.repoPath&&null!=r.sha){await (0,eo.SJ)({ref:r.sha,repoPath:r.repoPath});return}if(null==i){if(!(t=this.container.git.getBestRepository(e)?.path))return;let i=await this.container.git.getLog(t,{limit:1});if(null==i)return;let s=(0,ea.Ps)(i.commits.values());if(s?.message==null)return;r.message=s.message}else if(null==r.message){let s=await u.YY.fromUri(i);if(!(t=s.repoPath))return;if(null==r.sha){let t=e?.selection.active.line??0;if(t<0)return;try{let i=await this.container.git.getBlameForLine(s,t,e?.document);if(null==i||i.commit.isUncommitted)return;await (0,eo.SJ)(i.commit);return}catch(e){A.Yd.error(e,"CopyMessageToClipboardCommand",`getBlameForLine(${t})`),(0,f.W8)("Unable to copy message");return}}else{await (0,eo.SJ)({ref:r.sha,repoPath:t});return}}}await t.env.clipboard.writeText(r.message)}catch(e){A.Yd.error(e,"CopyMessageToClipboardCommand"),(0,f.W8)("Unable to copy message")}}};ec=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?eh(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&el(t,i,n),n})([(0,w.WD)()],ec);var eu=o(4321),ed=Object.defineProperty,ep=Object.getOwnPropertyDescriptor;let eg=class extends T.pu{constructor(e){super(c.Gh.CopyShaToClipboard),this.container=e}preExecute(e,t){return(0,T.en)(e)?((t={...t}).sha=e.node.commit.sha,this.execute(e.editor,e.node.commit.file?.uri??e.node.commit.getRepository()?.uri,t)):(0,T.Qo)(e)?((t={...t}).sha=e.node.branch.sha,this.execute(e.editor,e.node.uri,t)):(0,T._5)(e)?((t={...t}).sha=e.node.tag.sha,this.execute(e.editor,e.node.uri,t)):this.execute(e.editor,e.uri,t)}async execute(e,i,r){i=(0,T.SX)(i,e),r={...r};try{if(!r.sha){if(null==i){let t=this.container.git.getBestRepository(e)?.path;if(!t)return;let i=await this.container.git.getLog(t,{limit:1});if(null==i||(r.sha=ea.Ps(i.commits.values())?.sha,null==r.sha))return}else if(null==r.sha){let t=e?.selection.active.line??0;if(t<0)return;try{let s=await u.YY.fromUri(i),n=await this.container.git.getBlameForLine(s,t,e?.document);if(null==n)return;r.sha=n.commit.sha}catch(e){A.Yd.error(e,"CopyShaToClipboardCommand",`getBlameForLine(${t})`),(0,f.W8)("Unable to copy commit SHA");return}}}await t.env.clipboard.writeText(v.D.get("advanced.abbreviateShaOnCopy")?(0,eu.zL)(r.sha):r.sha)}catch(e){A.Yd.error(e,"CopyShaToClipboardCommand"),(0,f.W8)("Unable to copy commit SHA")}}};eg=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?ep(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&ed(t,i,n),n})([(0,w.WD)()],eg);var em=Object.defineProperty,ef=Object.getOwnPropertyDescriptor;let ew=class extends T.pu{constructor(e){super(c.Gh.CopyRelativePathToClipboard),this.container=e}preExecute(e){return(0,T.d$)(e)?this.execute(e.editor,e.node.commit.file.uri):this.execute(e.editor,e.uri)}async execute(e,i){i=(0,T.SX)(i,e);let r="";if(null!=i){let t=this.container.git.getBestRepository(e)?.uri;null!=t&&(r=this.container.git.getRelativePath(i,t))}await t.env.clipboard.writeText(r)}};ew=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?ef(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&em(t,i,n),n})([(0,w.WD)()],ew);var ev=o(6503),ey=Object.defineProperty,eb=Object.getOwnPropertyDescriptor;let eC=class extends T.mY{constructor(e){super(c.Gh.CreatePullRequestOnRemote),this.container=e}async execute(e){if(e?.repoPath==null)return;let t=this.container.git.getRepository(e.repoPath);if(null==t)return;let i=await t.getRemote(e.remote);if(i?.provider==null)return;let r=i.provider.id,s=await t.getRemotes({filter:e=>e.provider?.id===r}),n={type:ev.J.CreatePullRequest,base:{branch:e.base,remote:void 0},compare:{branch:e.compare,remote:{path:i.path,url:i.url}}};await (0,w.P0)(c.Gh.OpenOnRemote,{resource:n,remotes:s})}};eC=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?eb(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&ey(t,i,n),n})([(0,w.WD)()],eC);var eA=o(3636),eP=o(5538),eD=Object.defineProperty,ek=Object.getOwnPropertyDescriptor;let eS=class extends T.pu{constructor(e){super([c.Gh.DiffDirectory,c.Gh.DiffDirectoryWithHead,c.Gh.ViewsOpenDirectoryDiff,c.Gh.ViewsOpenDirectoryDiffWithWorking]),this.container=e}async preExecute(e,t){switch(e.command){case c.Gh.DiffDirectoryWithHead:(t={...t}).ref1="HEAD",t.ref2=void 0;break;case c.Gh.ViewsOpenDirectoryDiff:"viewItem"===e.type&&e.node instanceof eP.fc&&(t={...t},[t.ref1,t.ref2]=await e.node.getDiffRefs());break;case c.Gh.ViewsOpenDirectoryDiffWithWorking:(0,T.DW)(e)&&((t={...t}).ref1=e.node.ref.ref,t.ref2=void 0)}return this.execute(e.editor,e.uri,t)}async execute(e,t,i){t=(0,T.SX)(t,e),i={...i};try{let r=(await H.hM(t,e,"Directory Compare Working Tree With"))?.path;if(!r)return;if(!i.ref1){let e=await (0,eA.V)(r,"Directory Compare Working Tree with","Choose a branch or tag to compare with",{allowEnteringRefs:!0});if(null==e||(i.ref1=e.ref,null==i.ref1))return}(0,eo.iK)(r,i.ref1,i.ref2)}catch(e){A.Yd.error(e,"OpenDirectoryCompareCommand"),(0,f.W8)("Unable to open directory compare")}}};eS=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?ek(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&eD(t,i,n),n})([(0,w.WD)()],eS);var eR=Object.defineProperty,e$=Object.getOwnPropertyDescriptor;let e_=class extends T.pu{constructor(e){super(c.Gh.DiffLineWithPrevious),this.container=e}preExecute(e,t){return"editorLine"===e.type&&(t={...t,line:e.line}),this.execute(e.editor,e.uri,t)}async execute(e,t,i){if(null==(t=(0,T.SX)(t,e)))return;null==(i={...i}).line&&(i.line=e?.selection.active.line??0);let r=i.commit?.getGitUri()??await u.YY.fromUri(t);try{let e=await this.container.git.getPreviousComparisonUrisForLine(r.repoPath,r,i.line,r.sha);if(e?.previous==null){(0,f.RR)();return}await (0,w.P0)(c.Gh.DiffWith,{repoPath:e.current.repoPath,lhs:{sha:e.previous.sha??"",uri:e.previous.documentUri()},rhs:{sha:e.current.sha??"",uri:e.current.documentUri()},line:e.line,showOptions:i.showOptions})}catch(e){A.Yd.error(e,"DiffLineWithPreviousCommand",`getPreviousLineDiffUris(${r.repoPath}, ${r.fsPath}, ${r.sha})`),(0,f.W8)("Unable to open compare")}}};e_=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?e$(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&eR(t,i,n),n})([(0,w.WD)()],e_);var eI=o(439),eF=Object.defineProperty,ex=Object.getOwnPropertyDescriptor;let eT=class extends T.pu{constructor(e){super(c.Gh.DiffLineWithWorking),this.container=e}preExecute(e,t){return"editorLine"===e.type&&(t={...t,line:e.line}),this.execute(e.editor,e.uri,t)}async execute(e,i,r){let s,n;if(null==(i=(0,T.SX)(i,e)))return;let o=await u.YY.fromUri(i);if(null==(r={...r}).line&&(r.line=e?.selection.active.line??0),null==r.commit||r.commit.isUncommitted){let t=r.line;if(t<0)return;try{let i=await this.container.git.getBlameForLine(o,t,e?.document);if(null==i){(0,f.zk)("Unable to open compare");return}if(r.commit=i.commit,r.commit.isUncommitted){let e=await this.container.git.getStatusForFile(o.repoPath,o);e?.indexStatus!=null?(s=eI.pw,n=this.container.git.getAbsoluteUri(e.originalPath||e.path,r.commit.repoPath)):(s=r.commit.unresolvedPreviousSha,n=r.commit.file.originalUri??r.commit.file.uri)}else s=r.commit.sha,n=r.commit.file.uri;r.line=i.line.line-1}catch(e){A.Yd.error(e,"DiffLineWithWorkingCommand",`getBlameForLine(${t})`),(0,f.W8)("Unable to open compare");return}}else s=r.commit.sha,n=r.commit.file?.uri??o;let a=await r.commit.file?.getWorkingUri();if(null==a){t.window.showWarningMessage("Unable to open compare. File has been deleted from the working tree");return}await (0,w.P0)(c.Gh.DiffWith,{repoPath:r.commit.repoPath,lhs:{sha:s,uri:n},rhs:{sha:"",uri:a},line:r.line,showOptions:r.showOptions})}};eT=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?ex(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&eF(t,i,n),n})([(0,w.WD)()],eT),o(1848);var eO=Object.defineProperty,eE=Object.getOwnPropertyDescriptor;let eB=class extends T.pu{constructor(e){super([c.Gh.DiffWithNext,c.Gh.DiffWithNextInDiffLeft,c.Gh.DiffWithNextInDiffRight]),this.container=e}preExecute(e,t){return e.command===c.Gh.DiffWithNextInDiffLeft&&(t={...t,inDiffLeftEditor:!0}),this.execute(e.editor,e.uri,t)}async execute(e,t,i){if(null==(t=(0,T.SX)(t,e)))return;null==(i={...i}).line&&(i.line=e?.selection.active.line??0);let r=i.commit?.getGitUri()??await u.YY.fromUri(t);try{let e=await this.container.git.getNextComparisonUris(r.repoPath,r,r.sha,i.inDiffLeftEditor?1:0);if(e?.next==null)return;await (0,w.P0)(c.Gh.DiffWith,{repoPath:e.current.repoPath,lhs:{sha:e.current.sha??"",uri:e.current.documentUri()},rhs:{sha:e.next.sha??"",uri:e.next.documentUri()},line:i.line,showOptions:i.showOptions})}catch(e){A.Yd.error(e,"DiffWithNextCommand",`getNextDiffUris(${r.repoPath}, ${r.fsPath}, ${r.sha})`),(0,f.W8)("Unable to open compare")}}};eB=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?eE(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&eO(t,i,n),n})([(0,w.WD)()],eB);var eU=Object.defineProperty,eW=Object.getOwnPropertyDescriptor;let eM=class extends T.pu{constructor(e){super([c.Gh.DiffWithPrevious,c.Gh.DiffWithPreviousInDiffLeft,c.Gh.DiffWithPreviousInDiffRight]),this.container=e}preExecute(e,t){return e.command===c.Gh.DiffWithPreviousInDiffRight&&(t={...t,inDiffRightEditor:!0}),this.execute(e.editor,e.uri,t)}async execute(e,t,i){let r;if(null==(i={...i}).uri){if(null==(t=(0,T.SX)(t,e)))return}else t=i.uri;if(null==i.line&&(i.line=e?.selection.active.line??0),i.commit?.file!=null){if(!i.commit.isUncommitted){await (0,w.P0)(c.Gh.DiffWith,{repoPath:i.commit.repoPath,lhs:{sha:`${i.commit.sha}^`,uri:i.commit.file.originalUri??i.commit.file.uri},rhs:{sha:"?"===i.commit.file.status?`${i.commit.sha}^3`:i.commit.sha||"",uri:i.commit.file.uri},line:i.line,showOptions:i.showOptions});return}r=i.commit?.getGitUri()}else r=await u.YY.fromUri(t);try{let e=await this.container.git.getPreviousComparisonUris(r.repoPath,r,r.sha,i.inDiffRightEditor?1:0);if(e?.previous==null){if(null==e){(0,f.RR)();return}if(null==e.current.sha){await (0,W.GR)(e.current,i.showOptions);return}if(!e.current.isUncommittedStaged){(0,f.RR)();return}e.previous=u.YY.fromFile(e.current.fileName,e.current.repoPath,eI.Ii)}await (0,w.P0)(c.Gh.DiffWith,{repoPath:e.current.repoPath,lhs:{sha:e.previous.sha??"",uri:e.previous.documentUri()},rhs:{sha:e.current.sha??"",uri:e.current.documentUri()},line:i.line,showOptions:i.showOptions})}catch(e){A.Yd.error(e,"DiffWithPreviousCommand",`getPreviousDiffUris(${r.repoPath}, ${r.fsPath}, ${r.sha})`),(0,f.W8)("Unable to open compare")}}};eM=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?eW(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&eU(t,i,n),n})([(0,w.WD)()],eM);var eL=o(1857),eN=o(9729),eH=o(4627),eG=Object.defineProperty,eq=Object.getOwnPropertyDescriptor;let eY=class extends T.pu{constructor(e){super(c.Gh.DiffWithRevision),this.container=e}async execute(e,t,i){if(null==(t=(0,T.SX)(t,e)))return;let r=await u.YY.fromUri(t);null==(i={...i}).line&&(i.line=e?.selection.active.line??0);try{let e=this.container.git.getLogForFile(r.repoPath,r.fsPath).then(e=>e??(r.sha?this.container.git.getLogForFile(r.repoPath,r.fsPath,{ref:r.sha}):void 0)),t=`Open Changes with Revision${(0,eH.vk)(c.NE.Dot,2,2)}`,s=await (0,eL.D)(e,`${t}${r.getFormattedFileName({suffix:r.sha?`:${(0,eu.zL)(r.sha)}`:void 0,truncateTo:c.d$-t.length})}`,"Choose a commit to compare with",{picked:r.sha,keys:["right","alt+right","ctrl+right"],onDidPressKey:async(e,t)=>{await (0,w.P0)(c.Gh.DiffWith,{repoPath:r.repoPath,lhs:{sha:t.item.ref,uri:r},rhs:{sha:"",uri:r},line:i.line,showOptions:i.showOptions})},showOtherReferences:[eN.$w.fromCommand("Choose a Branch or Tag...",c.Gh.DiffWithRevisionFrom),eN.$w.fromCommand("Choose a Stash...",c.Gh.DiffWithRevisionFrom,{stash:!0})]});if(null==s)return;await (0,w.P0)(c.Gh.DiffWith,{repoPath:r.repoPath,lhs:{sha:s.ref,uri:r},rhs:{sha:"",uri:r},line:i.line,showOptions:i.showOptions})}catch(e){A.Yd.error(e,"DiffWithRevisionCommand"),(0,f.W8)("Unable to open compare")}}};eY=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?eq(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&eG(t,i,n),n})([(0,w.WD)()],eY);var ej=Object.defineProperty,eV=Object.getOwnPropertyDescriptor;let eQ=class extends T.pu{constructor(e){super(c.Gh.DiffWithRevisionFrom),this.container=e}async execute(e,t,i){let r,s,n,o;if(null==(t=(0,T.SX)(t,e)))return;let a=await u.YY.fromUri(t);if(!a.repoPath){(0,f.bi)("Unable to open file compare");return}null==(i={...i}).line&&(i.line=e?.selection.active.line??0);let l=this.container.git.getRelativePath(a,a.repoPath);if(i?.stash){let e=`Open Changes with Stash${(0,eH.vk)(c.NE.Dot,2,2)}`,t=await (0,eL.h)(this.container.git.getStash(a.repoPath),`${e}${a.getFormattedFileName({truncateTo:c.d$-e.length})}`,"Choose a stash to compare with",{empty:`No stashes with '${a.getFormattedFileName()}' found`,filter:e=>e.files?.some(e=>e.path===l||e.originalPath===l)??!0});if(null==t)return;s=r=t.ref}else{let e=`Open Changes with Branch or Tag${(0,eH.vk)(c.NE.Dot,2,2)}`,t=await (0,eA.V)(a.repoPath,`${e}${a.getFormattedFileName({truncateTo:c.d$-e.length})}`,"Choose a branch or tag to compare with",{allowEnteringRefs:!0});if(null==t)return;r=t.ref,s=(0,eu.UR)(t)&&t.remote?`remotes/${r}`:r}if(null==r)return;let h=await this.container.git.getDiffStatus(a.repoPath,"HEAD",r,{filters:["R","C"]});if(null!=h){let e=h.find(e=>e.path===l);e?.originalPath!=null&&(n=this.container.git.getAbsoluteUri(e.originalPath,a.repoPath),o=`${(0,U.EZ)(e.originalPath)} (${(0,eu.zL)(r)})`)}await (0,w.P0)(c.Gh.DiffWith,{repoPath:a.repoPath,lhs:{sha:s,uri:n??a,title:o??`${(0,U.EZ)(a.fsPath)} (${(0,eu.zL)(r)})`},rhs:{sha:"",uri:a},line:i.line,showOptions:i.showOptions})}};eQ=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?eV(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&ej(t,i,n),n})([(0,w.WD)()],eQ);var ez=Object.defineProperty,eK=Object.getOwnPropertyDescriptor;let eJ=class extends T.pu{constructor(e){super([c.Gh.DiffWithWorking,c.Gh.DiffWithWorkingInDiffLeft,c.Gh.DiffWithWorkingInDiffRight]),this.container=e}async execute(e,i,r){if(null==(r={...r}).uri){if(null==(i=(0,T.SX)(i,e)))return}else i=r.uri;let s=await u.YY.fromUri(i);if(null==r.line&&(r.line=e?.selection.active.line??0),r.inDiffRightEditor)try{let e=await this.container.git.getPreviousComparisonUris(s.repoPath,s,s.sha);s=e?.previous??s}catch(e){A.Yd.error(e,"DiffWithWorkingCommand",`getPreviousDiffUris(${s.repoPath}, ${s.fsPath}, ${s.sha})`),(0,f.W8)("Unable to open compare");return}if(null==s.sha){t.window.showInformationMessage("File matches the working tree");return}if(s.sha===eI.Ii){t.window.showWarningMessage("Unable to open compare. File has been deleted from the working tree");return}if(s.isUncommittedStaged){let e=await this.container.git.getStatusForFile(s.repoPath,s);if(e?.indexStatus!=null){await (0,w.P0)(c.Gh.DiffWith,{repoPath:s.repoPath,lhs:{sha:eI.pw,uri:s.documentUri()},rhs:{sha:"",uri:s.documentUri()},line:r.line,showOptions:r.showOptions});return}}i=s.toFileUri();let n=await this.container.git.getWorkingUri(s.repoPath,i);if(null==n){t.window.showWarningMessage("Unable to open compare. File has been deleted from the working tree");return}await (0,w.P0)(c.Gh.DiffWith,{repoPath:s.repoPath,lhs:{sha:s.sha,uri:i,title:r?.lhsTitle},rhs:{sha:"",uri:n},line:r.line,showOptions:r.showOptions})}};eJ=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?eK(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&ez(t,i,n),n})([(0,w.WD)()],eJ);var eZ=o(5640),eX=((e=eX||{})[e.Merge=0]="Merge",e[e.Index=1]="Index",e[e.WorkingTree=2]="WorkingTree",e),e0=o(2800),e1=Object.defineProperty,e2=Object.getOwnPropertyDescriptor;let e4=class extends T.mY{constructor(e){super([c.Gh.ExternalDiff,c.Gh.ExternalDiffAll]),this.container=e}async preExecute(e,i){if(i={...i},(0,T.d$)(e)){let t=await e.node.commit.getPreviousSha(),r=(0,eu.l3)(t)?"":t,s=e.node.commit.isUncommitted?"":e.node.commit.sha;return i.files=[{uri:u.YY.fromFile(e.node.file,e.node.file.repoPath??e.node.repoPath),staged:e.node.commit.isUncommittedStaged||null!=e.node.file.indexStatus,ref1:r,ref2:s}],this.execute(i)}if((0,T.O$)(e))return i.files=[{uri:u.YY.fromFile(e.node.file,e.node.file.repoPath??e.node.repoPath),staged:null!=e.node.file.indexStatus,ref1:e.node.ref1,ref2:e.node.ref2}],this.execute(i);if(null==i.files&&("scm-states"===e.type?i.files=e.scmResourceStates.map(e=>({uri:e.resourceUri,staged:e.resourceGroupType===eX.Index})):"scm-groups"===e.type&&(i.files=(0,e0.DZ)(e.scmResourceGroups[0].resourceStates,e=>this.isModified(e)?{uri:e.resourceUri,staged:e.resourceGroupType===eX.Index}:void 0))),e.command===c.Gh.ExternalDiffAll&&null==i.files){let e=await (0,H.vJ)("Open All Changes (difftool)");if(null==e)return;let r=await this.container.git.getStatusForRepo(e.uri);if(null==r)return t.window.showInformationMessage("The repository doesn't have any changes");for(let e of(i.files=[],r.files))"M"===e.indexStatus&&i.files.push({uri:e.uri,staged:!0}),"M"===e.workingTreeStatus&&i.files.push({uri:e.uri,staged:!1})}return this.execute(i)}isModified(e){let t=e.type;return t===eZ.qb.BOTH_MODIFIED||t===eZ.qb.INDEX_MODIFIED||t===eZ.qb.MODIFIED}async execute(e){e={...e};try{let i;if(null==e.files){let r=t.window.activeTextEditor;if(null==r||!(i=this.container.git.getBestRepository(r)?.path))return;let s=r.document.uri,n=await this.container.git.getStatusForFile(i,s);if(null==n){t.window.showInformationMessage("The current file doesn't have any changes");return}e.files=[],"M"===n.indexStatus&&e.files.push({uri:n.uri,staged:!0}),"M"===n.workingTreeStatus&&e.files.push({uri:n.uri,staged:!1})}else if(!(i=(await this.container.git.getOrOpenRepository(e.files[0].uri))?.path))return;let r=v.D.get("advanced.externalDiffTool")||await this.container.git.getDiffTool(i);if(!r){let e="View Git Docs";await t.window.showWarningMessage("Unable to open changes because no Git diff tool is configured",e)===e&&t.env.openExternal(t.Uri.parse("https://git-scm.com/docs/git-config#Documentation/git-config.txt-difftool"));return}for(let t of e.files)this.container.git.openDiffTool(i,t.uri,{ref1:t.ref1,ref2:t.ref2,staged:t.staged,tool:r})}catch(e){A.Yd.error(e,"ExternalDiffCommand"),(0,f.W8)("Unable to open changes in diff tool")}}};e4=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?e2(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&e1(t,i,n),n})([(0,w.WD)()],e4);var e5=Object.defineProperty,e6=Object.getOwnPropertyDescriptor;let e3=class extends T.pu{constructor(e){super(c.Gh.GenerateCommitMessage),this.container=e}async execute(e,i,r){let s;if(null!=(r={...r}).repoPath)s=this.container.git.getRepository(r.repoPath);else{let t=null!=(i=(0,T.SX)(i,e))?await u.YY.fromUri(i):void 0;s=await (0,H.hM)(t,e,"Generate Commit Message")}if(null==s)return;let n=await this.container.git.getScmRepository(s.path);if(null!=n)try{let e=n.inputBox.value,i=await this.container.ai.generateCommitMessage(s,{context:e,progress:{location:t.ProgressLocation.Notification,title:"Generating commit message..."}});if(null==i)return;(0,w.dO)("workbench.view.scm"),n.inputBox.value=e?`${e}

${i}`:i}catch(e){if(A.Yd.error(e,"GenerateCommitMessageCommand"),e instanceof Error&&e.message.startsWith("No changes")){t.window.showInformationMessage("No changes to generate a commit message from.");return}(0,f.W8)(e.message)}}};e3=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?e6(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&e5(t,i,n),n})([(0,w.WD)()],e3);var e8=o(4155),e9=o(5025),e7=o(2674),te=o(4794),tt=o(7469),ti=Object.defineProperty,tr=Object.getOwnPropertyDescriptor;let ts=class extends T.mY{constructor(e){super(c.Gh.OpenOrCreateWorktreeForGHPR),this.container=e}async execute(...e){let i,r,s;let[n]=e,{base:{repositoryCloneUrl:{url:o,owner:a,repositoryName:l}},githubRepository:{rootUri:h},head:{repositoryCloneUrl:{url:c,owner:u},ref:p},item:{number:g}}="pullRequestModel"in n?n.pullRequestModel:n,m=this.container.git.getRepository(h);if(null==m){t.window.showWarningMessage(`Unable to find repository(${h.toString()}) for PR #${g}`);return}if(null==(m=await m.getMainRepository())){t.window.showWarningMessage(`Unable to find main repository(${h.toString()}) for PR #${g}`);return}let f=c.toString(),[,w,v]=(0,te.Sk)(f);if([i]=await m.getRemotes({filter:e=>e.matches(w,v)}),null!=i)await this.container.git.fetch(m.path,{remote:i.name});else{let e=await t.window.showInformationMessage(`Unable to find a remote for '${f}'. Would you like to add a new remote?`,{modal:!0},{title:"Yes"},{title:"No",isCloseAffordance:!0});if(e?.title!=="Yes"||(await (0,e8.IH)(m,u,f,{confirm:!1,fetch:!0,reveal:!1}),[i]=await m.getRemotes({filter:e=>e.url===f}),null==i))return}let y=`${i.name}/${p}`,b=`pr/${o.toString()===c.toString()?p:y}`,C=`remotes/${y}`,P=await (0,e7.K)(m,b,y);if(null!=P){(0,e9.bA)(P);return}let D=await (0,d.eK)(m,y);null!=D?r=(0,eu.LB)(D):(r=(0,eu.xB)(C,m.path,{refType:"branch",name:C,remote:!0}),s=b),await (0,tt.ag)();try{await (0,e9.Ue)(m,void 0,r,{createBranch:s});let e=await this.container.git.getWorktree(m.path,e=>e.branch===b);if(null==e)return;this.container.git.setConfig(m.path,`branch.${b}.github-pr-owner-number`,`${a}#${l}#${g}`)}catch(e){A.Yd.error(e,"CreateWorktreeCommand","Unable to create worktree"),t.window.showErrorMessage(`Unable to create worktree for ${u}:${p}`)}}};ts=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?tr(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&ti(t,i,n),n})([(0,w.WD)()],ts);var tn=o(3599),to=o(2967),ta=o(4239),tl=Object.defineProperty,th=Object.getOwnPropertyDescriptor,tc=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?th(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&tl(t,i,n),n};let tu=/\$\(.+?\)|\s/g,td=Symbol("ShowLoading"),tp=class extends T.mY{constructor(e){super([c.Gh.GitCommands,c.Gh.GitCommandsBranch,c.Gh.GitCommandsCherryPick,c.Gh.GitCommandsMerge,c.Gh.GitCommandsRebase,c.Gh.GitCommandsReset,c.Gh.GitCommandsRevert,c.Gh.GitCommandsSwitch,c.Gh.GitCommandsTag,c.Gh.GitCommandsWorktree,c.Gh.GitCommandsWorktreeOpen]),this.container=e}startedWith="menu";preExecute(e,t){switch(e.command){case c.Gh.GitCommandsBranch:t={command:"branch"};break;case c.Gh.GitCommandsCherryPick:t={command:"cherry-pick"};break;case c.Gh.GitCommandsMerge:t={command:"merge"};break;case c.Gh.GitCommandsRebase:t={command:"rebase"};break;case c.Gh.GitCommandsReset:t={command:"reset"};break;case c.Gh.GitCommandsRevert:t={command:"revert"};break;case c.Gh.GitCommandsSwitch:t={command:"switch"};break;case c.Gh.GitCommandsTag:t={command:"tag"};break;case c.Gh.GitCommandsWorktree:t={command:"worktree"};break;case c.Gh.GitCommandsWorktreeOpen:t={command:"worktree",state:{subcommand:"open"}}}return this.execute(t)}async execute(e){let t,i;let r=new to.K(this.container,e),s=e?.command!=null?r.find(e.command):void 0;for(this.startedWith=null!=s?"command":"menu",i=null==s?r:await this.showLoadingIfNeeded(s,this.getCommandStep(s,r)),i?.ignoreFocusOut===!0&&(i.ignoreFocusOut=void 0);null!=i;){if(i===r&&null!=s){i=await this.getCommandStep(s,r);continue}if(t&&null==i.ignoreFocusOut&&(i.ignoreFocusOut=!0),(0,ta.Dr)(i)){i=await this.showPickStep(i,r),i?.ignoreFocusOut===!0&&(t=!0);continue}if((0,ta.Gj)(i)){i=await this.showInputStep(i,r),i?.ignoreFocusOut===!0&&(t=!0);continue}if((0,ta.a)(i)){i=await this.showCustomStep(i,r),i?.ignoreFocusOut===!0&&(t=!0);continue}break}e?.completion?.fulfill()}async showLoadingIfNeeded(e,i){let r;let s=await Promise.race([i,new Promise(e=>setTimeout(e,250,td))]);if(s!==td)return s;let n=t.window.createQuickPick();n.ignoreFocusOut=!1;let o=[];try{return await new Promise(async t=>{o.push(n.onDidHide(()=>t(r))),n.title=e.title,n.placeholder="Loading...",n.busy=!0,n.enabled=!1,n.show(),r=await i,n.hide()})}finally{n.dispose(),o.forEach(e=>void e.dispose())}}getButtons(e,i){let r=[];if(null!=e){if(null!=e.buttons)return r.push(...e.buttons),r;r.push(t.QuickInputButtons.Back),null!=e.additionalButtons&&r.push(...e.additionalButtons)}if(i?.canConfirm){if(i.canSkipConfirm){let t=new X.Lp(i.confirm(),e?.isConfirmationStep??!1,async()=>{if(i?.skipConfirmKey==null)return;let e=v.D.get("gitCommands.skipConfirmations")??[],t=e.indexOf(i.skipConfirmKey);-1!==t?e.splice(t,1):e.push(i.skipConfirmKey),await v.D.updateEffective("gitCommands.skipConfirmations",e)});r.push(t)}else e?.isConfirmationStep||r.push(X.zY)}return r}async getCommandStep(e,t){t.setCommand(e,"command");let i=await e.next();if(!i.done)return i.value}async nextStep(e,t,i){null!=i&&(i.busy=!0);let r=await e.next(t);if(!r.done)return null!=i&&(i.value=""),r.value}async showCustomStep(e,t){let i=await e.show(e);if(i!==ta.Vd){if(!(0,tn.wX)(i))return this.nextStep(t.command,i);switch(i){case tn.Xe.Back:return await t?.command?.previous()??t;case tn.Xe.Noop:return t.command?.retry();case tn.Xe.Cancel:default:return}}}async showInputStep(e,i){let r=t.window.createInputBox();r.ignoreFocusOut=!v.D.get("gitCommands.closeOnFocusOut")||(e.ignoreFocusOut??!1);let s=[];try{return await new Promise(async n=>{let o=async()=>{r.value="",null!=i.command&&(r.busy=!0,n(await i.command.previous()??i))},a={};if(null!=e.onDidPressKey&&null!=e.keys&&0!==e.keys.length)for(let t of e.keys)a[t]={onDidPressKey:t=>e.onDidPressKey(r,t)};let l=this.container.keyboard.createScope(a);if(l.start(),s.push(l,r.onDidHide(()=>n(void 0)),r.onDidTriggerButton(async s=>{if(s===t.QuickInputButtons.Back){o();return}if(s!==X.zY){if(s instanceof X.jQ&&null!=s.onDidClick){let t=s.onDidClick(r);if(r.buttons=this.getButtons(e,i.command),await t===!0){n(i.command?.retry());return}(0,tt.tI)(t)&&(r.buttons=this.getButtons(e,i.command));return}if(null!=e.onDidClickButton){let t=e.onDidClickButton(r,s);r.buttons=this.getButtons(e,i.command),await t===!0&&n(i.command?.retry())}}}),r.onDidChangeValue(async t=>{if(null!=l&&(0!==t.length?await l.pause(["left","right"]):await l.resume()),null==e.validate)return;let[,i]=await e.validate(t);r.validationMessage=i}),r.onDidAccept(async()=>{n(await this.nextStep(i.command,r.value,r))})),r.buttons=this.getButtons(e,i.command),r.title=e.title,r.placeholder=e.placeholder,r.prompt=e.prompt,null!=e.value&&(r.value=e.value,null!=e.validate)){let[i,s]=await e.validate(e.value);i||null==s||(r.validationMessage={severity:t.InputBoxValidationSeverity.Error,message:s})}if(null!=i.command&&e===i&&i.setCommand(void 0,"menu"),r.show(),null!=e.value)try{r._onDidChangeValueEmitter?.fire(r.value)}catch{}})}finally{r.dispose(),s.forEach(e=>void e.dispose())}}async showPickStep(e,i){let r=!v.D.get("gitCommands.closeOnFocusOut")||(e.ignoreFocusOut??!1),n=e.ignoreFocusOut,o=t.window.createQuickPick();o.ignoreFocusOut=r;let a=[];try{return await new Promise(l=>{async function h(){o.value="",null!=i.command&&(o.busy=!0,l(await i.command.previous()??i))}async function c(){if(null!=e.onDidLoadMore){o.busy=!0;try{let t=await e.onDidLoadMore?.(o),i=-1;if(0!==o.activeItems.length){let e=o.activeItems[0];i=o.items.indexOf(e),(0,tn.Gy)(e)&&i--}o.items=e.items=t,i&&(o.activeItems=[o.items[i]])}finally{o.busy=!1}}}let u={left:{onDidPressKey:h}};if(null!=e.onDidPressKey&&null!=e.keys&&0!==e.keys.length)for(let t of e.keys)u[t]={onDidPressKey:t=>e.onDidPressKey(o,t)};let d=this.container.keyboard.createScope(u);d.start();let p=!1;a.push(d,o.onDidHide(()=>{e.frozen||l(void 0)}),o.onDidTriggerItemButton(async t=>{await e.onDidClickItemButton?.(o,t.button,t.item)===!0&&l(await this.nextStep(i.command,[t.item],o))}),o.onDidTriggerButton(async r=>{if(r===t.QuickInputButtons.Back){h();return}if(r!==X.zY){if(r===X.Q0){c();return}if(r instanceof X.jQ&&null!=r.onDidClick){let t;if(null==i.command&&0!==o.activeItems.length){let e=o.activeItems[0];(0,ta.YB)(e)&&(t=e)}let s=r.onDidClick(o);if(o.buttons=this.getButtons(null!=t?t.value:e,t??i.command),await s===!0){l(i.command?.retry());return}(0,tt.tI)(s)&&(o.buttons=this.getButtons(null!=t?t.value:e,t??i.command));return}if(null!=e.onDidClickButton){let t=e.onDidClickButton(o,r);o.buttons=this.getButtons(e,i.command),await t===!0&&l(i.command?.retry())}}}),o.onDidChangeValue(async t=>{if(null!=d&&(0!==t.length?await d.pause(["left","right"]):await d.resume()),!(null!=e.onDidChangeValue&&await e.onDidChangeValue(o))){if(0===t.length||o.ignoreFocusOut?0===t.length&&o.ignoreFocusOut&&!r&&(o.ignoreFocusOut=r,e.ignoreFocusOut=n):(o.ignoreFocusOut=!0,e.ignoreFocusOut=!0),!p){if(o.canSelectMany&&" "===t){o.value="",o.selectedItems=o.selectedItems.length===o.items.length?[]:o.items;return}if(t.endsWith(" ")){let t;if(o.canSelectMany&&0!==o.selectedItems.length)return;if(null==i.command){let e=i.find(o.value.trim(),!0);if(null==e)return;i.setCommand(e,this.startedWith)}else{let i=o.value.trim().toLowerCase(),r=e.items.find(e=>e.label.replace(tu,"").toLowerCase()===i);if(null==r)return;t=[r]}l(await this.nextStep(i.command,t,o));return}}if(!o.canSelectMany&&null!=i.command&&0!==t.trim().length&&(p||0===o.activeItems.length)){if(null==e.onValidateValue)return;p=await e.onValidateValue(o,t.trim(),e.items)}else p=!1;p||o.items.length===e.items.length||(o.items=e.items)}}),o.onDidChangeActive(()=>{if(null!=i.command||0===o.activeItems.length)return;let e=o.activeItems[0];(0,ta.YB)(e)&&(o.buttons=this.getButtons(void 0,e))}),o.onDidChangeSelection(t=>{o.canSelectMany&&(0===t.length||o.ignoreFocusOut?t?.length===0&&o.ignoreFocusOut&&!r&&(o.ignoreFocusOut=r,e.ignoreFocusOut=n):(o.ignoreFocusOut=!0,e.ignoreFocusOut=!0))}),o.onDidAccept(async()=>{let t=o.selectedItems;if(0===t.length){if(!o.canSelectMany||0===o.activeItems.length){let t=o.value.trim();if(0===t.length&&!e.allowEmpty)return;if(null==e.onDidAccept){e.allowEmpty&&l(await this.nextStep(i.command,[],o));return}o.busy=!0,await e.onDidAccept(o)&&l(await this.nextStep(i.command,t,o)),o.busy=!1;return}t=o.activeItems}if(1===t.length){let[e]=t;if((0,tn.Gy)(e))switch(e.directive){case tn.Xe.Cancel:l(void 0);return;case tn.Xe.Back:h();return;case tn.Xe.LoadMore:c();return;case tn.Xe.StartPreviewTrial:s.W.instance.subscription.startPreviewTrial(),l(void 0);return;case tn.Xe.RequiresVerification:s.W.instance.subscription.resendVerification(),l(void 0);return;case tn.Xe.ExtendTrial:s.W.instance.subscription.loginOrSignUp(),l(void 0);return;case tn.Xe.RequiresPaidSubscription:s.W.instance.subscription.purchase(),l(void 0);return}}if(null==i.command){let[e]=t;if(!(0,ta.YB)(e))return;i.setCommand(e,this.startedWith)}if(!o.canSelectMany&&null!=e.onDidAccept){o.busy=!0;let t=await e.onDidAccept(o);if(o.busy=!1,!t)return}l(await this.nextStep(i.command,t,o))})),o.title=e.title,o.placeholder=e.placeholder,o.matchOnDescription=!!e.matchOnDescription,o.matchOnDetail=!!e.matchOnDetail,o.canSelectMany=!!e.multiselect,o.items=e.items,o.canSelectMany?(o.selectedItems=e.selectedItems??o.items.filter(e=>e.picked),o.activeItems=o.selectedItems):o.activeItems=e.selectedItems??o.items.filter(e=>e.picked),null!=i.command&&e===i&&i.setCommand(void 0,"menu"),o.buttons=this.getButtons(e,i.command);let g=e.selectValueWhenShown??!0;if(null!=e.value&&g&&(o.value=e.value),o.show(),null==e.value||g||(o.value=e.value),null!=e.value&&g)try{o._onDidChangeValueEmitter?.fire(o.value)}catch{}})}finally{o.dispose(),a.forEach(e=>void e.dispose())}}};tc([(0,k.cM)({args:!1,scoped:!0,singleLine:!0,timed:!1})],tp.prototype,"execute",1),tp=tc([(0,w.WD)()],tp);var tg=Object.defineProperty,tm=Object.getOwnPropertyDescriptor;let tf=class extends T.mY{constructor(e){super(c.Gh.InviteToLiveShare),this.container=e}static getMarkdownCommandArgs(e){return super.getMarkdownCommandArgsCore(c.Gh.InviteToLiveShare,void 0===e||"string"==typeof e?{email:e}:e)}preExecute(e,t){return(0,T.Mg)(e)&&((t={...t}).email=e.node.contributor.email),this.execute(t)}async execute(e){if(e?.email){let t=await this.container.vsls.getContact(e.email);if(null!=t)return t.invite()}return this.container.vsls.startSession()}};tf=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?tm(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&tg(t,i,n),n})([(0,w.WD)()],tf);var tw=Object.defineProperty,tv=Object.getOwnPropertyDescriptor,ty=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?tv(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&tw(t,i,n),n};let tb=class extends T.mY{constructor(e){super(c.Gh.EnableDebugLogging),this.container=e}async execute(){await v.D.updateEffective("outputLevel","debug")}};tb=ty([(0,w.WD)()],tb);let tC=class extends T.mY{constructor(e){super(c.Gh.DisableDebugLogging),this.container=e}async execute(){await v.D.updateEffective("outputLevel","error")}};tC=ty([(0,w.WD)()],tC);var tA=Object.defineProperty,tP=Object.getOwnPropertyDescriptor;let tD=class extends T.pu{constructor(e){super(c.Gh.OpenAssociatedPullRequestOnRemote),this.container=e}async execute(e,t){let i;let r=null!=(t=(0,T.SX)(t,e))?await u.YY.fromUri(t):void 0;if(null!=e&&null!=r){let t=e.selection.active.line;if(t<0)return;try{let e=await this.container.git.getBlameForLine(r,t);if(null==e)return;i={clipboard:!1,ref:e.commit.sha,repoPath:e.commit.repoPath}}catch(e){A.Yd.error(e,"OpenAssociatedPullRequestOnRemoteCommand",`getBlameForLine(${t})`);return}}else try{let e=await (0,H.vJ)("Open Associated Pull Request",void 0,void 0,{filter:async e=>await this.container.git.getBestRemoteWithIntegration(e.uri)!=null});if(null==e)return;let t=await e?.getBranch(),r=await t?.getAssociatedPullRequest();i=null!=r?{clipboard:!1,pr:{url:r.url}}:{clipboard:!1,ref:t?.name??"HEAD",repoPath:e.path}}catch(e){A.Yd.error(e,"OpenAssociatedPullRequestOnRemoteCommand","No editor opened");return}await (0,w.P0)(c.Gh.OpenPullRequestOnRemote,i)}};tD=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?tP(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&tA(t,i,n),n})([(0,w.WD)()],tD);var tk=Object.defineProperty,tS=Object.getOwnPropertyDescriptor;let tR=class extends T.pu{constructor(e){super([c.Gh.OpenBranchesOnRemote,c.Gh.Deprecated_OpenBranchesInRemote,c.Gh.CopyRemoteBranchesUrl]),this.container=e}preExecute(e,t){return(0,T.C$)(e)&&(t={...t,remote:e.node.remote.name}),e.command===c.Gh.CopyRemoteBranchesUrl&&(t={...t,clipboard:!0}),this.execute(e.editor,e.uri,t)}async execute(e,t,i){let r=null!=(t=(0,T.SX)(t,e))?await u.YY.fromUri(t):void 0,s=(await H.hM(r,e,i?.clipboard?"Copy Remote Branches URL":"Open Branches on Remote"))?.path;if(s)try{await (0,w.P0)(c.Gh.OpenOnRemote,{resource:{type:ev.J.Branches},repoPath:s,remote:i?.remote,clipboard:i?.clipboard})}catch(e){A.Yd.error(e,"OpenBranchesOnRemoteCommand"),(0,f.W8)("Unable to open branches on remote provider")}}};tR=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?tS(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&tk(t,i,n),n})([(0,w.WD)()],tR);var t$=Object.defineProperty,t_=Object.getOwnPropertyDescriptor;let tI=class extends T.pu{constructor(e){super([c.Gh.OpenBranchOnRemote,c.Gh.Deprecated_OpenBranchInRemote,c.Gh.CopyRemoteBranchUrl]),this.container=e}preExecute(e,t){return(0,T.Qo)(e)&&(t={...t,branch:e.node.branch.name,remote:e.node.branch.getRemoteName()}),e.command===c.Gh.CopyRemoteBranchUrl&&(t={...t,clipboard:!0}),this.execute(e.editor,e.uri,t)}async execute(e,t,i){let r=null!=(t=(0,T.SX)(t,e))?await u.YY.fromUri(t):void 0,s=(await H.hM(r,e,i?.clipboard?"Copy Remote Branch URL":"Open Branch On Remote"))?.path;if(s){i={...i};try{if(null==i.branch){let e=await (0,eA.V)(s,i.clipboard?"Copy Remote Branch URL":"Open Branch On Remote",i.clipboard?"Choose a branch to copy the URL from":"Choose a branch to open",{autoPick:!0,filter:{branches:e=>null!=e.upstream},include:eA.H.Branches,sort:{branches:{current:!0},tags:{}}});if(null==e||e instanceof eN.$w)return;i.branch=e.ref}await (0,w.P0)(c.Gh.OpenOnRemote,{resource:{type:ev.J.Branch,branch:i.branch||"HEAD"},repoPath:s,remote:i.remote,clipboard:i.clipboard})}catch(e){A.Yd.error(e,"OpenBranchOnRemoteCommand"),(0,f.W8)("Unable to open branch on remote provider")}}}};tI=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?t_(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&t$(t,i,n),n})([(0,w.WD)()],tI);var tF=Object.defineProperty,tx=Object.getOwnPropertyDescriptor;let tT=class extends T.pu{constructor(e){super(c.Gh.OpenCurrentBranchOnRemote),this.container=e}async execute(e,t){let i=null!=(t=(0,T.SX)(t,e))?await u.YY.fromUri(t):void 0,r=await (0,H.hM)(i,e,"Open Current Branch Name");if(null!=r)try{let e=await r.getBranch();e?.name&&await (0,w.P0)(c.Gh.OpenOnRemote,{resource:{type:ev.J.Branch,branch:e.name||"HEAD"},repoPath:r.path})}catch(e){A.Yd.error(e,"OpenCurrentBranchOnRemoteCommand"),(0,f.W8)("Unable to open branch on remote provider")}}};tT=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?tx(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&tF(t,i,n),n})([(0,w.WD)()],tT);var tO=Object.defineProperty,tE=Object.getOwnPropertyDescriptor;let tB=class extends T.mY{constructor(e){super(c.Gh.OpenChangedFiles),this.container=e}async execute(e){e={...e};try{if(null==e.uris){let i=await (0,H.vJ)("Open All Changed Files");if(null==i)return;let r=await this.container.git.getStatusForRepo(i.uri);if(null==r){t.window.showWarningMessage("Unable to open changed files");return}e.uris=(0,e0.DZ)(r.files,e=>"D"!==e.status?e.uri:void 0)}(0,W.$_)(e.uris)}catch(e){A.Yd.error(e,"OpenChangedFilesCommand"),(0,f.W8)("Unable to open all changed files")}}};tB=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?tE(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&tO(t,i,n),n})([(0,w.WD)()],tB),o(2138);var tU=Object.defineProperty,tW=Object.getOwnPropertyDescriptor;let tM=class extends T.mY{constructor(e){super([c.Gh.OpenComparisonOnRemote,c.Gh.CopyRemoteComparisonUrl]),this.container=e}preExecute(e,t){return"viewItem"===e.type&&(e.node.is("results-commits")?t={...t,repoPath:e.node.repoPath,ref1:e.node.ref1,ref2:e.node.ref2}:e.node.is("compare-results")&&(t={...t,repoPath:e.node.repoPath,ref1:e.node.ahead.ref1,ref2:e.node.ahead.ref2})),e.command===c.Gh.CopyRemoteBranchesUrl&&(t={...t,clipboard:!0}),this.execute(t)}async execute(e){if(e?.repoPath!=null&&null!=e.ref1&&null!=e.ref2)try{await (0,w.P0)(c.Gh.OpenOnRemote,{resource:{type:ev.J.Comparison,base:e.ref1,compare:e.ref2,notation:e.notation},repoPath:e.repoPath,clipboard:e?.clipboard})}catch(e){A.Yd.error(e,"OpenComparisonOnRemoteCommand"),(0,f.W8)("Unable to open comparison on remote provider")}}};tM=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?tW(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&tU(t,i,n),n})([(0,w.WD)()],tM);var tL=Object.defineProperty,tN=Object.getOwnPropertyDescriptor;let tH=class extends T.mY{constructor(e){super(c.Gh.OpenFileFromRemote),this.container=e}async execute(){let e,i=await t.env.clipboard.readText();try{t.Uri.parse(i,!0)}catch{i=void 0}let r=await t.window.showInputBox({prompt:"Enter a remote file url to open",placeHolder:"Remote file url",value:i,ignoreFocusOut:!0});if(null==r||0===r.length)return;let s=await this.container.git.getLocalInfoFromRemoteUri(t.Uri.parse(r));if(null==s){if(null==(s=await this.container.git.getLocalInfoFromRemoteUri(t.Uri.parse(r),{validate:!1}))){t.window.showWarningMessage("Unable to parse the provided remote url.");return}let e="Open File...";if(await t.window.showWarningMessage("Unable to find a workspace folder that matches the provided remote url.",e)!==e)return}s.startLine&&(e=s.endLine?new t.Range(s.startLine-1,0,s.endLine,0):new t.Range(s.startLine-1,0,s.startLine-1,0));try{await (0,W.bM)(s.uri,{selection:e,rethrow:!0})}catch{let e=await t.window.showOpenDialog({title:"Open local file",defaultUri:s.uri,canSelectMany:!1,canSelectFolders:!1});if(null==e||0===e.length)return;await (0,W.bM)(e[0])}}};tH=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?tN(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&tL(t,i,n),n})([(0,w.WD)()],tH);var tG=o(6586),tq=Object.defineProperty,tY=Object.getOwnPropertyDescriptor;let tj=class extends T.pu{constructor(e){super([c.Gh.OpenFileOnRemote,c.Gh.Deprecated_OpenFileInRemote,c.Gh.CopyRemoteFileUrl,c.Gh.CopyRemoteFileUrlWithoutRange,c.Gh.OpenFileOnRemoteFrom,c.Gh.CopyRemoteFileUrlFrom]),this.container=e}async preExecute(e,t){let i=e.uri;if("editorLine"===e.type&&(t={...t,line:e.line,range:!0}),e.command===c.Gh.CopyRemoteFileUrlWithoutRange&&(t={...t,range:!1}),(0,T.en)(e)?(t={...t,range:!1},e.command===c.Gh.CopyRemoteFileUrl||e.command===c.Gh.CopyRemoteFileUrlWithoutRange||e.command===c.Gh.CopyRemoteFileUrlFrom?t.sha=e.node instanceof tG.q?void 0:e.node.commit.sha:(0,T.Qo)(e)&&(t.branchOrTag=e.node.branch?.name),i=e.node.uri):"viewItem"===e.type&&(t={...t,range:!1},i=e.node.uri??e.uri),(e.command===c.Gh.CopyRemoteFileUrl||e.command===c.Gh.CopyRemoteFileUrlWithoutRange||e.command===c.Gh.CopyRemoteFileUrlFrom)&&null==(t={...t,clipboard:!0}).sha){let i=(0,T.SX)(e.uri,e.editor);if(null!=i){let e=await u.YY.fromUri(i);if(e.repoPath){if(null==e.sha){let i=await this.container.git.getCommitForFile(e.repoPath,e,{firstIfNotFound:!0});null!=i&&(t.sha=i.sha)}else t.sha=e.sha}}}return(e.command===c.Gh.OpenFileOnRemoteFrom||e.command===c.Gh.CopyRemoteFileUrlFrom)&&(t={...t,pickBranchOrTag:!0,range:!1}),this.execute(e.editor,i,t)}async execute(e,i,r){if(null==(i=(0,T.SX)(i,e)))return;let s=await u.YY.fromUri(i);if(s.repoPath){r={range:!0,...r};try{let n,o=await this.container.git.getRemotesWithProviders(s.repoPath);r.range&&(null!=e&&G.n.equals(e.document.uri,i)?n=new t.Range(e.selection.start.with({line:e.selection.start.line+1}),e.selection.end.with({line:e.selection.end.line+(0===e.selection.end.character?0:1)})):null!=r.line&&(n=new t.Range(r.line+1,0,r.line+1,0)));let a=r.sha??s.sha;if(null==r.branchOrTag&&null!=a&&!(0,eu.D3)(a)&&0!==o.length){let[e,t]=(0,eH.pW)(a,"/");if(null!=t){let i=o.find(t=>t.name===e);null!=i&&(r.branchOrTag=t,a=void 0,o=[i])}}if(null==r.sha&&null==r.branchOrTag||r.pickBranchOrTag){let e;if(r.pickBranchOrTag||(e=await this.container.git.getBranch(s.repoPath)),e?.upstream==null){let e=await (0,eA.V)(s.repoPath,r.clipboard?`Copy Remote File URL From${(0,eH.vk)(c.NE.Dot,2,2)}${s.relativePath}`:`Open File on Remote From${(0,eH.vk)(c.NE.Dot,2,2)}${s.relativePath}`,`Choose a branch or tag to ${r.clipboard?"copy":"open"} the file revision from`,{allowEnteringRefs:!0,autoPick:!0,filter:{branches:e=>e.remote||null!=e.upstream},picked:r.branchOrTag,sort:{branches:{current:!0,orderBy:"date:desc"},tags:{orderBy:"date:desc"}}});if(null==e)return;if("branch"===e.refType){if(e.remote){r.branchOrTag=(0,d.S3)(e.name);let t=(0,d.Lo)(e.name),i=o.find(e=>e.name===t);null!=i&&(o=[i])}else r.branchOrTag=e.name;a=void 0}else"tag"===e.refType?(r.branchOrTag=e.ref,a=void 0):(r.branchOrTag=void 0,a=e.ref)}else r.branchOrTag=e.name}await (0,w.P0)(c.Gh.OpenOnRemote,{resource:{type:null==a?ev.J.File:ev.J.Revision,branchOrTag:r.branchOrTag??"HEAD",fileName:s.relativePath,range:n,sha:a??void 0},repoPath:s.repoPath,remotes:o,clipboard:r.clipboard})}catch(e){A.Yd.error(e,"OpenFileOnRemoteCommand"),(0,f.W8)("Unable to open file on remote provider")}}}};tj=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?tY(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&tq(t,i,n),n})([(0,w.WD)()],tj),o(4893);var tV=Object.defineProperty,tQ=Object.getOwnPropertyDescriptor;let tz=class extends T.pu{constructor(e){super(c.Gh.OpenFileAtRevisionFrom),this.container=e}async execute(e,t,i){if(null==(t=(0,T.SX)(t,e)))return;let r=await u.YY.fromUri(t);if(!r.repoPath){(0,f.bi)("Unable to open file revision");return}if(null==(i={...i}).line&&(i.line=e?.selection.active.line??0),null==i.reference){if(i?.stash){let e=this.container.git.getRelativePath(r,r.repoPath),t=`Open Changes with Stash${(0,eH.vk)(c.NE.Dot,2,2)}`,s=await (0,eL.h)(this.container.git.getStash(r.repoPath),`${t}${r.getFormattedFileName({truncateTo:c.d$-t.length})}`,"Choose a stash to compare with",{filter:t=>t.files?.some(t=>t.path===e||t.originalPath===e)??!0});if(null==s)return;i.reference=s}else{let e=`Open File at Branch or Tag${(0,eH.vk)(c.NE.Dot,2,2)}`,t=await (0,eA.V)(r.repoPath,`${e}${r.getFormattedFileName({truncateTo:c.d$-e.length})}`,"Choose a branch or tag to open the file revision from",{allowEnteringRefs:!0,keys:["right","alt+right","ctrl+right"],onDidPressKey:async(e,t)=>{let[s]=t.activeItems;null!=s&&await (0,eo.YS)(this.container.git.getRevisionUri(s.ref,r.fsPath,r.repoPath),{annotationType:i.annotationType,line:i.line,preserveFocus:!0,preview:!1})}});if(null==t)return;i.reference=t}}await (0,eo.YS)(this.container.git.getRevisionUri(i.reference.ref,r.fsPath,r.repoPath),{annotationType:i.annotationType,line:i.line,...i.showOptions})}};tz=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?tQ(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&tV(t,i,n),n})([(0,w.WD)()],tz);var tK=o(3050),tJ=o(5009),tZ=Object.defineProperty,tX=Object.getOwnPropertyDescriptor;let t0=class extends T.mY{constructor(e){super([c.Gh.OpenOnRemote,c.Gh.Deprecated_OpenInRemote]),this.container=e}async execute(e){if(e?.resource==null)return;let t="remotes"in e?e.remotes:await this.container.git.getRemotesWithProviders(e.repoPath);if(null!=e.remote){let i=t.filter(t=>t.name===e.remote);t.length>0&&(t=i)}try{let i,r=function(t){return e?.clipboard?`Copy Link to ${t} for ${n}`:`Open ${t} on ${n}`};if(e.resource.type===ev.J.Branch){let[i,r]=(0,eH.pW)(e.resource.branch,"/");if(null!=r){let s=t.find(e=>e.name===i);null!=s&&(e.resource.branch=r,t=[s])}}else if(e.resource.type===ev.J.Revision){let{commit:t,fileName:i}=e.resource;if(null!=t){let r=await t.findFile(i);r?.status==="D"?e.resource.sha=await this.container.git.resolveReference(t.repoPath,`${t.sha}^`,i):e.resource.sha=t.sha}}let s=tK.ss.getHighlanderProviders(t),n=s?.length?s[0].name:"Remote",o={autoPick:"default",clipboard:e.clipboard,setDefault:!0},a=`Choose which remote to ${e.clipboard?"copy the link for":"open on"}`;switch(e.resource.type){case ev.J.Branch:i=`${r("Branch")}${(0,eH.vk)(c.NE.Dot,2,2)}${e.resource.branch}`;break;case ev.J.Branches:i=r("Branches");break;case ev.J.Commit:i=`${r("Commit")}${(0,eH.vk)(c.NE.Dot,2,2)}${(0,eu.zL)(e.resource.sha)}`;break;case ev.J.Comparison:i=`${r("Comparison")}${(0,eH.vk)(c.NE.Dot,2,2)}${(0,eu.oI)(e.resource.base,e.resource.compare,e.resource.notation??"...")}`;break;case ev.J.CreatePullRequest:o.autoPick=!0,o.setDefault=!1,i=`${e.clipboard?`Copy Create Pull Request Link for ${n}`:`Create Pull Request on ${n}`}${(0,eH.vk)(c.NE.Dot,2,2)}${e.resource.base?.branch?(0,eu.oI)(e.resource.base.branch,e.resource.compare.branch,"..."):e.resource.compare.branch}`,a=`Choose which remote to ${e.clipboard?"copy the create pull request link for":"create the pull request on"}`;break;case ev.J.File:i=`${r("File")}${(0,eH.vk)(c.NE.Dot,2,2)}${e.resource.fileName}`;break;case ev.J.Repo:i=r("Repository");break;case ev.J.Revision:i=`${r("File")}${(0,eH.vk)(c.NE.Dot,2,2)}${(0,eu.zL)(e.resource.sha)}${(0,eH.vk)(c.NE.Dot,1,1)}${e.resource.fileName}`}let l=await (0,tJ.cY)(i,a,e.resource,t,o);await l?.execute()}catch(e){A.Yd.error(e,"OpenOnRemoteCommand"),(0,f.W8)("Unable to open in remote provider")}}};t0=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?tX(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&tZ(t,i,n),n})([(0,w.WD)()],t0);var t1=o(1185),t2=Object.defineProperty,t4=Object.getOwnPropertyDescriptor;let t5=class extends T.mY{constructor(e){super([c.Gh.OpenIssueOnRemote,c.Gh.CopyRemoteIssueUrl,c.Gh.OpenAutolinkUrl,c.Gh.CopyAutolinkUrl]),this.container=e}preExecute(e,t){return"viewItem"===e.type&&e.node instanceof t1.Z&&(t={...t,issue:{url:e.node.item.url},clipboard:e.command===c.Gh.CopyRemoteIssueUrl||e.command===c.Gh.CopyAutolinkUrl}),this.execute(t)}async execute(e){e.clipboard?await t.env.clipboard.writeText(e.issue.url):t.env.openExternal(t.Uri.parse(e.issue.url))}};t5=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?t4(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&t2(t,i,n),n})([(0,w.WD)()],t5);var t6=o(2060),t3=Object.defineProperty,t8=Object.getOwnPropertyDescriptor;let t9=class extends T.mY{constructor(e){super([c.Gh.OpenPullRequestOnRemote,c.Gh.CopyRemotePullRequestUrl]),this.container=e}preExecute(e,t){return"viewItem"===e.type&&e.node instanceof t6.Z&&(t={...t,pr:{url:e.node.pullRequest.url},clipboard:e.command===c.Gh.CopyRemotePullRequestUrl}),this.execute(t)}async execute(e){if(e?.pr==null){if(e?.repoPath==null||e?.ref==null)return;let i=await this.container.git.getBestRemoteWithIntegration(e.repoPath);if(null==i)return;let r=this.container.integrations.getByRemote(i);if(null==r)return;let s=await r.getPullRequestForCommit(i.provider.repoDesc,e.ref);if(null==s){t.window.showInformationMessage(`No pull request associated with '${(0,eu.zL)(e.ref)}'`);return}(e={...e}).pr=s}e.clipboard?await t.env.clipboard.writeText(e.pr.url):t.env.openExternal(t.Uri.parse(e.pr.url))}};t9=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?t8(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&t3(t,i,n),n})([(0,w.WD)()],t9);var t7=Object.defineProperty,ie=Object.getOwnPropertyDescriptor;let it=class extends T.pu{constructor(e){super([c.Gh.OpenRepoOnRemote,c.Gh.Deprecated_OpenRepoInRemote,c.Gh.CopyRemoteRepositoryUrl]),this.container=e}preExecute(e,t){return(0,T.C$)(e)&&(t={...t,remote:e.node.remote.name}),e.command===c.Gh.CopyRemoteRepositoryUrl&&(t={...t,clipboard:!0}),this.execute(e.editor,e.uri,t)}async execute(e,t,i){let r=null!=(t=(0,T.SX)(t,e))?await u.YY.fromUri(t):void 0,s=(await H.hM(r,e,i?.clipboard?"Choose which repository to copy the url from":"Choose which repository to open on remote"))?.path;if(s)try{await (0,w.P0)(c.Gh.OpenOnRemote,{resource:{type:ev.J.Repo},repoPath:s,remote:i?.remote,clipboard:i?.clipboard})}catch(e){A.Yd.error(e,"OpenRepoOnRemoteCommand"),(0,f.W8)("Unable to open repository on remote provider")}}};it=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?ie(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&t7(t,i,n),n})([(0,w.WD)()],it);var ii=Object.defineProperty,ir=Object.getOwnPropertyDescriptor;let is=class extends T.pu{constructor(e){super([c.Gh.OpenRevisionFile,c.Gh.OpenRevisionFileInDiffLeft,c.Gh.OpenRevisionFileInDiffRight]),this.container=e}async execute(e,t,i){if(null==(t=(0,T.SX)(t,e)))return;let r=await u.YY.fromUri(t);null==(i={...i}).line&&(i.line=e?.selection.active.line??0);try{if(null==i.revisionUri){if(r?.sha){let e=await this.container.git.getCommit(r.repoPath,r.sha);i.revisionUri=e?.file?.status==="D"?this.container.git.getRevisionUri(await e.getPreviousSha()??eI.Ii,e.file,e.repoPath):this.container.git.getRevisionUri(r)}else i.revisionUri=this.container.git.getRevisionUri(r)}await (0,eo.YS)(i.revisionUri,{annotationType:i.annotationType,line:i.line,...i.showOptions})}catch(e){A.Yd.error(e,"OpenRevisionFileCommand"),(0,f.W8)("Unable to open file revision")}}};is=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?ir(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&ii(t,i,n),n})([(0,w.WD)()],is);var io=Object.defineProperty,ia=Object.getOwnPropertyDescriptor;let il=class extends T.pu{constructor(e){super([c.Gh.OpenWorkingFile,c.Gh.OpenWorkingFileInDiffLeft,c.Gh.OpenWorkingFileInDiffRight]),this.container=e}async execute(e,i,r){null==(r={...r}).line&&(r.line=e?.selection.active.line);try{if(null==r.uri){if(i=(0,T.SX)(i,e),null==i)return}else i=r.uri;if(r.uri=await u.YY.fromUri(i),(0,u.uy)(r.uri)&&r.uri.sha){let e=await this.container.git.getWorkingUri(r.uri.repoPath,r.uri);if(void 0===e){t.window.showWarningMessage("Unable to open working file. File could not be found in the working tree");return}r.uri=new u.YY(e,r.uri.repoPath)}void 0!==r.line&&0!==r.line&&(void 0===r.showOptions&&(r.showOptions={}),r.showOptions.selection=new t.Range(r.line,0,r.line,0));let s=await (0,W.GR)(r.uri,{...r.showOptions,throwOnError:!0});if(void 0===r.annotationType)return;await this.container.fileAnnotations.show(s,r.annotationType,{selection:{line:r.line}})}catch(e){A.Yd.error(e,"OpenWorkingFileCommand"),(0,f.W8)("Unable to open working file")}}};il=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?ia(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&io(t,i,n),n})([(0,w.WD)()],il);var ih=o(9679),ic=Object.defineProperty,iu=Object.getOwnPropertyDescriptor,id=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?iu(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&ic(t,i,n),n};let ip=class extends T.mY{constructor(e){super(c.Gh.CreatePatch),this.container=e}preExecute(e,t){return null==t&&"viewItem"===e.type&&((0,T.en)(e)?t={repoPath:e.node.commit.repoPath,to:e.node.commit.ref}:(0,T.F4)(e)&&(t={repoPath:e.node.uri.fsPath,to:e.node.compareRef.ref,from:e.node.compareWithRef.ref})),this.execute(t)}async execute(e){let i;if(null==(i=e?.repoPath==null?await (0,H.vJ)("Create Patch"):this.container.git.getRepository(e.repoPath))||e?.to==null)return;let r=await this.container.git.getDiff(i.uri,e.to??"HEAD",e.from);if(null==r)return;let s=await t.workspace.openTextDocument({content:r.contents,language:"diff"});await t.window.showTextDocument(s)}};ip=id([(0,w.WD)()],ip);let ig=class extends T.mY{constructor(e){super([c.Gh.CreateCloudPatch,c.Gh.ShareAsCloudPatch]),this.container=e}preExecute(e,t){return null==t&&"viewItem"===e.type&&((0,T.en)(e)?t={repoPath:e.node.commit.repoPath,to:e.node.commit.ref}:(0,T.F4)(e)&&(t={repoPath:e.node.uri.fsPath,to:e.node.compareRef.ref,from:e.node.compareWithRef.ref})),this.execute(t)}async execute(e){if(e?.repoPath==null)return(0,ih.l)({mode:"create"});let t=this.container.git.getRepository(e.repoPath);if(null==t)return(0,ih.l)({mode:"create"});let i=await iv(this.container,t,e);return null==i?(0,ih.l)({mode:"create",create:{repositories:[t]}}):(0,ih.l)({mode:"create",create:i})}};ig=id([(0,w.WD)()],ig);let im=class extends T.pu{constructor(e){super(c.Gh.OpenPatch),this.container=e}async execute(e){let i;if(e?.document?.languageId==="diff")i=e.document;else{let e=await t.window.showOpenDialog({canSelectFiles:!0,canSelectFolders:!1,canSelectMany:!1,filters:{Patches:["diff","patch"]},openLabel:"Open Patch",title:"Open Patch File"}),r=e?.[0];if(null==r)return;i=await t.workspace.openTextDocument(r),await t.window.showTextDocument(i)}let r={draftType:"local",patch:{type:"local",uri:i.uri,contents:i.getText()}};(0,ih.l)({mode:"view",draft:r})}};im=id([(0,w.WD)()],im);let iw=class extends T.mY{constructor(e){super(c.Gh.OpenCloudPatch),this.container=e}async execute(e){if(e?.id==null&&e?.draft==null){t.window.showErrorMessage("Cannot open Cloud Patch; no patch or patch id provided");return}let i=e?.draft??await this.container.drafts.getDraft(e?.id);if(null==i){t.window.showErrorMessage(`Cannot open Cloud Patch; patch '${e.id}' not found`);return}(0,ih.l)({mode:"view",draft:i})}};async function iv(e,t,i){if(null==i.to)return;let r=i.to??"HEAD",s={type:"revision",repository:{name:t.name,path:t.path,uri:t.uri.toString()},files:void 0,revision:{to:r,from:i.from??`${r}^`}},n={changes:[s]},o=await e.git.getCommit(t.uri,r);if(null==o)return;let a=o.message.trim(),l=a.indexOf("\n");if(l<0?n.title=a:(n.title=a.substring(0,l),n.description=a.substring(l+1).trim()),null==i.from){if(null==o.files)return;s.files=[...o.files]}else{let o=await e.git.getDiff(t.uri,r,i.from);if(null==o)return;let a=await e.git.getDiffFiles(t.uri,o.contents);if(a?.files==null)return;if(s.files=a.files,n.title=`Comparing ${(0,eu.zL)(i.to)} with ${(0,eu.zL)(i.from)}`,!(0,eu.D3)(i.to)){let r=await e.git.getCommit(t.uri,i.to);null!=r&&(s.revision.to=r.sha)}if(!(0,eu.D3)(i.from)){let r=await e.git.getCommit(t.uri,i.from);null!=r&&(s.revision.from=r.sha)}}return n}iw=id([(0,w.WD)()],iw);var iy=Object.defineProperty,ib=Object.getOwnPropertyDescriptor,iC=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?ib(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&iy(t,i,n),n};let iA=class extends T.mY{constructor(e){super(c.Gh.DisableRebaseEditor),this.container=e}execute(){return this.container.rebaseEditor.setEnabled(!1)}};iA=iC([(0,w.WD)()],iA);let iP=class extends T.mY{constructor(e){super(c.Gh.EnableRebaseEditor),this.container=e}execute(){return this.container.rebaseEditor.setEnabled(!0)}};iP=iC([(0,w.WD)()],iP);var iD=Object.defineProperty,ik=Object.getOwnPropertyDescriptor;let iS=class extends T.mY{constructor(e){super(c.Gh.RefreshHover),this.container=e}async execute(){await (0,w.dO)("editor.action.showHover")}};iS=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?ik(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&iD(t,i,n),n})([(0,w.WD)()],iS),o(6199);var iR=Object.defineProperty,i$=Object.getOwnPropertyDescriptor,i_=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?i$(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&iR(t,i,n),n};let iI=class extends T.mY{constructor(e){super(c.Gh.FetchRepositories),this.container=e}async execute(){return(0,x.m)({command:"fetch",state:{repos:this.container.git.openRepositories}})}};iI=i_([(0,w.WD)()],iI);let iF=class extends T.mY{constructor(e){super(c.Gh.PullRepositories),this.container=e}async execute(){return(0,x.m)({command:"pull",state:{repos:this.container.git.openRepositories}})}};iF=i_([(0,w.WD)()],iF);let ix=class extends T.mY{constructor(e){super(c.Gh.PushRepositories),this.container=e}async execute(){return(0,x.m)({command:"push",state:{repos:this.container.git.openRepositories}})}};ix=i_([(0,w.WD)()],ix);var iT=o(8388),iO=Object.defineProperty,iE=Object.getOwnPropertyDescriptor,iB=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?iE(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&iO(t,i,n),n};let iU=class extends T.mY{constructor(e){super(c.Gh.ResetAIKey),this.container=e}execute(){this.container.ai.reset()}};iU=iB([(0,w.WD)()],iU);let iW=class extends T.mY{constructor(e){super(c.Gh.ResetAvatarCache),this.container=e}execute(){(0,iT.E3)("all")}};iW=iB([(0,w.WD)()],iW);let iM=class extends T.mY{constructor(e){super(c.Gh.ResetSuppressedWarnings),this.container=e}async execute(){await v.D.update("advanced.messages",void 0,t.ConfigurationTarget.Global)}};iM=iB([(0,w.WD)()],iM);let iL=class extends T.mY{constructor(e){super(c.Gh.ResetTrackedUsage),this.container=e}async execute(){await this.container.usage.reset()}};iL=iB([(0,w.WD)()],iL);var iN=Object.defineProperty,iH=Object.getOwnPropertyDescriptor;let iG=class extends T.mY{constructor(e){super(c.Gh.ResetViewsLayout),this.container=e}async execute(){for(let[e,t]of c._h){try{await (0,w.dO)("vscode.moveViews",{viewIds:t.map(e=>`gitlens.views.${e}`),destinationId:e})}catch{}e.includes("gitlens")&&await (0,w.dO)(`${e}.resetViewContainerLocation`)}}};iG=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?iH(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&iN(t,i,n),n})([(0,w.WD)()],iG);var iq=o(4655),iY=Object.defineProperty,ij=Object.getOwnPropertyDescriptor;let iV=class extends T.mY{constructor(e){super([c.Gh.SearchCommits,c.Gh.SearchCommitsInView]),this.container=e}preExecute(e,t){return e.command===c.Gh.SearchCommitsInView?(t={...t}).showResultsInSideBar=!0:"viewItem"===e.type&&((t={...t}).showResultsInSideBar=!0,e.node instanceof iq.V&&(t.repoPath=e.node.repoPath,t.search=e.node.search,t.prefillOnly=!0),(0,T.pT)(e)&&(t.repoPath=e.node.repo.path)),this.execute(t)}async execute(e){await (0,x.m)({command:"search",prefillOnly:e?.prefillOnly,state:{repo:e?.repoPath,...e?.search,showResultsInSideBar:v.D.get("gitCommands.search.showResultsInSideBar")??e?.showResultsInSideBar,openPickInView:e?.openPickInView??!1}})}};iV=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?ij(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&iY(t,i,n),n})([(0,w.WD)()],iV),o(1676);var iQ=Object.defineProperty,iz=Object.getOwnPropertyDescriptor;let iK=class extends T.mY{constructor(e){super(c.Gh.ShowLastQuickPick),this.container=e}execute(){let e=(0,T.l8)();if(void 0===e)return Promise.resolve(void 0);try{return t.commands.executeCommand(e.command,...e.args)}catch(e){return A.Yd.error(e,"ShowLastQuickPickCommand"),(0,f.W8)("Unable to show last quick pick")}}};iK=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?iz(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&iQ(t,i,n),n})([(0,w.WD)()],iK);var iJ=Object.defineProperty,iZ=Object.getOwnPropertyDescriptor;let iX=class extends T.mY{constructor(e){super(c.Gh.OpenOnlyChangedFiles),this.container=e}async execute(e){e={...e};try{let i,r;if(null==e.uris){let i=await (0,H.vJ)("Open Changed & Close Unchanged Files");if(null==i)return;let r=await this.container.git.getStatusForRepo(i.uri);if(null==r){t.window.showWarningMessage("Unable to open changed & close unchanged files");return}e.uris=(0,e0.DZ)(r.files,e=>"D"!==e.status?e.uri:void 0)}let s=0===e.uris.length,n=new Set(e.uris);for(let o of t.window.tabGroups.all)for(let a of o.tabs){if(s){t.window.tabGroups.close(a,!0);continue}r=a.input instanceof t.TabInputText||a.input instanceof t.TabInputCustom||a.input instanceof t.TabInputNotebook?a.input.uri:a.input instanceof t.TabInputTextDiff||a.input instanceof t.TabInputNotebookDiff?a.input.modified:void 0,null!=r&&(i=e.uris.find(e=>G.n.equals(e,r)),null!=i?n.delete(i):t.window.tabGroups.close(a,!0))}n.size>0&&(0,W.$_)([...n])}catch(e){A.Yd.error(e,"OpenOnlyChangedFilesCommand"),(0,f.W8)("Unable to open changed & close unchanged files")}}};iX=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?iZ(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&iJ(t,i,n),n})([(0,w.WD)()],iX);var i0=Object.defineProperty,i1=Object.getOwnPropertyDescriptor;let i2=class extends T.Lk{constructor(e){super([c.Gh.ShowQuickBranchHistory,c.Gh.ShowQuickCurrentBranchHistory]),this.container=e}preExecute(e,t){return e.command===c.Gh.ShowQuickCurrentBranchHistory&&((t={...t}).branch="HEAD"),this.execute(e.editor,e.uri,t)}async execute(e,t,i){let r;let s=null!=(t=(0,T.SX)(t,e))?await u.YY.fromUri(t):void 0,n=i?.repoPath??s?.repoPath??this.container.git.highlander?.path;return null!=n&&(i?.branch!=null?r="HEAD"===i.branch?"HEAD":(0,eu.xB)(i.branch,n,{refType:"branch",name:i.branch,remote:!1}):i?.tag!=null&&(r=(0,eu.xB)(i.tag,n,{refType:"tag",name:i.tag}))),(0,x.m)({command:"log",state:null!=n?{repo:n,reference:r}:{}})}};i2=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?i1(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&i0(t,i,n),n})([(0,w.WD)()],i2),o(1744),o(8918);var i4=Object.defineProperty,i5=Object.getOwnPropertyDescriptor;let i6=class extends T.Lk{constructor(e){super([c.Gh.OpenFileHistory,c.Gh.OpenFolderHistory,c.Gh.ShowQuickFileHistory,c.Gh.QuickOpenFileHistory,c.Gh.Deprecated_ShowFileHistoryInView]),this.container=e}preExecute(e,t){return(e.command===c.Gh.OpenFileHistory||e.command===c.Gh.OpenFolderHistory||e.command===c.Gh.Deprecated_ShowFileHistoryInView)&&((t={...t}).showInSideBar=!0),this.execute(e.editor,e.uri,t)}async execute(e,t,i){if(null==(t=(0,T.SX)(t,e)))return;let r=await u.YY.fromUri(t);if(i?.showInSideBar){await this.container.fileHistoryView.showHistoryForUri(r);return}await (0,x.m)({command:"log",state:r?.repoPath!=null?{repo:r.repoPath,reference:i?.reference??"HEAD",fileName:r.relativePath}:{}})}};i6=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?i5(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&i4(t,i,n),n})([(0,w.WD)()],i6);var i3=Object.defineProperty,i8=Object.getOwnPropertyDescriptor;let i9=class extends T.mY{constructor(e){super(c.Gh.ShowQuickRepoStatus),this.container=e}async execute(e){return(0,x.m)({command:"status",state:{repo:e?.repoPath}})}};i9=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?i8(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&i3(t,i,n),n})([(0,w.WD)()],i9);var i7=Object.defineProperty,re=Object.getOwnPropertyDescriptor;let rt=class extends T.mY{constructor(e){super(c.Gh.ShowQuickStashList),this.container=e}execute(e){return(0,x.m)({command:"stash",state:{subcommand:"list",repo:e?.repoPath}})}};rt=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?re(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&i7(t,i,n),n})([(0,w.WD)()],rt);var ri=Object.defineProperty,rr=Object.getOwnPropertyDescriptor;let rs=class extends T.mY{constructor(e){super([c.Gh.ShowBranchesView,c.Gh.ShowCommitDetailsView,c.Gh.ShowCommitsView,c.Gh.ShowContributorsView,c.Gh.ShowDraftsView,c.Gh.ShowFileHistoryView,c.Gh.ShowGraphView,c.Gh.ShowHomeView,c.Gh.ShowAccountView,c.Gh.ShowLineHistoryView,c.Gh.ShowRemotesView,c.Gh.ShowRepositoriesView,c.Gh.ShowSearchAndCompareView,c.Gh.ShowStashesView,c.Gh.ShowTagsView,c.Gh.ShowTimelineView,c.Gh.ShowWorktreesView,c.Gh.ShowWorkspacesView]),this.container=e}preExecute(e,...t){return this.execute(e,...t)}async execute(e,...t){switch(e.command){case c.Gh.ShowBranchesView:return this.container.branchesView.show();case c.Gh.ShowCommitDetailsView:return this.container.commitDetailsView.show();case c.Gh.ShowCommitsView:return this.container.commitsView.show();case c.Gh.ShowContributorsView:return this.container.contributorsView.show();case c.Gh.ShowDraftsView:return this.container.draftsView.show();case c.Gh.ShowFileHistoryView:return this.container.fileHistoryView.show();case c.Gh.ShowHomeView:return this.container.homeView.show();case c.Gh.ShowAccountView:return this.container.accountView.show();case c.Gh.ShowGraphView:return this.container.graphView.show(void 0,...t);case c.Gh.ShowLineHistoryView:return this.container.lineHistoryView.show();case c.Gh.ShowRemotesView:return this.container.remotesView.show();case c.Gh.ShowRepositoriesView:return this.container.repositoriesView.show();case c.Gh.ShowSearchAndCompareView:return this.container.searchAndCompareView.show();case c.Gh.ShowStashesView:return this.container.stashesView.show();case c.Gh.ShowTagsView:return this.container.tagsView.show();case c.Gh.ShowTimelineView:return this.container.timelineView.show();case c.Gh.ShowWorktreesView:return this.container.worktreesView.show();case c.Gh.ShowWorkspacesView:return this.container.workspacesView.show()}return Promise.resolve(void 0)}};rs=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?rr(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&ri(t,i,n),n})([(0,w.WD)()],rs);var rn=o(252),ro=Object.defineProperty,ra=Object.getOwnPropertyDescriptor;let rl=class extends T.mY{constructor(e){super(c.Gh.StashApply),this.container=e}async preExecute(e,t){return(0,T.en)(e)?(null==e.node.commit.message&&await e.node.commit.ensureFullDetails(),t={...t,stashItem:e.node.commit}):(0,T.pT)(e)&&(t={...t,repoPath:e.node.repo.path}),this.execute(t)}async execute(e){return e?.deleteAfter?(0,rn.Sw)(e?.repoPath??e?.stashItem?.repoPath,e?.stashItem):(0,rn.nn)(e?.repoPath??e?.stashItem?.repoPath,e?.stashItem)}};rl=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?ra(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&ro(t,i,n),n})([(0,w.WD)()],rl);var rh=o(8887),rc=Object.defineProperty,ru=Object.getOwnPropertyDescriptor;let rd=class extends T.mY{constructor(e){super([c.Gh.StashSave,c.Gh.StashSaveFiles]),this.container=e}async preExecute(e,t){if((0,T.E9)(e))(t={...t}).repoPath=e.node.file.repoPath??e.node.repoPath,t.uris=[u.YY.fromFile(e.node.file,t.repoPath)];else if((0,T.pT)(e))(t={...t}).repoPath=e.node.repo.path;else if((0,T.l7)(e))(t={...t}).repoPath=e.node.repoPath;else if("scm-states"===e.type)(t={...t}).uris=e.scmResourceStates.map(e=>e.resourceUri),t.repoPath=(await this.container.git.getOrOpenRepository(t.uris[0]))?.path,e.scmResourceStates.some(e=>e.resourceGroupType===eX.Index)||(t.keepStaged=!0);else if("scm-groups"===e.type){t={...t};let i=!0,r=!1,s=e.scmResourceGroups.reduce((e,t)=>{let s="index"===t.id;return i&&!s&&(i=!1),s&&(r=!0),e.concat(t.resourceStates.map(e=>e.resourceUri))},[]),n=await this.container.git.getOrOpenRepository(s[0]),o=!1;i&&null!=n&&(o=await n.supports(rh.A.StashOnlyStaged)),o?(t.onlyStaged=!0,t.onlyStagedUris=s):(t.uris=s,t.repoPath=n?.path,r||(t.keepStaged=!0))}return this.execute(t)}execute(e){return(0,rn.VF)(e?.repoPath,e?.uris,e?.message,e?.keepStaged,e?.onlyStaged,e?.onlyStagedUris)}};rd=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?ru(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&rc(t,i,n),n})([(0,w.WD)()],rd);var rp=Object.defineProperty,rg=Object.getOwnPropertyDescriptor;let rm=class extends T.mY{constructor(e){super(c.Gh.SwitchAIModel),this.container=e}async execute(){await this.container.ai.switchProvider()}};async function rf(){let e=v.D.get("modes");if(null==e)return;let i=Object.keys(e);if(0===i.length)return;let r=v.D.get("mode.active"),s=i.map(t=>{let i=e[t];return{label:`${r===t?"$(check)  ":"     "}${i.name} mode`,description:i.description?`\xa0${c.NE.Dash}\xa0 ${i.description}`:"",key:t}});return r&&null!=e[r]&&s.unshift({label:`Exit ${e[r].name} mode`,key:void 0}),await t.window.showQuickPick(s,{placeHolder:"select a GitLens mode to enter"})}rm=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?rg(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&rp(t,i,n),n})([(0,w.WD)()],rm);var rw=o(6004),rv=Object.defineProperty,ry=Object.getOwnPropertyDescriptor,rb=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?ry(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&rv(t,i,n),n};let rC=class extends T.mY{constructor(e){super(c.Gh.SwitchMode),this.container=e}async execute(){let e=(0,rw.UH)(),i=await rf();if(void 0===i)return;(0,rw.lH)(e,` \u2022 mode=${i.key??""}`);let r=v.D.get("mode.active");if(r!==i.key){if(null!=r&&0!==r.length){let e=v.D.get("modes"),t=e?.[r].annotations;null!=t&&t!==(null!=i.key?e?.[i.key].annotations:void 0)&&await this.container.fileAnnotations.clearAll()}await v.D.update("mode.active",i.key,t.ConfigurationTarget.Global)}}};rb([(0,k.cM)({args:!1,scoped:!0,singleLine:!0,timed:!1})],rC.prototype,"execute",1),rC=rb([(0,w.WD)()],rC);let rA=class extends T.mY{constructor(e){super(c.Gh.ToggleReviewMode),this.container=e}async execute(){let e=v.D.get("modes");if(null==e||!Object.keys(e).includes("review"))return;let i="review"===v.D.get("mode.active")?void 0:"review";await v.D.update("mode.active",i,t.ConfigurationTarget.Global)}};rb([(0,k.cM)({args:!1,singleLine:!0,timed:!1})],rA.prototype,"execute",1),rA=rb([(0,w.WD)()],rA);let rP=class extends T.mY{constructor(e){super(c.Gh.ToggleZenMode),this.container=e}async execute(){let e=v.D.get("modes");if(null==e||!Object.keys(e).includes("zen"))return;let i="zen"===v.D.get("mode.active")?void 0:"zen";await v.D.update("mode.active",i,t.ConfigurationTarget.Global)}};rb([(0,k.cM)({args:!1,singleLine:!0,timed:!1})],rP.prototype,"execute",1),rP=rb([(0,w.WD)()],rP);var rD=Object.defineProperty,rk=Object.getOwnPropertyDescriptor;let rS=class extends T.mY{constructor(e){super(c.Gh.ToggleCodeLens),this.container=e}execute(){this.container.codeLens.toggleCodeLens()}};rS=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?rk(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&rD(t,i,n),n})([(0,w.WD)()],rS);var rR=Object.defineProperty,r$=Object.getOwnPropertyDescriptor,r_=(e,t,i,r)=>{for(var s,n=r>1?void 0:r?r$(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&rR(t,i,n),n};let rI=class extends T._l{constructor(e){super([c.Gh.ClearFileAnnotations,c.Gh.ComputingFileAnnotations]),this.container=e}async execute(e,i,r){if(null!=e&&!(0,W.PH)(e)&&null!=r&&!G.n.equals(r,e.document.uri)){let i=t.window.visibleTextEditors.find(e=>G.n.equals(r,e.document.uri));null!=i&&(e=i)}try{await this.container.fileAnnotations.clear(e)}catch(e){A.Yd.error(e,"ClearFileAnnotationsCommand"),(0,f.W8)("Unable to clear file annotations")}}};rI=r_([(0,w.WD)()],rI);let rF=class extends T.pu{constructor(e){super([c.Gh.ToggleFileBlame,c.Gh.ToggleFileBlameInDiffLeft,c.Gh.ToggleFileBlameInDiffRight]),this.container=e}execute(e,t,i){return rO(this.container,e,t,{...i,type:"blame"})}};rF=r_([(0,w.WD)()],rF);let rx=class extends T.pu{constructor(e){super(c.Gh.ToggleFileChanges),this.container=e}execute(e,t,i){return rO(this.container,e,t,{...i,type:"changes"})}};rx=r_([(0,w.WD)()],rx);let rT=class extends T.pu{constructor(e){super([c.Gh.ToggleFileHeatmap,c.Gh.ToggleFileHeatmapInDiffLeft,c.Gh.ToggleFileHeatmapInDiffRight]),this.container=e}execute(e,t,i){return rO(this.container,e,t,{...i,type:"heatmap"})}};async function rO(e,i,r,s){if(null!=i&&!(0,W.PH)(i)&&null!=r&&!G.n.equals(r,i.document.uri)){let e=t.window.visibleTextEditors.find(e=>G.n.equals(r,e.document.uri));null!=e&&(i=e)}try{s={type:"blame",...s},await e.fileAnnotations.toggle(i,s.type,{selection:s.context?.selection??{line:i?.selection.active.line},...s.context},s.on)}catch(e){A.Yd.error(e,"ToggleFileAnnotationsCommand"),(0,f.W8)(`Unable to toggle file ${s.type} annotations`)}}rT=r_([(0,w.WD)()],rT);var rE=Object.defineProperty,rB=Object.getOwnPropertyDescriptor;let rU=class extends T.pu{constructor(e){super(c.Gh.ToggleLineBlame),this.container=e}async execute(e,t){try{await this.container.lineAnnotations.toggle(e)}catch(e){A.Yd.error(e,"ToggleLineBlameCommand"),(0,f.W8)("Unable to toggle line blame annotations")}}};rU=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?rB(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&rE(t,i,n),n})([(0,w.WD)()],rU);var rW=Object.defineProperty,rM=Object.getOwnPropertyDescriptor;let rL=class extends T.mY{constructor(e){super(c.Gh.GetStarted),this.container=e}execute(e){let t=this.container.context.extension.id;e===t&&(e=void 0),(0,W.lN)(t,e??"gitlens.welcome",void 0,!1)}};async function rN(e){let n,o;let a=e.extension.packageJSON.version,k=(0,I.L5)(a,"> 2020.0.0"),S=v.D.get("defaultDateLocale"),R=(0,h.oE)(v.D.get("outputLevel"));A.Yd.configure({name:"GitLens",createChannel:function(i){let s=t.window.createOutputChannel(i);return e.subscriptions.push(s),("error"===R||"warn"===R)&&(s.appendLine(`GitLens${k?" (pre-release)":""} v${a} activating in ${t.env.appName} (${t.version}) on the ${r.$L?"web":"desktop"}; language='${t.env.language}', logLevel='${R}', defaultDateLocale='${S}' (${t.env.machineId}|${t.env.sessionId})`),s.appendLine('To enable debug logging, set `"gitlens.outputLevel: "debug"` or run "GitLens: Enable Debug Logging" from the Command Palette')),s},toLoggable:function(e){return(0,u.uy)(e)?`GitUri(${e.toString(!0)}${e.repoPath?` repoPath=${e.repoPath}`:""}${e.sha?` sha=${e.sha}`:""})`:e instanceof t.Uri?`Uri(${e.toString(!0)})`:(0,g.uC)(e)||(0,d.BF)(e)||(0,p.f_)(e)||(0,m.YR)(e)||(0,F.FZ)(e)?e.toString():"uri"in e&&e.uri instanceof t.Uri?`${"name"in e&&"index"in e?"WorkspaceFolder":(0,A.q4)(e)}(uri=${e.uri.toString(!0)})`:void 0}},R,e.extensionMode===t.ExtensionMode.Development);let $=new D.u(`GitLens${k?" (pre-release)":""} v${a}`,{log:{message:` activating in ${t.env.appName} (${t.version}) on the ${r.$L?"web":"desktop"}; language='${t.env.language}', logLevel='${R}', defaultDateLocale='${S}' (${t.env.machineId}|${t.env.sessionId})`}});if(k){let e=(0,I.mL)(a);if(new Date(e.major,e.minor-1,Number(e.patch.toString().substring(0,2))).getTime()<Date.now()-12096e5){$.stop({message:` was NOT activated because this pre-release version (${a}) has expired`}),setTimeout(f.Nl,0,a);return}}t.workspace.isTrusted||(0,y.v)("gitlens:untrusted",!0),function(e,...t){e.globalState?.setKeysForSync([...t,c.lw.Version,c.lw.HomeViewWelcomeVisible])}(e);let x=new _(e),T=x.get(k?"synced:preVersion":"synced:version"),O=x.get(k?"preVersion":"version");n=null==O||null==T?T??O:1===(0,I.qu)(T,O)?T:O,A.Yd.enabled("debug")&&(o=`syncedVersion=${T}, localVersion=${O}, previousVersion=${n}, welcome=${x.get("views:welcome:visible")}`),null==n&&x.store("views:welcome:visible",!0),v.V.configure(e),(0,b.Cz)(S??t.env.language),e.subscriptions.push(v.D.onDidChange(e=>{v.D.changed(e,"defaultDateLocale")&&(0,b.Cz)(v.D.get("defaultDateLocale")??t.env.language)}));let E=s.W.create(e,x,k,a,n);(0,C.IH)(E.onReady)(()=>{e.subscriptions.push(...(0,w.$$)(E)),function(e){e.context.subscriptions.push(e.actionRunners.registerBuiltIn("createPullRequest",{label:e=>`Create Pull Request on ${e.remote?.provider?.name??"Remote"}`,run:async e=>{"createPullRequest"===e.type&&await (0,w.P0)(c.Gh.CreatePullRequestOnRemote,{base:void 0,compare:e.branch.isRemote?(0,d.S3)(e.branch.name):e.branch.upstream?(0,d.S3)(e.branch.upstream):e.branch.name,remote:e.remote?.name??"",repoPath:e.repoPath})}}),e.actionRunners.registerBuiltIn("openPullRequest",{label:e=>`Open Pull Request on ${e.provider?.name??"Remote"}`,run:async e=>{"openPullRequest"===e.type&&await (0,w.P0)(c.Gh.OpenPullRequestOnRemote,{pr:{url:e.pullRequest.url}})}}))}(E),function(e){e.subscriptions.push(s.W.instance.actionRunners.registerBuiltInPartner("liveshare","hover.commands",{name:"Live Share",label:e=>"hover.commands"===e.type&&"You"!==e.commit.author.name?`$(live-share) Invite ${e.commit.author.name}${e.commit.author.presence?.statusText?` (${e.commit.author.presence?.statusText})`:""} to a Live Share Session`:"$(live-share) Start a Live Share Session",run:async e=>{if("hover.commands"!==e.type||"You"===e.commit.author.name){await (0,w.P0)(c.Gh.InviteToLiveShare,{});return}await (0,w.P0)(c.Gh.InviteToLiveShare,{email:e.commit.author.email})}}))}(e),t.workspace.isTrusted||e.subscriptions.push(t.workspace.onDidGrantWorkspaceTrust(()=>{(0,y.v)("gitlens:untrusted",void 0),E.telemetry.setGlobalAttribute("workspace.isTrusted",t.workspace.isTrusted)})),rG(E,a,k,n),x.store(k?"preVersion":"version",a),(null==T||1===(0,I.qu)(a,T))&&x.store(k?"synced:preVersion":"synced:version",a),"debug"===R&&setTimeout(async()=>{"debug"===(0,h.oE)(v.D.get("outputLevel"))&&!E.prereleaseOrDebugging&&await (0,f.EB)()&&(0,w.P0)(c.Gh.DisableDebugLogging)},6e4)}),E.debugging?((0,y.v)("gitlens:debugging",!0),(0,y.v)("gitlens:prerelease",!0)):E.prerelease&&(0,y.v)("gitlens:prerelease",!0),await E.ready();let B=(0,P.xH)(v.D.getAll(!0),{prefix:"config",stringify:"all"});E.telemetry.setGlobalAttributes({debugging:E.debugging,prerelease:k,install:null==n,upgrade:null!=n&&a!==n,upgradedFrom:null!=n&&a!==n?n:void 0});let U=new l(E),W=E.mode,M=$.startTime,L=(0,i.a)(),N=$.elapsed();return $.stop({message:`activated${null!=o?`, ${o}`:""}${null!=W?`, mode: ${W.name}`:""}`}),E.telemetry.sendEvent("activate",{"activation.elapsed":N,"activation.mode":W?.name,...B},M,L),Promise.resolve(U)}function rH(){A.Yd.log("GitLens deactivating..."),s.W.instance.deactivate()}async function rG(e,i,r,s){if(null==s){if(A.Yd.log(`GitLens first-time install; window.focused=${t.window.state.focused}`),!1===v.D.get("showWelcomeOnInstall"))return;if(t.window.state.focused)await e.storage.delete("pendingWelcomeOnFocus"),await (0,w.P0)(c.Gh.ShowWelcomePage);else{await e.storage.store("pendingWelcomeOnFocus",!0);let i=t.window.onDidChangeWindowState(t=>{t.focused&&(i.dispose(),!0===e.storage.get("pendingWelcomeOnFocus")&&(e.storage.delete("pendingWelcomeOnFocus"),v.D.get("showWelcomeOnInstall")&&(0,w.P0)(c.Gh.ShowWelcomePage)))});e.context.subscriptions.push(i)}return}s!==i&&A.Yd.log(`GitLens upgraded from v${s} to v${i}; window.focused=${t.window.state.focused}`);let n=(0,I.mL)(i),o=(0,I.mL)(s);if(n.major<o.major||n.major===o.major&&n.minor<o.minor)return;let a=r&&(0,I.L5)(o,"< 2023.6.0800");if((n.major!==o.major||a)&&(i=a?"14":String(n.major),v.D.get("showWhatsNewAfterUpgrades"))){if(t.window.state.focused)await e.storage.delete("pendingWhatsNewOnFocus"),await (0,f.xs)(i);else{await e.storage.store("pendingWhatsNewOnFocus",!0);let r=t.window.onDidChangeWindowState(t=>{t.focused&&(r.dispose(),!0===e.storage.get("pendingWhatsNewOnFocus")&&(e.storage.delete("pendingWhatsNewOnFocus"),v.D.get("showWhatsNewAfterUpgrades")&&(0,f.xs)(i)))});e.context.subscriptions.push(r)}}}rL=((e,t,i,r)=>{for(var s,n=r>1?void 0:r?rM(t,i):t,o=e.length-1;o>=0;o--)(s=e[o])&&(n=(r?s(t,i,n):s(n))||n);return r&&n&&rW(t,i,n),n})([(0,w.WD)()],rL)})(),module.exports=a})();